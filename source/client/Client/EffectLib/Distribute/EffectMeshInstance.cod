; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30137.0 

	TITLE	C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Distribute\EffectMeshInstance.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$CDynamicPool@VCEffectMeshInstance@@@@6B@	; CDynamicPool<CEffectMeshInstance>::`vftable'
PUBLIC	??_G?$CDynamicPool@VCEffectMeshInstance@@@@UAEPAXI@Z ; CDynamicPool<CEffectMeshInstance>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPool@VCEffectMeshInstance@@@@6B@	; CDynamicPool<CEffectMeshInstance>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@VCEffectMeshInstance@@@@@8 ; CDynamicPool<CEffectMeshInstance> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@VCEffectMeshInstance@@@@8	; CDynamicPool<CEffectMeshInstance>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@VCEffectMeshInstance@@@@8	; CDynamicPool<CEffectMeshInstance>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@VCEffectMeshInstance@@@@8 ; CDynamicPool<CEffectMeshInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPool@VCEffectMeshInstance@@@@UAEPAXI@Z:PROC ; CDynamicPool<CEffectMeshInstance>::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@VCEffectMeshInstance@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@VCEffectMeshInstance@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@VCEffectMeshInstance@@@@@8 ; CDynamicPool<CEffectMeshInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@VCEffectMeshInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@VCEffectMeshInstance@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@VCEffectMeshInstance@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@VCEffectMeshInstance@@@@8 ; CDynamicPool<CEffectMeshInstance>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@VCEffectMeshInstance@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@VCEffectMeshInstance@@@@8 DD 00H	; CDynamicPool<CEffectMeshInstance>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@VCEffectMeshInstance@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@VCEffectMeshInstance@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPool@VCEffectMeshInstance@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CEffectMeshInstance> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@VCEffectMeshInstance@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPool@VCEffectMeshInstance@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@VCEffectMeshInstance@@@@6B@ DD 00H	; CDynamicPool<CEffectMeshInstance>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@VCEffectMeshInstance@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@VCEffectMeshInstance@@@@8
rdata$r	ENDS
CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
;	COMDAT ??_7?$CDynamicPool@VCEffectMeshInstance@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@VCEffectMeshInstance@@@@6B@ DD FLAT:??_R4?$CDynamicPool@VCEffectMeshInstance@@@@6B@ ; CDynamicPool<CEffectMeshInstance>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@VCEffectMeshInstance@@@@UAEPAXI@Z
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??0D3DXMATRIX@@QAE@XZ				; D3DXMATRIX::D3DXMATRIX
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??_GCFrameController@@UAEPAXI@Z			; CFrameController::`scalar deleting destructor'
PUBLIC	?_Reallocate_exactly@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXI@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Reallocate_exactly
PUBLIC	?_Change_array@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXQAPAVCGraphicImageInstance@@II@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Change_array
PUBLIC	?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
PUBLIC	??0CEffectMeshInstance@@QAE@XZ			; CEffectMeshInstance::CEffectMeshInstance
PUBLIC	??1CEffectMeshInstance@@UAE@XZ			; CEffectMeshInstance::~CEffectMeshInstance
PUBLIC	?DestroySystem@CEffectMeshInstance@@SAXXZ	; CEffectMeshInstance::DestroySystem
PUBLIC	?New@CEffectMeshInstance@@SAPAV1@XZ		; CEffectMeshInstance::New
PUBLIC	?Delete@CEffectMeshInstance@@SAXPAV1@@Z		; CEffectMeshInstance::Delete
PUBLIC	?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z ; CEffectMeshInstance::OnSetDataPointer
PUBLIC	?OnInitialize@CEffectMeshInstance@@MAEXXZ	; CEffectMeshInstance::OnInitialize
PUBLIC	?OnDestroy@CEffectMeshInstance@@MAEXXZ		; CEffectMeshInstance::OnDestroy
PUBLIC	?OnUpdate@CEffectMeshInstance@@MAE_NM@Z		; CEffectMeshInstance::OnUpdate
PUBLIC	?OnRender@CEffectMeshInstance@@MAEXXZ		; CEffectMeshInstance::OnRender
PUBLIC	?isActive@CEffectMeshInstance@@IAEHXZ		; CEffectMeshInstance::isActive
PUBLIC	?deallocate@?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@QAEXQAUSTextureInstance@CEffectMeshInstance@@I@Z ; std::allocator<CEffectMeshInstance::STextureInstance>::deallocate
PUBLIC	??1?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@QAE@XZ ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::~vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >
PUBLIC	?_Ufill@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEPAUSTextureInstance@CEffectMeshInstance@@PAU34@IU_Value_init_tag@2@@Z ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Ufill
PUBLIC	?_Destroy@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXPAUSTextureInstance@CEffectMeshInstance@@0@Z ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Destroy
PUBLIC	?_Xlength@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@CAXXZ ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Xlength
PUBLIC	?_Getal@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@2@XZ ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Getal
PUBLIC	??1?$CRef@VCEffectMesh@@@@QAE@XZ		; CRef<CEffectMesh>::~CRef<CEffectMesh>
PUBLIC	??_GCEffectMeshInstance@@UAEPAXI@Z		; CEffectMeshInstance::`scalar deleting destructor'
PUBLIC	??1?$CDynamicPool@VCEffectMeshInstance@@@@UAE@XZ ; CDynamicPool<CEffectMeshInstance>::~CDynamicPool<CEffectMeshInstance>
PUBLIC	?Delete@?$CDynamicPool@VCEffectMeshInstance@@@@KAXPAVCEffectMeshInstance@@@Z ; CDynamicPool<CEffectMeshInstance>::Delete
PUBLIC	?_Xlength@?$vector@PAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@CAXXZ ; std::vector<CEffectMeshInstance *,std::allocator<CEffectMeshInstance *> >::_Xlength
PUBLIC	?CEffectMeshInstance_DeleteImageInstance@@YAXPAVCGraphicImageInstance@@@Z ; CEffectMeshInstance_DeleteImageInstance
PUBLIC	?CEffectMeshInstance_DeleteTextureInstance@@YAXAAUSTextureInstance@CEffectMeshInstance@@@Z ; CEffectMeshInstance_DeleteTextureInstance
PUBLIC	??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCEffectMeshInstance@@@?$vector@PAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@QAEPAPAVCEffectMeshInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CEffectMeshInstance *,std::allocator<CEffectMeshInstance *> >::_Emplace_reallocate<CEffectMeshInstance * const &>
PUBLIC	??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >
PUBLIC	??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float>
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
PUBLIC	??$_Copy_memmove@PAPAVCEffectMeshInstance@@PAPAV1@@std@@YAPAPAVCEffectMeshInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CEffectMeshInstance * *,CEffectMeshInstance * *>
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<CEffectMeshInstance::STextureInstance> >::~_Uninitialized_backout_al<std::allocator<CEffectMeshInstance::STextureInstance> >
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	??_7CFrameController@@6B@			; CFrameController::`vftable'
PUBLIC	?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A ; CEffectMeshInstance::ms_kPool
PUBLIC	??_7CEffectMeshInstance@@6B@			; CEffectMeshInstance::`vftable'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CFrameController@@6B@			; CFrameController::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCFrameController@@@8			; CFrameController `RTTI Type Descriptor'
PUBLIC	??_R3CFrameController@@8			; CFrameController::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CFrameController@@8			; CFrameController::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CFrameController@@8		; CFrameController::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CEffectMeshInstance@@6B@			; CEffectMeshInstance::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCEffectMeshInstance@@@8			; CEffectMeshInstance `RTTI Type Descriptor'
PUBLIC	??_R3CEffectMeshInstance@@8			; CEffectMeshInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CEffectMeshInstance@@8			; CEffectMeshInstance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CEffectMeshInstance@@8		; CEffectMeshInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CEffectElementBaseInstance@@8	; CEffectElementBaseInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCEffectElementBaseInstance@@@8		; CEffectElementBaseInstance `RTTI Type Descriptor'
PUBLIC	??_R3CEffectElementBaseInstance@@8		; CEffectElementBaseInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CEffectElementBaseInstance@@8		; CEffectElementBaseInstance::`RTTI Base Class Array'
PUBLIC	__real@3a83126f
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@437f0000
PUBLIC	__real@bf800000
PUBLIC	__xmm@000000003f8000000000000000000000
PUBLIC	__xmm@3f800000000000000000000000000000
PUBLIC	__xmm@3f8000003f8000003f8000003f800000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	___std_terminate:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?GetElapsedSecond@CTimer@@QAEMXZ:PROC		; CTimer::GetElapsedSecond
EXTRN	_D3DXVec3Normalize@8:PROC
EXTRN	_D3DXMatrixMultiply@12:PROC
EXTRN	_D3DXMatrixInverse@12:PROC
EXTRN	_D3DXMatrixRotationX@8:PROC
EXTRN	_D3DXMatrixRotationQuaternion@8:PROC
EXTRN	?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SetRenderState
EXTRN	?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z:PROC ; CStateManager::SetTexture
EXTRN	?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z:PROC ; CStateManager::SetTextureStageState
EXTRN	?SetVertexShader@CStateManager@@QAEXK@Z:PROC	; CStateManager::SetVertexShader
EXTRN	?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z:PROC ; CStateManager::SetTransform
EXTRN	?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z:PROC ; CStateManager::DrawPrimitiveUP
EXTRN	?AddReference@CReferenceObject@@QAEXXZ:PROC	; CReferenceObject::AddReference
EXTRN	?Release@CReferenceObject@@QAEXXZ:PROC		; CReferenceObject::Release
EXTRN	?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z:PROC ; CResourceManager::GetResourcePointer
EXTRN	?GetViewMatrix@CGraphicBase@@SAABUD3DXMATRIX@@XZ:PROC ; CGraphicBase::GetViewMatrix
EXTRN	?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ:PROC ; CGraphicTexture::GetD3DTexture
EXTRN	??0CGraphicImageInstance@@QAE@XZ:PROC		; CGraphicImageInstance::CGraphicImageInstance
EXTRN	?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z:PROC ; CGraphicImageInstance::SetImagePointer
EXTRN	?GetTexturePointer@CGraphicImageInstance@@QAEPAVCGraphicTexture@@XZ:PROC ; CGraphicImageInstance::GetTexturePointer
EXTRN	?GetPosition@CEffectElementBase@@QAEXMAAUD3DXVECTOR3@@@Z:PROC ; CEffectElementBase::GetPosition
EXTRN	??0CEffectElementBaseInstance@@QAE@XZ:PROC	; CEffectElementBaseInstance::CEffectElementBaseInstance
EXTRN	??1CEffectElementBaseInstance@@UAE@XZ:PROC	; CEffectElementBaseInstance::~CEffectElementBaseInstance
EXTRN	?Initialize@CEffectElementBaseInstance@@QAEXXZ:PROC ; CEffectElementBaseInstance::Initialize
EXTRN	?Destroy@CEffectElementBaseInstance@@QAEXXZ:PROC ; CEffectElementBaseInstance::Destroy
EXTRN	?isActive@CEffectElementBaseInstance@@QAE_NXZ:PROC ; CEffectElementBaseInstance::isActive
EXTRN	??0CFrameController@@QAE@XZ:PROC		; CFrameController::CFrameController
EXTRN	??1CFrameController@@UAE@XZ:PROC		; CFrameController::~CFrameController
EXTRN	?Clear@CFrameController@@QAEXXZ:PROC		; CFrameController::Clear
EXTRN	?Update@CFrameController@@QAEXM@Z:PROC		; CFrameController::Update
EXTRN	?GetCurrentFrame@CFrameController@@QAEEXZ:PROC	; CFrameController::GetCurrentFrame
EXTRN	?SetMaxFrame@CFrameController@@QAEXK@Z:PROC	; CFrameController::SetMaxFrame
EXTRN	?SetFrameTime@CFrameController@@QAEXM@Z:PROC	; CFrameController::SetFrameTime
EXTRN	?SetStartFrame@CFrameController@@QAEXK@Z:PROC	; CFrameController::SetStartFrame
EXTRN	?SetLoopFlag@CFrameController@@QAEXH@Z:PROC	; CFrameController::SetLoopFlag
EXTRN	?SetLoopCount@CFrameController@@QAEXH@Z:PROC	; CFrameController::SetLoopCount
EXTRN	?isActive@CFrameController@@QAEHK@Z:PROC	; CFrameController::isActive
EXTRN	??_ECFrameController@@UAEPAXI@Z:PROC		; CFrameController::`vector deleting destructor'
EXTRN	?GetFrameCount@CEffectMesh@@QAEKXZ:PROC		; CEffectMesh::GetFrameCount
EXTRN	?GetMeshCount@CEffectMesh@@QAEKXZ:PROC		; CEffectMesh::GetMeshCount
EXTRN	?GetMeshDataPointer@CEffectMesh@@QAEPAUSEffectMeshData@1@K@Z:PROC ; CEffectMesh::GetMeshDataPointer
EXTRN	?GetTextureVectorPointer@CEffectMesh@@QAEPAV?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@K@Z:PROC ; CEffectMesh::GetTextureVectorPointer
EXTRN	?GetMeshFileName@CEffectMeshScript@@QAEPBDXZ:PROC ; CEffectMeshScript::GetMeshFileName
EXTRN	?GetMeshDataPointer@CEffectMeshScript@@QAE_NKPAPAUSMeshData@1@@Z:PROC ; CEffectMeshScript::GetMeshDataPointer
EXTRN	?GetBillboardType@CEffectMeshScript@@QAEHK@Z:PROC ; CEffectMeshScript::GetBillboardType
EXTRN	?isBlendingEnable@CEffectMeshScript@@QAEHK@Z:PROC ; CEffectMeshScript::isBlendingEnable
EXTRN	?GetBlendingSrcType@CEffectMeshScript@@QAEEK@Z:PROC ; CEffectMeshScript::GetBlendingSrcType
EXTRN	?GetBlendingDestType@CEffectMeshScript@@QAEEK@Z:PROC ; CEffectMeshScript::GetBlendingDestType
EXTRN	?GetColorOperationType@CEffectMeshScript@@QAEHKPAE@Z:PROC ; CEffectMeshScript::GetColorOperationType
EXTRN	?GetColorFactor@CEffectMeshScript@@QAEHKPAUD3DXCOLOR@@@Z:PROC ; CEffectMeshScript::GetColorFactor
EXTRN	?GetTimeTableAlphaPointer@CEffectMeshScript@@QAEHKPAPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z:PROC ; CEffectMeshScript::GetTimeTableAlphaPointer
EXTRN	?isMeshAnimationLoop@CEffectMeshScript@@QAEHXZ:PROC ; CEffectMeshScript::isMeshAnimationLoop
EXTRN	?GetMeshAnimationLoopCount@CEffectMeshScript@@QAEHXZ:PROC ; CEffectMeshScript::GetMeshAnimationLoopCount
EXTRN	?GetMeshAnimationFrameDelay@CEffectMeshScript@@QAEMXZ:PROC ; CEffectMeshScript::GetMeshAnimationFrameDelay
EXTRN	??_ECEffectMeshInstance@@UAEPAXI@Z:PROC		; CEffectMeshInstance::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftoui3:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A:BYTE ; CGraphicImageInstance::ms_kPool
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A DD 01H DUP (?) ; CSingleton<CTimer>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
CRT$XCU	SEGMENT
??ms_kPool$initializer$@CEffectMeshInstance@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A@@YAXXZ ; ??ms_kPool$initializer$@CEffectMeshInstance@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@3f8000003f8000003f8000003f800000
CONST	SEGMENT
__xmm@3f8000003f8000003f8000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 080H
	DB	'?', 00H, 00H, 080H, '?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f800000000000000000000000000000
CONST	SEGMENT
__xmm@3f800000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@000000003f8000000000000000000000
CONST	SEGMENT
__xmm@000000003f8000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 080H, '?', 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3a83126f
CONST	SEGMENT
__real@3a83126f DD 03a83126fr			; 0.001
CONST	ENDS
;	COMDAT ??_R2CEffectElementBaseInstance@@8
rdata$r	SEGMENT
??_R2CEffectElementBaseInstance@@8 DD FLAT:??_R1A@?0A@EA@CEffectElementBaseInstance@@8 ; CEffectElementBaseInstance::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CEffectElementBaseInstance@@8
rdata$r	SEGMENT
??_R3CEffectElementBaseInstance@@8 DD 00H		; CEffectElementBaseInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CEffectElementBaseInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCEffectElementBaseInstance@@@8
data$rs	SEGMENT
??_R0?AVCEffectElementBaseInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CEffectElementBaseInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCEffectElementBaseInstance@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CEffectElementBaseInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CEffectElementBaseInstance@@8 DD FLAT:??_R0?AVCEffectElementBaseInstance@@@8 ; CEffectElementBaseInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CEffectElementBaseInstance@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CEffectMeshInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CEffectMeshInstance@@8 DD FLAT:??_R0?AVCEffectMeshInstance@@@8 ; CEffectMeshInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CEffectMeshInstance@@8
rdata$r	ENDS
;	COMDAT ??_R2CEffectMeshInstance@@8
rdata$r	SEGMENT
??_R2CEffectMeshInstance@@8 DD FLAT:??_R1A@?0A@EA@CEffectMeshInstance@@8 ; CEffectMeshInstance::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CEffectElementBaseInstance@@8
rdata$r	ENDS
;	COMDAT ??_R3CEffectMeshInstance@@8
rdata$r	SEGMENT
??_R3CEffectMeshInstance@@8 DD 00H			; CEffectMeshInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CEffectMeshInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCEffectMeshInstance@@@8
data$rs	SEGMENT
??_R0?AVCEffectMeshInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CEffectMeshInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCEffectMeshInstance@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CEffectMeshInstance@@6B@
rdata$r	SEGMENT
??_R4CEffectMeshInstance@@6B@ DD 00H			; CEffectMeshInstance::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCEffectMeshInstance@@@8
	DD	FLAT:??_R3CEffectMeshInstance@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CFrameController@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CFrameController@@8 DD FLAT:??_R0?AVCFrameController@@@8 ; CFrameController::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CFrameController@@8
rdata$r	ENDS
;	COMDAT ??_R2CFrameController@@8
rdata$r	SEGMENT
??_R2CFrameController@@8 DD FLAT:??_R1A@?0A@EA@CFrameController@@8 ; CFrameController::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CFrameController@@8
rdata$r	SEGMENT
??_R3CFrameController@@8 DD 00H				; CFrameController::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CFrameController@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCFrameController@@@8
data$rs	SEGMENT
??_R0?AVCFrameController@@@8 DD FLAT:??_7type_info@@6B@	; CFrameController `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCFrameController@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CFrameController@@6B@
rdata$r	SEGMENT
??_R4CFrameController@@6B@ DD 00H			; CFrameController::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCFrameController@@@8
	DD	FLAT:??_R3CFrameController@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CEffectMeshInstance@@6B@
CONST	SEGMENT
??_7CEffectMeshInstance@@6B@ DD FLAT:??_R4CEffectMeshInstance@@6B@ ; CEffectMeshInstance::`vftable'
	DD	FLAT:??_ECEffectMeshInstance@@UAEPAXI@Z
	DD	FLAT:?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z
	DD	FLAT:?OnInitialize@CEffectMeshInstance@@MAEXXZ
	DD	FLAT:?OnDestroy@CEffectMeshInstance@@MAEXXZ
	DD	FLAT:?OnUpdate@CEffectMeshInstance@@MAE_NM@Z
	DD	FLAT:?OnRender@CEffectMeshInstance@@MAEXXZ
CONST	ENDS
_DATA	SEGMENT
?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A DD FLAT:??_7?$CDynamicPool@VCEffectMeshInstance@@@@6B@ ; CEffectMeshInstance::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7CFrameController@@6B@
CONST	SEGMENT
??_7CFrameController@@6B@ DD FLAT:??_R4CFrameController@@6B@ ; CFrameController::`vftable'
	DD	FLAT:??_ECFrameController@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_value_construct_n@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@PAU12@IAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_value_construct_n@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@PAU12@IAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z$0
__ehfuncinfo$??$_Uninitialized_value_construct_n@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@PAU12@IAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Uninitialized_value_construct_n@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAPAUSTextureInstance@CEffectMeshInstance@@PAU12@IAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$0
__unwindtable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$3
__ehfuncinfo$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Alloc@?$CDynamicPool@VCGraphicImageInstance@@@@QAEPAVCGraphicImageInstance@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Alloc@?$CDynamicPool@VCGraphicImageInstance@@@@QAEPAVCGraphicImageInstance@@XZ$0
__ehfuncinfo$?Alloc@?$CDynamicPool@VCGraphicImageInstance@@@@QAEPAVCGraphicImageInstance@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Alloc@?$CDynamicPool@VCGraphicImageInstance@@@@QAEPAVCGraphicImageInstance@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Alloc@?$CDynamicPool@VCEffectMeshInstance@@@@QAEPAVCEffectMeshInstance@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Alloc@?$CDynamicPool@VCEffectMeshInstance@@@@QAEPAVCEffectMeshInstance@@XZ$0
__ehfuncinfo$?Alloc@?$CDynamicPool@VCEffectMeshInstance@@@@QAEPAVCEffectMeshInstance@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Alloc@?$CDynamicPool@VCEffectMeshInstance@@@@QAEPAVCEffectMeshInstance@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CRef@VCEffectMesh@@@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Ufill@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEPAUSTextureInstance@CEffectMeshInstance@@PAU34@IU_Value_init_tag@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Ufill@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEPAUSTextureInstance@CEffectMeshInstance@@PAU34@IU_Value_init_tag@2@@Z$0
__ehfuncinfo$?_Ufill@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEPAUSTextureInstance@CEffectMeshInstance@@PAU34@IU_Value_init_tag@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Ufill@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEPAUSTextureInstance@CEffectMeshInstance@@PAU34@IU_Value_init_tag@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z$0
__ehfuncinfo$?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?New@CEffectMeshInstance@@SAPAV1@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?New@CEffectMeshInstance@@SAPAV1@XZ$0
__ehfuncinfo$?New@CEffectMeshInstance@@SAPAV1@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?New@CEffectMeshInstance@@SAPAV1@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CEffectMeshInstance@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1CEffectMeshInstance@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CEffectMeshInstance@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CEffectMeshInstance@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CEffectMeshInstance@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CEffectMeshInstance@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CEffectMeshInstance@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CEffectMeshInstance@@QAE@XZ$3
__ehfuncinfo$??0CEffectMeshInstance@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CEffectMeshInstance@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Uninitialized_backout_al@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<CEffectMeshInstance::STextureInstance> >::~_Uninitialized_backout_al<std::allocator<CEffectMeshInstance::STextureInstance> >, COMDAT
; _this$ = ecx

; 1626 :         _Destroy_range(_First, _Last, _Al);

  00000	ff 71 08	 push	 DWORD PTR [ecx+8]
  00003	ff 71 04	 push	 DWORD PTR [ecx+4]
  00006	ff 31		 push	 DWORD PTR [ecx]
  00008	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >
  0000d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1627 :     }

  00010	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<CEffectMeshInstance::STextureInstance> >::~_Uninitialized_backout_al<std::allocator<CEffectMeshInstance::STextureInstance> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCEffectMeshInstance@@PAPAV1@@std@@YAPAPAVCEffectMeshInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCEffectMeshInstance@@PAPAV1@@std@@YAPAPAVCEffectMeshInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CEffectMeshInstance * *,CEffectMeshInstance * *>, COMDAT

; 4159 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4160 :     auto _FirstPtr              = _To_address(_First);
; 4161 :     auto _LastPtr               = _To_address(_Last);
; 4162 :     auto _DestPtr               = _To_address(_Dest);
; 4163 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4164 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4165 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4166 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4167 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4168 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4169 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4170 :     } else {
; 4171 :         return _Dest + (_LastPtr - _FirstPtr);
; 4172 :     }
; 4173 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCEffectMeshInstance@@PAPAV1@@std@@YAPAPAVCEffectMeshInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CEffectMeshInstance * *,CEffectMeshInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>, COMDAT

; 4159 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4160 :     auto _FirstPtr              = _To_address(_First);
; 4161 :     auto _LastPtr               = _To_address(_Last);
; 4162 :     auto _DestPtr               = _To_address(_Dest);
; 4163 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4164 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4165 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4166 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4167 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4168 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4169 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4170 :     } else {
; 4171 :         return _Dest + (_LastPtr - _FirstPtr);
; 4172 :     }
; 4173 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_this$ = -36						; size = 4
__ULast$1$ = -32					; size = 4
__Oldsize$1$ = -32					; size = 4
__Appended_first$ = -32					; size = 4
tv1371 = -28						; size = 4
$T3 = -24						; size = 4
__UFirst$1$ = -20					; size = 4
__Newcapacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Backout$1$sroa$298$1$ = 12				; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1229 :     _CONSTEXPR20_CONTAINER void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b d9		 mov	 ebx, ecx
  0002d	89 5d dc	 mov	 DWORD PTR _this$[ebp], ebx

; 1230 :         if (_Newsize > max_size()) {

  00030	81 7d 08 55 55
	55 05		 cmp	 DWORD PTR __Newsize$[ebp], 89478485 ; 05555555H
  00037	0f 87 37 02 00
	00		 ja	 $LN97@Resize_rea

; 1232 :         }
; 1233 : 
; 1234 :         auto& _My_data    = _Mypair._Myval2;
; 1235 :         pointer& _Myfirst = _My_data._Myfirst;
; 1236 :         pointer& _Mylast  = _My_data._Mylast;
; 1237 : 
; 1238 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0003d	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00040	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00045	2b 0b		 sub	 ecx, DWORD PTR [ebx]
  00047	f7 e9		 imul	 ecx

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00049	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0004c	2b 0b		 sub	 ecx, DWORD PTR [ebx]

; 1232 :         }
; 1233 : 
; 1234 :         auto& _My_data    = _Mypair._Myval2;
; 1235 :         pointer& _Myfirst = _My_data._Myfirst;
; 1236 :         pointer& _Mylast  = _My_data._Mylast;
; 1237 : 
; 1238 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0004e	c1 fa 03	 sar	 edx, 3
  00051	8b c2		 mov	 eax, edx
  00053	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00056	03 c2		 add	 eax, edx
  00058	89 45 e0	 mov	 DWORD PTR __Oldsize$1$[ebp], eax

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0005b	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00060	f7 e9		 imul	 ecx

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00062	b8 55 55 55 05	 mov	 eax, 89478485		; 05555555H

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00067	c1 fa 03	 sar	 edx, 3
  0006a	8b ca		 mov	 ecx, edx
  0006c	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0006f	03 ca		 add	 ecx, edx

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00071	8b d1		 mov	 edx, ecx
  00073	d1 ea		 shr	 edx, 1
  00075	2b c2		 sub	 eax, edx
  00077	3b c8		 cmp	 ecx, eax
  00079	76 1f		 jbe	 SHORT $LN10@Resize_rea

; 1689 :             return _Max; // geometric growth would overflow

  0007b	b8 f0 ff ff ff	 mov	 eax, -16		; fffffff0H
  00080	c7 45 ec 55 55
	55 05		 mov	 DWORD PTR __Newcapacity$[ebp], 89478485 ; 05555555H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00087	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1689 :             return _Max; // geometric growth would overflow

  00088	89 45 e4	 mov	 DWORD PTR tv1371[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0008b	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00090	8b 55 08	 mov	 edx, DWORD PTR __Newsize$[ebp]
  00093	83 c4 04	 add	 esp, 4
  00096	8b f0		 mov	 esi, eax
  00098	eb 5c		 jmp	 SHORT $LN95@Resize_rea
$LN10@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0009a	8d 3c 0a	 lea	 edi, DWORD PTR [edx+ecx]

; 1693 : 
; 1694 :         if (_Geometric < _Newsize) {

  0009d	8b 55 08	 mov	 edx, DWORD PTR __Newsize$[ebp]
  000a0	3b fa		 cmp	 edi, edx
  000a2	73 25		 jae	 SHORT $LN11@Resize_rea

; 1695 :             return _Newsize; // geometric growth would be insufficient

  000a4	8b fa		 mov	 edi, edx
$LN91@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 69   :     return _Count * _Ty_size;

  000a6	8d 04 7f	 lea	 eax, DWORD PTR [edi+edi*2]
  000a9	89 7d ec	 mov	 DWORD PTR __Newcapacity$[ebp], edi
  000ac	c1 e0 04	 shl	 eax, 4
  000af	89 45 e4	 mov	 DWORD PTR tv1371[ebp], eax

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b2	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  000b7	72 1e		 jb	 SHORT $LN22@Resize_rea

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000b9	50		 push	 eax
  000ba	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000bf	8b 55 08	 mov	 edx, DWORD PTR __Newsize$[ebp]
  000c2	83 c4 04	 add	 esp, 4
  000c5	8b f0		 mov	 esi, eax
  000c7	eb 2d		 jmp	 SHORT $LN95@Resize_rea
$LN11@Resize_rea:

; 64   :         if (_Count > _Max_possible) {

  000c9	81 ff 55 55 55
	05		 cmp	 edi, 89478485		; 05555555H
  000cf	0f 87 a4 01 00
	00		 ja	 $LN98@Resize_rea
  000d5	eb cf		 jmp	 SHORT $LN91@Resize_rea
$LN22@Resize_rea:

; 243  :     if (_Bytes != 0) {

  000d7	85 c0		 test	 eax, eax
  000d9	74 16		 je	 SHORT $LN23@Resize_rea

; 85   :         return ::operator new(_Bytes);

  000db	50		 push	 eax
  000dc	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 244  :         return _Traits::_Allocate(_Bytes);

  000e1	8b 55 08	 mov	 edx, DWORD PTR __Newsize$[ebp]

; 85   :         return ::operator new(_Bytes);

  000e4	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  000e7	8b f0		 mov	 esi, eax
  000e9	89 45 e8	 mov	 DWORD PTR $T3[ebp], eax
  000ec	89 7d ec	 mov	 DWORD PTR __Newcapacity$[ebp], edi
  000ef	eb 08		 jmp	 SHORT $LN21@Resize_rea
$LN23@Resize_rea:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  000f1	33 f6		 xor	 esi, esi
  000f3	89 7d ec	 mov	 DWORD PTR __Newcapacity$[ebp], edi
$LN95@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1242 :         const pointer _Appended_first = _Newvec + _Oldsize;

  000f6	89 75 e8	 mov	 DWORD PTR $T3[ebp], esi
$LN21@Resize_rea:
  000f9	8b 7d e0	 mov	 edi, DWORD PTR __Oldsize$1$[ebp]

; 1243 :         pointer _Appended_last        = _Appended_first;
; 1244 : 
; 1245 :         _TRY_BEGIN
; 1246 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  000fc	2b d7		 sub	 edx, edi
  000fe	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  00101	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00108	8d 0c 7f	 lea	 ecx, DWORD PTR [edi+edi*2]
  0010b	0f b6 00	 movzx	 eax, BYTE PTR [eax]
  0010e	c1 e1 04	 shl	 ecx, 4
  00111	50		 push	 eax
  00112	03 ce		 add	 ecx, esi
  00114	52		 push	 edx
  00115	89 4d e0	 mov	 DWORD PTR __Appended_first$[ebp], ecx
  00118	51		 push	 ecx
  00119	8b cb		 mov	 ecx, ebx
  0011b	e8 00 00 00 00	 call	 ?_Ufill@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEPAUSTextureInstance@CEffectMeshInstance@@PAU34@IU_Value_init_tag@2@@Z ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Ufill
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1718 :     const auto _ULast = _Get_unwrapped(_Last);

  00120	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]

; 1620 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00123	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1247 :         _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00125	8b 0b		 mov	 ecx, DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1718 :     const auto _ULast = _Get_unwrapped(_Last);

  00127	89 55 e0	 mov	 DWORD PTR __ULast$1$[ebp], edx

; 1620 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  0012a	89 45 0c	 mov	 DWORD PTR __Backout$1$sroa$298$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1247 :         _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  0012d	89 4d ec	 mov	 DWORD PTR __UFirst$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  00130	3b ca		 cmp	 ecx, edx
  00132	0f 84 85 00 00
	00		 je	 $LN34@Resize_rea

; 1718 :     const auto _ULast = _Get_unwrapped(_Last);

  00138	8d 7e 2c	 lea	 edi, DWORD PTR [esi+44]
  0013b	8d 71 28	 lea	 esi, DWORD PTR [ecx+40]
  0013e	66 90		 npad	 2
$LL35@Resize_rea:
  00140	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CFrameController@@6B@

; 1632 :         ++_Last;

  00146	8d 7f 30	 lea	 edi, DWORD PTR [edi+48]
  00149	8b 46 dc	 mov	 eax, DWORD PTR [esi-36]

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  0014c	8d 76 30	 lea	 esi, DWORD PTR [esi+48]
  0014f	89 47 a8	 mov	 DWORD PTR [edi-88], eax
  00152	8b 46 b0	 mov	 eax, DWORD PTR [esi-80]
  00155	89 47 ac	 mov	 DWORD PTR [edi-84], eax
  00158	8b 46 b4	 mov	 eax, DWORD PTR [esi-76]
  0015b	89 47 b0	 mov	 DWORD PTR [edi-80], eax
  0015e	8b 46 b8	 mov	 eax, DWORD PTR [esi-72]
  00161	89 47 b4	 mov	 DWORD PTR [edi-76], eax
  00164	8b 46 bc	 mov	 eax, DWORD PTR [esi-68]
  00167	89 47 b8	 mov	 DWORD PTR [edi-72], eax
  0016a	8b 46 c0	 mov	 eax, DWORD PTR [esi-64]
  0016d	89 47 bc	 mov	 DWORD PTR [edi-68], eax
  00170	8b 46 c4	 mov	 eax, DWORD PTR [esi-60]
  00173	89 47 c0	 mov	 DWORD PTR [edi-64], eax
  00176	8b 46 c8	 mov	 eax, DWORD PTR [esi-56]
  00179	89 47 c4	 mov	 DWORD PTR [edi-60], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 616  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0017c	8b 4e d0	 mov	 ecx, DWORD PTR [esi-48]
  0017f	8b 46 cc	 mov	 eax, DWORD PTR [esi-52]
  00182	8b 56 d4	 mov	 edx, DWORD PTR [esi-44]

; 617  :     _Val         = static_cast<_Other&&>(_New_val);

  00185	c7 46 d4 00 00
	00 00		 mov	 DWORD PTR [esi-44], 0
  0018c	c7 46 d0 00 00
	00 00		 mov	 DWORD PTR [esi-48], 0
  00193	c7 46 cc 00 00
	00 00		 mov	 DWORD PTR [esi-52], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 404  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

  0019a	89 4f cc	 mov	 DWORD PTR [edi-52], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  0019d	8b 4d ec	 mov	 ecx, DWORD PTR __UFirst$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 404  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

  001a0	89 47 c8	 mov	 DWORD PTR [edi-56], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  001a3	83 c1 30	 add	 ecx, 48			; 00000030H

; 1632 :         ++_Last;

  001a6	8b 45 0c	 mov	 eax, DWORD PTR __Backout$1$sroa$298$1$[ebp]
  001a9	83 c0 30	 add	 eax, 48			; 00000030H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 404  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

  001ac	89 57 d0	 mov	 DWORD PTR [edi-48], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1632 :         ++_Last;

  001af	89 45 0c	 mov	 DWORD PTR __Backout$1$sroa$298$1$[ebp], eax

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  001b2	89 4d ec	 mov	 DWORD PTR __UFirst$1$[ebp], ecx
  001b5	3b 4d e0	 cmp	 ecx, DWORD PTR __ULast$1$[ebp]
  001b8	75 86		 jne	 SHORT $LL35@Resize_rea
  001ba	8b 75 e8	 mov	 esi, DWORD PTR $T3[ebp]
$LN34@Resize_rea:

; 1626 :         _Destroy_range(_First, _Last, _Al);

  001bd	53		 push	 ebx
  001be	50		 push	 eax
  001bf	50		 push	 eax
  001c0	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  001c5	8b 0b		 mov	 ecx, DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1626 :         _Destroy_range(_First, _Last, _Al);

  001c7	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  001ca	85 c9		 test	 ecx, ecx
  001cc	74 4f		 je	 SHORT $LN73@Resize_rea

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  001ce	53		 push	 ebx
  001cf	ff 73 04	 push	 DWORD PTR [ebx+4]
  001d2	51		 push	 ecx
  001d3	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >

; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  001d8	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  001db	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  001e0	8b 3b		 mov	 edi, DWORD PTR [ebx]

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  001e2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  001e5	2b cf		 sub	 ecx, edi
  001e7	f7 e9		 imul	 ecx
  001e9	c1 fa 03	 sar	 edx, 3
  001ec	8b c2		 mov	 eax, edx
  001ee	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001f1	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001f3	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  001f6	c1 e1 04	 shl	 ecx, 4

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  001f9	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  001ff	72 12		 jb	 SHORT $LN83@Resize_rea

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00201	8b 57 fc	 mov	 edx, DWORD PTR [edi-4]
  00204	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00207	2b fa		 sub	 edi, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00209	8d 47 fc	 lea	 eax, DWORD PTR [edi-4]
  0020c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0020f	77 6d		 ja	 SHORT $LN80@Resize_rea

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00211	8b fa		 mov	 edi, edx
$LN83@Resize_rea:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00213	51		 push	 ecx
  00214	57		 push	 edi
  00215	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0021a	83 c4 08	 add	 esp, 8
$LN73@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0021d	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00220	89 33		 mov	 DWORD PTR [ebx], esi
  00222	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00225	c1 e0 04	 shl	 eax, 4
  00228	03 c6		 add	 eax, esi
  0022a	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  0022d	8b 45 e4	 mov	 eax, DWORD PTR tv1371[ebp]
  00230	03 c6		 add	 eax, esi
  00232	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 1255 :     }

  00235	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00238	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0023f	59		 pop	 ecx
  00240	5f		 pop	 edi
  00241	5e		 pop	 esi
  00242	5b		 pop	 ebx
  00243	8b e5		 mov	 esp, ebp
  00245	5d		 pop	 ebp
  00246	c2 08 00	 ret	 8
__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$0:

; 1248 :         _CATCH_ALL
; 1249 :         _Destroy(_Appended_first, _Appended_last);

  00249	8b 45 e0	 mov	 eax, DWORD PTR __Appended_first$[ebp]
  0024c	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  0024f	50		 push	 eax
  00250	50		 push	 eax
  00251	e8 00 00 00 00	 call	 ?_Destroy@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXPAUSTextureInstance@CEffectMeshInstance@@0@Z ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Destroy

; 1250 :         _Getal().deallocate(_Newvec, _Newcapacity);

  00256	ff 75 ec	 push	 DWORD PTR __Newcapacity$[ebp]
  00259	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  0025c	ff 75 e8	 push	 DWORD PTR $T3[ebp]
  0025f	e8 00 00 00 00	 call	 ?_Getal@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@2@XZ ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Getal
  00264	8b c8		 mov	 ecx, eax
  00266	e8 00 00 00 00	 call	 ?deallocate@?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@QAEXQAUSTextureInstance@CEffectMeshInstance@@I@Z ; std::allocator<CEffectMeshInstance::STextureInstance>::deallocate

; 1251 :         _RERAISE;

  0026b	6a 00		 push	 0
  0026d	6a 00		 push	 0
  0026f	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN97@Resize_rea:

; 1231 :             _Xlength();

  00274	e8 00 00 00 00	 call	 ?_Xlength@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@CAXXZ ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Xlength
$LN98@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00279	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN80@Resize_rea:

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0027e	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN94@Resize_rea:
  00283	cc		 int	 3
  00284	cc		 int	 3
  00285	cc		 int	 3
  00286	cc		 int	 3
  00287	cc		 int	 3
  00288	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Resize_reallocate<std::_Value_init_tag>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
;	COMDAT ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z
_TEXT	SEGMENT
__UMid$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Val$ = 20						; size = 4
??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z PROC ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float>, COMDAT

; 6335 : _NODISCARD _CONSTEXPR20 pair<_FwdIt, _FwdIt> equal_range(_FwdIt _First, _FwdIt _Last, const _Ty& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 6301 :     auto _UFirst      = _Get_unwrapped(_First);

  00005	8b 5d 0c	 mov	 ebx, DWORD PTR __First$[ebp]

; 6335 : _NODISCARD _CONSTEXPR20 pair<_FwdIt, _FwdIt> equal_range(_FwdIt _First, _FwdIt _Last, const _Ty& _Val) {

  00008	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility

; 1590 :         return _Last - _First; // assume the iterator will do debug checking

  00009	8b 75 10	 mov	 esi, DWORD PTR __Last$[ebp]
  0000c	2b f3		 sub	 esi, ebx
  0000e	c1 fe 03	 sar	 esi, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6308 :         if (_Count <= 0) {

  00011	85 f6		 test	 esi, esi
  00013	7e 36		 jle	 SHORT $LN66@equal_rang
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 193  : 	return lhs.m_fTime < rhs;

  00015	8b 45 14	 mov	 eax, DWORD PTR __Val$[ebp]
  00018	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  0001c	0f 1f 40 00	 npad	 4
$LL4@equal_rang:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6314 :         _Diff _Count2    = _Count / 2;

  00020	8b d6		 mov	 edx, esi
  00022	d1 ea		 shr	 edx, 1
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 193  : 	return lhs.m_fTime < rhs;

  00024	f3 0f 10 04 d3	 movss	 xmm0, DWORD PTR [ebx+edx*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility

; 1561 :         _Where += _Off;

  00029	8d 04 d3	 lea	 eax, DWORD PTR [ebx+edx*8]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 193  : 	return lhs.m_fTime < rhs;

  0002c	0f 2f c8	 comiss	 xmm1, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility

; 1561 :         _Where += _Off;

  0002f	89 45 fc	 mov	 DWORD PTR __UMid$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6316 :         if (_DEBUG_LT_PRED(_Pred, *_UMid, _Val)) { // range begins above _UMid, loop

  00032	76 0c		 jbe	 SHORT $LN8@equal_rang

; 6317 :             _UFirst = _Next_iter(_UMid);

  00034	8d 58 08	 lea	 ebx, DWORD PTR [eax+8]

; 6318 :             _Count -= _Count2 + 1;

  00037	83 c8 ff	 or	 eax, -1
  0003a	2b c2		 sub	 eax, edx
  0003c	03 f0		 add	 esi, eax

; 6319 :         } else if (_Pred(_Val, *_UMid)) {

  0003e	eb 07		 jmp	 SHORT $LN11@equal_rang
$LN8@equal_rang:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 199  : 	return lhs < rhs.m_fTime;

  00040	0f 2f c1	 comiss	 xmm0, xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6319 :         } else if (_Pred(_Val, *_UMid)) {

  00043	76 1a		 jbe	 SHORT $LN10@equal_rang

; 6320 :             _Count = _Count2; // range in first half, loop

  00045	8b f2		 mov	 esi, edx
$LN11@equal_rang:

; 6308 :         if (_Count <= 0) {

  00047	85 f6		 test	 esi, esi
  00049	7f d5		 jg	 SHORT $LL4@equal_rang
$LN66@equal_rang:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 193  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0004b	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6309 :             _Seek_wrapped(_Last, _UFirst); // empty range

  0004e	8b c3		 mov	 eax, ebx

; 6310 :             _Seek_wrapped(_First, _UFirst);

  00050	8b cb		 mov	 ecx, ebx

; 6337 :     return _STD equal_range(_First, _Last, _Val, less<>{});

  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 193  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00054	89 42 04	 mov	 DWORD PTR [edx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6337 :     return _STD equal_range(_First, _Last, _Val, less<>{});

  00057	8b c2		 mov	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 193  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00059	89 0a		 mov	 DWORD PTR [edx], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6338 : }

  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
$LN10@equal_rang:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility

; 5756 :     auto _UFirst                = _Get_unwrapped(_First);

  0005f	8b cb		 mov	 ecx, ebx
  00061	57		 push	 edi

; 5757 :     _Iter_diff_t<_FwdIt> _Count = _STD distance(_UFirst, _Get_unwrapped(_Last));
; 5758 : 
; 5759 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  00062	85 d2		 test	 edx, edx
  00064	74 22		 je	 SHORT $LN29@equal_rang
$LL28@equal_rang:

; 5760 :         const _Iter_diff_t<_FwdIt> _Count2 = _Count / 2;

  00066	8b fa		 mov	 edi, edx
  00068	d1 ef		 shr	 edi, 1
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 193  : 	return lhs.m_fTime < rhs;

  0006a	0f 2f 0c f9	 comiss	 xmm1, DWORD PTR [ecx+edi*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility

; 1561 :         _Where += _Off;

  0006e	8d 04 f9	 lea	 eax, DWORD PTR [ecx+edi*8]

; 5762 :         if (_Pred(*_UMid, _Val)) { // try top half

  00071	76 0c		 jbe	 SHORT $LN30@equal_rang

; 5763 :             _UFirst = _Next_iter(_UMid);

  00073	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]

; 5764 :             _Count -= _Count2 + 1;

  00076	83 c8 ff	 or	 eax, -1
  00079	2b c7		 sub	 eax, edi
  0007b	03 d0		 add	 edx, eax

; 5765 :         } else {

  0007d	eb 02		 jmp	 SHORT $LN31@equal_rang
$LN30@equal_rang:

; 5766 :             _Count = _Count2;

  0007f	8b d7		 mov	 edx, edi
$LN31@equal_rang:

; 5757 :     _Iter_diff_t<_FwdIt> _Count = _STD distance(_UFirst, _Get_unwrapped(_Last));
; 5758 : 
; 5759 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  00081	85 d2		 test	 edx, edx
  00083	7f e1		 jg	 SHORT $LL28@equal_rang
  00085	8b 45 fc	 mov	 eax, DWORD PTR __UMid$1$[ebp]
$LN29@equal_rang:

; 1561 :         _Where += _Off;

  00088	c1 e6 03	 shl	 esi, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6324 :             auto _ULast2 = _STD upper_bound(_Next_iter(_UMid), _UFirst, _Val, _Pass_fn(_Pred));

  0008b	83 c0 08	 add	 eax, 8

; 6215 :     _Iter_diff_t<_FwdIt> _Count = _STD distance(_UFirst, _Get_unwrapped(_Last));

  0008e	2b f0		 sub	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility

; 1590 :         return _Last - _First; // assume the iterator will do debug checking

  00090	03 f3		 add	 esi, ebx
  00092	c1 fe 03	 sar	 esi, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6217 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  00095	85 f6		 test	 esi, esi
  00097	7e 2a		 jle	 SHORT $LN47@equal_rang
  00099	0f 1f 80 00 00
	00 00		 npad	 7
$LL46@equal_rang:

; 6218 :         _Iter_diff_t<_FwdIt> _Count2 = _Count / 2;

  000a0	8b fe		 mov	 edi, esi
  000a2	d1 ef		 shr	 edi, 1
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 199  : 	return lhs < rhs.m_fTime;

  000a4	f3 0f 10 04 f8	 movss	 xmm0, DWORD PTR [eax+edi*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility

; 1561 :         _Where += _Off;

  000a9	8d 14 f8	 lea	 edx, DWORD PTR [eax+edi*8]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 199  : 	return lhs < rhs.m_fTime;

  000ac	0f 2f c1	 comiss	 xmm0, xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6220 :         if (_Pred(_Val, *_UMid)) {

  000af	76 04		 jbe	 SHORT $LN48@equal_rang

; 6221 :             _Count = _Count2;

  000b1	8b f7		 mov	 esi, edi

; 6222 :         } else { // try top half

  000b3	eb 0a		 jmp	 SHORT $LN49@equal_rang
$LN48@equal_rang:

; 6223 :             _UFirst = _Next_iter(_UMid);

  000b5	8d 42 08	 lea	 eax, DWORD PTR [edx+8]

; 6224 :             _Count -= _Count2 + 1;

  000b8	83 ca ff	 or	 edx, -1
  000bb	2b d7		 sub	 edx, edi
  000bd	03 f2		 add	 esi, edx
$LN49@equal_rang:

; 6217 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  000bf	85 f6		 test	 esi, esi
  000c1	7f dd		 jg	 SHORT $LL46@equal_rang
$LN47@equal_rang:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 193  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  000c3	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  000c6	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6337 :     return _STD equal_range(_First, _Last, _Val, less<>{});

  000c7	5e		 pop	 esi
  000c8	5b		 pop	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 193  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  000c9	89 42 04	 mov	 DWORD PTR [edx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6337 :     return _STD equal_range(_First, _Last, _Val, less<>{});

  000cc	8b c2		 mov	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 193  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  000ce	89 0a		 mov	 DWORD PTR [edx], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6338 : }

  000d0	8b e5		 mov	 esp, ebp
  000d2	5d		 pop	 ebp
  000d3	c3		 ret	 0
??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z ENDP ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >, COMDAT

; 945  :     _Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 949  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 5b		 je	 SHORT $LN47@Destroy_ra
  0000f	83 c6 2c	 add	 esi, 44			; 0000002cH
$LL4@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00012	8b 46 f8	 mov	 eax, DWORD PTR [esi-8]
  00015	85 c0		 test	 eax, eax
  00017	74 3f		 je	 SHORT $LN46@Destroy_ra

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00019	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0001b	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00020	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00026	72 12		 jb	 SHORT $LN33@Destroy_ra

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00028	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0002b	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0002e	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00030	83 c0 fc	 add	 eax, -4			; fffffffcH
  00033	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00036	77 36		 ja	 SHORT $LN30@Destroy_ra

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00038	8b c2		 mov	 eax, edx
$LN33@Destroy_ra:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0003a	51		 push	 ecx
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  00041	c7 46 f8 00 00
	00 00		 mov	 DWORD PTR [esi-8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00048	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  0004b	c7 46 fc 00 00
	00 00		 mov	 DWORD PTR [esi-4], 0

; 1769 :             _Myend   = nullptr;

  00052	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN46@Destroy_ra:
  00058	8d 4e d4	 lea	 ecx, DWORD PTR [esi-44]
  0005b	e8 00 00 00 00	 call	 ??1CFrameController@@UAE@XZ ; CFrameController::~CFrameController
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00060	83 c6 30	 add	 esi, 48			; 00000030H
  00063	8d 46 d4	 lea	 eax, DWORD PTR [esi-44]
  00066	3b c7		 cmp	 eax, edi
  00068	75 a8		 jne	 SHORT $LL4@Destroy_ra
$LN47@Destroy_ra:
  0006a	5f		 pop	 edi

; 950  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 951  :         }
; 952  :     }
; 953  : }

  0006b	5e		 pop	 esi
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
$LN30@Destroy_ra:

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0006e	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN48@Destroy_ra:
  00073	cc		 int	 3
??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCEffectMeshInstance@@@?$vector@PAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@QAEPAPAVCEffectMeshInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv641 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCEffectMeshInstance@@@?$vector@PAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@QAEPAPAVCEffectMeshInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CEffectMeshInstance *,std::allocator<CEffectMeshInstance *> >::_Emplace_reallocate<CEffectMeshInstance * const &>, COMDAT
; _this$ = ecx

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b c1		 sub	 eax, ecx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001b	2b c1		 sub	 eax, ecx
  0001d	c1 f8 02	 sar	 eax, 2

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 06 01 00
	00		 je	 $LN96@Emplace_re

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b d1		 sub	 edx, ecx

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 fa 02	 sar	 edx, 2

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b ca		 mov	 ecx, edx
  00040	d1 e9		 shr	 ecx, 1
  00042	2b c1		 sub	 eax, ecx
  00044	3b d0		 cmp	 edx, eax
  00046	76 12		 jbe	 SHORT $LN12@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow

  00048	bb fc ff ff ff	 mov	 ebx, -4			; fffffffcH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004d	53		 push	 ebx
  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 41		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  0005d	8b df		 mov	 ebx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 d8	 cmovae	 ebx, eax
  00064	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0006a	0f 87 c6 00 00
	00		 ja	 $LN97@Emplace_re

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00070	c1 e3 02	 shl	 ebx, 2

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00073	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  00079	72 0d		 jb	 SHORT $LN24@Emplace_re

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007b	53		 push	 ebx
  0007c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00081	83 c4 04	 add	 esp, 4
  00084	8b f8		 mov	 edi, eax
  00086	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00088	85 db		 test	 ebx, ebx
  0008a	74 0d		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  0008c	53		 push	 ebx
  0008d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00092	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  00095	8b f8		 mov	 edi, eax
  00097	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  00099	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0009b	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  0009e	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	89 4d fc	 mov	 DWORD PTR tv641[ebp], ecx
  000a7	8b 00		 mov	 eax, DWORD PTR [eax]
  000a9	89 01		 mov	 DWORD PTR [ecx], eax

; 790  :         _Constructed_first = _Newvec + _Whereoff;
; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000ab	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ae	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b1	8b 16		 mov	 edx, DWORD PTR [esi]
  000b3	3b c1		 cmp	 eax, ecx
  000b5	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000b7	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 794  :         } else { // provide basic guarantee

  000b9	eb 17		 jmp	 SHORT $LN60@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bb	57		 push	 edi
  000bc	50		 push	 eax
  000bd	52		 push	 edx
  000be	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCEffectMeshInstance@@PAPAV1@@std@@YAPAPAVCEffectMeshInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CEffectMeshInstance * *,CEffectMeshInstance * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000c3	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c9	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000cc	83 c0 04	 add	 eax, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000cf	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN60@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d2	50		 push	 eax
  000d3	51		 push	 ecx
  000d4	52		 push	 edx
  000d5	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCEffectMeshInstance@@PAPAV1@@std@@YAPAPAVCEffectMeshInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CEffectMeshInstance * *,CEffectMeshInstance * *>

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000da	8b 06		 mov	 eax, DWORD PTR [esi]

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000dc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000df	85 c0		 test	 eax, eax
  000e1	74 2c		 je	 SHORT $LN78@Emplace_re

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e3	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000e6	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e8	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000eb	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f1	72 12		 jb	 SHORT $LN88@Emplace_re

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f3	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f6	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fb	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fe	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00101	77 29		 ja	 SHORT $LN85@Emplace_re

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00103	8b c2		 mov	 eax, edx
$LN88@Emplace_re:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00105	51		 push	 ecx
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0010c	83 c4 08	 add	 esp, 8
$LN78@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0010f	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00112	89 3e		 mov	 DWORD PTR [esi], edi
  00114	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00117	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0011a	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  0011d	8d 0c 3b	 lea	 ecx, DWORD PTR [ebx+edi]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00120	5f		 pop	 edi

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00121	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 807  :     }

  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
$LN85@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0012c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 778  :             _Xlength();

  00131	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@CAXXZ ; std::vector<CEffectMeshInstance *,std::allocator<CEffectMeshInstance *> >::_Xlength
$LN97@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00136	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN94@Emplace_re:
  0013b	cc		 int	 3
??$_Emplace_reallocate@ABQAVCEffectMeshInstance@@@?$vector@PAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@QAEPAPAVCEffectMeshInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CEffectMeshInstance *,std::allocator<CEffectMeshInstance *> >::_Emplace_reallocate<CEffectMeshInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
__Whereoff$1$ = -4					; size = 4
tv505 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>, COMDAT
; _this$ = ecx

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	8b d9		 mov	 ebx, ecx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 13		 mov	 edx, DWORD PTR [ebx]
  00010	2b c2		 sub	 eax, edx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	2b c2		 sub	 eax, edx
  0001d	c1 f8 02	 sar	 eax, 2

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 d2 00 00
	00		 je	 $LN74@Emplace_re

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b ca		 sub	 ecx, edx

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 f9 02	 sar	 ecx, 2

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b d1		 mov	 edx, ecx
  00040	d1 ea		 shr	 edx, 1
  00042	2b c2		 sub	 eax, edx
  00044	3b c8		 cmp	 ecx, eax
  00046	76 17		 jbe	 SHORT $LN12@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow

  00048	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
  0004d	be ff ff ff 3f	 mov	 esi, 1073741823		; 3fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00058	83 c4 04	 add	 esp, 4
  0005b	8b f8		 mov	 edi, eax
  0005d	eb 44		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005f	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  00062	8b f7		 mov	 esi, edi
  00064	3b c7		 cmp	 eax, edi
  00066	0f 43 f0	 cmovae	 esi, eax
  00069	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  0006f	0f 87 8d 00 00
	00		 ja	 $LN75@Emplace_re

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00075	8d 04 b5 00 00
	00 00		 lea	 eax, DWORD PTR [esi*4]

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007c	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00081	72 0d		 jb	 SHORT $LN24@Emplace_re

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00089	83 c4 04	 add	 esp, 4
  0008c	8b f8		 mov	 edi, eax
  0008e	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00090	85 c0		 test	 eax, eax
  00092	74 0d		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0009a	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  0009d	8b f8		 mov	 edi, eax
  0009f	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  000a1	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a3	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  000a6	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a9	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000ac	89 4d fc	 mov	 DWORD PTR tv505[ebp], ecx
  000af	8b 00		 mov	 eax, DWORD PTR [eax]
  000b1	89 01		 mov	 DWORD PTR [ecx], eax

; 790  :         _Constructed_first = _Newvec + _Whereoff;
; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000b3	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000b6	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b9	8b 13		 mov	 edx, DWORD PTR [ebx]
  000bb	3b c1		 cmp	 eax, ecx
  000bd	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bf	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 794  :         } else { // provide basic guarantee

  000c1	eb 17		 jmp	 SHORT $LN60@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c3	57		 push	 edi
  000c4	50		 push	 eax
  000c5	52		 push	 edx
  000c6	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000cb	8b 45 fc	 mov	 eax, DWORD PTR tv505[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000ce	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d1	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d4	83 c0 04	 add	 eax, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d7	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
$LN60@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000da	50		 push	 eax
  000db	51		 push	 ecx
  000dc	52		 push	 edx
  000dd	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
  000e2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  000e5	8b cb		 mov	 ecx, ebx
  000e7	56		 push	 esi
  000e8	ff 75 f8	 push	 DWORD PTR __Newsize$1$[ebp]
  000eb	57		 push	 edi
  000ec	e8 00 00 00 00	 call	 ?_Change_array@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXQAPAVCGraphicImageInstance@@II@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Change_array

; 806  :         return _Newvec + _Whereoff;

  000f1	8b 45 fc	 mov	 eax, DWORD PTR tv505[ebp]
  000f4	5f		 pop	 edi
  000f5	5e		 pop	 esi
  000f6	5b		 pop	 ebx

; 807  :     }

  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c2 08 00	 ret	 8
$LN74@Emplace_re:

; 778  :             _Xlength();

  000fd	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
$LN75@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00102	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN72@Emplace_re:
  00107	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ?CEffectMeshInstance_DeleteTextureInstance@@YAXAAUSTextureInstance@CEffectMeshInstance@@@Z
_TEXT	SEGMENT
_rkInstance$ = 8					; size = 4
?CEffectMeshInstance_DeleteTextureInstance@@YAXAAUSTextureInstance@CEffectMeshInstance@@@Z PROC ; CEffectMeshInstance_DeleteTextureInstance, COMDAT

; 246  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 247  : 	std::vector<CGraphicImageInstance*> & rVector = rkInstance.TextureInstanceVector;

  00006	8b 7d 08	 mov	 edi, DWORD PTR _rkInstance$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00009	8b 5f 28	 mov	 ebx, DWORD PTR [edi+40]
  0000c	8b 77 24	 mov	 esi, DWORD PTR [edi+36]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000f	3b f3		 cmp	 esi, ebx
  00011	74 1c		 je	 SHORT $LN24@CEffectMes
$LL18@CEffectMes:

; 271  :         _Func(*_UFirst);

  00013	ff 36		 push	 DWORD PTR [esi]
  00015	e8 00 00 00 00	 call	 ?CEffectMeshInstance_DeleteImageInstance@@YAXPAVCGraphicImageInstance@@@Z ; CEffectMeshInstance_DeleteImageInstance
  0001a	83 c6 04	 add	 esi, 4
  0001d	83 c4 04	 add	 esp, 4
  00020	3b f3		 cmp	 esi, ebx
  00022	75 ef		 jne	 SHORT $LL18@CEffectMes
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 249  : 	rVector.clear();

  00024	8b 47 24	 mov	 eax, DWORD PTR [edi+36]
  00027	89 47 28	 mov	 DWORD PTR [edi+40], eax
  0002a	5f		 pop	 edi

; 250  : }

  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
$LN24@CEffectMes:

; 249  : 	rVector.clear();

  0002f	89 77 28	 mov	 DWORD PTR [edi+40], esi
  00032	5f		 pop	 edi

; 250  : }

  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
?CEffectMeshInstance_DeleteTextureInstance@@YAXAAUSTextureInstance@CEffectMeshInstance@@@Z ENDP ; CEffectMeshInstance_DeleteTextureInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ?CEffectMeshInstance_DeleteImageInstance@@YAXPAVCGraphicImageInstance@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkInstance$ = 8					; size = 4
?CEffectMeshInstance_DeleteImageInstance@@YAXPAVCGraphicImageInstance@@@Z PROC ; CEffectMeshInstance_DeleteImageInstance, COMDAT

; 241  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00003	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+20
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 242  : 	CGraphicImageInstance::ms_kPool.Free(pkInstance);

  00008	8b 4d 08	 mov	 ecx, DWORD PTR _pkInstance$[ebp]
  0000b	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0000e	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+24
  00014	74 0b		 je	 SHORT $LN8@CEffectMes

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00016	89 08		 mov	 DWORD PTR [eax], ecx

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  00018	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+20, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 243  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
$LN8@CEffectMes:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00021	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00024	51		 push	 ecx
  00025	50		 push	 eax
  00026	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+16
  0002b	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 243  : }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?CEffectMeshInstance_DeleteImageInstance@@YAXPAVCGraphicImageInstance@@@Z ENDP ; CEffectMeshInstance_DeleteImageInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CEffectMeshInstance::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A ; CEffectMeshInstance::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@VCEffectMeshInstance@@@@UAE@XZ ; CDynamicPool<CEffectMeshInstance>::~CDynamicPool<CEffectMeshInstance>
??__F?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CEffectMeshInstance::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ??__E?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CEffectMeshInstance::ms_kPool'', COMDAT

; 7    : CDynamicPool<CEffectMeshInstance>		CEffectMeshInstance::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CEffectMeshInstance::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CEffectMeshInstance::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@VCEffectMeshInstance@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@VCEffectMeshInstance@@@@UAEPAXI@Z PROC ; CDynamicPool<CEffectMeshInstance>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@VCEffectMeshInstance@@@@UAE@XZ ; CDynamicPool<CEffectMeshInstance>::~CDynamicPool<CEffectMeshInstance>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@VCEffectMeshInstance@@@@UAEPAXI@Z ENDP ; CDynamicPool<CEffectMeshInstance>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CEffectMeshInstance *,std::allocator<CEffectMeshInstance *> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CEffectMeshInstance *,std::allocator<CEffectMeshInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@VCEffectMeshInstance@@@@KAXPAVCEffectMeshInstance@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@VCEffectMeshInstance@@@@KAXPAVCEffectMeshInstance@@@Z PROC ; CDynamicPool<CEffectMeshInstance>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@VCEffectMeshInstance@@@@KAXPAVCEffectMeshInstance@@@Z ENDP ; CDynamicPool<CEffectMeshInstance>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@VCEffectMeshInstance@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@VCEffectMeshInstance@@@@UAE@XZ PROC	; CDynamicPool<CEffectMeshInstance>::~CDynamicPool<CEffectMeshInstance>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@VCEffectMeshInstance@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0000c	85 c0		 test	 eax, eax
  0000e	74 41		 je	 SHORT $LN6@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00013	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00018	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001e	72 12		 jb	 SHORT $LN22@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00020	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00023	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00026	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00028	83 c0 fc	 add	 eax, -4			; fffffffcH
  0002b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002e	77 6b		 ja	 SHORT $LN44@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00030	8b c2		 mov	 eax, edx
$LN22@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00032	51		 push	 ecx
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  00039	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00040	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00043	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1769 :             _Myend   = nullptr;

  0004a	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00051	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00054	85 c0		 test	 eax, eax
  00056	74 41		 je	 SHORT $LN31@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00058	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0005b	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0005d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00060	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00066	72 12		 jb	 SHORT $LN47@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00068	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0006b	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0006e	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00070	83 c0 fc	 add	 eax, -4			; fffffffcH
  00073	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00076	77 23		 ja	 SHORT $LN44@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00078	8b c2		 mov	 eax, edx
$LN47@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0007a	51		 push	 ecx
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  00081	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00088	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  0008b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1769 :             _Myend   = nullptr;

  00092	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN31@CDynamicPo:
  00099	5e		 pop	 esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 26   : 		}

  0009a	c3		 ret	 0
$LN44@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0009b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN52@CDynamicPo:
  000a0	cc		 int	 3
??1?$CDynamicPool@VCEffectMeshInstance@@@@UAE@XZ ENDP	; CDynamicPool<CEffectMeshInstance>::~CDynamicPool<CEffectMeshInstance>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCEffectMeshInstance@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCEffectMeshInstance@@UAEPAXI@Z PROC			; CEffectMeshInstance::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CEffectMeshInstance@@UAE@XZ ; CEffectMeshInstance::~CEffectMeshInstance
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 60		 push	 96			; 00000060H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCEffectMeshInstance@@UAEPAXI@Z ENDP			; CEffectMeshInstance::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterlib\Ref.h
;	COMDAT ??1?$CRef@VCEffectMesh@@@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$CRef@VCEffectMesh@@@@QAE@XZ PROC			; CRef<CEffectMesh>::~CRef<CEffectMesh>, COMDAT
; _this$ = ecx

; 37   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CRef@VCEffectMesh@@@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx

; 53   : 			if (m_pObject)

  00025	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00027	85 c9		 test	 ecx, ecx
  00029	74 0b		 je	 SHORT $LN4@CRef

; 54   : 			{
; 55   : 				m_pObject->Release();

  0002b	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release

; 56   : 				m_pObject = NULL;

  00030	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN4@CRef:

; 38   : 			Clear();
; 39   : 		}

  00036	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00039	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00040	59		 pop	 ecx
  00041	5e		 pop	 esi
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
  00046	cc		 int	 3
  00047	cc		 int	 3
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CRef@VCEffectMesh@@@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CRef@VCEffectMesh@@@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CRef@VCEffectMesh@@@@QAE@XZ ENDP			; CRef<CEffectMesh>::~CRef<CEffectMesh>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Getal@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@2@XZ PROC ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Getal, COMDAT
; _this$ = ecx

; 1818 :         return _Mypair._Get_first();

  00000	8b c1		 mov	 eax, ecx

; 1819 :     }

  00002	c3		 ret	 0
?_Getal@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEAAV?$allocator@USTextureInstance@CEffectMeshInstance@@@2@XZ ENDP ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Destroy@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXPAUSTextureInstance@CEffectMeshInstance@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXPAUSTextureInstance@CEffectMeshInstance@@0@Z PROC ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Destroy, COMDAT
; _this$ = ecx

; 1678 :     _CONSTEXPR20_CONTAINER void _Destroy(pointer _First, pointer _Last) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1679 :         // destroy [_First, _Last) using allocator
; 1680 :         _Destroy_range(_First, _Last, _Getal());

  00003	51		 push	 ecx
  00004	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00007	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0000a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >
  0000f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1681 :     }

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?_Destroy@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXPAUSTextureInstance@CEffectMeshInstance@@0@Z ENDP ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Ufill@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEPAUSTextureInstance@CEffectMeshInstance@@PAU34@IU_Value_init_tag@2@@Z
_TEXT	SEGMENT
__Backout$2 = -24					; size = 12
__$EHRec$ = -12						; size = 12
__Dest$ = 8						; size = 4
__Count$ = 12						; size = 4
___formal$ = 16						; size = 1
?_Ufill@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEPAUSTextureInstance@CEffectMeshInstance@@PAU34@IU_Value_init_tag@2@@Z PROC ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Ufill, COMDAT
; _this$ = ecx

; 1646 :     _CONSTEXPR20_CONTAINER pointer _Ufill(pointer _Dest, const size_type _Count, _Value_init_tag) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Ufill@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEPAUSTextureInstance@CEffectMeshInstance@@PAU34@IU_Value_init_tag@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1620 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  0002a	8b 7d 08	 mov	 edi, DWORD PTR __Dest$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1648 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0002d	8b 75 0c	 mov	 esi, DWORD PTR __Count$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1620 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00030	89 7d e8	 mov	 DWORD PTR __Backout$2[ebp], edi
  00033	89 7d ec	 mov	 DWORD PTR __Backout$2[ebp+4], edi
  00036	89 5d f0	 mov	 DWORD PTR __Backout$2[ebp+8], ebx

; 1829 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};

  00039	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1830 :     for (; 0 < _Count; --_Count) {

  00040	85 f6		 test	 esi, esi
  00042	74 34		 je	 SHORT $LN5@Ufill
$LL6@Ufill:

; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  00044	6a 30		 push	 48			; 00000030H
  00046	6a 00		 push	 0
  00048	57		 push	 edi
  00049	e8 00 00 00 00	 call	 _memset
  0004e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00051	8b cf		 mov	 ecx, edi
  00053	e8 00 00 00 00	 call	 ??0CFrameController@@QAE@XZ ; CFrameController::CFrameController
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00058	c7 47 24 00 00
	00 00		 mov	 DWORD PTR [edi+36], 0
  0005f	c7 47 28 00 00
	00 00		 mov	 DWORD PTR [edi+40], 0
  00066	c7 47 2c 00 00
	00 00		 mov	 DWORD PTR [edi+44], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1632 :         ++_Last;

  0006d	83 c7 30	 add	 edi, 48			; 00000030H
  00070	89 7d ec	 mov	 DWORD PTR __Backout$2[ebp+4], edi

; 1830 :     for (; 0 < _Count; --_Count) {

  00073	83 ee 01	 sub	 esi, 1
  00076	75 cc		 jne	 SHORT $LL6@Ufill
$LN5@Ufill:

; 1626 :         _Destroy_range(_First, _Last, _Al);

  00078	53		 push	 ebx
  00079	57		 push	 edi
  0007a	57		 push	 edi
  0007b	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >
  00080	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1648 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00083	8b c7		 mov	 eax, edi

; 1649 :     }

  00085	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00088	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008f	59		 pop	 ecx
  00090	5f		 pop	 edi
  00091	5e		 pop	 esi
  00092	5b		 pop	 ebx
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Ufill@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEPAUSTextureInstance@CEffectMeshInstance@@PAU34@IU_Value_init_tag@2@@Z$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Backout$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<CEffectMeshInstance::STextureInstance> >::~_Uninitialized_backout_al<std::allocator<CEffectMeshInstance::STextureInstance> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?_Ufill@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEPAUSTextureInstance@CEffectMeshInstance@@PAU34@IU_Value_init_tag@2@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Ufill@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEPAUSTextureInstance@CEffectMeshInstance@@PAU34@IU_Value_init_tag@2@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Ufill@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEPAUSTextureInstance@CEffectMeshInstance@@PAU34@IU_Value_init_tag@2@@Z ENDP ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Ufill
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??1?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@QAE@XZ PROC ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::~vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >, COMDAT
; _this$ = ecx

; 711  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 65		 je	 SHORT $LN4@vector

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  00009	57		 push	 edi
  0000a	56		 push	 esi
  0000b	ff 76 04	 push	 DWORD PTR [esi+4]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00014	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00017	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0001c	8b 3e		 mov	 edi, DWORD PTR [esi]

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00021	2b cf		 sub	 ecx, edi
  00023	f7 e9		 imul	 ecx
  00025	c1 fa 03	 sar	 edx, 3
  00028	8b c2		 mov	 eax, edx
  0002a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0002d	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002f	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  00032	c1 e1 04	 shl	 ecx, 4

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00035	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0003b	72 12		 jb	 SHORT $LN22@vector

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0003d	8b 57 fc	 mov	 edx, DWORD PTR [edi-4]
  00040	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00043	2b fa		 sub	 edi, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00045	8d 47 fc	 lea	 eax, DWORD PTR [edi-4]
  00048	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0004b	77 23		 ja	 SHORT $LN19@vector

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0004d	8b fa		 mov	 edi, edx
$LN22@vector:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0004f	51		 push	 ecx
  00050	57		 push	 edi
  00051	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00056	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  00059	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 1768 :             _Mylast  = nullptr;

  0005f	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1769 :             _Myend   = nullptr;

  00066	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0006d	5f		 pop	 edi
$LN4@vector:
  0006e	5e		 pop	 esi

; 717  :     }

  0006f	c3		 ret	 0
$LN19@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00070	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN27@vector:
  00075	cc		 int	 3
??1?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@QAE@XZ ENDP ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::~vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?deallocate@?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@QAEXQAUSTextureInstance@CEffectMeshInstance@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@QAEXQAUSTextureInstance@CEffectMeshInstance@@I@Z PROC ; std::allocator<CEffectMeshInstance::STextureInstance>::deallocate, COMDAT
; _this$ = ecx

; 833  :     _CONSTEXPR20_DYNALLOC void deallocate(_Ty* const _Ptr, const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 834  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	c1 e1 04	 shl	 ecx, 4

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0000f	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00015	72 12		 jb	 SHORT $LN15@deallocate

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00017	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001a	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001d	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0001f	83 c0 fc	 add	 eax, -4			; fffffffcH
  00022	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00025	77 10		 ja	 SHORT $LN12@deallocate

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00027	8b c2		 mov	 eax, edx
$LN15@deallocate:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00029	51		 push	 ecx
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00030	83 c4 08	 add	 esp, 8

; 836  :     }

  00033	5d		 pop	 ebp
  00034	c2 08 00	 ret	 8
$LN12@deallocate:

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00037	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN18@deallocate:
  0003c	cc		 int	 3
?deallocate@?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@QAEXQAUSTextureInstance@CEffectMeshInstance@@I@Z ENDP ; std::allocator<CEffectMeshInstance::STextureInstance>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ?isActive@CEffectMeshInstance@@IAEHXZ
_TEXT	SEGMENT
?isActive@CEffectMeshInstance@@IAEHXZ PROC		; CEffectMeshInstance::isActive, COMDAT
; _this$ = ecx

; 26   : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f1		 mov	 esi, ecx

; 27   : 	if (!CEffectElementBaseInstance::isActive())

  00005	e8 00 00 00 00	 call	 ?isActive@CEffectElementBaseInstance@@QAE_NXZ ; CEffectElementBaseInstance::isActive
  0000a	84 c0		 test	 al, al
  0000c	74 6b		 je	 SHORT $LN3@isActive

; 28   : 		return FALSE;
; 29   : 
; 30   : 	if (!m_MeshFrameController.isActive())

  0000e	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  00011	6a 00		 push	 0
  00013	e8 00 00 00 00	 call	 ?isActive@CFrameController@@QAEHK@Z ; CFrameController::isActive
  00018	85 c0		 test	 eax, eax
  0001a	74 5d		 je	 SHORT $LN3@isActive
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0001c	8b 4e 54	 mov	 ecx, DWORD PTR [esi+84]
  0001f	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00024	2b 4e 50	 sub	 ecx, DWORD PTR [esi+80]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 33   : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  00027	33 db		 xor	 ebx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00029	f7 e9		 imul	 ecx
  0002b	c1 fa 03	 sar	 edx, 3
  0002e	8b c2		 mov	 eax, edx
  00030	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00033	03 c2		 add	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 33   : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  00035	74 42		 je	 SHORT $LN3@isActive
  00037	33 ff		 xor	 edi, edi
  00039	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@isActive:

; 35   : 		int iCurrentFrame = m_MeshFrameController.GetCurrentFrame();

  00040	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  00043	e8 00 00 00 00	 call	 ?GetCurrentFrame@CFrameController@@QAEEXZ ; CFrameController::GetCurrentFrame
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  00048	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 35   : 		int iCurrentFrame = m_MeshFrameController.GetCurrentFrame();

  0004b	0f b6 c0	 movzx	 eax, al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  0004e	03 cf		 add	 ecx, edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 36   : 		if (m_TextureInstanceVector[j].TextureFrameController.isActive(iCurrentFrame))

  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ?isActive@CFrameController@@QAEHK@Z ; CFrameController::isActive
  00056	85 c0		 test	 eax, eax
  00058	75 25		 jne	 SHORT $LN14@isActive
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0005a	8b 4e 54	 mov	 ecx, DWORD PTR [esi+84]
  0005d	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00062	2b 4e 50	 sub	 ecx, DWORD PTR [esi+80]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 33   : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  00065	43		 inc	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00066	f7 e9		 imul	 ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 33   : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  00068	83 c7 30	 add	 edi, 48			; 00000030H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0006b	c1 fa 03	 sar	 edx, 3
  0006e	8b c2		 mov	 eax, edx
  00070	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00073	03 c2		 add	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 33   : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  00075	3b d8		 cmp	 ebx, eax
  00077	72 c7		 jb	 SHORT $LL4@isActive
$LN3@isActive:
  00079	5f		 pop	 edi

; 37   : 			return TRUE;
; 38   : 	}
; 39   : 
; 40   : 	return FALSE;
; 41   : }

  0007a	5e		 pop	 esi
  0007b	33 c0		 xor	 eax, eax
  0007d	5b		 pop	 ebx
  0007e	c3		 ret	 0
$LN14@isActive:
  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	b8 01 00 00 00	 mov	 eax, 1
  00086	5b		 pop	 ebx
  00087	c3		 ret	 0
?isActive@CEffectMeshInstance@@IAEHXZ ENDP		; CEffectMeshInstance::isActive
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterlib\GrpMath.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_math.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_math.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterlib\GrpMath.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterlib\GrpMath.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ?OnRender@CEffectMeshInstance@@MAEXXZ
_TEXT	SEGMENT
_Color$1$ = -324					; size = 4
tv1857 = -324						; size = 4
_byType$1 = -317					; size = 1
_dwG$1$ = -316						; size = 4
_rTextureFrameController$1$ = -316			; size = 4
_dwR$1$ = -312						; size = 4
tv1859 = -312						; size = 4
_Position$3$ = -308					; size = 4
_rFrameData$1$ = -308					; size = 4
_i$1$ = -304						; size = 4
_Position$1$ = -300					; size = 4
_fElapsedTime$ = -300					; size = 4
_this$GSCopy$1$ = -296					; size = 4
_pEffectMesh$1$ = -292					; size = 4
tv1945 = -288						; size = 4
_TableAlpha$2 = -284					; size = 4
tv1958 = -280						; size = 4
_result$3 = -276					; size = 8
_q$4 = -268						; size = 16
_Color$5 = -252						; size = 16
_Position$6 = -236					; size = 12
_m_matWorld$7 = -224					; size = 64
$T8 = -160						; size = 64
_matTemp$9 = -160					; size = 64
$T10 = -160						; size = 64
_LastPosition$11 = -96					; size = 12
_Position$12 = -84					; size = 12
_matTemp$13 = -72					; size = 64
__$ArrayPad$ = -4					; size = 4
?OnRender@CEffectMeshInstance@@MAEXXZ PROC		; CEffectMeshInstance::OnRender, COMDAT
; _this$ = ecx

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	81 ec 48 01 00
	00		 sub	 esp, 328		; 00000148H
  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00011	33 c4		 xor	 eax, esp
  00013	89 84 24 44 01
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+328], eax
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	8b f9		 mov	 edi, ecx
  0001e	89 7c 24 28	 mov	 DWORD PTR _this$GSCopy$1$[esp+336], edi

; 63   : 	if (!isActive())

  00022	e8 00 00 00 00	 call	 ?isActive@CEffectMeshInstance@@IAEHXZ ; CEffectMeshInstance::isActive
  00027	85 c0		 test	 eax, eax
  00029	0f 84 ff 08 00
	00		 je	 $LN3@OnRender

; 64   : 		return;
; 65   : 
; 66   : 	CEffectMesh * pEffectMesh = m_roMesh.GetPointer();

  0002f	8b 47 5c	 mov	 eax, DWORD PTR [edi+92]

; 67   : 
; 68   : 	for (DWORD i = 0; i < pEffectMesh->GetMeshCount(); ++i)

  00032	33 f6		 xor	 esi, esi
  00034	8b c8		 mov	 ecx, eax
  00036	89 44 24 2c	 mov	 DWORD PTR _pEffectMesh$1$[esp+336], eax
  0003a	89 74 24 20	 mov	 DWORD PTR _i$1$[esp+336], esi
  0003e	e8 00 00 00 00	 call	 ?GetMeshCount@CEffectMesh@@QAEKXZ ; CEffectMesh::GetMeshCount
  00043	85 c0		 test	 eax, eax
  00045	0f 84 e3 08 00
	00		 je	 $LN3@OnRender
  0004b	8d 57 2c	 lea	 edx, DWORD PTR [edi+44]
  0004e	66 90		 npad	 2
$LL4@OnRender:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  00050	8b 4f 50	 mov	 ecx, DWORD PTR [edi+80]
  00053	8d 04 76	 lea	 eax, DWORD PTR [esi+esi*2]
  00056	c1 e0 04	 shl	 eax, 4
  00059	03 c8		 add	 ecx, eax
  0005b	89 44 24 38	 mov	 DWORD PTR tv1958[esp+336], eax
  0005f	89 4c 24 14	 mov	 DWORD PTR _rTextureFrameController$1$[esp+336], ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 73   : 		if (!rTextureFrameController.isActive(m_MeshFrameController.GetCurrentFrame()))

  00063	8b ca		 mov	 ecx, edx
  00065	e8 00 00 00 00	 call	 ?GetCurrentFrame@CFrameController@@QAEEXZ ; CFrameController::GetCurrentFrame
  0006a	8b 4c 24 14	 mov	 ecx, DWORD PTR _rTextureFrameController$1$[esp+336]
  0006e	0f b6 c0	 movzx	 eax, al
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?isActive@CFrameController@@QAEHK@Z ; CFrameController::isActive
  00077	85 c0		 test	 eax, eax
  00079	0f 84 96 08 00
	00		 je	 $LN2@OnRender

; 74   : 			continue;
; 75   : 
; 76   : 		int iBillboardType = m_pMeshScript->GetBillboardType(i);

  0007f	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  00082	56		 push	 esi
  00083	e8 00 00 00 00	 call	 ?GetBillboardType@CEffectMeshScript@@QAEHK@Z ; CEffectMeshScript::GetBillboardType
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  00088	c7 84 24 a8 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _m_matWorld$7[esp+392], 0
  00093	c7 84 24 a4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _m_matWorld$7[esp+388], 0
  0009e	c7 84 24 a0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _m_matWorld$7[esp+384], 0
  000a9	c7 84 24 9c 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _m_matWorld$7[esp+380], 0
  000b4	c7 84 24 94 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _m_matWorld$7[esp+372], 0
  000bf	c7 84 24 90 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _m_matWorld$7[esp+368], 0
  000ca	c7 84 24 8c 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _m_matWorld$7[esp+364], 0
  000d5	c7 84 24 88 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _m_matWorld$7[esp+360], 0
  000e0	c7 84 24 80 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _m_matWorld$7[esp+352], 0
  000eb	c7 44 24 7c 00
	00 00 00	 mov	 DWORD PTR _m_matWorld$7[esp+348], 0
  000f3	c7 44 24 78 00
	00 00 00	 mov	 DWORD PTR _m_matWorld$7[esp+344], 0
  000fb	c7 44 24 74 00
	00 00 00	 mov	 DWORD PTR _m_matWorld$7[esp+340], 0

; 1517 :     pOut->m[1][0] = pOut->m[1][2] = pOut->m[1][3] =
; 1518 :     pOut->m[2][0] = pOut->m[2][1] = pOut->m[2][3] =
; 1519 :     pOut->m[3][0] = pOut->m[3][1] = pOut->m[3][2] = 0.0f;
; 1520 : 
; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  00103	c7 84 24 ac 00
	00 00 00 00 80
	3f		 mov	 DWORD PTR _m_matWorld$7[esp+396], 1065353216 ; 3f800000H
  0010e	c7 84 24 98 00
	00 00 00 00 80
	3f		 mov	 DWORD PTR _m_matWorld$7[esp+376], 1065353216 ; 3f800000H
  00119	c7 84 24 84 00
	00 00 00 00 80
	3f		 mov	 DWORD PTR _m_matWorld$7[esp+356], 1065353216 ; 3f800000H
  00124	c7 44 24 70 00
	00 80 3f	 mov	 DWORD PTR _m_matWorld$7[esp+336], 1065353216 ; 3f800000H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 81   : 		switch(iBillboardType)

  0012c	83 e8 01	 sub	 eax, 1
  0012f	0f 84 4e 03 00
	00		 je	 $LN9@OnRender
  00135	83 e8 01	 sub	 eax, 1
  00138	0f 84 3c 02 00
	00		 je	 $LN10@OnRender
  0013e	83 e8 01	 sub	 eax, 1
  00141	0f 85 ba 03 00
	00		 jne	 $LN12@OnRender

; 105  : 
; 106  : 			case MESH_BILLBOARD_TYPE_MOVE:
; 107  : 				{
; 108  : 					D3DXVECTOR3 Position;
; 109  : 					m_pMeshScript->GetPosition(m_fLocalTime, Position);

  00147	f3 0f 10 47 0c	 movss	 xmm0, DWORD PTR [edi+12]
  0014c	8d 44 24 64	 lea	 eax, DWORD PTR _Position$6[esp+336]
  00150	50		 push	 eax
  00151	51		 push	 ecx
  00152	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  00155	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0015a	e8 00 00 00 00	 call	 ?GetPosition@CEffectElementBase@@QAEXMAAUD3DXVECTOR3@@@Z ; CEffectElementBase::GetPosition

; 110  : 					D3DXVECTOR3 LastPosition;
; 111  : 					m_pMeshScript->GetPosition(m_fLocalTime-CTimer::Instance().GetElapsedSecond(), LastPosition);

  0015f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  00165	8d 84 24 f0 00
	00 00		 lea	 eax, DWORD PTR _LastPosition$11[esp+336]
  0016c	50		 push	 eax
  0016d	e8 00 00 00 00	 call	 ?GetElapsedSecond@CTimer@@QAEMXZ ; CTimer::GetElapsedSecond
  00172	d8 6f 0c	 fsubr	 DWORD PTR [edi+12]
  00175	51		 push	 ecx
  00176	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  00179	d9 1c 24	 fstp	 DWORD PTR [esp]
  0017c	e8 00 00 00 00	 call	 ?GetPosition@CEffectElementBase@@QAEXMAAUD3DXVECTOR3@@@Z ; CEffectElementBase::GetPosition
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 213  :     x -= v.x;

  00181	f3 0f 10 54 24
	64		 movss	 xmm2, DWORD PTR _Position$6[esp+336]

; 214  :     y -= v.y;

  00187	f3 0f 10 4c 24
	68		 movss	 xmm1, DWORD PTR _Position$6[esp+340]
  0018d	f3 0f 5c 8c 24
	f4 00 00 00	 subss	 xmm1, DWORD PTR _LastPosition$11[esp+340]
  00196	f3 0f 5c 94 24
	f0 00 00 00	 subss	 xmm2, DWORD PTR _LastPosition$11[esp+336]

; 215  :     z -= v.z;

  0019f	f3 0f 10 44 24
	6c		 movss	 xmm0, DWORD PTR _Position$6[esp+344]
  001a5	f3 0f 5c 84 24
	f8 00 00 00	 subss	 xmm0, DWORD PTR _LastPosition$11[esp+344]
  001ae	f3 0f 11 4c 24
	68		 movss	 DWORD PTR _Position$6[esp+340], xmm1
  001b4	f3 0f 11 54 24
	64		 movss	 DWORD PTR _Position$6[esp+336], xmm2
  001ba	f3 0f 59 c9	 mulss	 xmm1, xmm1

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001be	f3 0f 59 d2	 mulss	 xmm2, xmm2

; 215  :     z -= v.z;

  001c2	f3 0f 11 44 24
	6c		 movss	 DWORD PTR _Position$6[esp+344], xmm0

; 1253 :     return pV->x * pV->x + pV->y * pV->y + pV->z * pV->z;

  001c8	f3 0f 59 c0	 mulss	 xmm0, xmm0
  001cc	f3 0f 58 ca	 addss	 xmm1, xmm2
  001d0	f3 0f 58 c8	 addss	 xmm1, xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 113  : 					if (D3DXVec3LengthSq(&Position)>0.001f)

  001d4	0f 2f 0d 00 00
	00 00		 comiss	 xmm1, DWORD PTR __real@3a83126f
  001db	0f 86 20 03 00
	00		 jbe	 $LN12@OnRender

; 114  : 					{
; 115  : 						D3DXVec3Normalize(&Position,&Position);

  001e1	8d 44 24 64	 lea	 eax, DWORD PTR _Position$6[esp+336]
  001e5	50		 push	 eax
  001e6	50		 push	 eax
  001e7	e8 00 00 00 00	 call	 _D3DXVec3Normalize@8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 182  :     z = fz;

  001ec	f3 0f 10 74 24
	64		 movss	 xmm6, DWORD PTR _Position$6[esp+336]
  001f2	0f 57 d2	 xorps	 xmm2, xmm2

; 290  :     return x == v.x && y == v.y && z == v.z;

  001f5	f3 0f 10 4c 24
	6c		 movss	 xmm1, DWORD PTR _Position$6[esp+344]
  001fb	f3 0f 10 5c 24
	68		 movss	 xmm3, DWORD PTR _Position$6[esp+340]
  00201	f3 0f 10 3d 00
	00 00 00	 movss	 xmm7, DWORD PTR __real@bf800000

; 182  :     z = fz;

  00209	0f 2e d6	 ucomiss xmm2, xmm6
  0020c	f3 0f 11 74 24
	24		 movss	 DWORD PTR _Position$1$[esp+336], xmm6

; 290  :     return x == v.x && y == v.y && z == v.z;

  00212	f3 0f 11 4c 24
	1c		 movss	 DWORD PTR _Position$3$[esp+336], xmm1

; 182  :     z = fz;

  00218	9f		 lahf
  00219	f6 c4 44	 test	 ah, 68			; 00000044H

; 290  :     return x == v.x && y == v.y && z == v.z;

  0021c	7a 32		 jp	 SHORT $LN34@OnRender
  0021e	0f 2e fb	 ucomiss xmm7, xmm3
  00221	9f		 lahf
  00222	f6 c4 44	 test	 ah, 68			; 00000044H
  00225	7a 29		 jp	 SHORT $LN34@OnRender
  00227	0f 2e d1	 ucomiss xmm2, xmm1
  0022a	9f		 lahf
  0022b	f6 c4 44	 test	 ah, 68			; 00000044H
  0022e	7a 20		 jp	 SHORT $LN34@OnRender

; 667  :     x = fx;

  00230	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 117  : 						D3DXMatrixRotationQuaternion(&m_matWorld,&q);

  00237	8d 44 24 44	 lea	 eax, DWORD PTR _q$4[esp+336]
  0023b	50		 push	 eax
  0023c	8d 44 24 74	 lea	 eax, DWORD PTR _m_matWorld$7[esp+340]
  00240	50		 push	 eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 667  :     x = fx;

  00241	0f 11 44 24 4c	 movups	 XMMWORD PTR _q$4[esp+344], xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 117  : 						D3DXMatrixRotationQuaternion(&m_matWorld,&q);

  00246	e8 00 00 00 00	 call	 _D3DXMatrixRotationQuaternion@8
  0024b	e9 b1 02 00 00	 jmp	 $LN12@OnRender
$LN34@OnRender:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 249  :     return D3DXVECTOR3(-x, -y, -z);

  00250	0f 28 c6	 movaps	 xmm0, xmm6
  00253	0f 28 e3	 movaps	 xmm4, xmm3
  00256	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0025d	0f 28 e9	 movaps	 xmm5, xmm1
  00260	0f 57 25 00 00
	00 00		 xorps	 xmm4, DWORD PTR __xmm@80000000800000008000000080000000
  00267	0f 57 2d 00 00
	00 00		 xorps	 xmm5, DWORD PTR __xmm@80000000800000008000000080000000

; 182  :     z = fz;

  0026e	0f 2e d0	 ucomiss xmm2, xmm0
  00271	9f		 lahf
  00272	f6 c4 44	 test	 ah, 68			; 00000044H

; 290  :     return x == v.x && y == v.y && z == v.z;

  00275	7a 32		 jp	 SHORT $LN35@OnRender
  00277	0f 2e fc	 ucomiss xmm7, xmm4
  0027a	9f		 lahf
  0027b	f6 c4 44	 test	 ah, 68			; 00000044H
  0027e	7a 29		 jp	 SHORT $LN35@OnRender
  00280	0f 2e d5	 ucomiss xmm2, xmm5
  00283	9f		 lahf
  00284	f6 c4 44	 test	 ah, 68			; 00000044H
  00287	7a 20		 jp	 SHORT $LN35@OnRender

; 667  :     x = fx;

  00289	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 117  : 						D3DXMatrixRotationQuaternion(&m_matWorld,&q);

  00290	8d 44 24 44	 lea	 eax, DWORD PTR _q$4[esp+336]
  00294	50		 push	 eax
  00295	8d 44 24 74	 lea	 eax, DWORD PTR _m_matWorld$7[esp+340]
  00299	50		 push	 eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 667  :     x = fx;

  0029a	0f 11 44 24 4c	 movups	 XMMWORD PTR _q$4[esp+344], xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 117  : 						D3DXMatrixRotationQuaternion(&m_matWorld,&q);

  0029f	e8 00 00 00 00	 call	 _D3DXMatrixRotationQuaternion@8
  002a4	e9 58 02 00 00	 jmp	 $LN12@OnRender
$LN35@OnRender:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  002a9	0f 28 c3	 movaps	 xmm0, xmm3

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  002ac	f3 0f 59 ca	 mulss	 xmm1, xmm2

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  002b0	f3 0f 59 1d 00
	00 00 00	 mulss	 xmm3, DWORD PTR __real@3f800000

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  002b8	f3 0f 59 c2	 mulss	 xmm0, xmm2

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  002bc	f3 0f 11 4c 24
	30		 movss	 DWORD PTR tv1945[esp+336], xmm1
  002c2	f3 0f 11 44 24
	18		 movss	 DWORD PTR tv1859[esp+336], xmm0
  002c8	0f 28 c6	 movaps	 xmm0, xmm6
  002cb	f3 0f 59 c2	 mulss	 xmm0, xmm2
  002cf	f3 0f 11 44 24
	0c		 movss	 DWORD PTR tv1857[esp+336], xmm0

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  002d5	f3 0f 5c c3	 subss	 xmm0, xmm3
  002d9	f3 0f 58 c1	 addss	 xmm0, xmm1
  002dd	0f 57 c9	 xorps	 xmm1, xmm1
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterlib\GrpMath.h

; 56   : 	float s = sqrtf((1+d)*2);

  002e0	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  002e8	f3 0f 58 c0	 addss	 xmm0, xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_math.h

; 758  :             return (float)sqrt(_X);

  002ec	0f 5a c0	 cvtps2pd xmm0, xmm0
  002ef	66 0f 2e c8	 ucomisd xmm1, xmm0
  002f3	77 06		 ja	 SHORT $LN158@OnRender
  002f5	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  002f9	eb 05		 jmp	 SHORT $LN159@OnRender
$LN158@OnRender:
  002fb	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN159@OnRender:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00300	f3 0f 10 4c 24
	1c		 movss	 xmm1, DWORD PTR _Position$3$[esp+336]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 117  : 						D3DXMatrixRotationQuaternion(&m_matWorld,&q);

  00306	8d 44 24 44	 lea	 eax, DWORD PTR _q$4[esp+336]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  0030a	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@bf800000
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 117  : 						D3DXMatrixRotationQuaternion(&m_matWorld,&q);

  00312	50		 push	 eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00313	f3 0f 10 54 24
	1c		 movss	 xmm2, DWORD PTR tv1859[esp+340]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 117  : 						D3DXMatrixRotationQuaternion(&m_matWorld,&q);

  00319	8d 44 24 74	 lea	 eax, DWORD PTR _m_matWorld$7[esp+340]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_math.h

; 758  :             return (float)sqrt(_X);

  0031d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 117  : 						D3DXMatrixRotationQuaternion(&m_matWorld,&q);

  00321	50		 push	 eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00322	f3 0f 5c ca	 subss	 xmm1, xmm2
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterlib\GrpMath.h

; 56   : 	float s = sqrtf((1+d)*2);

  00326	f3 0f 5e c8	 divss	 xmm1, xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 667  :     x = fx;

  0032a	f3 0f 11 4c 24
	4c		 movss	 DWORD PTR _q$4[esp+344], xmm1

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  00330	f3 0f 10 4c 24
	14		 movss	 xmm1, DWORD PTR tv1857[esp+344]
  00336	f3 0f 5c 4c 24
	38		 subss	 xmm1, DWORD PTR tv1945[esp+344]

; 667  :     x = fx;

  0033c	f3 0f 5e c8	 divss	 xmm1, xmm0

; 668  :     y = fy;

  00340	f3 0f 11 4c 24
	50		 movss	 DWORD PTR _q$4[esp+348], xmm1

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  00346	f3 0f 10 4c 24
	2c		 movss	 xmm1, DWORD PTR _Position$1$[esp+344]
  0034c	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@bf800000
  00354	f3 0f 5c d1	 subss	 xmm2, xmm1

; 668  :     y = fy;

  00358	f3 0f 5e d0	 divss	 xmm2, xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterlib\GrpMath.h

; 58   : 	return D3DXQUATERNION(c.x/s,c.y/s,c.z/s,s*0.5f);

  0035c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 669  :     z = fz;

  00364	f3 0f 11 54 24
	54		 movss	 DWORD PTR _q$4[esp+352], xmm2

; 670  :     w = fw;

  0036a	f3 0f 11 44 24
	58		 movss	 DWORD PTR _q$4[esp+356], xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 117  : 						D3DXMatrixRotationQuaternion(&m_matWorld,&q);

  00370	e8 00 00 00 00	 call	 _D3DXMatrixRotationQuaternion@8
  00375	e9 87 01 00 00	 jmp	 $LN12@OnRender
$LN10@OnRender:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  0037a	c7 84 24 e8 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+392], 0
  00385	c7 84 24 e4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+388], 0
  00390	c7 84 24 e0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+384], 0
  0039b	c7 84 24 dc 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+380], 0
  003a6	c7 84 24 d4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+372], 0
  003b1	c7 84 24 d0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+368], 0
  003bc	c7 84 24 cc 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+364], 0
  003c7	c7 84 24 c8 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+360], 0
  003d2	c7 84 24 c0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+352], 0
  003dd	c7 84 24 bc 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+348], 0
  003e8	c7 84 24 b8 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+344], 0
  003f3	c7 84 24 b4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR _matTemp$9[esp+340], 0

; 1517 :     pOut->m[1][0] = pOut->m[1][2] = pOut->m[1][3] =
; 1518 :     pOut->m[2][0] = pOut->m[2][1] = pOut->m[2][3] =
; 1519 :     pOut->m[3][0] = pOut->m[3][1] = pOut->m[3][2] = 0.0f;
; 1520 : 
; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  003fe	c7 84 24 ec 00
	00 00 00 00 80
	3f		 mov	 DWORD PTR _matTemp$9[esp+396], 1065353216 ; 3f800000H
  00409	c7 84 24 d8 00
	00 00 00 00 80
	3f		 mov	 DWORD PTR _matTemp$9[esp+376], 1065353216 ; 3f800000H
  00414	c7 84 24 c4 00
	00 00 00 00 80
	3f		 mov	 DWORD PTR _matTemp$9[esp+356], 1065353216 ; 3f800000H
  0041f	c7 84 24 b0 00
	00 00 00 00 80
	3f		 mov	 DWORD PTR _matTemp$9[esp+336], 1065353216 ; 3f800000H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 98   : 					D3DXMatrixInverse(&matTemp, NULL, &CScreen::GetViewMatrix());

  0042a	e8 00 00 00 00	 call	 ?GetViewMatrix@CGraphicBase@@SAABUD3DXMATRIX@@XZ ; CGraphicBase::GetViewMatrix
  0042f	50		 push	 eax
  00430	6a 00		 push	 0
  00432	8d 84 24 b8 00
	00 00		 lea	 eax, DWORD PTR _matTemp$9[esp+344]
  00439	50		 push	 eax
  0043a	e8 00 00 00 00	 call	 _D3DXMatrixInverse@12

; 99   : 					m_matWorld._11 = matTemp._11;

  0043f	f3 0f 10 84 24
	b0 00 00 00	 movss	 xmm0, DWORD PTR _matTemp$9[esp+336]
  00448	f3 0f 11 44 24
	70		 movss	 DWORD PTR _m_matWorld$7[esp+336], xmm0

; 100  : 					m_matWorld._12 = matTemp._12;

  0044e	f3 0f 10 84 24
	b4 00 00 00	 movss	 xmm0, DWORD PTR _matTemp$9[esp+340]
  00457	f3 0f 11 44 24
	74		 movss	 DWORD PTR _m_matWorld$7[esp+340], xmm0

; 101  : 					m_matWorld._21 = matTemp._21;

  0045d	f3 0f 10 84 24
	c0 00 00 00	 movss	 xmm0, DWORD PTR _matTemp$9[esp+352]
  00466	f3 0f 11 84 24
	80 00 00 00	 movss	 DWORD PTR _m_matWorld$7[esp+352], xmm0

; 102  : 					m_matWorld._22 = matTemp._22;

  0046f	f3 0f 10 84 24
	c4 00 00 00	 movss	 xmm0, DWORD PTR _matTemp$9[esp+356]
  00478	f3 0f 11 84 24
	84 00 00 00	 movss	 DWORD PTR _m_matWorld$7[esp+356], xmm0

; 103  : 				}
; 104  : 				break;

  00481	eb 7e		 jmp	 SHORT $LN12@OnRender
$LN9@OnRender:

; 82   : 		{
; 83   : 			case MESH_BILLBOARD_TYPE_ALL:
; 84   : 				{
; 85   : 					D3DXMATRIX matTemp;
; 86   : 					D3DXMatrixRotationX(&matTemp, 90.0f);

  00483	51		 push	 ecx
  00484	8d 84 24 0c 01
	00 00		 lea	 eax, DWORD PTR _matTemp$13[esp+340]
  0048b	c7 04 24 00 00
	b4 42		 mov	 DWORD PTR [esp], 1119092736 ; 42b40000H
  00492	50		 push	 eax
  00493	e8 00 00 00 00	 call	 _D3DXMatrixRotationX@8

; 87   : 					D3DXMatrixInverse(&m_matWorld, NULL, &CScreen::GetViewMatrix());

  00498	e8 00 00 00 00	 call	 ?GetViewMatrix@CGraphicBase@@SAABUD3DXMATRIX@@XZ ; CGraphicBase::GetViewMatrix
  0049d	50		 push	 eax
  0049e	6a 00		 push	 0
  004a0	8d 44 24 78	 lea	 eax, DWORD PTR _m_matWorld$7[esp+344]
  004a4	50		 push	 eax
  004a5	e8 00 00 00 00	 call	 _D3DXMatrixInverse@12
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  004aa	8d 44 24 70	 lea	 eax, DWORD PTR _m_matWorld$7[esp+336]
  004ae	50		 push	 eax
  004af	8d 84 24 0c 01
	00 00		 lea	 eax, DWORD PTR _matTemp$13[esp+340]
  004b6	50		 push	 eax
  004b7	8d 84 24 b8 00
	00 00		 lea	 eax, DWORD PTR $T10[esp+344]
  004be	50		 push	 eax
  004bf	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 89   : 					m_matWorld = matTemp * m_matWorld;

  004c4	0f 10 84 24 b0
	00 00 00	 movups	 xmm0, XMMWORD PTR $T10[esp+336]
  004cc	0f 11 44 24 70	 movups	 XMMWORD PTR _m_matWorld$7[esp+336], xmm0
  004d1	0f 10 84 24 c0
	00 00 00	 movups	 xmm0, XMMWORD PTR $T10[esp+352]
  004d9	0f 11 84 24 80
	00 00 00	 movups	 XMMWORD PTR _m_matWorld$7[esp+352], xmm0
  004e1	0f 10 84 24 d0
	00 00 00	 movups	 xmm0, XMMWORD PTR $T10[esp+368]
  004e9	0f 11 84 24 90
	00 00 00	 movups	 XMMWORD PTR _m_matWorld$7[esp+368], xmm0
  004f1	0f 10 84 24 e0
	00 00 00	 movups	 xmm0, XMMWORD PTR $T10[esp+384]
  004f9	0f 11 84 24 a0
	00 00 00	 movups	 XMMWORD PTR _m_matWorld$7[esp+384], xmm0
$LN12@OnRender:

; 118  : 					}
; 119  : 				}
; 120  : 				break;
; 121  : 		}
; 122  : 
; 123  : 		if (!m_pMeshScript->isBlendingEnable(i))

  00501	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  00504	56		 push	 esi
  00505	e8 00 00 00 00	 call	 ?isBlendingEnable@CEffectMeshScript@@QAEHK@Z ; CEffectMeshScript::isBlendingEnable
  0050a	85 c0		 test	 eax, eax
  0050c	75 10		 jne	 SHORT $LN13@OnRender

; 124  : 		{
; 125  : 			STATEMANAGER.SetRenderState(D3DRS_ALPHABLENDENABLE, FALSE);

  0050e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00514	50		 push	 eax
  00515	6a 1b		 push	 27			; 0000001bH
  00517	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 126  : 		}

  0051c	eb 4f		 jmp	 SHORT $LN14@OnRender
$LN13@OnRender:

; 127  : 		else
; 128  : 		{
; 129  : 			int iBlendingSrcType = m_pMeshScript->GetBlendingSrcType(i);

  0051e	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  00521	56		 push	 esi
  00522	e8 00 00 00 00	 call	 ?GetBlendingSrcType@CEffectMeshScript@@QAEEK@Z ; CEffectMeshScript::GetBlendingSrcType

; 130  : 			int iBlendingDestType = m_pMeshScript->GetBlendingDestType(i);

  00527	8b 4c 24 28	 mov	 ecx, DWORD PTR _this$GSCopy$1$[esp+336]
  0052b	56		 push	 esi
  0052c	0f b6 f8	 movzx	 edi, al
  0052f	8b 49 24	 mov	 ecx, DWORD PTR [ecx+36]
  00532	e8 00 00 00 00	 call	 ?GetBlendingDestType@CEffectMeshScript@@QAEEK@Z ; CEffectMeshScript::GetBlendingDestType

; 131  : 			STATEMANAGER.SetRenderState(D3DRS_ALPHABLENDENABLE, TRUE);

  00537	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0053d	6a 01		 push	 1
  0053f	6a 1b		 push	 27			; 0000001bH
  00541	0f b6 f0	 movzx	 esi, al
  00544	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 132  : 			STATEMANAGER.SetRenderState(D3DRS_SRCBLEND, iBlendingSrcType);

  00549	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0054f	57		 push	 edi
  00550	6a 13		 push	 19			; 00000013H
  00552	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 133  : 			STATEMANAGER.SetRenderState(D3DRS_DESTBLEND, iBlendingDestType);

  00557	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0055d	56		 push	 esi
  0055e	6a 14		 push	 20			; 00000014H
  00560	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState
  00565	8b 74 24 20	 mov	 esi, DWORD PTR _i$1$[esp+336]
  00569	8b 7c 24 28	 mov	 edi, DWORD PTR _this$GSCopy$1$[esp+336]
$LN14@OnRender:

; 134  : 		}
; 135  : 
; 136  : 		D3DXVECTOR3 Position;
; 137  : 		m_pMeshScript->GetPosition(m_fLocalTime, Position);

  0056d	f3 0f 10 47 0c	 movss	 xmm0, DWORD PTR [edi+12]
  00572	8d 84 24 fc 00
	00 00		 lea	 eax, DWORD PTR _Position$12[esp+336]
  00579	50		 push	 eax
  0057a	51		 push	 ecx
  0057b	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  0057e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00583	e8 00 00 00 00	 call	 ?GetPosition@CEffectElementBase@@QAEXMAAUD3DXVECTOR3@@@Z ; CEffectElementBase::GetPosition

; 138  : 		m_matWorld._41 = Position.x;

  00588	f3 0f 10 84 24
	fc 00 00 00	 movss	 xmm0, DWORD PTR _Position$12[esp+336]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  00591	8d 44 24 70	 lea	 eax, DWORD PTR _m_matWorld$7[esp+336]
  00595	ff 77 04	 push	 DWORD PTR [edi+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 138  : 		m_matWorld._41 = Position.x;

  00598	f3 0f 11 84 24
	a4 00 00 00	 movss	 DWORD PTR _m_matWorld$7[esp+388], xmm0

; 139  : 		m_matWorld._42 = Position.y;

  005a1	f3 0f 10 84 24
	04 01 00 00	 movss	 xmm0, DWORD PTR _Position$12[esp+344]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  005aa	50		 push	 eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 139  : 		m_matWorld._42 = Position.y;

  005ab	f3 0f 11 84 24
	ac 00 00 00	 movss	 DWORD PTR _m_matWorld$7[esp+396], xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  005b4	8d 84 24 b8 00
	00 00		 lea	 eax, DWORD PTR $T8[esp+344]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 140  : 		m_matWorld._43 = Position.z;

  005bb	f3 0f 10 84 24
	0c 01 00 00	 movss	 xmm0, DWORD PTR _Position$12[esp+352]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  005c4	50		 push	 eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 140  : 		m_matWorld._43 = Position.z;

  005c5	f3 0f 11 84 24
	b4 00 00 00	 movss	 DWORD PTR _m_matWorld$7[esp+404], xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 580  :     D3DXMatrixMultiply(&matT, this, &mat);

  005ce	e8 00 00 00 00	 call	 _D3DXMatrixMultiply@12
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 141  : 		m_matWorld = m_matWorld * *mc_pmatLocal;

  005d3	0f 10 84 24 b0
	00 00 00	 movups	 xmm0, XMMWORD PTR $T8[esp+336]

; 142  : 		STATEMANAGER.SetTransform(D3DTS_WORLD, &m_matWorld);

  005db	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  005e1	8d 44 24 70	 lea	 eax, DWORD PTR _m_matWorld$7[esp+336]
  005e5	50		 push	 eax
  005e6	0f 11 44 24 74	 movups	 XMMWORD PTR _m_matWorld$7[esp+340], xmm0
  005eb	68 00 01 00 00	 push	 256			; 00000100H
  005f0	0f 10 84 24 c8
	00 00 00	 movups	 xmm0, XMMWORD PTR $T8[esp+360]
  005f8	0f 11 84 24 88
	00 00 00	 movups	 XMMWORD PTR _m_matWorld$7[esp+360], xmm0
  00600	0f 10 84 24 d8
	00 00 00	 movups	 xmm0, XMMWORD PTR $T8[esp+376]
  00608	0f 11 84 24 98
	00 00 00	 movups	 XMMWORD PTR _m_matWorld$7[esp+376], xmm0
  00610	0f 10 84 24 e8
	00 00 00	 movups	 xmm0, XMMWORD PTR $T8[esp+392]
  00618	0f 11 84 24 a8
	00 00 00	 movups	 XMMWORD PTR _m_matWorld$7[esp+392], xmm0
  00620	e8 00 00 00 00	 call	 ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 920  :     r = fr;

  00625	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 146  : 		if (m_pMeshScript->GetColorOperationType(i, &byType))

  0062c	8d 44 24 13	 lea	 eax, DWORD PTR _byType$1[esp+336]
  00630	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  00633	50		 push	 eax
  00634	56		 push	 esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 920  :     r = fr;

  00635	0f 11 44 24 5c	 movups	 XMMWORD PTR _Color$5[esp+344], xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 146  : 		if (m_pMeshScript->GetColorOperationType(i, &byType))

  0063a	e8 00 00 00 00	 call	 ?GetColorOperationType@CEffectMeshScript@@QAEHKPAE@Z ; CEffectMeshScript::GetColorOperationType
  0063f	85 c0		 test	 eax, eax
  00641	74 15		 je	 SHORT $LN15@OnRender

; 147  : 			STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, byType);

  00643	0f b6 44 24 13	 movzx	 eax, BYTE PTR _byType$1[esp+336]
  00648	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0064e	50		 push	 eax
  0064f	6a 01		 push	 1
  00651	6a 00		 push	 0
  00653	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState
$LN15@OnRender:

; 148  : 		m_pMeshScript->GetColorFactor(i, &Color);

  00658	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  0065b	8d 44 24 54	 lea	 eax, DWORD PTR _Color$5[esp+336]
  0065f	50		 push	 eax
  00660	56		 push	 esi
  00661	e8 00 00 00 00	 call	 ?GetColorFactor@CEffectMeshScript@@QAEHKPAUD3DXCOLOR@@@Z ; CEffectMeshScript::GetColorFactor

; 149  : 
; 150  : 		TTimeEventTableFloat * TableAlpha;
; 151  : 
; 152  : 		float fAlpha = 1.0f;

  00666	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000

; 153  : 		if (m_pMeshScript->GetTimeTableAlphaPointer(i, &TableAlpha) && !TableAlpha->empty())

  0066e	8d 44 24 34	 lea	 eax, DWORD PTR _TableAlpha$2[esp+336]
  00672	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  00675	50		 push	 eax
  00676	56		 push	 esi
  00677	f3 0f 11 44 24
	14		 movss	 DWORD PTR _Color$1$[esp+344], xmm0
  0067d	e8 00 00 00 00	 call	 ?GetTimeTableAlphaPointer@CEffectMeshScript@@QAEHKPAPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; CEffectMeshScript::GetTimeTableAlphaPointer
  00682	85 c0		 test	 eax, eax
  00684	0f 84 bd 00 00
	00		 je	 $LN73@OnRender
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1544 :         return _My_data._Myfirst == _My_data._Mylast;

  0068a	8b 4c 24 34	 mov	 ecx, DWORD PTR _TableAlpha$2[esp+336]
  0068e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00690	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00693	3b c1		 cmp	 eax, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 153  : 		if (m_pMeshScript->GetTimeTableAlphaPointer(i, &TableAlpha) && !TableAlpha->empty())

  00695	0f 84 ac 00 00
	00		 je	 $LN73@OnRender

; 154  : 			GetTimeEventBlendValue(m_fLocalTime,*TableAlpha, &fAlpha);

  0069b	f3 0f 10 4f 0c	 movss	 xmm1, DWORD PTR [edi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  006a0	8d 50 08	 lea	 edx, DWORD PTR [eax+8]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 154  : 			GetTimeEventBlendValue(m_fLocalTime,*TableAlpha, &fAlpha);

  006a3	f3 0f 11 4c 24
	24		 movss	 DWORD PTR _fElapsedTime$[esp+336], xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 123  :         _Ptr += _Off;

  006a9	3b d1		 cmp	 edx, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 235  : 	if(rVector.begin()+1==rVector.end())

  006ab	75 10		 jne	 SHORT $LN69@OnRender

; 236  : 	{
; 237  : 		*pReturnValue = rVector.front().m_Value;

  006ad	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  006b2	f3 0f 11 44 24
	0c		 movss	 DWORD PTR _Color$1$[esp+336], xmm0

; 238  : 		return;

  006b8	e9 8a 00 00 00	 jmp	 $LN73@OnRender
$LN69@OnRender:

; 239  : 	}
; 240  : 
; 241  : 	if (fElapsedTime < rVector.front().m_fTime)

  006bd	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  006c1	0f 2f c1	 comiss	 xmm0, xmm1
  006c4	76 0d		 jbe	 SHORT $LN70@OnRender

; 242  : 	{
; 243  : 		*pReturnValue = rVector.front().m_Value;

  006c6	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  006cb	f3 0f 11 44 24
	0c		 movss	 DWORD PTR _Color$1$[esp+336], xmm0

; 244  : 		return;

  006d1	eb 74		 jmp	 SHORT $LN73@OnRender
$LN70@OnRender:

; 245  : 	}
; 246  : 
; 247  : 	if (fElapsedTime > rVector.back().m_fTime)

  006d3	0f 2f 49 f8	 comiss	 xmm1, DWORD PTR [ecx-8]
  006d7	76 0d		 jbe	 SHORT $LN71@OnRender

; 248  : 	{
; 249  : 		*pReturnValue = rVector.back().m_Value;

  006d9	f3 0f 10 41 fc	 movss	 xmm0, DWORD PTR [ecx-4]
  006de	f3 0f 11 44 24
	0c		 movss	 DWORD PTR _Color$1$[esp+336], xmm0

; 250  : 		return;

  006e4	eb 61		 jmp	 SHORT $LN73@OnRender
$LN71@OnRender:

; 255  : 	std::pair<iterator, iterator> result = std::equal_range(rVector.begin(), rVector.end(), fElapsedTime);

  006e6	8d 54 24 24	 lea	 edx, DWORD PTR _fElapsedTime$[esp+336]
  006ea	52		 push	 edx
  006eb	51		 push	 ecx
  006ec	50		 push	 eax
  006ed	8d 44 24 48	 lea	 eax, DWORD PTR _result$3[esp+348]
  006f1	50		 push	 eax
  006f2	e8 00 00 00 00	 call	 ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 154  :         return _Ptr == _Right._Ptr;

  006f7	8b 44 24 4c	 mov	 eax, DWORD PTR _result$3[esp+352]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 255  : 	std::pair<iterator, iterator> result = std::equal_range(rVector.begin(), rVector.end(), fElapsedTime);

  006fb	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 154  :         return _Ptr == _Right._Ptr;

  006fe	8b 4c 24 40	 mov	 ecx, DWORD PTR _result$3[esp+340]
  00702	3b c1		 cmp	 eax, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 257  : 	if (result.first != result.second)

  00704	74 0d		 je	 SHORT $LN72@OnRender

; 258  : 		*pReturnValue = result.first->m_Value;

  00706	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0070b	f3 0f 11 44 24
	0c		 movss	 DWORD PTR _Color$1$[esp+336], xmm0
  00711	eb 34		 jmp	 SHORT $LN73@OnRender
$LN72@OnRender:

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00713	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 95   :         --_Ptr;

  00717	83 e8 08	 sub	 eax, 8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  0071a	0f 28 d0	 movaps	 xmm2, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 95   :         --_Ptr;

  0071d	89 44 24 3c	 mov	 DWORD PTR _result$3[esp+336], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00721	f3 0f 5c 57 0c	 subss	 xmm2, DWORD PTR [edi+12]
  00726	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  0072a	f3 0f 5e d0	 divss	 xmm2, xmm0

; 263  : 		*pReturnValue = T((result.first->m_Value-result.second->m_Value)*Head+(result.second->m_Value));

  0072e	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00733	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00738	f3 0f 59 d0	 mulss	 xmm2, xmm0
  0073c	f3 0f 58 51 04	 addss	 xmm2, DWORD PTR [ecx+4]
  00741	f3 0f 11 54 24
	0c		 movss	 DWORD PTR _Color$1$[esp+336], xmm2
$LN73@OnRender:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 157  : 		CEffectMesh::TEffectMeshData * pMeshData = pEffectMesh->GetMeshDataPointer(i);

  00747	8b 4c 24 2c	 mov	 ecx, DWORD PTR _pEffectMesh$1$[esp+336]
  0074b	56		 push	 esi
  0074c	e8 00 00 00 00	 call	 ?GetMeshDataPointer@CEffectMesh@@QAEPAUSEffectMeshData@1@K@Z ; CEffectMesh::GetMeshDataPointer

; 158  : 
; 159  : 		assert(m_MeshFrameController.GetCurrentFrame() < pMeshData->EffectFrameDataVector.size());
; 160  : 		CEffectMesh::TEffectFrameData & rFrameData = pMeshData->EffectFrameDataVector[m_MeshFrameController.GetCurrentFrame()];

  00751	8d 4f 2c	 lea	 ecx, DWORD PTR [edi+44]
  00754	8b f0		 mov	 esi, eax
  00756	e8 00 00 00 00	 call	 ?GetCurrentFrame@CFrameController@@QAEEXZ ; CFrameController::GetCurrentFrame

; 162  : 		DWORD dwcurTextureFrame = rTextureFrameController.GetCurrentFrame();

  0075b	8b 4c 24 14	 mov	 ecx, DWORD PTR _rTextureFrameController$1$[esp+336]
  0075f	0f b6 c0	 movzx	 eax, al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  00762	c1 e0 05	 shl	 eax, 5
  00765	03 86 a0 00 00
	00		 add	 eax, DWORD PTR [esi+160]
  0076b	89 44 24 1c	 mov	 DWORD PTR _rFrameData$1$[esp+336], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 162  : 		DWORD dwcurTextureFrame = rTextureFrameController.GetCurrentFrame();

  0076f	e8 00 00 00 00	 call	 ?GetCurrentFrame@CFrameController@@QAEEXZ ; CFrameController::GetCurrentFrame
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00774	8b 74 24 38	 mov	 esi, DWORD PTR tv1958[esp+336]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 162  : 		DWORD dwcurTextureFrame = rTextureFrameController.GetCurrentFrame();

  00778	0f b6 c8	 movzx	 ecx, al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1548 :         auto& _My_data = _Mypair._Myval2;

  0077b	8b 47 50	 mov	 eax, DWORD PTR [edi+80]

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0077e	8b 54 06 24	 mov	 edx, DWORD PTR [esi+eax+36]
  00782	8b 44 06 28	 mov	 eax, DWORD PTR [esi+eax+40]
  00786	2b c2		 sub	 eax, edx
  00788	c1 f8 02	 sar	 eax, 2
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 163  : 		if (dwcurTextureFrame < m_TextureInstanceVector[i].TextureInstanceVector.size())

  0078b	3b c8		 cmp	 ecx, eax
  0078d	73 1d		 jae	 SHORT $LN17@OnRender

; 164  : 		{
; 165  : 			CGraphicImageInstance * pImageInstance = m_TextureInstanceVector[i].TextureInstanceVector[dwcurTextureFrame];
; 166  : 			STATEMANAGER.SetTexture(0, pImageInstance->GetTexturePointer()->GetD3DTexture());

  0078f	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]
  00792	e8 00 00 00 00	 call	 ?GetTexturePointer@CGraphicImageInstance@@QAEPAVCGraphicTexture@@XZ ; CGraphicImageInstance::GetTexturePointer
  00797	8b c8		 mov	 ecx, eax
  00799	e8 00 00 00 00	 call	 ?GetD3DTexture@CGraphicTexture@@QBEPAUIDirect3DTexture8@@XZ ; CGraphicTexture::GetD3DTexture
  0079e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  007a4	50		 push	 eax
  007a5	6a 00		 push	 0
  007a7	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture
$LN17@OnRender:

; 169  : 		Color.a = fAlpha * rFrameData.fVisibility;

  007ac	8b 44 24 1c	 mov	 eax, DWORD PTR _rFrameData$1$[esp+336]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 931  :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  007b0	0f 57 c9	 xorps	 xmm1, xmm1
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 169  : 		Color.a = fAlpha * rFrameData.fVisibility;

  007b3	f3 0f 10 44 24
	0c		 movss	 xmm0, DWORD PTR _Color$1$[esp+336]
  007b9	f3 0f 59 40 04	 mulss	 xmm0, DWORD PTR [eax+4]
  007be	f3 0f 11 44 24
	0c		 movss	 DWORD PTR _Color$1$[esp+336], xmm0
  007c4	f3 0f 11 44 24
	60		 movss	 DWORD PTR _Color$5[esp+348], xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 931  :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  007ca	f3 0f 10 44 24
	54		 movss	 xmm0, DWORD PTR _Color$5[esp+336]
  007d0	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  007d7	72 0a		 jb	 SHORT $LN135@OnRender
  007d9	c7 44 24 18 ff
	00 00 00	 mov	 DWORD PTR _dwR$1$[esp+336], 255 ; 000000ffH
  007e1	eb 2b		 jmp	 SHORT $LN134@OnRender
$LN135@OnRender:
  007e3	0f 2f c8	 comiss	 xmm1, xmm0
  007e6	72 0a		 jb	 SHORT $LN133@OnRender
  007e8	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR _dwR$1$[esp+336], 0
  007f0	eb 1c		 jmp	 SHORT $LN134@OnRender
$LN133@OnRender:
  007f2	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  007fa	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00802	e8 00 00 00 00	 call	 __ftoui3
  00807	89 44 24 18	 mov	 DWORD PTR _dwR$1$[esp+336], eax
  0080b	0f 57 c9	 xorps	 xmm1, xmm1
$LN134@OnRender:

; 932  :     DWORD dwG = g >= 1.0f ? 0xff : g <= 0.0f ? 0x00 : (DWORD) (g * 255.0f + 0.5f);

  0080e	f3 0f 10 44 24
	58		 movss	 xmm0, DWORD PTR _Color$5[esp+340]
  00814	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  0081b	72 0a		 jb	 SHORT $LN139@OnRender
  0081d	c7 44 24 14 ff
	00 00 00	 mov	 DWORD PTR _dwG$1$[esp+336], 255 ; 000000ffH
  00825	eb 28		 jmp	 SHORT $LN138@OnRender
$LN139@OnRender:
  00827	0f 2f c8	 comiss	 xmm1, xmm0
  0082a	72 0a		 jb	 SHORT $LN137@OnRender
  0082c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR _dwG$1$[esp+336], 0
  00834	eb 19		 jmp	 SHORT $LN138@OnRender
$LN137@OnRender:
  00836	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  0083e	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00846	e8 00 00 00 00	 call	 __ftoui3
  0084b	89 44 24 14	 mov	 DWORD PTR _dwG$1$[esp+336], eax
$LN138@OnRender:

; 933  :     DWORD dwB = b >= 1.0f ? 0xff : b <= 0.0f ? 0x00 : (DWORD) (b * 255.0f + 0.5f);

  0084f	f3 0f 10 44 24
	5c		 movss	 xmm0, DWORD PTR _Color$5[esp+344]
  00855	0f 57 c9	 xorps	 xmm1, xmm1
  00858	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  0085f	72 07		 jb	 SHORT $LN143@OnRender
  00861	be ff 00 00 00	 mov	 esi, 255		; 000000ffH
  00866	eb 23		 jmp	 SHORT $LN142@OnRender
$LN143@OnRender:
  00868	0f 2f c8	 comiss	 xmm1, xmm0
  0086b	72 04		 jb	 SHORT $LN141@OnRender
  0086d	33 f6		 xor	 esi, esi
  0086f	eb 1a		 jmp	 SHORT $LN142@OnRender
$LN141@OnRender:
  00871	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00879	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00881	e8 00 00 00 00	 call	 __ftoui3
  00886	8b f0		 mov	 esi, eax
  00888	0f 57 c9	 xorps	 xmm1, xmm1
$LN142@OnRender:

; 934  :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  0088b	f3 0f 10 44 24
	0c		 movss	 xmm0, DWORD PTR _Color$1$[esp+336]
  00891	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00898	72 07		 jb	 SHORT $LN147@OnRender
  0089a	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  0089f	eb 1e		 jmp	 SHORT $LN146@OnRender
$LN147@OnRender:
  008a1	0f 2f c8	 comiss	 xmm1, xmm0
  008a4	72 04		 jb	 SHORT $LN145@OnRender
  008a6	33 c0		 xor	 eax, eax
  008a8	eb 15		 jmp	 SHORT $LN146@OnRender
$LN145@OnRender:
  008aa	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  008b2	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  008ba	e8 00 00 00 00	 call	 __ftoui3
$LN146@OnRender:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 170  : 		STATEMANAGER.SetRenderState(D3DRS_TEXTUREFACTOR, DWORD(Color));

  008bf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  008c5	c1 e0 08	 shl	 eax, 8
  008c8	0b 44 24 18	 or	 eax, DWORD PTR _dwR$1$[esp+336]
  008cc	c1 e0 08	 shl	 eax, 8
  008cf	0b 44 24 14	 or	 eax, DWORD PTR _dwG$1$[esp+336]
  008d3	c1 e0 08	 shl	 eax, 8
  008d6	0b c6		 or	 eax, esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 170  : 		STATEMANAGER.SetRenderState(D3DRS_TEXTUREFACTOR, DWORD(Color));

  008d8	50		 push	 eax
  008d9	6a 3c		 push	 60			; 0000003cH
  008db	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 171  : 		STATEMANAGER.SetVertexShader(D3DFVF_XYZ | D3DFVF_TEX1);

  008e0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  008e6	68 02 01 00 00	 push	 258			; 00000102H
  008eb	e8 00 00 00 00	 call	 ?SetVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SetVertexShader

; 172  : 		STATEMANAGER.DrawPrimitiveUP(D3DPT_TRIANGLELIST,

  008f0	8b 4c 24 1c	 mov	 ecx, DWORD PTR _rFrameData$1$[esp+336]
  008f4	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  008f9	6a 14		 push	 20			; 00000014H
  008fb	f7 61 10	 mul	 DWORD PTR [ecx+16]
  008fe	ff 71 14	 push	 DWORD PTR [ecx+20]
  00901	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00907	d1 ea		 shr	 edx, 1
  00909	52		 push	 edx
  0090a	6a 04		 push	 4
  0090c	e8 00 00 00 00	 call	 ?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z ; CStateManager::DrawPrimitiveUP
  00911	8b 74 24 20	 mov	 esi, DWORD PTR _i$1$[esp+336]
$LN2@OnRender:

; 67   : 
; 68   : 	for (DWORD i = 0; i < pEffectMesh->GetMeshCount(); ++i)

  00915	8b 4c 24 2c	 mov	 ecx, DWORD PTR _pEffectMesh$1$[esp+336]
  00919	46		 inc	 esi
  0091a	89 74 24 20	 mov	 DWORD PTR _i$1$[esp+336], esi
  0091e	e8 00 00 00 00	 call	 ?GetMeshCount@CEffectMesh@@QAEKXZ ; CEffectMesh::GetMeshCount
  00923	8d 57 2c	 lea	 edx, DWORD PTR [edi+44]
  00926	3b f0		 cmp	 esi, eax
  00928	0f 82 22 f7 ff
	ff		 jb	 $LL4@OnRender
$LN3@OnRender:

; 173  : 									 rFrameData.dwIndexCount/3,
; 174  : 									 &rFrameData.PDTVertexVector[0],
; 175  : 									 sizeof(TPTVertex));
; 176  : 		// Render //
; 177  : 	}
; 178  : }

  0092e	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+336]
  00935	5f		 pop	 edi
  00936	5e		 pop	 esi
  00937	33 cc		 xor	 ecx, esp
  00939	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0093e	8b e5		 mov	 esp, ebp
  00940	5d		 pop	 ebp
  00941	c3		 ret	 0
?OnRender@CEffectMeshInstance@@MAEXXZ ENDP		; CEffectMeshInstance::OnRender
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ?OnUpdate@CEffectMeshInstance@@MAE_NM@Z
_TEXT	SEGMENT
_j$1$ = -4						; size = 4
_fElapsedTime$ = 8					; size = 4
?OnUpdate@CEffectMeshInstance@@MAE_NM@Z PROC		; CEffectMeshInstance::OnUpdate, COMDAT
; _this$ = ecx

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 45   : 	if (!isActive())

  00007	e8 00 00 00 00	 call	 ?isActive@CEffectMeshInstance@@IAEHXZ ; CEffectMeshInstance::isActive
  0000c	85 c0		 test	 eax, eax
  0000e	75 09		 jne	 SHORT $LN5@OnUpdate

; 46   : 		return false;

  00010	32 c0		 xor	 al, al
  00012	5e		 pop	 esi

; 59   : }

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
$LN5@OnUpdate:
  00019	53		 push	 ebx

; 47   : 
; 48   : 	if (m_MeshFrameController.isActive())

  0001a	6a 00		 push	 0
  0001c	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  0001f	e8 00 00 00 00	 call	 ?isActive@CFrameController@@QAEHK@Z ; CFrameController::isActive
  00024	85 c0		 test	 eax, eax
  00026	74 13		 je	 SHORT $LN6@OnUpdate

; 49   : 		m_MeshFrameController.Update(fElapsedTime);

  00028	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  0002d	51		 push	 ecx
  0002e	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  00031	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00036	e8 00 00 00 00	 call	 ?Update@CFrameController@@QAEXM@Z ; CFrameController::Update
$LN6@OnUpdate:

; 51   : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  0003b	33 c9		 xor	 ecx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0003d	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 51   : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  00042	89 4d fc	 mov	 DWORD PTR _j$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00045	8b 4e 54	 mov	 ecx, DWORD PTR [esi+84]
  00048	2b 4e 50	 sub	 ecx, DWORD PTR [esi+80]
  0004b	f7 e9		 imul	 ecx
  0004d	c1 fa 03	 sar	 edx, 3
  00050	8b c2		 mov	 eax, edx
  00052	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00055	03 c2		 add	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 51   : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  00057	74 59		 je	 SHORT $LN3@OnUpdate
  00059	57		 push	 edi
  0005a	33 ff		 xor	 edi, edi
  0005c	0f 1f 40 00	 npad	 4
$LL4@OnUpdate:

; 53   : 		int iCurrentFrame = m_MeshFrameController.GetCurrentFrame();

  00060	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  00063	e8 00 00 00 00	 call	 ?GetCurrentFrame@CFrameController@@QAEEXZ ; CFrameController::GetCurrentFrame
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  00068	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 53   : 		int iCurrentFrame = m_MeshFrameController.GetCurrentFrame();

  0006b	0f b6 c0	 movzx	 eax, al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  0006e	03 cf		 add	 ecx, edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 54   : 		if (m_TextureInstanceVector[j].TextureFrameController.isActive(iCurrentFrame))

  00070	50		 push	 eax
  00071	e8 00 00 00 00	 call	 ?isActive@CFrameController@@QAEHK@Z ; CFrameController::isActive
  00076	85 c0		 test	 eax, eax
  00078	74 15		 je	 SHORT $LN2@OnUpdate

; 55   : 			m_TextureInstanceVector[j].TextureFrameController.Update(fElapsedTime);

  0007a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  0007f	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  00080	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  00083	03 cf		 add	 ecx, edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 55   : 			m_TextureInstanceVector[j].TextureFrameController.Update(fElapsedTime);

  00085	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008a	e8 00 00 00 00	 call	 ?Update@CFrameController@@QAEXM@Z ; CFrameController::Update
$LN2@OnUpdate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0008f	8b 4e 54	 mov	 ecx, DWORD PTR [esi+84]
  00092	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00097	2b 4e 50	 sub	 ecx, DWORD PTR [esi+80]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 51   : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  0009a	83 c7 30	 add	 edi, 48			; 00000030H
  0009d	ff 45 fc	 inc	 DWORD PTR _j$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000a0	f7 e9		 imul	 ecx
  000a2	c1 fa 03	 sar	 edx, 3
  000a5	8b c2		 mov	 eax, edx
  000a7	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000aa	03 c2		 add	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 51   : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  000ac	39 45 fc	 cmp	 DWORD PTR _j$1$[ebp], eax
  000af	72 af		 jb	 SHORT $LL4@OnUpdate
  000b1	5f		 pop	 edi
$LN3@OnUpdate:

; 56   : 	}
; 57   : 
; 58   : 	return true;

  000b2	5b		 pop	 ebx
  000b3	b0 01		 mov	 al, 1
  000b5	5e		 pop	 esi

; 59   : }

  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 04 00	 ret	 4
?OnUpdate@CEffectMeshInstance@@MAE_NM@Z ENDP		; CEffectMeshInstance::OnUpdate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterlib\Ref.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ?OnDestroy@CEffectMeshInstance@@MAEXXZ
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
?OnDestroy@CEffectMeshInstance@@MAEXXZ PROC		; CEffectMeshInstance::OnDestroy, COMDAT
; _this$ = ecx

; 257  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b c1		 mov	 eax, ecx
  00006	53		 push	 ebx
  00007	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1485 :         auto& _My_data = _Mypair._Myval2;

  00008	8b 70 50	 mov	 esi, DWORD PTR [eax+80]

; 1476 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  0000b	8d 58 50	 lea	 ebx, DWORD PTR [eax+80]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 257  : {

  0000e	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000f	8b 78 54	 mov	 edi, DWORD PTR [eax+84]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 257  : {

  00012	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00015	3b f7		 cmp	 esi, edi
  00017	74 17		 je	 SHORT $LN17@OnDestroy
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL18@OnDestroy:

; 271  :         _Func(*_UFirst);

  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ?CEffectMeshInstance_DeleteTextureInstance@@YAXAAUSTextureInstance@CEffectMeshInstance@@@Z ; CEffectMeshInstance_DeleteTextureInstance
  00026	83 c6 30	 add	 esi, 48			; 00000030H
  00029	83 c4 04	 add	 esp, 4
  0002c	3b f7		 cmp	 esi, edi
  0002e	75 f0		 jne	 SHORT $LL18@OnDestroy
$LN17@OnDestroy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  00030	53		 push	 ebx
  00031	ff 73 04	 push	 DWORD PTR [ebx+4]
  00034	ff 33		 push	 DWORD PTR [ebx]
  00036	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >

; 1456 :         _Mylast = _Myfirst;

  0003b	8b 03		 mov	 eax, DWORD PTR [ebx]

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1456 :         _Mylast = _Myfirst;

  00040	89 43 04	 mov	 DWORD PTR [ebx+4], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterlib\Ref.h

; 67   : 			CReferenceObject* pOldObject = m_pObject;

  00043	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]

; 68   : 
; 69   : 			m_pObject = pObject;

  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	8b 48 5c	 mov	 ecx, DWORD PTR [eax+92]
  0004b	c7 40 5c 00 00
	00 00		 mov	 DWORD PTR [eax+92], 0
  00052	5b		 pop	 ebx

; 70   : 
; 71   : 			if (m_pObject)
; 72   : 				m_pObject->AddReference();
; 73   : 
; 74   : 			if (pOldObject)

  00053	85 c9		 test	 ecx, ecx
  00055	74 05		 je	 SHORT $LN26@OnDestroy

; 75   : 				pOldObject->Release();

  00057	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN26@OnDestroy:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 261  : }

  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?OnDestroy@CEffectMeshInstance@@MAEXXZ ENDP		; CEffectMeshInstance::OnDestroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ?OnInitialize@CEffectMeshInstance@@MAEXXZ
_TEXT	SEGMENT
?OnInitialize@CEffectMeshInstance@@MAEXXZ PROC		; CEffectMeshInstance::OnInitialize, COMDAT
; _this$ = ecx

; 254  : }

  00000	c2 00 00	 ret	 0
?OnInitialize@CEffectMeshInstance@@MAEXXZ ENDP		; CEffectMeshInstance::OnInitialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterlib\Ref.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z
_TEXT	SEGMENT
$T2 = -40						; size = 4
_pTextureVector$1$ = -36				; size = 4
_pImage$1$ = -32					; size = 4
$T3 = -28						; size = 4
_pkNewData$4 = -28					; size = 4
_pImageInstance$5 = -28					; size = 4
tv875 = -24						; size = 4
$T6 = -24						; size = 1
_j$1$ = -20						; size = 4
_this$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pMeshData$7 = 8					; size = 4
_pElement$ = 8						; size = 4
?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z PROC ; CEffectMeshInstance::OnSetDataPointer, COMDAT
; _this$ = ecx

; 181  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$1$[ebp], ebx

; 182  : 	CEffectMeshScript * pMesh = (CEffectMeshScript *)pElement;
; 183  : 	m_pMeshScript = pMesh;

  0002d	8b 7d 08	 mov	 edi, DWORD PTR _pElement$[ebp]

; 184  : 
; 185  : 	const char * c_szMeshFileName = pMesh->GetMeshFileName();

  00030	8b cf		 mov	 ecx, edi
  00032	89 7b 24	 mov	 DWORD PTR [ebx+36], edi
  00035	e8 00 00 00 00	 call	 ?GetMeshFileName@CEffectMeshScript@@QAEPBDXZ ; CEffectMeshScript::GetMeshFileName

; 186  : 
; 187  : 	m_pEffectMesh = (CEffectMesh *) CResourceManager::Instance().GetResourcePointer(c_szMeshFileName);

  0003a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00046	89 43 28	 mov	 DWORD PTR [ebx+40], eax

; 188  : 
; 189  : 	if (!m_pEffectMesh)

  00049	85 c0		 test	 eax, eax
  0004b	0f 84 e7 02 00
	00		 je	 $LN102@OnSetDataP
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterlib\Ref.h

; 67   : 			CReferenceObject* pOldObject = m_pObject;

  00051	8b 73 5c	 mov	 esi, DWORD PTR [ebx+92]

; 68   : 
; 69   : 			m_pObject = pObject;
; 70   : 
; 71   : 			if (m_pObject)
; 72   : 				m_pObject->AddReference();

  00054	8b c8		 mov	 ecx, eax
  00056	89 43 5c	 mov	 DWORD PTR [ebx+92], eax
  00059	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference

; 73   : 
; 74   : 			if (pOldObject)

  0005e	85 f6		 test	 esi, esi
  00060	74 07		 je	 SHORT $LN15@OnSetDataP

; 75   : 				pOldObject->Release();

  00062	8b ce		 mov	 ecx, esi
  00064	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release
$LN15@OnSetDataP:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 194  : 	m_MeshFrameController.Clear();

  00069	8d 4b 2c	 lea	 ecx, DWORD PTR [ebx+44]
  0006c	e8 00 00 00 00	 call	 ?Clear@CFrameController@@QAEXXZ ; CFrameController::Clear

; 195  : 	m_MeshFrameController.SetMaxFrame(m_roMesh.GetPointer()->GetFrameCount());

  00071	8b 4b 5c	 mov	 ecx, DWORD PTR [ebx+92]
  00074	e8 00 00 00 00	 call	 ?GetFrameCount@CEffectMesh@@QAEKXZ ; CEffectMesh::GetFrameCount
  00079	50		 push	 eax
  0007a	8d 4b 2c	 lea	 ecx, DWORD PTR [ebx+44]
  0007d	e8 00 00 00 00	 call	 ?SetMaxFrame@CFrameController@@QAEXK@Z ; CFrameController::SetMaxFrame

; 196  : 	m_MeshFrameController.SetFrameTime(pMesh->GetMeshAnimationFrameDelay());

  00082	8b cf		 mov	 ecx, edi
  00084	e8 00 00 00 00	 call	 ?GetMeshAnimationFrameDelay@CEffectMeshScript@@QAEMXZ ; CEffectMeshScript::GetMeshAnimationFrameDelay
  00089	51		 push	 ecx
  0008a	8d 4b 2c	 lea	 ecx, DWORD PTR [ebx+44]
  0008d	d9 1c 24	 fstp	 DWORD PTR [esp]
  00090	e8 00 00 00 00	 call	 ?SetFrameTime@CFrameController@@QAEXM@Z ; CFrameController::SetFrameTime

; 197  : 	m_MeshFrameController.SetLoopFlag(pMesh->isMeshAnimationLoop());

  00095	8b cf		 mov	 ecx, edi
  00097	e8 00 00 00 00	 call	 ?isMeshAnimationLoop@CEffectMeshScript@@QAEHXZ ; CEffectMeshScript::isMeshAnimationLoop
  0009c	50		 push	 eax
  0009d	8d 4b 2c	 lea	 ecx, DWORD PTR [ebx+44]
  000a0	e8 00 00 00 00	 call	 ?SetLoopFlag@CFrameController@@QAEXH@Z ; CFrameController::SetLoopFlag

; 198  : 	m_MeshFrameController.SetLoopCount(pMesh->GetMeshAnimationLoopCount());

  000a5	8b cf		 mov	 ecx, edi
  000a7	e8 00 00 00 00	 call	 ?GetMeshAnimationLoopCount@CEffectMeshScript@@QAEHXZ ; CEffectMeshScript::GetMeshAnimationLoopCount
  000ac	50		 push	 eax
  000ad	8d 4b 2c	 lea	 ecx, DWORD PTR [ebx+44]
  000b0	e8 00 00 00 00	 call	 ?SetLoopCount@CFrameController@@QAEXH@Z ; CFrameController::SetLoopCount

; 199  : 	m_MeshFrameController.SetStartFrame(0);

  000b5	6a 00		 push	 0
  000b7	8d 4b 2c	 lea	 ecx, DWORD PTR [ebx+44]
  000ba	e8 00 00 00 00	 call	 ?SetStartFrame@CFrameController@@QAEXK@Z ; CFrameController::SetStartFrame

; 200  : 
; 201  : 	m_TextureInstanceVector.clear();

  000bf	83 c3 50	 add	 ebx, 80			; 00000050H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  000c2	53		 push	 ebx
  000c3	ff 73 04	 push	 DWORD PTR [ebx+4]
  000c6	ff 33		 push	 DWORD PTR [ebx]
  000c8	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >

; 1456 :         _Mylast = _Myfirst;

  000cd	8b 03		 mov	 eax, DWORD PTR [ebx]

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  000cf	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1456 :         _Mylast = _Myfirst;

  000d2	89 43 04	 mov	 DWORD PTR [ebx+4], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 202  : 	m_TextureInstanceVector.resize(m_pEffectMesh->GetMeshCount());

  000d5	8b 45 f0	 mov	 eax, DWORD PTR _this$1$[ebp]
  000d8	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  000db	e8 00 00 00 00	 call	 ?GetMeshCount@CEffectMesh@@QAEKXZ ; CEffectMesh::GetMeshCount
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1263 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  000e0	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 202  : 	m_TextureInstanceVector.resize(m_pEffectMesh->GetMeshCount());

  000e3	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1263 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  000e5	2b 0b		 sub	 ecx, DWORD PTR [ebx]
  000e7	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  000ec	f7 e9		 imul	 ecx
  000ee	c1 fa 03	 sar	 edx, 3
  000f1	8b fa		 mov	 edi, edx
  000f3	c1 ef 1f	 shr	 edi, 31			; 0000001fH
  000f6	03 fa		 add	 edi, edx

; 1264 :         if (_Newsize < _Oldsize) { // trim

  000f8	3b f7		 cmp	 esi, edi
  000fa	73 1b		 jae	 SHORT $LN24@OnSetDataP

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  000fc	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]

; 1265 :             const pointer _Newlast = _Myfirst + _Newsize;

  000ff	8d 34 76	 lea	 esi, DWORD PTR [esi+esi*2]

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  00102	53		 push	 ebx

; 1265 :             const pointer _Newlast = _Myfirst + _Newsize;

  00103	c1 e6 04	 shl	 esi, 4
  00106	03 33		 add	 esi, DWORD PTR [ebx]

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  00108	50		 push	 eax
  00109	56		 push	 esi
  0010a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@YAXPAUSTextureInstance@CEffectMeshInstance@@QAU12@AAV?$allocator@USTextureInstance@CEffectMeshInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CEffectMeshInstance::STextureInstance> >
  0010f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1268 :             _Mylast = _Newlast;

  00112	89 73 04	 mov	 DWORD PTR [ebx+4], esi

; 1269 :             return;

  00115	eb 3c		 jmp	 SHORT $LN25@OnSetDataP
$LN24@OnSetDataP:

; 1270 :         }
; 1271 : 
; 1272 :         if (_Newsize > _Oldsize) { // append

  00117	76 3a		 jbe	 SHORT $LN25@OnSetDataP

; 1273 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  00119	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0011c	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00121	2b 0b		 sub	 ecx, DWORD PTR [ebx]
  00123	f7 e9		 imul	 ecx

; 1274 :             if (_Newsize > _Oldcapacity) { // reallocate

  00125	8b cb		 mov	 ecx, ebx
  00127	c1 fa 03	 sar	 edx, 3
  0012a	8b c2		 mov	 eax, edx
  0012c	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0012f	03 c2		 add	 eax, edx
  00131	3b f0		 cmp	 esi, eax
  00133	76 0c		 jbe	 SHORT $LN26@OnSetDataP

; 1275 :                 _Resize_reallocate(_Newsize, _Val);

  00135	8d 45 e8	 lea	 eax, DWORD PTR $T6[ebp]
  00138	50		 push	 eax
  00139	56		 push	 esi
  0013a	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Resize_reallocate<std::_Value_init_tag>

; 1276 :                 return;

  0013f	eb 12		 jmp	 SHORT $LN25@OnSetDataP
$LN26@OnSetDataP:

; 1277 :             }
; 1278 : 
; 1279 :             const pointer _Oldlast = _Mylast;
; 1280 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  00141	ff 75 e8	 push	 DWORD PTR $T6[ebp]
  00144	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00147	2b f7		 sub	 esi, edi
  00149	56		 push	 esi
  0014a	50		 push	 eax
  0014b	e8 00 00 00 00	 call	 ?_Ufill@?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@AAEPAUSTextureInstance@CEffectMeshInstance@@PAU34@IU_Value_init_tag@2@@Z ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::_Ufill
  00150	89 43 04	 mov	 DWORD PTR [ebx+4], eax
$LN25@OnSetDataP:

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00153	8b 75 f0	 mov	 esi, DWORD PTR _this$1$[ebp]
  00156	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 203  : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  0015b	33 db		 xor	 ebx, ebx
  0015d	89 5d ec	 mov	 DWORD PTR _j$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00160	8b 4e 54	 mov	 ecx, DWORD PTR [esi+84]
  00163	2b 4e 50	 sub	 ecx, DWORD PTR [esi+80]
  00166	f7 e9		 imul	 ecx
  00168	c1 fa 03	 sar	 edx, 3
  0016b	8b c2		 mov	 eax, edx
  0016d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00170	03 c2		 add	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 203  : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  00172	0f 84 c0 01 00
	00		 je	 $LN102@OnSetDataP
  00178	89 5d e8	 mov	 DWORD PTR tv875[ebp], ebx
  0017b	0f 1f 44 00 00	 npad	 5
$LL4@OnSetDataP:

; 204  : 	{
; 205  : 		CEffectMeshScript::TMeshData * pMeshData;
; 206  : 		if (!m_pMeshScript->GetMeshDataPointer(j, &pMeshData))

  00180	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00183	8d 45 08	 lea	 eax, DWORD PTR _pMeshData$7[ebp]
  00186	50		 push	 eax
  00187	53		 push	 ebx
  00188	e8 00 00 00 00	 call	 ?GetMeshDataPointer@CEffectMeshScript@@QAE_NKPAPAUSMeshData@1@@Z ; CEffectMeshScript::GetMeshDataPointer
  0018d	84 c0		 test	 al, al
  0018f	0f 84 7c 01 00
	00		 je	 $LN2@OnSetDataP

; 207  : 			continue;
; 208  : 
; 209  : 		CEffectMesh* pkEftMesh=m_roMesh.GetPointer();

  00195	8b 4e 5c	 mov	 ecx, DWORD PTR [esi+92]

; 210  : 
; 211  : 		if (!pkEftMesh)

  00198	85 c9		 test	 ecx, ecx
  0019a	0f 84 71 01 00
	00		 je	 $LN2@OnSetDataP

; 212  : 			continue;
; 213  : 
; 214  : 		std::vector<CGraphicImage*>* pTextureVector = pkEftMesh->GetTextureVectorPointer(j);

  001a0	53		 push	 ebx
  001a1	e8 00 00 00 00	 call	 ?GetTextureVectorPointer@CEffectMesh@@QAEPAV?$vector@PAVCGraphicImage@@V?$allocator@PAVCGraphicImage@@@std@@@std@@K@Z ; CEffectMesh::GetTextureVectorPointer
  001a6	8b f8		 mov	 edi, eax
  001a8	89 7d dc	 mov	 DWORD PTR _pTextureVector$1$[ebp], edi

; 215  : 		if (!pTextureVector)

  001ab	85 ff		 test	 edi, edi
  001ad	0f 84 5e 01 00
	00		 je	 $LN2@OnSetDataP
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  001b3	8b 76 50	 mov	 esi, DWORD PTR [esi+80]
  001b6	8b 5d e8	 mov	 ebx, DWORD PTR tv875[ebp]
  001b9	03 f3		 add	 esi, ebx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 221  : 		rFrameController.Clear();

  001bb	8b ce		 mov	 ecx, esi
  001bd	e8 00 00 00 00	 call	 ?Clear@CFrameController@@QAEXXZ ; CFrameController::Clear
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  001c2	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 222  : 		rFrameController.SetMaxFrame(rTextureVector.size());

  001c5	8b ce		 mov	 ecx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  001c7	2b 07		 sub	 eax, DWORD PTR [edi]
  001c9	c1 f8 02	 sar	 eax, 2
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 222  : 		rFrameController.SetMaxFrame(rTextureVector.size());

  001cc	50		 push	 eax
  001cd	e8 00 00 00 00	 call	 ?SetMaxFrame@CFrameController@@QAEXK@Z ; CFrameController::SetMaxFrame

; 223  : 		rFrameController.SetFrameTime(pMeshData->fTextureAnimationFrameDelay);

  001d2	8b 45 08	 mov	 eax, DWORD PTR _pMeshData$7[ebp]
  001d5	51		 push	 ecx
  001d6	8b ce		 mov	 ecx, esi
  001d8	f3 0f 10 40 28	 movss	 xmm0, DWORD PTR [eax+40]
  001dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e2	e8 00 00 00 00	 call	 ?SetFrameTime@CFrameController@@QAEXM@Z ; CFrameController::SetFrameTime

; 224  : 		rFrameController.SetLoopFlag(pMeshData->bTextureAnimationLoopEnable);

  001e7	8b 45 08	 mov	 eax, DWORD PTR _pMeshData$7[ebp]
  001ea	8b ce		 mov	 ecx, esi
  001ec	ff 70 24	 push	 DWORD PTR [eax+36]
  001ef	e8 00 00 00 00	 call	 ?SetLoopFlag@CFrameController@@QAEXH@Z ; CFrameController::SetLoopFlag

; 225  : 		rFrameController.SetStartFrame(pMeshData->dwTextureAnimationStartFrame);

  001f4	8b 45 08	 mov	 eax, DWORD PTR _pMeshData$7[ebp]
  001f7	8b ce		 mov	 ecx, esi
  001f9	ff 70 2c	 push	 DWORD PTR [eax+44]
  001fc	e8 00 00 00 00	 call	 ?SetStartFrame@CFrameController@@QAEXK@Z ; CFrameController::SetStartFrame
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  00201	8b 45 f0	 mov	 eax, DWORD PTR _this$1$[ebp]
  00204	8b 40 50	 mov	 eax, DWORD PTR [eax+80]
  00207	03 d8		 add	 ebx, eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 228  : 		rImageInstanceVector.clear();

  00209	8b 4b 24	 mov	 ecx, DWORD PTR [ebx+36]
  0020c	89 4b 28	 mov	 DWORD PTR [ebx+40], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0020f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00212	8b d0		 mov	 edx, eax
  00214	8b 37		 mov	 esi, DWORD PTR [edi]
  00216	2b d6		 sub	 edx, esi
  00218	89 45 e4	 mov	 DWORD PTR $T3[ebp], eax

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0021b	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  0021e	2b c1		 sub	 eax, ecx

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00220	c1 fa 02	 sar	 edx, 2

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00223	c1 f8 02	 sar	 eax, 2

; 1371 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  00226	3b d0		 cmp	 edx, eax
  00228	76 1c		 jbe	 SHORT $LN103@OnSetDataP

; 1372 :             if (_Newcapacity > max_size()) {

  0022a	81 fa ff ff ff
	3f		 cmp	 edx, 1073741823		; 3fffffffH
  00230	0f 87 16 01 00
	00		 ja	 $LN95@OnSetDataP

; 1374 :             }
; 1375 : 
; 1376 :             _Reallocate_exactly(_Newcapacity);

  00236	52		 push	 edx
  00237	8d 4b 24	 lea	 ecx, DWORD PTR [ebx+36]
  0023a	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXI@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Reallocate_exactly
  0023f	8b 37		 mov	 esi, DWORD PTR [edi]
  00241	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00244	eb 03		 jmp	 SHORT $LN41@OnSetDataP
$LN103@OnSetDataP:

; 1281 :             _Orphan_range(_Oldlast, _Oldlast);
; 1282 :         }
; 1283 : 
; 1284 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1285 :     }
; 1286 : 
; 1287 : public:
; 1288 :     _CONSTEXPR20_CONTAINER void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {
; 1289 :         // trim or append value-initialized elements, provide strong guarantee
; 1290 :         _Resize(_Newsize, _Value_init_tag{});
; 1291 :     }
; 1292 : 
; 1293 :     _CONSTEXPR20_CONTAINER void resize(_CRT_GUARDOVERFLOW const size_type _Newsize, const _Ty& _Val) {
; 1294 :         // trim or append copies of _Val, provide strong guarantee
; 1295 :         _Resize(_Newsize, _Val);
; 1296 :     }
; 1297 : 
; 1298 : private:
; 1299 :     _CONSTEXPR20_CONTAINER void _Reallocate_exactly(const size_type _Newcapacity) {
; 1300 :         // set capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1301 :         auto& _My_data    = _Mypair._Myval2;
; 1302 :         pointer& _Myfirst = _My_data._Myfirst;
; 1303 :         pointer& _Mylast  = _My_data._Mylast;
; 1304 : 
; 1305 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);
; 1306 : 
; 1307 :         const pointer _Newvec = _Getal().allocate(_Newcapacity);
; 1308 : 
; 1309 :         _TRY_BEGIN
; 1310 :         _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 1311 :         _CATCH_ALL
; 1312 :         _Getal().deallocate(_Newvec, _Newcapacity);
; 1313 :         _RERAISE;
; 1314 :         _CATCH_END
; 1315 : 
; 1316 :         _Change_array(_Newvec, _Size, _Newcapacity);
; 1317 :     }
; 1318 : 
; 1319 : #if _ITERATOR_DEBUG_LEVEL != 0 && defined(_ENABLE_STL_INTERNAL_CHECK)
; 1320 :     void _Check_all_orphaned_locked() const noexcept {
; 1321 :         _Lockit _Lock(_LOCK_DEBUG);
; 1322 :         auto& _My_data = _Mypair._Myval2;
; 1323 :         _STL_INTERNAL_CHECK(!_My_data._Myproxy->_Myfirstiter);
; 1324 :     }
; 1325 : 
; 1326 :     _CONSTEXPR20_CONTAINER void _Check_all_orphaned() const noexcept {
; 1327 : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 1328 :         if (_STD is_constant_evaluated()) {
; 1329 :             auto& _My_data = _Mypair._Myval2;
; 1330 :             _STL_INTERNAL_CHECK(!_My_data._Myproxy->_Myfirstiter);
; 1331 :         } else
; 1332 : #endif // __cpp_lib_constexpr_dynamic_alloc
; 1333 :         {
; 1334 :             _Check_all_orphaned_locked();
; 1335 :         }
; 1336 :     }
; 1337 : #endif // _ITERATOR_DEBUG_LEVEL != 0 && defined(_ENABLE_STL_INTERNAL_CHECK)
; 1338 : 
; 1339 :     _CONSTEXPR20_CONTAINER void _Clear_and_reserve_geometric(const size_type _Newsize) {
; 1340 :         auto& _My_data    = _Mypair._Myval2;
; 1341 :         pointer& _Myfirst = _My_data._Myfirst;
; 1342 :         pointer& _Mylast  = _My_data._Mylast;
; 1343 :         pointer& _Myend   = _My_data._Myend;
; 1344 : 
; 1345 : #if _ITERATOR_DEBUG_LEVEL != 0 && defined(_ENABLE_STL_INTERNAL_CHECK)
; 1346 :         _STL_INTERNAL_CHECK(_Newsize != 0);
; 1347 :         _Check_all_orphaned();
; 1348 : #endif // _ITERATOR_DEBUG_LEVEL != 0 && defined(_ENABLE_STL_INTERNAL_CHECK)
; 1349 : 
; 1350 :         if (_Newsize > max_size()) {
; 1351 :             _Xlength();
; 1352 :         }
; 1353 : 
; 1354 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 1355 : 
; 1356 :         if (_Myfirst) { // destroy and deallocate old array
; 1357 :             _Destroy(_Myfirst, _Mylast);
; 1358 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));
; 1359 : 
; 1360 :             _Myfirst = nullptr;
; 1361 :             _Mylast  = nullptr;
; 1362 :             _Myend   = nullptr;
; 1363 :         }
; 1364 : 
; 1365 :         _Buy_raw(_Newcapacity);
; 1366 :     }
; 1367 : 
; 1368 : public:
; 1369 :     _CONSTEXPR20_CONTAINER void reserve(_CRT_GUARDOVERFLOW const size_type _Newcapacity) {
; 1370 :         // increase capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1371 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  00246	8b 45 e4	 mov	 eax, DWORD PTR $T3[ebp]
$LN41@OnSetDataP:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 230  : 		for (std::vector<CGraphicImage*>::iterator itor = rTextureVector.begin(); itor != rTextureVector.end(); ++itor)

  00249	3b f0		 cmp	 esi, eax
  0024b	0f 84 ba 00 00
	00		 je	 $LN104@OnSetDataP
$LL56@OnSetDataP:

; 231  : 		{
; 232  : 			CGraphicImage * pImage = *itor;

  00251	8b 06		 mov	 eax, DWORD PTR [esi]
  00253	89 45 e0	 mov	 DWORD PTR _pImage$1$[ebp], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  00256	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+20
  0025b	39 05 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+16, eax
  00261	75 64		 jne	 SHORT $LN68@OnSetDataP

; 65   : 				T* pkNewData=new T;

  00263	6a 20		 push	 32			; 00000020H
  00265	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0026a	83 c4 04	 add	 esp, 4
  0026d	89 45 d8	 mov	 DWORD PTR $T2[ebp], eax
  00270	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00277	85 c0		 test	 eax, eax
  00279	74 0b		 je	 SHORT $LN70@OnSetDataP
  0027b	8b c8		 mov	 ecx, eax
  0027d	e8 00 00 00 00	 call	 ??0CGraphicImageInstance@@QAE@XZ ; CGraphicImageInstance::CGraphicImageInstance
  00282	8b f8		 mov	 edi, eax
  00284	eb 02		 jmp	 SHORT $LN71@OnSetDataP
$LN70@OnSetDataP:
  00286	33 ff		 xor	 edi, edi
$LN71@OnSetDataP:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00288	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  0028d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00294	89 7d e4	 mov	 DWORD PTR _pkNewData$4[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00297	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+12
  0029d	74 11		 je	 SHORT $LN78@OnSetDataP

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0029f	89 38		 mov	 DWORD PTR [eax], edi

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  002a1	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+8, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  002a8	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+32

; 68   : 				return pkNewData;

  002ae	eb 22		 jmp	 SHORT $LN67@OnSetDataP
$LN78@OnSetDataP:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  002b0	8d 4d e4	 lea	 ecx, DWORD PTR _pkNewData$4[ebp]
  002b3	51		 push	 ecx
  002b4	50		 push	 eax
  002b5	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+4
  002ba	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  002bf	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+32

; 68   : 				return pkNewData;

  002c5	eb 0b		 jmp	 SHORT $LN67@OnSetDataP
$LN68@OnSetDataP:

; 69   : 			}
; 70   : 
; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  002c7	8b 78 fc	 mov	 edi, DWORD PTR [eax-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1624 :         return _My_data._Mylast[-1];

  002ca	83 c0 fc	 add	 eax, -4			; fffffffcH

; 1403 :         --_Mylast;

  002cd	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CGraphicImageInstance@@2V?$CDynamicPool@VCGraphicImageInstance@@@@A+20, eax
$LN67@OnSetDataP:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 234  : 			pImageInstance->SetImagePointer(pImage);

  002d2	ff 75 e0	 push	 DWORD PTR _pImage$1$[ebp]
  002d5	8b cf		 mov	 ecx, edi
  002d7	89 7d e4	 mov	 DWORD PTR _pImageInstance$5[ebp], edi
  002da	e8 00 00 00 00	 call	 ?SetImagePointer@CGraphicImageInstance@@QAEXPAVCGraphicImage@@@Z ; CGraphicImageInstance::SetImagePointer
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  002df	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  002e2	3b 43 2c	 cmp	 eax, DWORD PTR [ebx+44]
  002e5	74 08		 je	 SHORT $LN89@OnSetDataP

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  002e7	89 38		 mov	 DWORD PTR [eax], edi

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  002e9	83 43 28 04	 add	 DWORD PTR [ebx+40], 4

; 744  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  002ed	eb 0d		 jmp	 SHORT $LN5@OnSetDataP
$LN89@OnSetDataP:

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  002ef	8d 4d e4	 lea	 ecx, DWORD PTR _pImageInstance$5[ebp]
  002f2	51		 push	 ecx
  002f3	50		 push	 eax
  002f4	8d 4b 24	 lea	 ecx, DWORD PTR [ebx+36]
  002f7	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGraphicImageInstance@@@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@QAEPAPAVCGraphicImageInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Emplace_reallocate<CGraphicImageInstance * const &>
$LN5@OnSetDataP:

; 154  :         return _Ptr == _Right._Ptr;

  002fc	8b 45 dc	 mov	 eax, DWORD PTR _pTextureVector$1$[ebp]

; 78   :         ++_Ptr;

  002ff	83 c6 04	 add	 esi, 4

; 154  :         return _Ptr == _Right._Ptr;

  00302	3b 70 04	 cmp	 esi, DWORD PTR [eax+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 230  : 		for (std::vector<CGraphicImage*>::iterator itor = rTextureVector.begin(); itor != rTextureVector.end(); ++itor)

  00305	0f 85 46 ff ff
	ff		 jne	 $LL56@OnSetDataP
$LN104@OnSetDataP:

; 203  : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  0030b	8b 75 f0	 mov	 esi, DWORD PTR _this$1$[ebp]
  0030e	8b 5d ec	 mov	 ebx, DWORD PTR _j$1$[ebp]
$LN2@OnSetDataP:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00311	8b 4e 54	 mov	 ecx, DWORD PTR [esi+84]
  00314	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00319	2b 4e 50	 sub	 ecx, DWORD PTR [esi+80]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 203  : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  0031c	43		 inc	 ebx
  0031d	83 45 e8 30	 add	 DWORD PTR tv875[ebp], 48 ; 00000030H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00321	f7 e9		 imul	 ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 203  : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  00323	89 5d ec	 mov	 DWORD PTR _j$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00326	c1 fa 03	 sar	 edx, 3
  00329	8b c2		 mov	 eax, edx
  0032b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0032e	03 c2		 add	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 203  : 	for (DWORD j = 0; j < m_TextureInstanceVector.size(); ++j)

  00330	3b d8		 cmp	 ebx, eax
  00332	0f 82 48 fe ff
	ff		 jb	 $LL4@OnSetDataP
$LN102@OnSetDataP:

; 238  : }

  00338	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0033b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00342	59		 pop	 ecx
  00343	5f		 pop	 edi
  00344	5e		 pop	 esi
  00345	5b		 pop	 ebx
  00346	8b e5		 mov	 esp, ebp
  00348	5d		 pop	 ebp
  00349	c2 04 00	 ret	 4
$LN95@OnSetDataP:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1373 :                 _Xlength();

  0034c	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
$LN106@OnSetDataP:
  00351	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z$0:
  00000	6a 20		 push	 32			; 00000020H
  00002	8b 45 d8	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnSetDataPointer@CEffectMeshInstance@@MAEXPAVCEffectElementBase@@@Z ENDP ; CEffectMeshInstance::OnSetDataPointer
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ?Delete@CEffectMeshInstance@@SAXPAV1@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkMeshInstance$ = 8					; size = 4
?Delete@CEffectMeshInstance@@SAXPAV1@@Z PROC		; CEffectMeshInstance::Delete, COMDAT

; 20   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 21   : 	pkMeshInstance->Destroy();

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkMeshInstance$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?Destroy@CEffectElementBaseInstance@@QAEXXZ ; CEffectElementBaseInstance::Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0000e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+20
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 22   : 	ms_kPool.Free(pkMeshInstance);

  00013	89 75 08	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00016	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+24
  0001c	74 0c		 je	 SHORT $LN8@Delete

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0001e	89 30		 mov	 DWORD PTR [eax], esi

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  00020	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+20, 4
  00027	5e		 pop	 esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 23   : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN8@Delete:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0002a	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0002d	51		 push	 ecx
  0002e	50		 push	 eax
  0002f	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+16
  00034	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCEffectMeshInstance@@@?$vector@PAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@QAEPAPAVCEffectMeshInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CEffectMeshInstance *,std::allocator<CEffectMeshInstance *> >::_Emplace_reallocate<CEffectMeshInstance * const &>
  00039	5e		 pop	 esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 23   : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?Delete@CEffectMeshInstance@@SAXPAV1@@Z ENDP		; CEffectMeshInstance::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ?New@CEffectMeshInstance@@SAPAV1@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
_pkNewData$3 = -16					; size = 4
__$EHRec$ = -12						; size = 12
?New@CEffectMeshInstance@@SAPAV1@XZ PROC		; CEffectMeshInstance::New, COMDAT

; 15   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?New@CEffectMeshInstance@@SAPAV1@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  00024	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+20
  0002a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+16, ecx
  00030	0f 85 84 00 00
	00		 jne	 $LN4@New

; 65   : 				T* pkNewData=new T;

  00036	6a 60		 push	 96			; 00000060H
  00038	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003d	83 c4 04	 add	 esp, 4
  00040	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	85 c0		 test	 eax, eax
  0004c	74 0b		 je	 SHORT $LN6@New
  0004e	8b c8		 mov	 ecx, eax
  00050	e8 00 00 00 00	 call	 ??0CEffectMeshInstance@@QAE@XZ ; CEffectMeshInstance::CEffectMeshInstance
  00055	8b f0		 mov	 esi, eax
  00057	eb 02		 jmp	 SHORT $LN7@New
$LN6@New:
  00059	33 f6		 xor	 esi, esi
$LN7@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0005b	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00067	89 75 f0	 mov	 DWORD PTR _pkNewData$3[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0006a	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+12
  00070	74 21		 je	 SHORT $LN14@New

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00072	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 16   : 	return ms_kPool.Alloc();

  00074	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 729  :         ++_Mylast;

  00076	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+8, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  0007d	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+32
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 17   : }

  00083	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00086	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008d	59		 pop	 ecx
  0008e	5e		 pop	 esi
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
$LN14@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00093	8d 4d f0	 lea	 ecx, DWORD PTR _pkNewData$3[ebp]
  00096	51		 push	 ecx
  00097	50		 push	 eax
  00098	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+4
  0009d	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCEffectMeshInstance@@@?$vector@PAVCEffectMeshInstance@@V?$allocator@PAVCEffectMeshInstance@@@std@@@std@@QAEPAPAVCEffectMeshInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CEffectMeshInstance *,std::allocator<CEffectMeshInstance *> >::_Emplace_reallocate<CEffectMeshInstance * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  000a2	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+32
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 16   : 	return ms_kPool.Alloc();

  000a8	8b c6		 mov	 eax, esi

; 17   : }

  000aa	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ad	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b4	59		 pop	 ecx
  000b5	5e		 pop	 esi
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c3		 ret	 0
$LN4@New:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  000ba	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1624 :         return _My_data._Mylast[-1];

  000bd	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1403 :         --_Mylast;

  000c0	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+20, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 17   : }

  000c6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d0	59		 pop	 ecx
  000d1	5e		 pop	 esi
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?New@CEffectMeshInstance@@SAPAV1@XZ$0:
  00000	6a 60		 push	 96			; 00000060H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?New@CEffectMeshInstance@@SAPAV1@XZ:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?New@CEffectMeshInstance@@SAPAV1@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?New@CEffectMeshInstance@@SAPAV1@XZ ENDP		; CEffectMeshInstance::New
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ?DestroySystem@CEffectMeshInstance@@SAXXZ
_TEXT	SEGMENT
?DestroySystem@CEffectMeshInstance@@SAXXZ PROC		; CEffectMeshInstance::DestroySystem, COMDAT

; 10   : {

  00000	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00001	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 10   : {

  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 269  :     const auto _ULast = _Get_unwrapped(_Last);

  00008	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+8

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b f7		 cmp	 esi, edi
  00010	74 2a		 je	 SHORT $LN30@DestroySys
$LL20@DestroySys:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00014	85 c9		 test	 ecx, ecx
  00016	74 06		 je	 SHORT $LN18@DestroySys
  00018	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001a	6a 01		 push	 1
  0001c	ff 10		 call	 DWORD PTR [eax]
$LN18@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001e	83 c6 04	 add	 esi, 4
  00021	3b f7		 cmp	 esi, edi
  00023	75 ed		 jne	 SHORT $LL20@DestroySys
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00025	a1 04 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+4
  0002a	a3 08 00 00 00	 mov	 DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+8, eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 12   : }

  0002f	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+16
  00034	5f		 pop	 edi
  00035	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+20, eax
  0003a	5e		 pop	 esi
  0003b	c3		 ret	 0
$LN30@DestroySys:
  0003c	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+16
  00041	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00042	89 35 08 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+8, esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 12   : }

  00048	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CEffectMeshInstance@@2V?$CDynamicPool@VCEffectMeshInstance@@@@A+20, eax
  0004d	5e		 pop	 esi
  0004e	c3		 ret	 0
?DestroySystem@CEffectMeshInstance@@SAXXZ ENDP		; CEffectMeshInstance::DestroySystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterlib\Ref.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ??1CEffectMeshInstance@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CEffectMeshInstance@@UAE@XZ PROC			; CEffectMeshInstance::~CEffectMeshInstance, COMDAT
; _this$ = ecx

; 269  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CEffectMeshInstance@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CEffectMeshInstance@@6B@

; 270  : 	Destroy();

  0002b	e8 00 00 00 00	 call	 ?Destroy@CEffectElementBaseInstance@@QAEXXZ ; CEffectElementBaseInstance::Destroy
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterlib\Ref.h

; 53   : 			if (m_pObject)

  00030	8b 4e 5c	 mov	 ecx, DWORD PTR [esi+92]

; 37   : 		{

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 53   : 			if (m_pObject)

  0003a	85 c9		 test	 ecx, ecx
  0003c	74 0c		 je	 SHORT $LN7@CEffectMes

; 54   : 			{
; 55   : 				m_pObject->Release();

  0003e	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release

; 56   : 				m_pObject = NULL;

  00043	c7 46 5c 00 00
	00 00		 mov	 DWORD PTR [esi+92], 0
$LN7@CEffectMes:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 271  : }

  0004a	8d 4e 50	 lea	 ecx, DWORD PTR [esi+80]
  0004d	e8 00 00 00 00	 call	 ??1?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@QAE@XZ ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::~vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >
  00052	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  00055	e8 00 00 00 00	 call	 ??1CFrameController@@UAE@XZ ; CFrameController::~CFrameController
  0005a	8b ce		 mov	 ecx, esi
  0005c	e8 00 00 00 00	 call	 ??1CEffectElementBaseInstance@@UAE@XZ ; CEffectElementBaseInstance::~CEffectElementBaseInstance
  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	5e		 pop	 esi
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
  00071	cc		 int	 3
  00072	cc		 int	 3
  00073	cc		 int	 3
  00074	cc		 int	 3
  00075	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CEffectMeshInstance@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CEffectMeshInstance@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CEffectMeshInstance@@UAE@XZ ENDP			; CEffectMeshInstance::~CEffectMeshInstance
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterlib\Ref.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp
;	COMDAT ??0CEffectMeshInstance@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CEffectMeshInstance@@QAE@XZ PROC			; CEffectMeshInstance::CEffectMeshInstance, COMDAT
; _this$ = ecx

; 264  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CEffectMeshInstance@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	e8 00 00 00 00	 call	 ??0CEffectElementBaseInstance@@QAE@XZ ; CEffectElementBaseInstance::CEffectElementBaseInstance
  0002e	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  00031	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00038	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CEffectMeshInstance@@6B@
  0003e	e8 00 00 00 00	 call	 ??0CFrameController@@QAE@XZ ; CFrameController::CFrameController
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00043	c7 46 50 00 00
	00 00		 mov	 DWORD PTR [esi+80], 0
  0004a	c7 46 54 00 00
	00 00		 mov	 DWORD PTR [esi+84], 0
  00051	c7 46 58 00 00
	00 00		 mov	 DWORD PTR [esi+88], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterlib\Ref.h

; 20   : 		CRef() : m_pObject(NULL)

  00058	c7 46 5c 00 00
	00 00		 mov	 DWORD PTR [esi+92], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectMeshInstance.cpp

; 265  : 	Initialize();

  0005f	8b ce		 mov	 ecx, esi
  00061	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00065	e8 00 00 00 00	 call	 ?Initialize@CEffectElementBaseInstance@@QAEXXZ ; CEffectElementBaseInstance::Initialize

; 266  : }

  0006a	8b c6		 mov	 eax, esi
  0006c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00076	59		 pop	 ecx
  00077	5e		 pop	 esi
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CEffectMeshInstance@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CEffectElementBaseInstance@@UAE@XZ ; CEffectElementBaseInstance::~CEffectElementBaseInstance
__unwindfunclet$??0CEffectMeshInstance@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 2c	 add	 ecx, 44			; 0000002cH
  0000e	e9 00 00 00 00	 jmp	 ??1CFrameController@@UAE@XZ ; CFrameController::~CFrameController
__unwindfunclet$??0CEffectMeshInstance@@QAE@XZ$2:
  00013	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 50	 add	 ecx, 80			; 00000050H
  00019	e9 00 00 00 00	 jmp	 ??1?$vector@USTextureInstance@CEffectMeshInstance@@V?$allocator@USTextureInstance@CEffectMeshInstance@@@std@@@std@@QAE@XZ ; std::vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >::~vector<CEffectMeshInstance::STextureInstance,std::allocator<CEffectMeshInstance::STextureInstance> >
__unwindfunclet$??0CEffectMeshInstance@@QAE@XZ$3:
  0001e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	83 c1 5c	 add	 ecx, 92			; 0000005cH
  00024	e9 00 00 00 00	 jmp	 ??1?$CRef@VCEffectMesh@@@@QAE@XZ ; CRef<CEffectMesh>::~CRef<CEffectMesh>
  00029	cc		 int	 3
  0002a	cc		 int	 3
  0002b	cc		 int	 3
  0002c	cc		 int	 3
  0002d	cc		 int	 3
__ehhandler$??0CEffectMeshInstance@@QAE@XZ:
  0002e	90		 npad	 1
  0002f	90		 npad	 1
  00030	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00034	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00037	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0003a	33 c8		 xor	 ecx, eax
  0003c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00041	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CEffectMeshInstance@@QAE@XZ
  00046	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CEffectMeshInstance@@QAE@XZ ENDP			; CEffectMeshInstance::CEffectMeshInstance
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Change_array@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXQAPAVCGraphicImageInstance@@II@Z
_TEXT	SEGMENT
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXQAPAVCGraphicImageInstance@@II@Z PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Change_array, COMDAT
; _this$ = ecx

; 1736 :         const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1737 :         // orphan all iterators, discard old array, acquire new array
; 1738 :         auto& _My_data    = _Mypair._Myval2;
; 1739 :         pointer& _Myfirst = _My_data._Myfirst;
; 1740 :         pointer& _Mylast  = _My_data._Mylast;
; 1741 :         pointer& _Myend   = _My_data._Myend;
; 1742 : 
; 1743 :         _My_data._Orphan_all();
; 1744 : 
; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  00006	8b 06		 mov	 eax, DWORD PTR [esi]
  00008	85 c0		 test	 eax, eax
  0000a	74 2c		 je	 SHORT $LN8@Change_arr

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000c	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000f	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00014	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001a	72 12		 jb	 SHORT $LN18@Change_arr

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001c	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001f	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00022	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00024	83 c0 fc	 add	 eax, -4			; fffffffcH
  00027	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002a	77 28		 ja	 SHORT $LN15@Change_arr

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002c	8b c2		 mov	 eax, edx
$LN18@Change_arr:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0002e	51		 push	 ecx
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00035	83 c4 08	 add	 esp, 8
$LN8@Change_arr:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1750 :         _Myfirst = _Newvec;

  00038	8b 4d 08	 mov	 ecx, DWORD PTR __Newvec$[ebp]

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0003b	8b 45 0c	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0003e	89 0e		 mov	 DWORD PTR [esi], ecx
  00040	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  00043	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00046	8b 45 10	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  00049	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  0004c	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0004f	5e		 pop	 esi

; 1753 :     }

  00050	5d		 pop	 ebp
  00051	c2 0c 00	 ret	 12			; 0000000cH
$LN15@Change_arr:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00054	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN22@Change_arr:
  00059	cc		 int	 3
?_Change_array@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXQAPAVCGraphicImageInstance@@II@Z ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Reallocate_exactly@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
__Size$1$ = -4						; size = 4
__Newcapacity$ = 8					; size = 4
?_Reallocate_exactly@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXI@Z PROC ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Reallocate_exactly, COMDAT
; _this$ = ecx

; 1299 :     _CONSTEXPR20_CONTAINER void _Reallocate_exactly(const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  00005	8b 5d 08	 mov	 ebx, DWORD PTR __Newcapacity$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1299 :     _CONSTEXPR20_CONTAINER void _Reallocate_exactly(const size_type _Newcapacity) {

  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	57		 push	 edi

; 1300 :         // set capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1301 :         auto& _My_data    = _Mypair._Myval2;
; 1302 :         pointer& _Myfirst = _My_data._Myfirst;
; 1303 :         pointer& _Mylast  = _My_data._Mylast;
; 1304 : 
; 1305 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

  0000c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000f	2b 06		 sub	 eax, DWORD PTR [esi]
  00011	c1 f8 02	 sar	 eax, 2
  00014	89 45 fc	 mov	 DWORD PTR __Size$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  00017	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0001d	0f 87 8a 00 00
	00		 ja	 $LN59@Reallocate

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00023	c1 e3 02	 shl	 ebx, 2

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  0002c	72 0d		 jb	 SHORT $LN15@Reallocate

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0002e	53		 push	 ebx
  0002f	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00034	83 c4 04	 add	 esp, 4
  00037	8b f8		 mov	 edi, eax
  00039	eb 13		 jmp	 SHORT $LN14@Reallocate
$LN15@Reallocate:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  0003b	85 db		 test	 ebx, ebx
  0003d	74 0d		 je	 SHORT $LN16@Reallocate

; 85   :         return ::operator new(_Bytes);

  0003f	53		 push	 ebx
  00040	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00045	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  00048	8b f8		 mov	 edi, eax
  0004a	eb 02		 jmp	 SHORT $LN14@Reallocate
$LN16@Reallocate:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  0004c	33 ff		 xor	 edi, edi
$LN14@Reallocate:

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0004e	57		 push	 edi
  0004f	ff 76 04	 push	 DWORD PTR [esi+4]
  00052	ff 36		 push	 DWORD PTR [esi]
  00054	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGraphicImageInstance@@PAPAV1@@std@@YAPAPAVCGraphicImageInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CGraphicImageInstance * *,CGraphicImageInstance * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  00059	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 2c		 je	 SHORT $LN43@Reallocate

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN53@Reallocate

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 26		 ja	 SHORT $LN50@Reallocate

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN53@Reallocate:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008b	83 c4 08	 add	 esp, 8
$LN43@Reallocate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0008e	8b 45 fc	 mov	 eax, DWORD PTR __Size$1$[ebp]
  00091	89 3e		 mov	 DWORD PTR [esi], edi
  00093	8d 04 87	 lea	 eax, DWORD PTR [edi+eax*4]
  00096	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00099	8d 04 3b	 lea	 eax, DWORD PTR [ebx+edi]
  0009c	5f		 pop	 edi
  0009d	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx

; 1317 :     }

  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c2 04 00	 ret	 4
$LN50@Reallocate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a8	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN59@Reallocate:

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  000ad	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN57@Reallocate:
  000b2	cc		 int	 3
?_Reallocate_exactly@?$vector@PAVCGraphicImageInstance@@V?$allocator@PAVCGraphicImageInstance@@@std@@@std@@AAEXI@Z ENDP ; std::vector<CGraphicImageInstance *,std::allocator<CGraphicImageInstance *> >::_Reallocate_exactly
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCFrameController@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCFrameController@@UAEPAXI@Z PROC			; CFrameController::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CFrameController@@UAE@XZ ; CFrameController::~CFrameController
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCFrameController@@UAEPAXI@Z ENDP			; CFrameController::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 134  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 135  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 137  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 85   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 138  :         _Throw_bad_array_new_length(); // add overflow
; 139  :     }
; 140  : 
; 141  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 85   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 145  : 
; 146  : #ifdef _DEBUG
; 147  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 148  : #endif // _DEBUG
; 149  :     return _Ptr;
; 150  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.h
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT
??0D3DXMATRIX@@QAE@XZ PROC				; D3DXMATRIX::D3DXMATRIX, COMDAT
; _this$ = ecx

; 177  :     D3DXMATRIX() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXMATRIX@@QAE@XZ ENDP				; D3DXMATRIX::D3DXMATRIX
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
