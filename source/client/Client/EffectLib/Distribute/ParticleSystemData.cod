; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30137.0 

	TITLE	C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Distribute\ParticleSystemData.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_R4?$CDynamicPool@VCParticleSystemData@@@@6B@	; CDynamicPool<CParticleSystemData>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@VCParticleSystemData@@@@@8 ; CDynamicPool<CParticleSystemData> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@VCParticleSystemData@@@@8	; CDynamicPool<CParticleSystemData>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@VCParticleSystemData@@@@8	; CDynamicPool<CParticleSystemData>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@VCParticleSystemData@@@@8 ; CDynamicPool<CParticleSystemData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> > `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> > `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPool@VCParticleSystemData@@@@6B@	; CDynamicPool<CParticleSystemData>::`vftable'
PUBLIC	??_G?$CDynamicPool@VCParticleSystemData@@@@UAEPAXI@Z ; CDynamicPool<CParticleSystemData>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPool@VCParticleSystemData@@@@UAEPAXI@Z:PROC ; CDynamicPool<CParticleSystemData>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vector deleting destructor'
;	COMDAT ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPool@VCParticleSystemData@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@VCParticleSystemData@@@@6B@ DD FLAT:??_R4?$CDynamicPool@VCParticleSystemData@@@@6B@ ; CDynamicPool<CParticleSystemData>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@VCParticleSystemData@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@'
	DB	'@@NEffectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpd'
	DB	'ateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDe'
	DB	'corator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDec'
	DB	'orator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpd'
	DB	'ateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@N'
	DB	'EffectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEff'
	DB	'ectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffe'
	DB	'ctUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecora'
	DB	'tor@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDeco'
	DB	'rator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@VCParticleSystemData@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@VCParticleSystemData@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@VCParticleSystemData@@@@@8 ; CDynamicPool<CParticleSystemData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@VCParticleSystemData@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@VCParticleSystemData@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@VCParticleSystemData@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@VCParticleSystemData@@@@8 ; CDynamicPool<CParticleSystemData>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@VCParticleSystemData@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@VCParticleSystemData@@@@8 DD 00H	; CDynamicPool<CParticleSystemData>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@VCParticleSystemData@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@VCParticleSystemData@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPool@VCParticleSystemData@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CParticleSystemData> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@VCParticleSystemData@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPool@VCParticleSystemData@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@VCParticleSystemData@@@@6B@ DD 00H	; CDynamicPool<CParticleSystemData>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@VCParticleSystemData@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@VCParticleSystemData@@@@8
rdata$r	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Throw_tree_length_error@std@@YAXXZ		; std::_Throw_tree_length_error
PUBLIC	?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
PUBLIC	??1CGotoChild@CTextFileLoader@@QAE@XZ		; CTextFileLoader::CGotoChild::~CGotoChild
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
PUBLIC	?push_back@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXABV?$CTimeEvent@M@@@Z ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::push_back
PUBLIC	?_Xlength@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@CAXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Xlength
PUBLIC	?_Xlength@?$vector@V?$CTimeEvent@UDWORDCOLOR@@@@V?$allocator@V?$CTimeEvent@UDWORDCOLOR@@@@@std@@@std@@CAXXZ ; std::vector<CTimeEvent<DWORDCOLOR>,std::allocator<CTimeEvent<DWORDCOLOR> > >::_Xlength
PUBLIC	??1CParticleSystemData@@UAE@XZ			; CParticleSystemData::~CParticleSystemData
PUBLIC	??0CParticleSystemData@@QAE@XZ			; CParticleSystemData::CParticleSystemData
PUBLIC	?GetEmitterPropertyPointer@CParticleSystemData@@QAEPAVCEmitterProperty@@XZ ; CParticleSystemData::GetEmitterPropertyPointer
PUBLIC	?GetParticlePropertyPointer@CParticleSystemData@@QAEPAVCParticleProperty@@XZ ; CParticleSystemData::GetParticlePropertyPointer
PUBLIC	?ChangeTexture@CParticleSystemData@@QAEXPBD@Z	; CParticleSystemData::ChangeTexture
PUBLIC	?BuildDecorator@CParticleSystemData@@QAEXPAVCParticleInstance@@@Z ; CParticleSystemData::BuildDecorator
PUBLIC	?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z ; CParticleSystemData::OnLoadScript
PUBLIC	?OnClear@CParticleSystemData@@MAEXXZ		; CParticleSystemData::OnClear
PUBLIC	?OnIsData@CParticleSystemData@@MAE_NXZ		; CParticleSystemData::OnIsData
PUBLIC	?DestroySystem@CParticleSystemData@@SAXXZ	; CParticleSystemData::DestroySystem
PUBLIC	?New@CParticleSystemData@@SAPAV1@XZ		; CParticleSystemData::New
PUBLIC	?Delete@CParticleSystemData@@SAXPAV1@@Z		; CParticleSystemData::Delete
PUBLIC	??_GCParticleSystemData@@UAEPAXI@Z		; CParticleSystemData::`scalar deleting destructor'
PUBLIC	??1CBaseDecorator@NEffectUpdateDecorator@@UAE@XZ ; NEffectUpdateDecorator::CBaseDecorator::~CBaseDecorator
PUBLIC	??_GCBaseDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ; NEffectUpdateDecorator::CBaseDecorator::`scalar deleting destructor'
PUBLIC	??1?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::~CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>
PUBLIC	??2?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::operator new
PUBLIC	??3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::operator delete
PUBLIC	??_G?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
PUBLIC	??1CHeaderDecorator@NEffectUpdateDecorator@@UAE@XZ ; NEffectUpdateDecorator::CHeaderDecorator::~CHeaderDecorator
PUBLIC	?__Excute@CHeaderDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ; NEffectUpdateDecorator::CHeaderDecorator::__Excute
PUBLIC	?__Clone@CHeaderDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ; NEffectUpdateDecorator::CHeaderDecorator::__Clone
PUBLIC	??_GCHeaderDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ; NEffectUpdateDecorator::CHeaderDecorator::`scalar deleting destructor'
PUBLIC	??1?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::~CPooledObject<NEffectUpdateDecorator::CNullDecorator>
PUBLIC	??2?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::operator new
PUBLIC	??3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::operator delete
PUBLIC	??_G?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
PUBLIC	??1CNullDecorator@NEffectUpdateDecorator@@UAE@XZ ; NEffectUpdateDecorator::CNullDecorator::~CNullDecorator
PUBLIC	?__Excute@CNullDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ; NEffectUpdateDecorator::CNullDecorator::__Excute
PUBLIC	?__Clone@CNullDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ; NEffectUpdateDecorator::CNullDecorator::__Clone
PUBLIC	??_GCNullDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ; NEffectUpdateDecorator::CNullDecorator::`scalar deleting destructor'
PUBLIC	??1?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
PUBLIC	??2?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::operator new
PUBLIC	??3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::operator delete
PUBLIC	??_G?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
PUBLIC	??1CTextureAnimationCWDecorator@NEffectUpdateDecorator@@UAE@XZ ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::~CTextureAnimationCWDecorator
PUBLIC	?__Clone@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::__Clone
PUBLIC	?__Excute@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::__Excute
PUBLIC	??_GCTextureAnimationCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`scalar deleting destructor'
PUBLIC	??1?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
PUBLIC	??2?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::operator new
PUBLIC	??3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::operator delete
PUBLIC	??_G?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
PUBLIC	??1CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@UAE@XZ ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::~CTextureAnimationCCWDecorator
PUBLIC	?__Clone@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::__Clone
PUBLIC	?__Excute@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::__Excute
PUBLIC	??_GCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`scalar deleting destructor'
PUBLIC	??1?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
PUBLIC	??2?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::operator new
PUBLIC	??3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::operator delete
PUBLIC	??_G?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
PUBLIC	??1CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@UAE@XZ ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::~CTextureAnimationRandomDecorator
PUBLIC	?__Clone@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::__Clone
PUBLIC	?__Excute@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::__Excute
PUBLIC	??_GCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`scalar deleting destructor'
PUBLIC	??1?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::~CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>
PUBLIC	??2?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::operator new
PUBLIC	??3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::operator delete
PUBLIC	??_G?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
PUBLIC	??1CAirResistanceDecorator@NEffectUpdateDecorator@@UAE@XZ ; NEffectUpdateDecorator::CAirResistanceDecorator::~CAirResistanceDecorator
PUBLIC	??_GCAirResistanceDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ; NEffectUpdateDecorator::CAirResistanceDecorator::`scalar deleting destructor'
PUBLIC	??1?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::~CPooledObject<NEffectUpdateDecorator::CGravityDecorator>
PUBLIC	??2?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::operator new
PUBLIC	??3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::operator delete
PUBLIC	??_G?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
PUBLIC	??1CGravityDecorator@NEffectUpdateDecorator@@UAE@XZ ; NEffectUpdateDecorator::CGravityDecorator::~CGravityDecorator
PUBLIC	??_GCGravityDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ; NEffectUpdateDecorator::CGravityDecorator::`scalar deleting destructor'
PUBLIC	??1?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::~CPooledObject<NEffectUpdateDecorator::CRotationDecorator>
PUBLIC	??2?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::operator new
PUBLIC	??3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::operator delete
PUBLIC	??_G?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
PUBLIC	??1CRotationDecorator@NEffectUpdateDecorator@@UAE@XZ ; NEffectUpdateDecorator::CRotationDecorator::~CRotationDecorator
PUBLIC	??_GCRotationDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ; NEffectUpdateDecorator::CRotationDecorator::`scalar deleting destructor'
PUBLIC	??1?$CDynamicPool@VCParticleSystemData@@@@UAE@XZ ; CDynamicPool<CParticleSystemData>::~CDynamicPool<CParticleSystemData>
PUBLIC	?Delete@?$CDynamicPool@VCParticleSystemData@@@@KAXPAVCParticleSystemData@@@Z ; CDynamicPool<CParticleSystemData>::Delete
PUBLIC	?_Xlength@?$vector@PAVCParticleSystemData@@V?$allocator@PAVCParticleSystemData@@@std@@@std@@CAXXZ ; std::vector<CParticleSystemData *,std::allocator<CParticleSystemData *> >::_Xlength
PUBLIC	??1?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::~_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@QAEPAU?$_Tree_node@MPAX@2@U?$_Tree_id@PAU?$_Tree_node@MPAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<float> >::_Insert_node
PUBLIC	??1?$set@MU?$less@M@std@@V?$allocator@M@2@@std@@QAE@XZ ; std::set<float,std::less<float>,std::allocator<float> >::~set<float,std::less<float>,std::allocator<float> >
PUBLIC	??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::insert<0,0>
PUBLIC	??1?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::~CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >
PUBLIC	??2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator new
PUBLIC	??3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator delete
PUBLIC	??_G?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`scalar deleting destructor'
PUBLIC	??0?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAE@ABV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@PAM@Z ; NEffectUpdateDecorator::CTimeEventDecorator<float>::CTimeEventDecorator<float>
PUBLIC	??1?$CTimeEventDecorator@M@NEffectUpdateDecorator@@UAE@XZ ; NEffectUpdateDecorator::CTimeEventDecorator<float>::~CTimeEventDecorator<float>
PUBLIC	?__Clone@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ; NEffectUpdateDecorator::CTimeEventDecorator<float>::__Clone
PUBLIC	?__Excute@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ; NEffectUpdateDecorator::CTimeEventDecorator<float>::__Excute
PUBLIC	??_G?$CTimeEventDecorator@M@NEffectUpdateDecorator@@UAEPAXI@Z ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`scalar deleting destructor'
PUBLIC	??1?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::~CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >
PUBLIC	??2?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::operator new
PUBLIC	??3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::operator delete
PUBLIC	??_G?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`scalar deleting destructor'
PUBLIC	??1?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@UAE@XZ ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::~CTimeEventDecorator<DWORDCOLOR>
PUBLIC	?__Clone@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::__Clone
PUBLIC	?__Excute@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::__Excute
PUBLIC	??_G?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@UAEPAXI@Z ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`scalar deleting destructor'
PUBLIC	??1?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::~CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >
PUBLIC	?Delete@?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@KAXPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::Delete
PUBLIC	?_Xlength@?$vector@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *> >::_Xlength
PUBLIC	??1?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::~CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >
PUBLIC	?Delete@?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@KAXPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::Delete
PUBLIC	?_Xlength@?$vector@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<float> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<float> *> >::_Xlength
PUBLIC	??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
PUBLIC	?_Xlength@?$vector@PAVCRotationDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CRotationDecorator *,std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >::_Xlength
PUBLIC	??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
PUBLIC	?_Xlength@?$vector@PAVCGravityDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CGravityDecorator *,std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >::_Xlength
PUBLIC	??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
PUBLIC	?_Xlength@?$vector@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CAirResistanceDecorator *,std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >::_Xlength
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
PUBLIC	?_Xlength@?$vector@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >::_Xlength
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
PUBLIC	?_Xlength@?$vector@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >::_Xlength
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
PUBLIC	?_Xlength@?$vector@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CTextureAnimationCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >::_Xlength
PUBLIC	??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
PUBLIC	?_Xlength@?$vector@PAVCNullDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CNullDecorator *,std::allocator<NEffectUpdateDecorator::CNullDecorator *> >::_Xlength
PUBLIC	??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
PUBLIC	?_Xlength@?$vector@PAVCHeaderDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CHeaderDecorator *,std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >::_Xlength
PUBLIC	??$_Emplace_reallocate@ABV?$CTimeEvent@UDWORDCOLOR@@@@@?$vector@V?$CTimeEvent@UDWORDCOLOR@@@@V?$allocator@V?$CTimeEvent@UDWORDCOLOR@@@@@std@@@std@@QAEPAV?$CTimeEvent@UDWORDCOLOR@@@@QAV2@ABV2@@Z ; std::vector<CTimeEvent<DWORDCOLOR>,std::allocator<CTimeEvent<DWORDCOLOR> > >::_Emplace_reallocate<CTimeEvent<DWORDCOLOR> const &>
PUBLIC	??$_Emplace_reallocate@ABV?$CTimeEvent@M@@@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEPAV?$CTimeEvent@M@@QAV2@ABV2@@Z ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Emplace_reallocate<CTimeEvent<float> const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCParticleSystemData@@@?$vector@PAVCParticleSystemData@@V?$allocator@PAVCParticleSystemData@@@std@@@std@@QAEPAPAVCParticleSystemData@@QAPAV2@ABQAV2@@Z ; std::vector<CParticleSystemData *,std::allocator<CParticleSystemData *> >::_Emplace_reallocate<CParticleSystemData * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCHeaderDecorator@NEffectUpdateDecorator@@@?$vector@PAVCHeaderDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CHeaderDecorator *,std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CHeaderDecorator * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCNullDecorator@NEffectUpdateDecorator@@@?$vector@PAVCNullDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CNullDecorator *,std::allocator<NEffectUpdateDecorator::CNullDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CNullDecorator * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTextureAnimationCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationCWDecorator * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationCCWDecorator * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationRandomDecorator * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCAirResistanceDecorator@NEffectUpdateDecorator@@@?$vector@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CAirResistanceDecorator *,std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CAirResistanceDecorator * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCGravityDecorator@NEffectUpdateDecorator@@@?$vector@PAVCGravityDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CGravityDecorator *,std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CGravityDecorator * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCRotationDecorator@NEffectUpdateDecorator@@@?$vector@PAVCRotationDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CRotationDecorator *,std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CRotationDecorator * const &>
PUBLIC	??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<float> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<float> *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTimeEventDecorator<float> * const &>
PUBLIC	??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * const &>
PUBLIC	??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@MPAX@std@@@1@PAU?$_Tree_node@MPAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<float> >::_Erase_tree<std::allocator<std::_Tree_node<float,void *> > >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<float,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<float,void *> > >
PUBLIC	??$_Copy_memmove@PAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CHeaderDecorator * *,NEffectUpdateDecorator::CHeaderDecorator * *>
PUBLIC	??$_Copy_memmove@PAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CNullDecorator * *,NEffectUpdateDecorator::CNullDecorator * *>
PUBLIC	??$_Copy_memmove@PAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationCWDecorator * *,NEffectUpdateDecorator::CTextureAnimationCWDecorator * *>
PUBLIC	??$_Copy_memmove@PAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationCCWDecorator * *,NEffectUpdateDecorator::CTextureAnimationCCWDecorator * *>
PUBLIC	??$_Copy_memmove@PAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationRandomDecorator * *,NEffectUpdateDecorator::CTextureAnimationRandomDecorator * *>
PUBLIC	??$_Copy_memmove@PAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CAirResistanceDecorator * *,NEffectUpdateDecorator::CAirResistanceDecorator * *>
PUBLIC	??$_Copy_memmove@PAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CGravityDecorator * *,NEffectUpdateDecorator::CGravityDecorator * *>
PUBLIC	??$_Copy_memmove@PAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CRotationDecorator * *,NEffectUpdateDecorator::CRotationDecorator * *>
PUBLIC	??$_Copy_memmove@PAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTimeEventDecorator<float> * *,NEffectUpdateDecorator::CTimeEventDecorator<float> * *>
PUBLIC	??$_Copy_memmove@PAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * *,NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * *>
PUBLIC	??$_Copy_memmove@PAPAVCParticleSystemData@@PAPAV1@@std@@YAPAPAVCParticleSystemData@@PAPAV1@00@Z ; std::_Copy_memmove<CParticleSystemData * *,CParticleSystemData * *>
PUBLIC	??_ECHeaderDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ; [thunk]:NEffectUpdateDecorator::CHeaderDecorator::`vector deleting destructor'
PUBLIC	??_ECNullDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ; [thunk]:NEffectUpdateDecorator::CNullDecorator::`vector deleting destructor'
PUBLIC	??_E?$CTimeEventDecorator@M@NEffectUpdateDecorator@@WM@AEPAXI@Z ; [thunk]:NEffectUpdateDecorator::CTimeEventDecorator<float>::`vector deleting destructor'
PUBLIC	??_E?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@WM@AEPAXI@Z ; [thunk]:NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`vector deleting destructor'
PUBLIC	??_ECTextureAnimationCWDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ; [thunk]:NEffectUpdateDecorator::CTextureAnimationCWDecorator::`vector deleting destructor'
PUBLIC	??_ECTextureAnimationCCWDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ; [thunk]:NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`vector deleting destructor'
PUBLIC	??_ECTextureAnimationRandomDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ; [thunk]:NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`vector deleting destructor'
PUBLIC	??_ECAirResistanceDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ; [thunk]:NEffectUpdateDecorator::CAirResistanceDecorator::`vector deleting destructor'
PUBLIC	??_ECGravityDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ; [thunk]:NEffectUpdateDecorator::CGravityDecorator::`vector deleting destructor'
PUBLIC	??_ECRotationDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ; [thunk]:NEffectUpdateDecorator::CRotationDecorator::`vector deleting destructor'
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0BB@GCADKGJO@map?1set?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A ; CParticleSystemData::ms_kPool
PUBLIC	??_7CParticleSystemData@@6B@			; CParticleSystemData::`vftable'
PUBLIC	??_7CBaseDecorator@NEffectUpdateDecorator@@6B@	; NEffectUpdateDecorator::CBaseDecorator::`vftable'
PUBLIC	?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
PUBLIC	??_7?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
PUBLIC	??_7CHeaderDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CHeaderDecorator::`vftable'
PUBLIC	??_7CHeaderDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CHeaderDecorator::`vftable'
PUBLIC	?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
PUBLIC	??_7?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`vftable'
PUBLIC	??_7CNullDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CNullDecorator::`vftable'
PUBLIC	??_7CNullDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CNullDecorator::`vftable'
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
PUBLIC	??_7?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
PUBLIC	??_7CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`vftable'
PUBLIC	??_7CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`vftable'
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
PUBLIC	??_7?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
PUBLIC	??_7CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`vftable'
PUBLIC	??_7CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`vftable'
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
PUBLIC	??_7?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
PUBLIC	??_7CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`vftable'
PUBLIC	??_7CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`vftable'
PUBLIC	?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
PUBLIC	??_7?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
PUBLIC	??_7CAirResistanceDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CAirResistanceDecorator::`vftable'
PUBLIC	??_7CAirResistanceDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CAirResistanceDecorator::`vftable'
PUBLIC	?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
PUBLIC	??_7?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
PUBLIC	??_7CGravityDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CGravityDecorator::`vftable'
PUBLIC	??_7CGravityDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CGravityDecorator::`vftable'
PUBLIC	?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
PUBLIC	??_7?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
PUBLIC	??_7CRotationDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CRotationDecorator::`vftable'
PUBLIC	??_7CRotationDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CRotationDecorator::`vftable'
PUBLIC	??_C@_0BA@BHDCJGBH@emitterproperty@		; `string'
PUBLIC	??_C@_0BB@GFCINCLJ@maxemissioncount@		; `string'
PUBLIC	??_C@_0M@CMAFBHMP@cyclelength@			; `string'
PUBLIC	??_C@_0BA@HFAFNHAP@cycleloopenable@		; `string'
PUBLIC	??_C@_09HBCOMICA@loopcount@			; `string'
PUBLIC	??_C@_0N@CEDHOJLK@emittershape@			; `string'
PUBLIC	??_C@_0BE@NHCLCKPF@emitteradvancedtype@		; `string'
PUBLIC	??_C@_0N@JELCEBGI@emittingsize@			; `string'
PUBLIC	??_C@_0P@CFPFJLBH@emittingradius@		; `string'
PUBLIC	??_C@_0BI@JPHOPPGG@emitteremitfromedgeflag@	; `string'
PUBLIC	??_C@_0BC@DDGDKONG@emittingdirection@		; `string'
PUBLIC	??_C@_0BG@EOBNDMCN@timeeventemittingsize@	; `string'
PUBLIC	??_C@_0CB@BEJHCOPI@timeeventemittingangularvelocit@ ; `string'
PUBLIC	??_C@_0BM@EDKEOBKF@timeeventemittingdirectionx@	; `string'
PUBLIC	??_C@_0BM@FKLPNAOE@timeeventemittingdirectiony@	; `string'
PUBLIC	??_C@_0BM@HBJCIDCH@timeeventemittingdirectionz@	; `string'
PUBLIC	??_C@_0BK@JMDFAGCJ@timeeventemittingvelocity@	; `string'
PUBLIC	??_C@_0CA@KBEMNMAO@timeeventemissioncountpersecond@ ; `string'
PUBLIC	??_C@_0BC@IBAOECEB@timeeventlifetime@		; `string'
PUBLIC	??_C@_0P@NKCDAPOH@timeeventsizex@		; `string'
PUBLIC	??_C@_0P@MDDIDOKG@timeeventsizey@		; `string'
PUBLIC	??_C@_0BB@HGNFNICN@particleproperty@		; `string'
PUBLIC	??_C@_0N@BPEOGKBI@srcblendtype@			; `string'
PUBLIC	??_C@_0O@FMHKLBEP@destblendtype@		; `string'
PUBLIC	??_C@_0BD@DAMHAFBJ@coloroperationtype@		; `string'
PUBLIC	??_C@_0O@EJACNAIE@billboardtype@		; `string'
PUBLIC	??_C@_0N@HLMOOIDA@rotationtype@			; `string'
PUBLIC	??_C@_0O@FAOBKFID@rotationspeed@		; `string'
PUBLIC	??_C@_0BM@BGHFBHHG@rotationrandomstartingbegin@	; `string'
PUBLIC	??_C@_0BK@DKMEPDJP@rotationrandomstartingend@	; `string'
PUBLIC	??_C@_0N@JFNGIJMG@attachenable@			; `string'
PUBLIC	??_C@_0O@DFPNMBJD@stretchenable@		; `string'
PUBLIC	??_C@_0L@BIBLFGDP@texanitype@			; `string'
PUBLIC	??_C@_0M@PDIDMMDH@texanidelay@			; `string'
PUBLIC	??_C@_0BN@DIHGKMNJ@texanirandomstartframeenable@ ; `string'
PUBLIC	??_C@_07GFBFDLBM@gravity@			; `string'
PUBLIC	??_C@_0BB@BHFJHILP@timeeventgravity@		; `string'
PUBLIC	??_C@_0O@IJAIPGAL@airresistance@		; `string'
PUBLIC	??_C@_0BH@IPGEOMGJ@timeeventairresistance@	; `string'
PUBLIC	??_C@_0BA@GAPFNHG@timeeventscalex@		; `string'
PUBLIC	??_C@_0BA@BPBEGMDH@timeeventscaley@		; `string'
PUBLIC	??_C@_0BC@ICGDLNPI@timeeventcolorred@		; `string'
PUBLIC	??_C@_0BE@OFLANGNK@timeeventcolorgreen@		; `string'
PUBLIC	??_C@_0BD@KLGCJHDO@timeeventcolorblue@		; `string'
PUBLIC	??_C@_0P@KALIPJCI@timeeventalpha@		; `string'
PUBLIC	??_C@_0BC@KIMDBAHB@timeeventrotation@		; `string'
PUBLIC	??_C@_0N@HNMKMDCI@texturefiles@			; `string'
PUBLIC	?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::ms_kPool
PUBLIC	??_7?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`vftable'
PUBLIC	??_7?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`vftable'
PUBLIC	??_7?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`vftable'
PUBLIC	?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::ms_kPool
PUBLIC	??_7?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`vftable'
PUBLIC	??_7?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`vftable'
PUBLIC	??_7?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`vftable'
PUBLIC	??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@	; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CParticleSystemData@@6B@			; CParticleSystemData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCParticleSystemData@@@8			; CParticleSystemData `RTTI Type Descriptor'
PUBLIC	??_R3CParticleSystemData@@8			; CParticleSystemData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CParticleSystemData@@8			; CParticleSystemData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CParticleSystemData@@8		; CParticleSystemData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CEffectElementBase@@8		; CEffectElementBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCEffectElementBase@@@8			; CEffectElementBase `RTTI Type Descriptor'
PUBLIC	??_R3CEffectElementBase@@8			; CEffectElementBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CEffectElementBase@@8			; CEffectElementBase::`RTTI Base Class Array'
PUBLIC	??_R4CBaseDecorator@NEffectUpdateDecorator@@6B@	; NEffectUpdateDecorator::CBaseDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBaseDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CBaseDecorator `RTTI Type Descriptor'
PUBLIC	??_R3CBaseDecorator@NEffectUpdateDecorator@@8	; NEffectUpdateDecorator::CBaseDecorator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseDecorator@NEffectUpdateDecorator@@8	; NEffectUpdateDecorator::CBaseDecorator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CBaseDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CHeaderDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CHeaderDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCHeaderDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CHeaderDecorator `RTTI Type Descriptor'
PUBLIC	??_R3CHeaderDecorator@NEffectUpdateDecorator@@8	; NEffectUpdateDecorator::CHeaderDecorator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CHeaderDecorator@NEffectUpdateDecorator@@8	; NEffectUpdateDecorator::CHeaderDecorator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CHeaderDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CHeaderDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AV?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CHeaderDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CHeaderDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R4CNullDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CNullDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCNullDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CNullDecorator `RTTI Type Descriptor'
PUBLIC	??_R3CNullDecorator@NEffectUpdateDecorator@@8	; NEffectUpdateDecorator::CNullDecorator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CNullDecorator@NEffectUpdateDecorator@@8	; NEffectUpdateDecorator::CNullDecorator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CNullDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CNullDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AV?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CNullDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CNullDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<float> `RTTI Type Descriptor'
PUBLIC	??_R3?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> > `RTTI Type Descriptor'
PUBLIC	??_R3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> `RTTI Type Descriptor'
PUBLIC	??_R3?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> > `RTTI Type Descriptor'
PUBLIC	??_R3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`RTTI Complete Object Locator'
PUBLIC	??_R4CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CTextureAnimationCWDecorator `RTTI Type Descriptor'
PUBLIC	??_R3CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AV?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R4CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator `RTTI Type Descriptor'
PUBLIC	??_R3CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AV?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R4CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator `RTTI Type Descriptor'
PUBLIC	??_R3CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AV?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R4CAirResistanceDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CAirResistanceDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCAirResistanceDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CAirResistanceDecorator `RTTI Type Descriptor'
PUBLIC	??_R3CAirResistanceDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CAirResistanceDecorator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAirResistanceDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CAirResistanceDecorator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAirResistanceDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CAirResistanceDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AV?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CAirResistanceDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CAirResistanceDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R4CGravityDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CGravityDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGravityDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CGravityDecorator `RTTI Type Descriptor'
PUBLIC	??_R3CGravityDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CGravityDecorator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGravityDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CGravityDecorator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGravityDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CGravityDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AV?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CGravityDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CGravityDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R4CRotationDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CRotationDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRotationDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CRotationDecorator `RTTI Type Descriptor'
PUBLIC	??_R3CRotationDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CRotationDecorator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRotationDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CRotationDecorator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRotationDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CRotationDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AV?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CRotationDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CRotationDecorator::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Complete Object Locator'
PUBLIC	__real@00000000
PUBLIC	__real@3eb0c6f7a0b5ed8d
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@437f0000
PUBLIC	__real@43800000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	_atexit:PROC
EXTRN	___std_terminate:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?GetOnlyPathName@@YAPBDPBD@Z:PROC		; GetOnlyPathName
EXTRN	?IsGlobalFileName@@YA_NPBD@Z:PROC		; IsGlobalFileName
EXTRN	?GetFileName@CTextFileLoader@@QAEPBDXZ:PROC	; CTextFileLoader::GetFileName
EXTRN	?SetChildNode@CTextFileLoader@@QAEHPBD@Z:PROC	; CTextFileLoader::SetChildNode
EXTRN	?SetParentNode@CTextFileLoader@@QAEHXZ:PROC	; CTextFileLoader::SetParentNode
EXTRN	?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z:PROC ; CTextFileLoader::GetTokenVector
EXTRN	?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z:PROC ; CTextFileLoader::GetTokenBoolean
EXTRN	?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z:PROC ; CTextFileLoader::GetTokenByte
EXTRN	?GetTokenWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAG@Z:PROC ; CTextFileLoader::GetTokenWord
EXTRN	?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z:PROC ; CTextFileLoader::GetTokenInteger
EXTRN	?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z:PROC ; CTextFileLoader::GetTokenDoubleWord
EXTRN	?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z:PROC ; CTextFileLoader::GetTokenFloat
EXTRN	?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z:PROC ; CTextFileLoader::GetTokenPosition
EXTRN	?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z:PROC ; GetTokenTimeEventFloat
EXTRN	??0CEffectElementBase@@QAE@XZ:PROC		; CEffectElementBase::CEffectElementBase
EXTRN	??1CEffectElementBase@@UAE@XZ:PROC		; CEffectElementBase::~CEffectElementBase
EXTRN	?Clear@CEffectElementBase@@QAEXXZ:PROC		; CEffectElementBase::Clear
EXTRN	??0CEmitterProperty@@QAE@XZ:PROC		; CEmitterProperty::CEmitterProperty
EXTRN	??1CEmitterProperty@@UAE@XZ:PROC		; CEmitterProperty::~CEmitterProperty
EXTRN	?Clear@CEmitterProperty@@QAEXXZ:PROC		; CEmitterProperty::Clear
EXTRN	??0CParticleProperty@@QAE@XZ:PROC		; CParticleProperty::CParticleProperty
EXTRN	??1CParticleProperty@@UAE@XZ:PROC		; CParticleProperty::~CParticleProperty
EXTRN	?Clear@CParticleProperty@@QAEXXZ:PROC		; CParticleProperty::Clear
EXTRN	?InsertTexture@CParticleProperty@@QAEXPBD@Z:PROC ; CParticleProperty::InsertTexture
EXTRN	?SetTexture@CParticleProperty@@QAE_NPBD@Z:PROC	; CParticleProperty::SetTexture
EXTRN	??_ECParticleSystemData@@UAEPAXI@Z:PROC		; CParticleSystemData::`vector deleting destructor'
EXTRN	?random@@YAKXZ:PROC				; random
EXTRN	?random_range@@YAJJJ@Z:PROC			; random_range
EXTRN	??_ECBaseDecorator@NEffectUpdateDecorator@@UAEPAXI@Z:PROC ; NEffectUpdateDecorator::CBaseDecorator::`vector deleting destructor'
EXTRN	??_E?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`vector deleting destructor'
EXTRN	??_ECHeaderDecorator@NEffectUpdateDecorator@@UAEPAXI@Z:PROC ; NEffectUpdateDecorator::CHeaderDecorator::`vector deleting destructor'
EXTRN	??_E?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`vector deleting destructor'
EXTRN	??_ECNullDecorator@NEffectUpdateDecorator@@UAEPAXI@Z:PROC ; NEffectUpdateDecorator::CNullDecorator::`vector deleting destructor'
EXTRN	??_E?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vector deleting destructor'
EXTRN	??_ECTextureAnimationCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z:PROC ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`vector deleting destructor'
EXTRN	??_E?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vector deleting destructor'
EXTRN	??_ECTextureAnimationCCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z:PROC ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`vector deleting destructor'
EXTRN	??_E?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vector deleting destructor'
EXTRN	??_ECTextureAnimationRandomDecorator@NEffectUpdateDecorator@@UAEPAXI@Z:PROC ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`vector deleting destructor'
EXTRN	??_E?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`vector deleting destructor'
EXTRN	?__Excute@CAirResistanceDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z:PROC ; NEffectUpdateDecorator::CAirResistanceDecorator::__Excute
EXTRN	?__Clone@CAirResistanceDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z:PROC ; NEffectUpdateDecorator::CAirResistanceDecorator::__Clone
EXTRN	??_ECAirResistanceDecorator@NEffectUpdateDecorator@@UAEPAXI@Z:PROC ; NEffectUpdateDecorator::CAirResistanceDecorator::`vector deleting destructor'
EXTRN	??_E?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`vector deleting destructor'
EXTRN	?__Excute@CGravityDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z:PROC ; NEffectUpdateDecorator::CGravityDecorator::__Excute
EXTRN	?__Clone@CGravityDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z:PROC ; NEffectUpdateDecorator::CGravityDecorator::__Clone
EXTRN	??_ECGravityDecorator@NEffectUpdateDecorator@@UAEPAXI@Z:PROC ; NEffectUpdateDecorator::CGravityDecorator::`vector deleting destructor'
EXTRN	??_E?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`vector deleting destructor'
EXTRN	?__Excute@CRotationDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z:PROC ; NEffectUpdateDecorator::CRotationDecorator::__Excute
EXTRN	?__Clone@CRotationDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z:PROC ; NEffectUpdateDecorator::CRotationDecorator::__Clone
EXTRN	??_ECRotationDecorator@NEffectUpdateDecorator@@UAEPAXI@Z:PROC ; NEffectUpdateDecorator::CRotationDecorator::`vector deleting destructor'
EXTRN	??_E?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`vector deleting destructor'
EXTRN	??_E?$CTimeEventDecorator@M@NEffectUpdateDecorator@@UAEPAXI@Z:PROC ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`vector deleting destructor'
EXTRN	??_E?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`vector deleting destructor'
EXTRN	??_E?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@UAEPAXI@Z:PROC ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftoui3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
CRT$XCU	SEGMENT
??ms_kPool$initializer$@CParticleSystemData@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A@@YAXXZ ; ??ms_kPool$initializer$@CParticleSystemData@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@43800000
CONST	SEGMENT
__real@43800000 DD 043800000r			; 256
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3eb0c6f7a0b5ed8d
CONST	SEGMENT
__real@3eb0c6f7a0b5ed8d DQ 03eb0c6f7a0b5ed8dr	; 1e-06
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R4?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@ DD 00H ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@ DD 00H ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R4CRotationDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@
rdata$r	SEGMENT
??_R4CRotationDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@ DD 00H ; NEffectUpdateDecorator::CRotationDecorator::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCRotationDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CRotationDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CPooledObject@VCRotationDecorator@NEffectUpdateDec'
	DB	'orator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRotationDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRotationDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R0?AVCRotationDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CRotationDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRotationDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2CRotationDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R2CRotationDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R1A@?0A@EA@CRotationDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CRotationDecorator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8
	DD	FLAT:??_R1M@?0A@EA@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CRotationDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R3CRotationDecorator@NEffectUpdateDecorator@@8 DD 00H ; NEffectUpdateDecorator::CRotationDecorator::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2CRotationDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRotationDecorator@NEffectUpdateDecorator@@@8
data$rs	SEGMENT
??_R0?AVCRotationDecorator@NEffectUpdateDecorator@@@8 DD FLAT:??_7type_info@@6B@ ; NEffectUpdateDecorator::CRotationDecorator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRotationDecorator@NEffectUpdateDecorator@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CRotationDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
rdata$r	SEGMENT
??_R4CRotationDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD 00H ; NEffectUpdateDecorator::CRotationDecorator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRotationDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CRotationDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R4CGravityDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@
rdata$r	SEGMENT
??_R4CGravityDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@ DD 00H ; NEffectUpdateDecorator::CGravityDecorator::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCGravityDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CGravityDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CPooledObject@VCGravityDecorator@NEffectUpdateDeco'
	DB	'rator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGravityDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGravityDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R0?AVCGravityDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CGravityDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGravityDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2CGravityDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R2CGravityDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R1A@?0A@EA@CGravityDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CGravityDecorator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8
	DD	FLAT:??_R1M@?0A@EA@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CGravityDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R3CGravityDecorator@NEffectUpdateDecorator@@8 DD 00H	; NEffectUpdateDecorator::CGravityDecorator::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2CGravityDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGravityDecorator@NEffectUpdateDecorator@@@8
data$rs	SEGMENT
??_R0?AVCGravityDecorator@NEffectUpdateDecorator@@@8 DD FLAT:??_7type_info@@6B@ ; NEffectUpdateDecorator::CGravityDecorator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGravityDecorator@NEffectUpdateDecorator@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CGravityDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
rdata$r	SEGMENT
??_R4CGravityDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD 00H ; NEffectUpdateDecorator::CGravityDecorator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGravityDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CGravityDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R4CAirResistanceDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@
rdata$r	SEGMENT
??_R4CAirResistanceDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@ DD 00H ; NEffectUpdateDecorator::CAirResistanceDecorator::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCAirResistanceDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CAirResistanceDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CPooledObject@VCAirResistanceDecorator@NEffectUpda'
	DB	'teDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CAirResistanceDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAirResistanceDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R0?AVCAirResistanceDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CAirResistanceDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAirResistanceDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2CAirResistanceDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R2CAirResistanceDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R1A@?0A@EA@CAirResistanceDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CAirResistanceDecorator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8
	DD	FLAT:??_R1M@?0A@EA@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CAirResistanceDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R3CAirResistanceDecorator@NEffectUpdateDecorator@@8 DD 00H ; NEffectUpdateDecorator::CAirResistanceDecorator::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2CAirResistanceDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAirResistanceDecorator@NEffectUpdateDecorator@@@8
data$rs	SEGMENT
??_R0?AVCAirResistanceDecorator@NEffectUpdateDecorator@@@8 DD FLAT:??_7type_info@@6B@ ; NEffectUpdateDecorator::CAirResistanceDecorator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAirResistanceDecorator@NEffectUpdateDecorator@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CAirResistanceDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
rdata$r	SEGMENT
??_R4CAirResistanceDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD 00H ; NEffectUpdateDecorator::CAirResistanceDecorator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCAirResistanceDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CAirResistanceDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R4CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@
rdata$r	SEGMENT
??_R4CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@ DD 00H ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CPooledObject@VCTextureAnimationRandomDecorator@NE'
	DB	'ffectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R0?AVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R2CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R1A@?0A@EA@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8
	DD	FLAT:??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R3CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8 DD 00H ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@8
data$rs	SEGMENT
??_R0?AVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@8 DD FLAT:??_7type_info@@6B@ ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCTextureAnimationRandomDecorator@NEffectUpdateDecora'
	DB	'tor@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
rdata$r	SEGMENT
??_R4CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD 00H ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R4CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@
rdata$r	SEGMENT
??_R4CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@ DD 00H ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CPooledObject@VCTextureAnimationCCWDecorator@NEffe'
	DB	'ctUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R0?AVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R2CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R1A@?0A@EA@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8
	DD	FLAT:??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R3CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8 DD 00H ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@8
data$rs	SEGMENT
??_R0?AVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@8 DD FLAT:??_7type_info@@6B@ ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCTextureAnimationCCWDecorator@NEffectUpdateDecorator'
	DB	'@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
rdata$r	SEGMENT
??_R4CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD 00H ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R4CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@
rdata$r	SEGMENT
??_R4CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@ DD 00H ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CPooledObject@VCTextureAnimationCWDecorator@NEffec'
	DB	'tUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R0?AVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R2CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R1A@?0A@EA@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8
	DD	FLAT:??_R1M@?0A@EA@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R3CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8 DD 00H ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@8
data$rs	SEGMENT
??_R0?AVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@8 DD FLAT:??_7type_info@@6B@ ; NEffectUpdateDecorator::CTextureAnimationCWDecorator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCTextureAnimationCWDecorator@NEffectUpdateDecorator@'
	DB	'@', 00H
data$rs	ENDS
;	COMDAT ??_R4CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
rdata$r	SEGMENT
??_R4CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD 00H ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CTextureAnimationCWDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@
rdata$r	SEGMENT
??_R4?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@ DD 00H ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 DD 00H ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@'
	DB	'@NEffectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8 DD FLAT:??_R0?AV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R2?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8 DD FLAT:??_R1A@?0A@EA@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8
	DD	FLAT:??_R1M@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R3?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8 DD 00H ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@8
data$rs	SEGMENT
??_R0?AV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@8 DD FLAT:??_7type_info@@6B@ ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDec'
	DB	'orator@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
rdata$r	SEGMENT
??_R4?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD 00H ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@
rdata$r	SEGMENT
??_R4?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@ DD 00H ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 DD 00H ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpda'
	DB	'teDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8 DD FLAT:??_R0?AV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R2?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8 DD FLAT:??_R1A@?0A@EA@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8
	DD	FLAT:??_R1M@?0A@EA@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R3?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8 DD 00H ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@8
data$rs	SEGMENT
??_R0?AV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@8 DD FLAT:??_7type_info@@6B@ ; NEffectUpdateDecorator::CTimeEventDecorator<float> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
rdata$r	SEGMENT
??_R4?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD 00H ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3?$CTimeEventDecorator@M@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R4CNullDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@
rdata$r	SEGMENT
??_R4CNullDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@ DD 00H ; NEffectUpdateDecorator::CNullDecorator::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCNullDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CNullDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CPooledObject@VCNullDecorator@NEffectUpdateDecorat'
	DB	'or@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CNullDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CNullDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R0?AVCNullDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CNullDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CNullDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2CNullDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R2CNullDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R1A@?0A@EA@CNullDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CNullDecorator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8
	DD	FLAT:??_R1M@?0A@EA@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CNullDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R3CNullDecorator@NEffectUpdateDecorator@@8 DD 00H	; NEffectUpdateDecorator::CNullDecorator::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2CNullDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCNullDecorator@NEffectUpdateDecorator@@@8
data$rs	SEGMENT
??_R0?AVCNullDecorator@NEffectUpdateDecorator@@@8 DD FLAT:??_7type_info@@6B@ ; NEffectUpdateDecorator::CNullDecorator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCNullDecorator@NEffectUpdateDecorator@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CNullDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
rdata$r	SEGMENT
??_R4CNullDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD 00H ; NEffectUpdateDecorator::CNullDecorator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCNullDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CNullDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R4CHeaderDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@
rdata$r	SEGMENT
??_R4CHeaderDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@ DD 00H ; NEffectUpdateDecorator::CHeaderDecorator::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCHeaderDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CHeaderDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecor'
	DB	'ator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CHeaderDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CHeaderDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R0?AVCHeaderDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CHeaderDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CHeaderDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2CHeaderDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R2CHeaderDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R1A@?0A@EA@CHeaderDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CHeaderDecorator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8
	DD	FLAT:??_R1M@?0A@EA@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CHeaderDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R3CHeaderDecorator@NEffectUpdateDecorator@@8 DD 00H	; NEffectUpdateDecorator::CHeaderDecorator::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2CHeaderDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCHeaderDecorator@NEffectUpdateDecorator@@@8
data$rs	SEGMENT
??_R0?AVCHeaderDecorator@NEffectUpdateDecorator@@@8 DD FLAT:??_7type_info@@6B@ ; NEffectUpdateDecorator::CHeaderDecorator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCHeaderDecorator@NEffectUpdateDecorator@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CHeaderDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
rdata$r	SEGMENT
??_R4CHeaderDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD 00H ; NEffectUpdateDecorator::CHeaderDecorator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCHeaderDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CHeaderDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R0?AVCBaseDecorator@NEffectUpdateDecorator@@@8 ; NEffectUpdateDecorator::CBaseDecorator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R2CBaseDecorator@NEffectUpdateDecorator@@8 DD FLAT:??_R1A@?0A@EA@CBaseDecorator@NEffectUpdateDecorator@@8 ; NEffectUpdateDecorator::CBaseDecorator::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CBaseDecorator@NEffectUpdateDecorator@@8
rdata$r	SEGMENT
??_R3CBaseDecorator@NEffectUpdateDecorator@@8 DD 00H	; NEffectUpdateDecorator::CBaseDecorator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CBaseDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseDecorator@NEffectUpdateDecorator@@@8
data$rs	SEGMENT
??_R0?AVCBaseDecorator@NEffectUpdateDecorator@@@8 DD FLAT:??_7type_info@@6B@ ; NEffectUpdateDecorator::CBaseDecorator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBaseDecorator@NEffectUpdateDecorator@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CBaseDecorator@NEffectUpdateDecorator@@6B@
rdata$r	SEGMENT
??_R4CBaseDecorator@NEffectUpdateDecorator@@6B@ DD 00H	; NEffectUpdateDecorator::CBaseDecorator::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBaseDecorator@NEffectUpdateDecorator@@@8
	DD	FLAT:??_R3CBaseDecorator@NEffectUpdateDecorator@@8
rdata$r	ENDS
;	COMDAT ??_R2CEffectElementBase@@8
rdata$r	SEGMENT
??_R2CEffectElementBase@@8 DD FLAT:??_R1A@?0A@EA@CEffectElementBase@@8 ; CEffectElementBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CEffectElementBase@@8
rdata$r	SEGMENT
??_R3CEffectElementBase@@8 DD 00H			; CEffectElementBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CEffectElementBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCEffectElementBase@@@8
data$rs	SEGMENT
??_R0?AVCEffectElementBase@@@8 DD FLAT:??_7type_info@@6B@ ; CEffectElementBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCEffectElementBase@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CEffectElementBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CEffectElementBase@@8 DD FLAT:??_R0?AVCEffectElementBase@@@8 ; CEffectElementBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CEffectElementBase@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CParticleSystemData@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CParticleSystemData@@8 DD FLAT:??_R0?AVCParticleSystemData@@@8 ; CParticleSystemData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CParticleSystemData@@8
rdata$r	ENDS
;	COMDAT ??_R2CParticleSystemData@@8
rdata$r	SEGMENT
??_R2CParticleSystemData@@8 DD FLAT:??_R1A@?0A@EA@CParticleSystemData@@8 ; CParticleSystemData::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CEffectElementBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CParticleSystemData@@8
rdata$r	SEGMENT
??_R3CParticleSystemData@@8 DD 00H			; CParticleSystemData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CParticleSystemData@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCParticleSystemData@@@8
data$rs	SEGMENT
??_R0?AVCParticleSystemData@@@8 DD FLAT:??_7type_info@@6B@ ; CParticleSystemData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCParticleSystemData@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CParticleSystemData@@6B@
rdata$r	SEGMENT
??_R4CParticleSystemData@@6B@ DD 00H			; CParticleSystemData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCParticleSystemData@@@8
	DD	FLAT:??_R3CParticleSystemData@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
CONST	SEGMENT
??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@ DB 'invalid vector subscri'
	DB	'pt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@
CONST	SEGMENT
??_7?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@ DD FLAT:??_R4?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`vftable'
	DD	FLAT:??_E?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@WM@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
CONST	SEGMENT
??_7?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD FLAT:??_R4?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`vftable'
	DD	FLAT:??_E?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@UAEPAXI@Z
	DD	FLAT:?__Excute@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
	DD	FLAT:?__Clone@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
CONST	ENDS
;	COMDAT ??_7?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`vftable'
	DD	FLAT:??_E?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@
CONST	SEGMENT
??_7?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@ DD FLAT:??_R4?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`vftable'
	DD	FLAT:??_E?$CTimeEventDecorator@M@NEffectUpdateDecorator@@WM@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
CONST	SEGMENT
??_7?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD FLAT:??_R4?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`vftable'
	DD	FLAT:??_E?$CTimeEventDecorator@M@NEffectUpdateDecorator@@UAEPAXI@Z
	DD	FLAT:?__Excute@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
	DD	FLAT:?__Clone@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
CONST	ENDS
;	COMDAT ??_7?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`vftable'
	DD	FLAT:??_E?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_C@_0N@HNMKMDCI@texturefiles@
CONST	SEGMENT
??_C@_0N@HNMKMDCI@texturefiles@ DB 'texturefiles', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KIMDBAHB@timeeventrotation@
CONST	SEGMENT
??_C@_0BC@KIMDBAHB@timeeventrotation@ DB 'timeeventrotation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KALIPJCI@timeeventalpha@
CONST	SEGMENT
??_C@_0P@KALIPJCI@timeeventalpha@ DB 'timeeventalpha', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KLGCJHDO@timeeventcolorblue@
CONST	SEGMENT
??_C@_0BD@KLGCJHDO@timeeventcolorblue@ DB 'timeeventcolorblue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OFLANGNK@timeeventcolorgreen@
CONST	SEGMENT
??_C@_0BE@OFLANGNK@timeeventcolorgreen@ DB 'timeeventcolorgreen', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ICGDLNPI@timeeventcolorred@
CONST	SEGMENT
??_C@_0BC@ICGDLNPI@timeeventcolorred@ DB 'timeeventcolorred', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BPBEGMDH@timeeventscaley@
CONST	SEGMENT
??_C@_0BA@BPBEGMDH@timeeventscaley@ DB 'timeeventscaley', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GAPFNHG@timeeventscalex@
CONST	SEGMENT
??_C@_0BA@GAPFNHG@timeeventscalex@ DB 'timeeventscalex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IPGEOMGJ@timeeventairresistance@
CONST	SEGMENT
??_C@_0BH@IPGEOMGJ@timeeventairresistance@ DB 'timeeventairresistance', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IJAIPGAL@airresistance@
CONST	SEGMENT
??_C@_0O@IJAIPGAL@airresistance@ DB 'airresistance', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BHFJHILP@timeeventgravity@
CONST	SEGMENT
??_C@_0BB@BHFJHILP@timeeventgravity@ DB 'timeeventgravity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07GFBFDLBM@gravity@
CONST	SEGMENT
??_C@_07GFBFDLBM@gravity@ DB 'gravity', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DIHGKMNJ@texanirandomstartframeenable@
CONST	SEGMENT
??_C@_0BN@DIHGKMNJ@texanirandomstartframeenable@ DB 'texanirandomstartfra'
	DB	'meenable', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PDIDMMDH@texanidelay@
CONST	SEGMENT
??_C@_0M@PDIDMMDH@texanidelay@ DB 'texanidelay', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BIBLFGDP@texanitype@
CONST	SEGMENT
??_C@_0L@BIBLFGDP@texanitype@ DB 'texanitype', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DFPNMBJD@stretchenable@
CONST	SEGMENT
??_C@_0O@DFPNMBJD@stretchenable@ DB 'stretchenable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JFNGIJMG@attachenable@
CONST	SEGMENT
??_C@_0N@JFNGIJMG@attachenable@ DB 'attachenable', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DKMEPDJP@rotationrandomstartingend@
CONST	SEGMENT
??_C@_0BK@DKMEPDJP@rotationrandomstartingend@ DB 'rotationrandomstartinge'
	DB	'nd', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BGHFBHHG@rotationrandomstartingbegin@
CONST	SEGMENT
??_C@_0BM@BGHFBHHG@rotationrandomstartingbegin@ DB 'rotationrandomstartin'
	DB	'gbegin', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FAOBKFID@rotationspeed@
CONST	SEGMENT
??_C@_0O@FAOBKFID@rotationspeed@ DB 'rotationspeed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HLMOOIDA@rotationtype@
CONST	SEGMENT
??_C@_0N@HLMOOIDA@rotationtype@ DB 'rotationtype', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EJACNAIE@billboardtype@
CONST	SEGMENT
??_C@_0O@EJACNAIE@billboardtype@ DB 'billboardtype', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DAMHAFBJ@coloroperationtype@
CONST	SEGMENT
??_C@_0BD@DAMHAFBJ@coloroperationtype@ DB 'coloroperationtype', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FMHKLBEP@destblendtype@
CONST	SEGMENT
??_C@_0O@FMHKLBEP@destblendtype@ DB 'destblendtype', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BPEOGKBI@srcblendtype@
CONST	SEGMENT
??_C@_0N@BPEOGKBI@srcblendtype@ DB 'srcblendtype', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HGNFNICN@particleproperty@
CONST	SEGMENT
??_C@_0BB@HGNFNICN@particleproperty@ DB 'particleproperty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MDDIDOKG@timeeventsizey@
CONST	SEGMENT
??_C@_0P@MDDIDOKG@timeeventsizey@ DB 'timeeventsizey', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NKCDAPOH@timeeventsizex@
CONST	SEGMENT
??_C@_0P@NKCDAPOH@timeeventsizex@ DB 'timeeventsizex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IBAOECEB@timeeventlifetime@
CONST	SEGMENT
??_C@_0BC@IBAOECEB@timeeventlifetime@ DB 'timeeventlifetime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KBEMNMAO@timeeventemissioncountpersecond@
CONST	SEGMENT
??_C@_0CA@KBEMNMAO@timeeventemissioncountpersecond@ DB 'timeeventemission'
	DB	'countpersecond', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JMDFAGCJ@timeeventemittingvelocity@
CONST	SEGMENT
??_C@_0BK@JMDFAGCJ@timeeventemittingvelocity@ DB 'timeeventemittingveloci'
	DB	'ty', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HBJCIDCH@timeeventemittingdirectionz@
CONST	SEGMENT
??_C@_0BM@HBJCIDCH@timeeventemittingdirectionz@ DB 'timeeventemittingdire'
	DB	'ctionz', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@FKLPNAOE@timeeventemittingdirectiony@
CONST	SEGMENT
??_C@_0BM@FKLPNAOE@timeeventemittingdirectiony@ DB 'timeeventemittingdire'
	DB	'ctiony', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@EDKEOBKF@timeeventemittingdirectionx@
CONST	SEGMENT
??_C@_0BM@EDKEOBKF@timeeventemittingdirectionx@ DB 'timeeventemittingdire'
	DB	'ctionx', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@BEJHCOPI@timeeventemittingangularvelocit@
CONST	SEGMENT
??_C@_0CB@BEJHCOPI@timeeventemittingangularvelocit@ DB 'timeeventemitting'
	DB	'angularvelocity', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EOBNDMCN@timeeventemittingsize@
CONST	SEGMENT
??_C@_0BG@EOBNDMCN@timeeventemittingsize@ DB 'timeeventemittingsize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DDGDKONG@emittingdirection@
CONST	SEGMENT
??_C@_0BC@DDGDKONG@emittingdirection@ DB 'emittingdirection', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JPHOPPGG@emitteremitfromedgeflag@
CONST	SEGMENT
??_C@_0BI@JPHOPPGG@emitteremitfromedgeflag@ DB 'emitteremitfromedgeflag', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CFPFJLBH@emittingradius@
CONST	SEGMENT
??_C@_0P@CFPFJLBH@emittingradius@ DB 'emittingradius', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JELCEBGI@emittingsize@
CONST	SEGMENT
??_C@_0N@JELCEBGI@emittingsize@ DB 'emittingsize', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NHCLCKPF@emitteradvancedtype@
CONST	SEGMENT
??_C@_0BE@NHCLCKPF@emitteradvancedtype@ DB 'emitteradvancedtype', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CEDHOJLK@emittershape@
CONST	SEGMENT
??_C@_0N@CEDHOJLK@emittershape@ DB 'emittershape', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HBCOMICA@loopcount@
CONST	SEGMENT
??_C@_09HBCOMICA@loopcount@ DB 'loopcount', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HFAFNHAP@cycleloopenable@
CONST	SEGMENT
??_C@_0BA@HFAFNHAP@cycleloopenable@ DB 'cycleloopenable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CMAFBHMP@cyclelength@
CONST	SEGMENT
??_C@_0M@CMAFBHMP@cyclelength@ DB 'cyclelength', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GFCINCLJ@maxemissioncount@
CONST	SEGMENT
??_C@_0BB@GFCINCLJ@maxemissioncount@ DB 'maxemissioncount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BHDCJGBH@emitterproperty@
CONST	SEGMENT
??_C@_0BA@BHDCJGBH@emitterproperty@ DB 'emitterproperty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CRotationDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@
CONST	SEGMENT
??_7CRotationDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@ DD FLAT:??_R4CRotationDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CRotationDecorator::`vftable'
	DD	FLAT:??_ECRotationDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CRotationDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
CONST	SEGMENT
??_7CRotationDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD FLAT:??_R4CRotationDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CRotationDecorator::`vftable'
	DD	FLAT:??_ECRotationDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
	DD	FLAT:?__Excute@CRotationDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
	DD	FLAT:?__Clone@CRotationDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
CONST	ENDS
;	COMDAT ??_7?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
	DD	FLAT:??_E?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7CGravityDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@
CONST	SEGMENT
??_7CGravityDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@ DD FLAT:??_R4CGravityDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CGravityDecorator::`vftable'
	DD	FLAT:??_ECGravityDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CGravityDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
CONST	SEGMENT
??_7CGravityDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD FLAT:??_R4CGravityDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CGravityDecorator::`vftable'
	DD	FLAT:??_ECGravityDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
	DD	FLAT:?__Excute@CGravityDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
	DD	FLAT:?__Clone@CGravityDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
CONST	ENDS
;	COMDAT ??_7?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
	DD	FLAT:??_E?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7CAirResistanceDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@
CONST	SEGMENT
??_7CAirResistanceDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@ DD FLAT:??_R4CAirResistanceDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CAirResistanceDecorator::`vftable'
	DD	FLAT:??_ECAirResistanceDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CAirResistanceDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
CONST	SEGMENT
??_7CAirResistanceDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD FLAT:??_R4CAirResistanceDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CAirResistanceDecorator::`vftable'
	DD	FLAT:??_ECAirResistanceDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
	DD	FLAT:?__Excute@CAirResistanceDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
	DD	FLAT:?__Clone@CAirResistanceDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
CONST	ENDS
;	COMDAT ??_7?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
	DD	FLAT:??_E?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@
CONST	SEGMENT
??_7CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@ DD FLAT:??_R4CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`vftable'
	DD	FLAT:??_ECTextureAnimationRandomDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
CONST	SEGMENT
??_7CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD FLAT:??_R4CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`vftable'
	DD	FLAT:??_ECTextureAnimationRandomDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
	DD	FLAT:?__Excute@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
	DD	FLAT:?__Clone@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
CONST	ENDS
;	COMDAT ??_7?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
	DD	FLAT:??_E?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@
CONST	SEGMENT
??_7CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@ DD FLAT:??_R4CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`vftable'
	DD	FLAT:??_ECTextureAnimationCCWDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
CONST	SEGMENT
??_7CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD FLAT:??_R4CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`vftable'
	DD	FLAT:??_ECTextureAnimationCCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
	DD	FLAT:?__Excute@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
	DD	FLAT:?__Clone@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
CONST	ENDS
;	COMDAT ??_7?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
	DD	FLAT:??_E?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@
CONST	SEGMENT
??_7CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@ DD FLAT:??_R4CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`vftable'
	DD	FLAT:??_ECTextureAnimationCWDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
CONST	SEGMENT
??_7CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD FLAT:??_R4CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`vftable'
	DD	FLAT:??_ECTextureAnimationCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
	DD	FLAT:?__Excute@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
	DD	FLAT:?__Clone@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
CONST	ENDS
;	COMDAT ??_7?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
	DD	FLAT:??_E?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7CNullDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@
CONST	SEGMENT
??_7CNullDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@ DD FLAT:??_R4CNullDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CNullDecorator::`vftable'
	DD	FLAT:??_ECNullDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CNullDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
CONST	SEGMENT
??_7CNullDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD FLAT:??_R4CNullDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CNullDecorator::`vftable'
	DD	FLAT:??_ECNullDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
	DD	FLAT:?__Excute@CNullDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
	DD	FLAT:?__Clone@CNullDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
CONST	ENDS
;	COMDAT ??_7?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`vftable'
	DD	FLAT:??_E?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7CHeaderDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@
CONST	SEGMENT
??_7CHeaderDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@ DD FLAT:??_R4CHeaderDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@ ; NEffectUpdateDecorator::CHeaderDecorator::`vftable'
	DD	FLAT:??_ECHeaderDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CHeaderDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
CONST	SEGMENT
??_7CHeaderDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ DD FLAT:??_R4CHeaderDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@ ; NEffectUpdateDecorator::CHeaderDecorator::`vftable'
	DD	FLAT:??_ECHeaderDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
	DD	FLAT:?__Excute@CHeaderDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
	DD	FLAT:?__Clone@CHeaderDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
CONST	ENDS
;	COMDAT ??_7?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
	DD	FLAT:??_E?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
CONST	SEGMENT
??_7CBaseDecorator@NEffectUpdateDecorator@@6B@ DD FLAT:??_R4CBaseDecorator@NEffectUpdateDecorator@@6B@ ; NEffectUpdateDecorator::CBaseDecorator::`vftable'
	DD	FLAT:??_ECBaseDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7CParticleSystemData@@6B@
CONST	SEGMENT
??_7CParticleSystemData@@6B@ DD FLAT:??_R4CParticleSystemData@@6B@ ; CParticleSystemData::`vftable'
	DD	FLAT:??_ECParticleSystemData@@UAEPAXI@Z
	DD	FLAT:?OnClear@CParticleSystemData@@MAEXXZ
	DD	FLAT:?OnIsData@CParticleSystemData@@MAE_NXZ
	DD	FLAT:?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z
CONST	ENDS
_DATA	SEGMENT
?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A DD FLAT:??_7?$CDynamicPool@VCParticleSystemData@@@@6B@ ; CParticleSystemData::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
CONST	SEGMENT
??_C@_0BB@GCADKGJO@map?1set?5too?5long@ DB 'map/set too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABM@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@MPAX@std@@@1@PAU?$_Tree_node@MPAX@1@ABM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABM@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@MPAX@std@@@1@PAU?$_Tree_node@MPAX@1@ABM@Z$1
__ehfuncinfo$??$?0ABM@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@MPAX@std@@@1@PAU?$_Tree_node@MPAX@1@ABM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABM@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@MPAX@std@@@1@PAU?$_Tree_node@MPAX@1@ABM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@MPAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@MPAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@MPAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@MPAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@ABM@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@MPAX@std@@_N@1@ABM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@ABM@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@MPAX@std@@_N@1@ABM@Z$2
__ehfuncinfo$??$_Emplace@ABM@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@MPAX@std@@_N@1@ABM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@ABM@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@MPAX@std@@_N@1@ABM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z$2
__ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Alloc@?$CDynamicPool@VCParticleSystemData@@@@QAEPAVCParticleSystemData@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Alloc@?$CDynamicPool@VCParticleSystemData@@@@QAEPAVCParticleSystemData@@XZ$0
__ehfuncinfo$?Alloc@?$CDynamicPool@VCParticleSystemData@@@@QAEPAVCParticleSystemData@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Alloc@?$CDynamicPool@VCParticleSystemData@@@@QAEPAVCParticleSystemData@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?New@CParticleSystemData@@SAPAV1@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?New@CParticleSystemData@@SAPAV1@XZ$0
__ehfuncinfo$?New@CParticleSystemData@@SAPAV1@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?New@CParticleSystemData@@SAPAV1@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z DD 019930522H
	DD	03bH
	DD	FLAT:__unwindtable$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$1
	DD	0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$5
	DD	0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$6
	DD	00H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$7
	DD	00H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$8
	DD	00H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$9
	DD	00H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$10
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$11
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$12
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$13
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$14
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$15
	DD	0ffffffffH
	DD	00H
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$16
	DD	0ffffffffH
	DD	00H
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$17
	DD	0ffffffffH
	DD	00H
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$18
	DD	0ffffffffH
	DD	00H
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$19
	DD	0ffffffffH
	DD	00H
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$20
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$21
	DD	0ffffffffH
	DD	00H
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$22
	DD	0ffffffffH
	DD	00H
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$23
	DD	0ffffffffH
	DD	00H
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$24
	DD	0ffffffffH
	DD	00H
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$25
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$26
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	012H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$27
	DD	02dH
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$28
	DD	02eH
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$29
	DD	02fH
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$30
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	030H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$31
	DD	0ffffffffH
	DD	00H
	DD	030H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$32
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	030H
	DD	FLAT:__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$33
	DD	0ffffffffH
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CParticleSystemData@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CParticleSystemData@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CParticleSystemData@@QAE@XZ$1
__ehfuncinfo$??0CParticleSystemData@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CParticleSystemData@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CGotoChild@CTextFileLoader@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_ECRotationDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
_TEXT	SEGMENT
??_ECRotationDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z PROC ; [thunk]:NEffectUpdateDecorator::CRotationDecorator::`vector deleting destructor', COMDAT
  00000	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  00003	e9 00 00 00 00	 jmp	 ??_ECRotationDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
??_ECRotationDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ENDP ; [thunk]:NEffectUpdateDecorator::CRotationDecorator::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_ECGravityDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
_TEXT	SEGMENT
??_ECGravityDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z PROC ; [thunk]:NEffectUpdateDecorator::CGravityDecorator::`vector deleting destructor', COMDAT
  00000	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  00003	e9 00 00 00 00	 jmp	 ??_ECGravityDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
??_ECGravityDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ENDP ; [thunk]:NEffectUpdateDecorator::CGravityDecorator::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_ECAirResistanceDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
_TEXT	SEGMENT
??_ECAirResistanceDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z PROC ; [thunk]:NEffectUpdateDecorator::CAirResistanceDecorator::`vector deleting destructor', COMDAT
  00000	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  00003	e9 00 00 00 00	 jmp	 ??_ECAirResistanceDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
??_ECAirResistanceDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ENDP ; [thunk]:NEffectUpdateDecorator::CAirResistanceDecorator::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_ECTextureAnimationRandomDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
_TEXT	SEGMENT
??_ECTextureAnimationRandomDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z PROC ; [thunk]:NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`vector deleting destructor', COMDAT
  00000	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  00003	e9 00 00 00 00	 jmp	 ??_ECTextureAnimationRandomDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
??_ECTextureAnimationRandomDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ENDP ; [thunk]:NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_ECTextureAnimationCCWDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
_TEXT	SEGMENT
??_ECTextureAnimationCCWDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z PROC ; [thunk]:NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`vector deleting destructor', COMDAT
  00000	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  00003	e9 00 00 00 00	 jmp	 ??_ECTextureAnimationCCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
??_ECTextureAnimationCCWDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ENDP ; [thunk]:NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_ECTextureAnimationCWDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
_TEXT	SEGMENT
??_ECTextureAnimationCWDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z PROC ; [thunk]:NEffectUpdateDecorator::CTextureAnimationCWDecorator::`vector deleting destructor', COMDAT
  00000	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  00003	e9 00 00 00 00	 jmp	 ??_ECTextureAnimationCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
??_ECTextureAnimationCWDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ENDP ; [thunk]:NEffectUpdateDecorator::CTextureAnimationCWDecorator::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@WM@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@WM@AEPAXI@Z PROC ; [thunk]:NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`vector deleting destructor', COMDAT
  00000	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  00003	e9 00 00 00 00	 jmp	 ??_E?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@UAEPAXI@Z
??_E?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@WM@AEPAXI@Z ENDP ; [thunk]:NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CTimeEventDecorator@M@NEffectUpdateDecorator@@WM@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CTimeEventDecorator@M@NEffectUpdateDecorator@@WM@AEPAXI@Z PROC ; [thunk]:NEffectUpdateDecorator::CTimeEventDecorator<float>::`vector deleting destructor', COMDAT
  00000	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  00003	e9 00 00 00 00	 jmp	 ??_E?$CTimeEventDecorator@M@NEffectUpdateDecorator@@UAEPAXI@Z
??_E?$CTimeEventDecorator@M@NEffectUpdateDecorator@@WM@AEPAXI@Z ENDP ; [thunk]:NEffectUpdateDecorator::CTimeEventDecorator<float>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_ECNullDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
_TEXT	SEGMENT
??_ECNullDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z PROC ; [thunk]:NEffectUpdateDecorator::CNullDecorator::`vector deleting destructor', COMDAT
  00000	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  00003	e9 00 00 00 00	 jmp	 ??_ECNullDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
??_ECNullDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ENDP ; [thunk]:NEffectUpdateDecorator::CNullDecorator::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_ECHeaderDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z
_TEXT	SEGMENT
??_ECHeaderDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z PROC ; [thunk]:NEffectUpdateDecorator::CHeaderDecorator::`vector deleting destructor', COMDAT
  00000	83 e9 0c	 sub	 ecx, 12			; 0000000cH
  00003	e9 00 00 00 00	 jmp	 ??_ECHeaderDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
??_ECHeaderDecorator@NEffectUpdateDecorator@@WM@AEPAXI@Z ENDP ; [thunk]:NEffectUpdateDecorator::CHeaderDecorator::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCParticleSystemData@@PAPAV1@@std@@YAPAPAVCParticleSystemData@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCParticleSystemData@@PAPAV1@@std@@YAPAPAVCParticleSystemData@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CParticleSystemData * *,CParticleSystemData * *>, COMDAT

; 4159 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4160 :     auto _FirstPtr              = _To_address(_First);
; 4161 :     auto _LastPtr               = _To_address(_Last);
; 4162 :     auto _DestPtr               = _To_address(_Dest);
; 4163 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4164 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4165 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4166 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4167 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4168 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4169 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4170 :     } else {
; 4171 :         return _Dest + (_LastPtr - _FirstPtr);
; 4172 :     }
; 4173 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCParticleSystemData@@PAPAV1@@std@@YAPAPAVCParticleSystemData@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CParticleSystemData * *,CParticleSystemData * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@00@Z PROC ; std::_Copy_memmove<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * *,NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * *>, COMDAT

; 4159 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4160 :     auto _FirstPtr              = _To_address(_First);
; 4161 :     auto _LastPtr               = _To_address(_Last);
; 4162 :     auto _DestPtr               = _To_address(_Dest);
; 4163 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4164 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4165 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4166 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4167 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4168 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4169 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4170 :     } else {
; 4171 :         return _Dest + (_LastPtr - _FirstPtr);
; 4172 :     }
; 4173 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@00@Z ENDP ; std::_Copy_memmove<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * *,NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@00@Z PROC ; std::_Copy_memmove<NEffectUpdateDecorator::CTimeEventDecorator<float> * *,NEffectUpdateDecorator::CTimeEventDecorator<float> * *>, COMDAT

; 4159 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4160 :     auto _FirstPtr              = _To_address(_First);
; 4161 :     auto _LastPtr               = _To_address(_Last);
; 4162 :     auto _DestPtr               = _To_address(_Dest);
; 4163 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4164 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4165 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4166 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4167 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4168 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4169 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4170 :     } else {
; 4171 :         return _Dest + (_LastPtr - _FirstPtr);
; 4172 :     }
; 4173 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@00@Z ENDP ; std::_Copy_memmove<NEffectUpdateDecorator::CTimeEventDecorator<float> * *,NEffectUpdateDecorator::CTimeEventDecorator<float> * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z PROC ; std::_Copy_memmove<NEffectUpdateDecorator::CRotationDecorator * *,NEffectUpdateDecorator::CRotationDecorator * *>, COMDAT

; 4159 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4160 :     auto _FirstPtr              = _To_address(_First);
; 4161 :     auto _LastPtr               = _To_address(_Last);
; 4162 :     auto _DestPtr               = _To_address(_Dest);
; 4163 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4164 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4165 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4166 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4167 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4168 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4169 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4170 :     } else {
; 4171 :         return _Dest + (_LastPtr - _FirstPtr);
; 4172 :     }
; 4173 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ENDP ; std::_Copy_memmove<NEffectUpdateDecorator::CRotationDecorator * *,NEffectUpdateDecorator::CRotationDecorator * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z PROC ; std::_Copy_memmove<NEffectUpdateDecorator::CGravityDecorator * *,NEffectUpdateDecorator::CGravityDecorator * *>, COMDAT

; 4159 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4160 :     auto _FirstPtr              = _To_address(_First);
; 4161 :     auto _LastPtr               = _To_address(_Last);
; 4162 :     auto _DestPtr               = _To_address(_Dest);
; 4163 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4164 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4165 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4166 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4167 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4168 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4169 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4170 :     } else {
; 4171 :         return _Dest + (_LastPtr - _FirstPtr);
; 4172 :     }
; 4173 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ENDP ; std::_Copy_memmove<NEffectUpdateDecorator::CGravityDecorator * *,NEffectUpdateDecorator::CGravityDecorator * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z PROC ; std::_Copy_memmove<NEffectUpdateDecorator::CAirResistanceDecorator * *,NEffectUpdateDecorator::CAirResistanceDecorator * *>, COMDAT

; 4159 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4160 :     auto _FirstPtr              = _To_address(_First);
; 4161 :     auto _LastPtr               = _To_address(_Last);
; 4162 :     auto _DestPtr               = _To_address(_Dest);
; 4163 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4164 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4165 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4166 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4167 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4168 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4169 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4170 :     } else {
; 4171 :         return _Dest + (_LastPtr - _FirstPtr);
; 4172 :     }
; 4173 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ENDP ; std::_Copy_memmove<NEffectUpdateDecorator::CAirResistanceDecorator * *,NEffectUpdateDecorator::CAirResistanceDecorator * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z PROC ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationRandomDecorator * *,NEffectUpdateDecorator::CTextureAnimationRandomDecorator * *>, COMDAT

; 4159 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4160 :     auto _FirstPtr              = _To_address(_First);
; 4161 :     auto _LastPtr               = _To_address(_Last);
; 4162 :     auto _DestPtr               = _To_address(_Dest);
; 4163 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4164 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4165 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4166 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4167 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4168 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4169 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4170 :     } else {
; 4171 :         return _Dest + (_LastPtr - _FirstPtr);
; 4172 :     }
; 4173 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ENDP ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationRandomDecorator * *,NEffectUpdateDecorator::CTextureAnimationRandomDecorator * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z PROC ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationCCWDecorator * *,NEffectUpdateDecorator::CTextureAnimationCCWDecorator * *>, COMDAT

; 4159 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4160 :     auto _FirstPtr              = _To_address(_First);
; 4161 :     auto _LastPtr               = _To_address(_Last);
; 4162 :     auto _DestPtr               = _To_address(_Dest);
; 4163 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4164 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4165 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4166 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4167 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4168 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4169 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4170 :     } else {
; 4171 :         return _Dest + (_LastPtr - _FirstPtr);
; 4172 :     }
; 4173 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ENDP ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationCCWDecorator * *,NEffectUpdateDecorator::CTextureAnimationCCWDecorator * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z PROC ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationCWDecorator * *,NEffectUpdateDecorator::CTextureAnimationCWDecorator * *>, COMDAT

; 4159 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4160 :     auto _FirstPtr              = _To_address(_First);
; 4161 :     auto _LastPtr               = _To_address(_Last);
; 4162 :     auto _DestPtr               = _To_address(_Dest);
; 4163 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4164 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4165 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4166 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4167 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4168 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4169 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4170 :     } else {
; 4171 :         return _Dest + (_LastPtr - _FirstPtr);
; 4172 :     }
; 4173 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ENDP ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationCWDecorator * *,NEffectUpdateDecorator::CTextureAnimationCWDecorator * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z PROC ; std::_Copy_memmove<NEffectUpdateDecorator::CNullDecorator * *,NEffectUpdateDecorator::CNullDecorator * *>, COMDAT

; 4159 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4160 :     auto _FirstPtr              = _To_address(_First);
; 4161 :     auto _LastPtr               = _To_address(_Last);
; 4162 :     auto _DestPtr               = _To_address(_Dest);
; 4163 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4164 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4165 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4166 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4167 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4168 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4169 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4170 :     } else {
; 4171 :         return _Dest + (_LastPtr - _FirstPtr);
; 4172 :     }
; 4173 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ENDP ; std::_Copy_memmove<NEffectUpdateDecorator::CNullDecorator * *,NEffectUpdateDecorator::CNullDecorator * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z PROC ; std::_Copy_memmove<NEffectUpdateDecorator::CHeaderDecorator * *,NEffectUpdateDecorator::CHeaderDecorator * *>, COMDAT

; 4159 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4160 :     auto _FirstPtr              = _To_address(_First);
; 4161 :     auto _LastPtr               = _To_address(_Last);
; 4162 :     auto _DestPtr               = _To_address(_Dest);
; 4163 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4164 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4165 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4166 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4167 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4168 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4169 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4170 :     } else {
; 4171 :         return _Dest + (_LastPtr - _FirstPtr);
; 4172 :     }
; 4173 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ENDP ; std::_Copy_memmove<NEffectUpdateDecorator::CHeaderDecorator * *,NEffectUpdateDecorator::CHeaderDecorator * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<float,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<float,void *> > >, COMDAT
; _this$ = ecx

; 1024 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN8@Alloc_cons

; 264  :         ::operator delete(_Ptr, _Bytes);

  00007	6a 14		 push	 20			; 00000014H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000f	83 c4 08	 add	 esp, 8
$LN8@Alloc_cons:

; 1025 :             _Al.deallocate(_Ptr, 1);
; 1026 :         }
; 1027 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<float,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<float,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@MPAX@std@@@1@PAU?$_Tree_node@MPAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@MPAX@std@@@1@PAU?$_Tree_node@MPAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<float> >::_Erase_tree<std::allocator<std::_Tree_node<float,void *> > >, COMDAT
; _this$ = ecx

; 748  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 749  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 750  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@MPAX@std@@@1@PAU?$_Tree_node@MPAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<float> >::_Erase_tree<std::allocator<std::_Tree_node<float,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 616  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 617  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00023	6a 14		 push	 20			; 00000014H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 749  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 751  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 752  :         }
; 753  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@MPAX@std@@@1@PAU?$_Tree_node@MPAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<float> >::_Erase_tree<std::allocator<std::_Tree_node<float,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::~CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >
??__F?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::~CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >
??__F?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
;	COMDAT ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z
_TEXT	SEGMENT
__UMid$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Val$ = 20						; size = 4
??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z PROC ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float>, COMDAT

; 6335 : _NODISCARD _CONSTEXPR20 pair<_FwdIt, _FwdIt> equal_range(_FwdIt _First, _FwdIt _Last, const _Ty& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 6301 :     auto _UFirst      = _Get_unwrapped(_First);

  00005	8b 5d 0c	 mov	 ebx, DWORD PTR __First$[ebp]

; 6335 : _NODISCARD _CONSTEXPR20 pair<_FwdIt, _FwdIt> equal_range(_FwdIt _First, _FwdIt _Last, const _Ty& _Val) {

  00008	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility

; 1590 :         return _Last - _First; // assume the iterator will do debug checking

  00009	8b 75 10	 mov	 esi, DWORD PTR __Last$[ebp]
  0000c	2b f3		 sub	 esi, ebx
  0000e	c1 fe 03	 sar	 esi, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6308 :         if (_Count <= 0) {

  00011	85 f6		 test	 esi, esi
  00013	7e 36		 jle	 SHORT $LN66@equal_rang
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 193  : 	return lhs.m_fTime < rhs;

  00015	8b 45 14	 mov	 eax, DWORD PTR __Val$[ebp]
  00018	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  0001c	0f 1f 40 00	 npad	 4
$LL4@equal_rang:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6314 :         _Diff _Count2    = _Count / 2;

  00020	8b d6		 mov	 edx, esi
  00022	d1 ea		 shr	 edx, 1
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 193  : 	return lhs.m_fTime < rhs;

  00024	f3 0f 10 04 d3	 movss	 xmm0, DWORD PTR [ebx+edx*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility

; 1561 :         _Where += _Off;

  00029	8d 04 d3	 lea	 eax, DWORD PTR [ebx+edx*8]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 193  : 	return lhs.m_fTime < rhs;

  0002c	0f 2f c8	 comiss	 xmm1, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility

; 1561 :         _Where += _Off;

  0002f	89 45 fc	 mov	 DWORD PTR __UMid$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6316 :         if (_DEBUG_LT_PRED(_Pred, *_UMid, _Val)) { // range begins above _UMid, loop

  00032	76 0c		 jbe	 SHORT $LN8@equal_rang

; 6317 :             _UFirst = _Next_iter(_UMid);

  00034	8d 58 08	 lea	 ebx, DWORD PTR [eax+8]

; 6318 :             _Count -= _Count2 + 1;

  00037	83 c8 ff	 or	 eax, -1
  0003a	2b c2		 sub	 eax, edx
  0003c	03 f0		 add	 esi, eax

; 6319 :         } else if (_Pred(_Val, *_UMid)) {

  0003e	eb 07		 jmp	 SHORT $LN11@equal_rang
$LN8@equal_rang:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 199  : 	return lhs < rhs.m_fTime;

  00040	0f 2f c1	 comiss	 xmm0, xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6319 :         } else if (_Pred(_Val, *_UMid)) {

  00043	76 1a		 jbe	 SHORT $LN10@equal_rang

; 6320 :             _Count = _Count2; // range in first half, loop

  00045	8b f2		 mov	 esi, edx
$LN11@equal_rang:

; 6308 :         if (_Count <= 0) {

  00047	85 f6		 test	 esi, esi
  00049	7f d5		 jg	 SHORT $LL4@equal_rang
$LN66@equal_rang:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 193  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0004b	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6309 :             _Seek_wrapped(_Last, _UFirst); // empty range

  0004e	8b c3		 mov	 eax, ebx

; 6310 :             _Seek_wrapped(_First, _UFirst);

  00050	8b cb		 mov	 ecx, ebx

; 6337 :     return _STD equal_range(_First, _Last, _Val, less<>{});

  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 193  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00054	89 42 04	 mov	 DWORD PTR [edx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6337 :     return _STD equal_range(_First, _Last, _Val, less<>{});

  00057	8b c2		 mov	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 193  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00059	89 0a		 mov	 DWORD PTR [edx], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6338 : }

  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
$LN10@equal_rang:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility

; 5756 :     auto _UFirst                = _Get_unwrapped(_First);

  0005f	8b cb		 mov	 ecx, ebx
  00061	57		 push	 edi

; 5757 :     _Iter_diff_t<_FwdIt> _Count = _STD distance(_UFirst, _Get_unwrapped(_Last));
; 5758 : 
; 5759 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  00062	85 d2		 test	 edx, edx
  00064	74 22		 je	 SHORT $LN29@equal_rang
$LL28@equal_rang:

; 5760 :         const _Iter_diff_t<_FwdIt> _Count2 = _Count / 2;

  00066	8b fa		 mov	 edi, edx
  00068	d1 ef		 shr	 edi, 1
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 193  : 	return lhs.m_fTime < rhs;

  0006a	0f 2f 0c f9	 comiss	 xmm1, DWORD PTR [ecx+edi*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility

; 1561 :         _Where += _Off;

  0006e	8d 04 f9	 lea	 eax, DWORD PTR [ecx+edi*8]

; 5762 :         if (_Pred(*_UMid, _Val)) { // try top half

  00071	76 0c		 jbe	 SHORT $LN30@equal_rang

; 5763 :             _UFirst = _Next_iter(_UMid);

  00073	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]

; 5764 :             _Count -= _Count2 + 1;

  00076	83 c8 ff	 or	 eax, -1
  00079	2b c7		 sub	 eax, edi
  0007b	03 d0		 add	 edx, eax

; 5765 :         } else {

  0007d	eb 02		 jmp	 SHORT $LN31@equal_rang
$LN30@equal_rang:

; 5766 :             _Count = _Count2;

  0007f	8b d7		 mov	 edx, edi
$LN31@equal_rang:

; 5757 :     _Iter_diff_t<_FwdIt> _Count = _STD distance(_UFirst, _Get_unwrapped(_Last));
; 5758 : 
; 5759 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  00081	85 d2		 test	 edx, edx
  00083	7f e1		 jg	 SHORT $LL28@equal_rang
  00085	8b 45 fc	 mov	 eax, DWORD PTR __UMid$1$[ebp]
$LN29@equal_rang:

; 1561 :         _Where += _Off;

  00088	c1 e6 03	 shl	 esi, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6324 :             auto _ULast2 = _STD upper_bound(_Next_iter(_UMid), _UFirst, _Val, _Pass_fn(_Pred));

  0008b	83 c0 08	 add	 eax, 8

; 6215 :     _Iter_diff_t<_FwdIt> _Count = _STD distance(_UFirst, _Get_unwrapped(_Last));

  0008e	2b f0		 sub	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility

; 1590 :         return _Last - _First; // assume the iterator will do debug checking

  00090	03 f3		 add	 esi, ebx
  00092	c1 fe 03	 sar	 esi, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6217 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  00095	85 f6		 test	 esi, esi
  00097	7e 2a		 jle	 SHORT $LN47@equal_rang
  00099	0f 1f 80 00 00
	00 00		 npad	 7
$LL46@equal_rang:

; 6218 :         _Iter_diff_t<_FwdIt> _Count2 = _Count / 2;

  000a0	8b fe		 mov	 edi, esi
  000a2	d1 ef		 shr	 edi, 1
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 199  : 	return lhs < rhs.m_fTime;

  000a4	f3 0f 10 04 f8	 movss	 xmm0, DWORD PTR [eax+edi*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility

; 1561 :         _Where += _Off;

  000a9	8d 14 f8	 lea	 edx, DWORD PTR [eax+edi*8]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 199  : 	return lhs < rhs.m_fTime;

  000ac	0f 2f c1	 comiss	 xmm0, xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6220 :         if (_Pred(_Val, *_UMid)) {

  000af	76 04		 jbe	 SHORT $LN48@equal_rang

; 6221 :             _Count = _Count2;

  000b1	8b f7		 mov	 esi, edi

; 6222 :         } else { // try top half

  000b3	eb 0a		 jmp	 SHORT $LN49@equal_rang
$LN48@equal_rang:

; 6223 :             _UFirst = _Next_iter(_UMid);

  000b5	8d 42 08	 lea	 eax, DWORD PTR [edx+8]

; 6224 :             _Count -= _Count2 + 1;

  000b8	83 ca ff	 or	 edx, -1
  000bb	2b d7		 sub	 edx, edi
  000bd	03 f2		 add	 esi, edx
$LN49@equal_rang:

; 6217 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  000bf	85 f6		 test	 esi, esi
  000c1	7f dd		 jg	 SHORT $LL46@equal_rang
$LN47@equal_rang:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 193  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  000c3	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  000c6	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6337 :     return _STD equal_range(_First, _Last, _Val, less<>{});

  000c7	5e		 pop	 esi
  000c8	5b		 pop	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 193  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  000c9	89 42 04	 mov	 DWORD PTR [edx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6337 :     return _STD equal_range(_First, _Last, _Val, less<>{});

  000cc	8b c2		 mov	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 193  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  000ce	89 0a		 mov	 DWORD PTR [edx], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 6338 : }

  000d0	8b e5		 mov	 esp, ebp
  000d2	5d		 pop	 ebp
  000d3	c3		 ret	 0
??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z ENDP ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv641 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z PROC ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * const &>, COMDAT
; _this$ = ecx

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b c1		 sub	 eax, ecx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001b	2b c1		 sub	 eax, ecx
  0001d	c1 f8 02	 sar	 eax, 2

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 06 01 00
	00		 je	 $LN96@Emplace_re

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b d1		 sub	 edx, ecx

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 fa 02	 sar	 edx, 2

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b ca		 mov	 ecx, edx
  00040	d1 e9		 shr	 ecx, 1
  00042	2b c1		 sub	 eax, ecx
  00044	3b d0		 cmp	 edx, eax
  00046	76 12		 jbe	 SHORT $LN12@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow

  00048	bb fc ff ff ff	 mov	 ebx, -4			; fffffffcH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004d	53		 push	 ebx
  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 41		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  0005d	8b df		 mov	 ebx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 d8	 cmovae	 ebx, eax
  00064	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0006a	0f 87 c6 00 00
	00		 ja	 $LN97@Emplace_re

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00070	c1 e3 02	 shl	 ebx, 2

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00073	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  00079	72 0d		 jb	 SHORT $LN24@Emplace_re

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007b	53		 push	 ebx
  0007c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00081	83 c4 04	 add	 esp, 4
  00084	8b f8		 mov	 edi, eax
  00086	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00088	85 db		 test	 ebx, ebx
  0008a	74 0d		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  0008c	53		 push	 ebx
  0008d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00092	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  00095	8b f8		 mov	 edi, eax
  00097	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  00099	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0009b	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  0009e	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	89 4d fc	 mov	 DWORD PTR tv641[ebp], ecx
  000a7	8b 00		 mov	 eax, DWORD PTR [eax]
  000a9	89 01		 mov	 DWORD PTR [ecx], eax

; 790  :         _Constructed_first = _Newvec + _Whereoff;
; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000ab	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ae	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b1	8b 16		 mov	 edx, DWORD PTR [esi]
  000b3	3b c1		 cmp	 eax, ecx
  000b5	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000b7	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 794  :         } else { // provide basic guarantee

  000b9	eb 17		 jmp	 SHORT $LN60@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bb	57		 push	 edi
  000bc	50		 push	 eax
  000bd	52		 push	 edx
  000be	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * *,NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000c3	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c9	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000cc	83 c0 04	 add	 eax, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000cf	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN60@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d2	50		 push	 eax
  000d3	51		 push	 ecx
  000d4	52		 push	 edx
  000d5	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * *,NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * *>

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000da	8b 06		 mov	 eax, DWORD PTR [esi]

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000dc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000df	85 c0		 test	 eax, eax
  000e1	74 2c		 je	 SHORT $LN78@Emplace_re

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e3	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000e6	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e8	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000eb	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f1	72 12		 jb	 SHORT $LN88@Emplace_re

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f3	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f6	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fb	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fe	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00101	77 29		 ja	 SHORT $LN85@Emplace_re

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00103	8b c2		 mov	 eax, edx
$LN88@Emplace_re:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00105	51		 push	 ecx
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0010c	83 c4 08	 add	 esp, 8
$LN78@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0010f	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00112	89 3e		 mov	 DWORD PTR [esi], edi
  00114	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00117	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0011a	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  0011d	8d 0c 3b	 lea	 ecx, DWORD PTR [ebx+edi]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00120	5f		 pop	 edi

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00121	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 807  :     }

  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
$LN85@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0012c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 778  :             _Xlength();

  00131	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *> >::_Xlength
$LN97@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00136	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN94@Emplace_re:
  0013b	cc		 int	 3
??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ENDP ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv641 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z PROC ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<float> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<float> *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTimeEventDecorator<float> * const &>, COMDAT
; _this$ = ecx

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b c1		 sub	 eax, ecx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001b	2b c1		 sub	 eax, ecx
  0001d	c1 f8 02	 sar	 eax, 2

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 06 01 00
	00		 je	 $LN96@Emplace_re

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b d1		 sub	 edx, ecx

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 fa 02	 sar	 edx, 2

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b ca		 mov	 ecx, edx
  00040	d1 e9		 shr	 ecx, 1
  00042	2b c1		 sub	 eax, ecx
  00044	3b d0		 cmp	 edx, eax
  00046	76 12		 jbe	 SHORT $LN12@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow

  00048	bb fc ff ff ff	 mov	 ebx, -4			; fffffffcH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004d	53		 push	 ebx
  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 41		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  0005d	8b df		 mov	 ebx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 d8	 cmovae	 ebx, eax
  00064	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0006a	0f 87 c6 00 00
	00		 ja	 $LN97@Emplace_re

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00070	c1 e3 02	 shl	 ebx, 2

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00073	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  00079	72 0d		 jb	 SHORT $LN24@Emplace_re

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007b	53		 push	 ebx
  0007c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00081	83 c4 04	 add	 esp, 4
  00084	8b f8		 mov	 edi, eax
  00086	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00088	85 db		 test	 ebx, ebx
  0008a	74 0d		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  0008c	53		 push	 ebx
  0008d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00092	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  00095	8b f8		 mov	 edi, eax
  00097	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  00099	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0009b	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  0009e	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	89 4d fc	 mov	 DWORD PTR tv641[ebp], ecx
  000a7	8b 00		 mov	 eax, DWORD PTR [eax]
  000a9	89 01		 mov	 DWORD PTR [ecx], eax

; 790  :         _Constructed_first = _Newvec + _Whereoff;
; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000ab	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ae	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b1	8b 16		 mov	 edx, DWORD PTR [esi]
  000b3	3b c1		 cmp	 eax, ecx
  000b5	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000b7	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 794  :         } else { // provide basic guarantee

  000b9	eb 17		 jmp	 SHORT $LN60@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bb	57		 push	 edi
  000bc	50		 push	 eax
  000bd	52		 push	 edx
  000be	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTimeEventDecorator<float> * *,NEffectUpdateDecorator::CTimeEventDecorator<float> * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000c3	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c9	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000cc	83 c0 04	 add	 eax, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000cf	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN60@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d2	50		 push	 eax
  000d3	51		 push	 ecx
  000d4	52		 push	 edx
  000d5	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTimeEventDecorator<float> * *,NEffectUpdateDecorator::CTimeEventDecorator<float> * *>

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000da	8b 06		 mov	 eax, DWORD PTR [esi]

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000dc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000df	85 c0		 test	 eax, eax
  000e1	74 2c		 je	 SHORT $LN78@Emplace_re

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e3	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000e6	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e8	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000eb	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f1	72 12		 jb	 SHORT $LN88@Emplace_re

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f3	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f6	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fb	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fe	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00101	77 29		 ja	 SHORT $LN85@Emplace_re

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00103	8b c2		 mov	 eax, edx
$LN88@Emplace_re:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00105	51		 push	 ecx
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0010c	83 c4 08	 add	 esp, 8
$LN78@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0010f	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00112	89 3e		 mov	 DWORD PTR [esi], edi
  00114	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00117	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0011a	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  0011d	8d 0c 3b	 lea	 ecx, DWORD PTR [ebx+edi]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00120	5f		 pop	 edi

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00121	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 807  :     }

  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
$LN85@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0012c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 778  :             _Xlength();

  00131	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<float> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<float> *> >::_Xlength
$LN97@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00136	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN94@Emplace_re:
  0013b	cc		 int	 3
??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ENDP ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<float> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<float> *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTimeEventDecorator<float> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCRotationDecorator@NEffectUpdateDecorator@@@?$vector@PAVCRotationDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv641 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCRotationDecorator@NEffectUpdateDecorator@@@?$vector@PAVCRotationDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z PROC ; std::vector<NEffectUpdateDecorator::CRotationDecorator *,std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CRotationDecorator * const &>, COMDAT
; _this$ = ecx

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b c1		 sub	 eax, ecx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001b	2b c1		 sub	 eax, ecx
  0001d	c1 f8 02	 sar	 eax, 2

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 06 01 00
	00		 je	 $LN96@Emplace_re

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b d1		 sub	 edx, ecx

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 fa 02	 sar	 edx, 2

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b ca		 mov	 ecx, edx
  00040	d1 e9		 shr	 ecx, 1
  00042	2b c1		 sub	 eax, ecx
  00044	3b d0		 cmp	 edx, eax
  00046	76 12		 jbe	 SHORT $LN12@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow

  00048	bb fc ff ff ff	 mov	 ebx, -4			; fffffffcH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004d	53		 push	 ebx
  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 41		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  0005d	8b df		 mov	 ebx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 d8	 cmovae	 ebx, eax
  00064	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0006a	0f 87 c6 00 00
	00		 ja	 $LN97@Emplace_re

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00070	c1 e3 02	 shl	 ebx, 2

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00073	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  00079	72 0d		 jb	 SHORT $LN24@Emplace_re

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007b	53		 push	 ebx
  0007c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00081	83 c4 04	 add	 esp, 4
  00084	8b f8		 mov	 edi, eax
  00086	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00088	85 db		 test	 ebx, ebx
  0008a	74 0d		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  0008c	53		 push	 ebx
  0008d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00092	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  00095	8b f8		 mov	 edi, eax
  00097	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  00099	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0009b	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  0009e	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	89 4d fc	 mov	 DWORD PTR tv641[ebp], ecx
  000a7	8b 00		 mov	 eax, DWORD PTR [eax]
  000a9	89 01		 mov	 DWORD PTR [ecx], eax

; 790  :         _Constructed_first = _Newvec + _Whereoff;
; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000ab	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ae	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b1	8b 16		 mov	 edx, DWORD PTR [esi]
  000b3	3b c1		 cmp	 eax, ecx
  000b5	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000b7	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 794  :         } else { // provide basic guarantee

  000b9	eb 17		 jmp	 SHORT $LN60@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bb	57		 push	 edi
  000bc	50		 push	 eax
  000bd	52		 push	 edx
  000be	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CRotationDecorator * *,NEffectUpdateDecorator::CRotationDecorator * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000c3	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c9	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000cc	83 c0 04	 add	 eax, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000cf	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN60@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d2	50		 push	 eax
  000d3	51		 push	 ecx
  000d4	52		 push	 edx
  000d5	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCRotationDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CRotationDecorator * *,NEffectUpdateDecorator::CRotationDecorator * *>

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000da	8b 06		 mov	 eax, DWORD PTR [esi]

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000dc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000df	85 c0		 test	 eax, eax
  000e1	74 2c		 je	 SHORT $LN78@Emplace_re

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e3	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000e6	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e8	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000eb	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f1	72 12		 jb	 SHORT $LN88@Emplace_re

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f3	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f6	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fb	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fe	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00101	77 29		 ja	 SHORT $LN85@Emplace_re

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00103	8b c2		 mov	 eax, edx
$LN88@Emplace_re:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00105	51		 push	 ecx
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0010c	83 c4 08	 add	 esp, 8
$LN78@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0010f	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00112	89 3e		 mov	 DWORD PTR [esi], edi
  00114	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00117	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0011a	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  0011d	8d 0c 3b	 lea	 ecx, DWORD PTR [ebx+edi]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00120	5f		 pop	 edi

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00121	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 807  :     }

  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
$LN85@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0012c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 778  :             _Xlength();

  00131	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCRotationDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CRotationDecorator *,std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >::_Xlength
$LN97@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00136	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN94@Emplace_re:
  0013b	cc		 int	 3
??$_Emplace_reallocate@ABQAVCRotationDecorator@NEffectUpdateDecorator@@@?$vector@PAVCRotationDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ENDP ; std::vector<NEffectUpdateDecorator::CRotationDecorator *,std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CRotationDecorator * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCGravityDecorator@NEffectUpdateDecorator@@@?$vector@PAVCGravityDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv641 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCGravityDecorator@NEffectUpdateDecorator@@@?$vector@PAVCGravityDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z PROC ; std::vector<NEffectUpdateDecorator::CGravityDecorator *,std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CGravityDecorator * const &>, COMDAT
; _this$ = ecx

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b c1		 sub	 eax, ecx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001b	2b c1		 sub	 eax, ecx
  0001d	c1 f8 02	 sar	 eax, 2

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 06 01 00
	00		 je	 $LN96@Emplace_re

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b d1		 sub	 edx, ecx

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 fa 02	 sar	 edx, 2

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b ca		 mov	 ecx, edx
  00040	d1 e9		 shr	 ecx, 1
  00042	2b c1		 sub	 eax, ecx
  00044	3b d0		 cmp	 edx, eax
  00046	76 12		 jbe	 SHORT $LN12@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow

  00048	bb fc ff ff ff	 mov	 ebx, -4			; fffffffcH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004d	53		 push	 ebx
  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 41		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  0005d	8b df		 mov	 ebx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 d8	 cmovae	 ebx, eax
  00064	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0006a	0f 87 c6 00 00
	00		 ja	 $LN97@Emplace_re

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00070	c1 e3 02	 shl	 ebx, 2

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00073	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  00079	72 0d		 jb	 SHORT $LN24@Emplace_re

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007b	53		 push	 ebx
  0007c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00081	83 c4 04	 add	 esp, 4
  00084	8b f8		 mov	 edi, eax
  00086	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00088	85 db		 test	 ebx, ebx
  0008a	74 0d		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  0008c	53		 push	 ebx
  0008d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00092	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  00095	8b f8		 mov	 edi, eax
  00097	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  00099	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0009b	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  0009e	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	89 4d fc	 mov	 DWORD PTR tv641[ebp], ecx
  000a7	8b 00		 mov	 eax, DWORD PTR [eax]
  000a9	89 01		 mov	 DWORD PTR [ecx], eax

; 790  :         _Constructed_first = _Newvec + _Whereoff;
; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000ab	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ae	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b1	8b 16		 mov	 edx, DWORD PTR [esi]
  000b3	3b c1		 cmp	 eax, ecx
  000b5	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000b7	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 794  :         } else { // provide basic guarantee

  000b9	eb 17		 jmp	 SHORT $LN60@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bb	57		 push	 edi
  000bc	50		 push	 eax
  000bd	52		 push	 edx
  000be	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CGravityDecorator * *,NEffectUpdateDecorator::CGravityDecorator * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000c3	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c9	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000cc	83 c0 04	 add	 eax, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000cf	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN60@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d2	50		 push	 eax
  000d3	51		 push	 ecx
  000d4	52		 push	 edx
  000d5	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCGravityDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CGravityDecorator * *,NEffectUpdateDecorator::CGravityDecorator * *>

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000da	8b 06		 mov	 eax, DWORD PTR [esi]

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000dc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000df	85 c0		 test	 eax, eax
  000e1	74 2c		 je	 SHORT $LN78@Emplace_re

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e3	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000e6	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e8	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000eb	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f1	72 12		 jb	 SHORT $LN88@Emplace_re

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f3	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f6	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fb	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fe	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00101	77 29		 ja	 SHORT $LN85@Emplace_re

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00103	8b c2		 mov	 eax, edx
$LN88@Emplace_re:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00105	51		 push	 ecx
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0010c	83 c4 08	 add	 esp, 8
$LN78@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0010f	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00112	89 3e		 mov	 DWORD PTR [esi], edi
  00114	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00117	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0011a	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  0011d	8d 0c 3b	 lea	 ecx, DWORD PTR [ebx+edi]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00120	5f		 pop	 edi

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00121	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 807  :     }

  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
$LN85@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0012c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 778  :             _Xlength();

  00131	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCGravityDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CGravityDecorator *,std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >::_Xlength
$LN97@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00136	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN94@Emplace_re:
  0013b	cc		 int	 3
??$_Emplace_reallocate@ABQAVCGravityDecorator@NEffectUpdateDecorator@@@?$vector@PAVCGravityDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ENDP ; std::vector<NEffectUpdateDecorator::CGravityDecorator *,std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CGravityDecorator * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCAirResistanceDecorator@NEffectUpdateDecorator@@@?$vector@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv641 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCAirResistanceDecorator@NEffectUpdateDecorator@@@?$vector@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z PROC ; std::vector<NEffectUpdateDecorator::CAirResistanceDecorator *,std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CAirResistanceDecorator * const &>, COMDAT
; _this$ = ecx

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b c1		 sub	 eax, ecx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001b	2b c1		 sub	 eax, ecx
  0001d	c1 f8 02	 sar	 eax, 2

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 06 01 00
	00		 je	 $LN96@Emplace_re

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b d1		 sub	 edx, ecx

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 fa 02	 sar	 edx, 2

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b ca		 mov	 ecx, edx
  00040	d1 e9		 shr	 ecx, 1
  00042	2b c1		 sub	 eax, ecx
  00044	3b d0		 cmp	 edx, eax
  00046	76 12		 jbe	 SHORT $LN12@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow

  00048	bb fc ff ff ff	 mov	 ebx, -4			; fffffffcH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004d	53		 push	 ebx
  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 41		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  0005d	8b df		 mov	 ebx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 d8	 cmovae	 ebx, eax
  00064	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0006a	0f 87 c6 00 00
	00		 ja	 $LN97@Emplace_re

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00070	c1 e3 02	 shl	 ebx, 2

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00073	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  00079	72 0d		 jb	 SHORT $LN24@Emplace_re

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007b	53		 push	 ebx
  0007c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00081	83 c4 04	 add	 esp, 4
  00084	8b f8		 mov	 edi, eax
  00086	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00088	85 db		 test	 ebx, ebx
  0008a	74 0d		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  0008c	53		 push	 ebx
  0008d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00092	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  00095	8b f8		 mov	 edi, eax
  00097	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  00099	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0009b	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  0009e	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	89 4d fc	 mov	 DWORD PTR tv641[ebp], ecx
  000a7	8b 00		 mov	 eax, DWORD PTR [eax]
  000a9	89 01		 mov	 DWORD PTR [ecx], eax

; 790  :         _Constructed_first = _Newvec + _Whereoff;
; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000ab	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ae	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b1	8b 16		 mov	 edx, DWORD PTR [esi]
  000b3	3b c1		 cmp	 eax, ecx
  000b5	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000b7	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 794  :         } else { // provide basic guarantee

  000b9	eb 17		 jmp	 SHORT $LN60@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bb	57		 push	 edi
  000bc	50		 push	 eax
  000bd	52		 push	 edx
  000be	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CAirResistanceDecorator * *,NEffectUpdateDecorator::CAirResistanceDecorator * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000c3	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c9	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000cc	83 c0 04	 add	 eax, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000cf	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN60@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d2	50		 push	 eax
  000d3	51		 push	 ecx
  000d4	52		 push	 edx
  000d5	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CAirResistanceDecorator * *,NEffectUpdateDecorator::CAirResistanceDecorator * *>

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000da	8b 06		 mov	 eax, DWORD PTR [esi]

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000dc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000df	85 c0		 test	 eax, eax
  000e1	74 2c		 je	 SHORT $LN78@Emplace_re

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e3	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000e6	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e8	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000eb	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f1	72 12		 jb	 SHORT $LN88@Emplace_re

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f3	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f6	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fb	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fe	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00101	77 29		 ja	 SHORT $LN85@Emplace_re

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00103	8b c2		 mov	 eax, edx
$LN88@Emplace_re:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00105	51		 push	 ecx
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0010c	83 c4 08	 add	 esp, 8
$LN78@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0010f	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00112	89 3e		 mov	 DWORD PTR [esi], edi
  00114	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00117	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0011a	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  0011d	8d 0c 3b	 lea	 ecx, DWORD PTR [ebx+edi]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00120	5f		 pop	 edi

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00121	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 807  :     }

  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
$LN85@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0012c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 778  :             _Xlength();

  00131	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CAirResistanceDecorator *,std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >::_Xlength
$LN97@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00136	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN94@Emplace_re:
  0013b	cc		 int	 3
??$_Emplace_reallocate@ABQAVCAirResistanceDecorator@NEffectUpdateDecorator@@@?$vector@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ENDP ; std::vector<NEffectUpdateDecorator::CAirResistanceDecorator *,std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CAirResistanceDecorator * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv641 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z PROC ; std::vector<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationRandomDecorator * const &>, COMDAT
; _this$ = ecx

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b c1		 sub	 eax, ecx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001b	2b c1		 sub	 eax, ecx
  0001d	c1 f8 02	 sar	 eax, 2

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 06 01 00
	00		 je	 $LN96@Emplace_re

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b d1		 sub	 edx, ecx

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 fa 02	 sar	 edx, 2

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b ca		 mov	 ecx, edx
  00040	d1 e9		 shr	 ecx, 1
  00042	2b c1		 sub	 eax, ecx
  00044	3b d0		 cmp	 edx, eax
  00046	76 12		 jbe	 SHORT $LN12@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow

  00048	bb fc ff ff ff	 mov	 ebx, -4			; fffffffcH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004d	53		 push	 ebx
  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 41		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  0005d	8b df		 mov	 ebx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 d8	 cmovae	 ebx, eax
  00064	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0006a	0f 87 c6 00 00
	00		 ja	 $LN97@Emplace_re

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00070	c1 e3 02	 shl	 ebx, 2

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00073	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  00079	72 0d		 jb	 SHORT $LN24@Emplace_re

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007b	53		 push	 ebx
  0007c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00081	83 c4 04	 add	 esp, 4
  00084	8b f8		 mov	 edi, eax
  00086	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00088	85 db		 test	 ebx, ebx
  0008a	74 0d		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  0008c	53		 push	 ebx
  0008d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00092	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  00095	8b f8		 mov	 edi, eax
  00097	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  00099	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0009b	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  0009e	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	89 4d fc	 mov	 DWORD PTR tv641[ebp], ecx
  000a7	8b 00		 mov	 eax, DWORD PTR [eax]
  000a9	89 01		 mov	 DWORD PTR [ecx], eax

; 790  :         _Constructed_first = _Newvec + _Whereoff;
; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000ab	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ae	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b1	8b 16		 mov	 edx, DWORD PTR [esi]
  000b3	3b c1		 cmp	 eax, ecx
  000b5	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000b7	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 794  :         } else { // provide basic guarantee

  000b9	eb 17		 jmp	 SHORT $LN60@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bb	57		 push	 edi
  000bc	50		 push	 eax
  000bd	52		 push	 edx
  000be	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationRandomDecorator * *,NEffectUpdateDecorator::CTextureAnimationRandomDecorator * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000c3	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c9	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000cc	83 c0 04	 add	 eax, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000cf	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN60@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d2	50		 push	 eax
  000d3	51		 push	 ecx
  000d4	52		 push	 edx
  000d5	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationRandomDecorator * *,NEffectUpdateDecorator::CTextureAnimationRandomDecorator * *>

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000da	8b 06		 mov	 eax, DWORD PTR [esi]

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000dc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000df	85 c0		 test	 eax, eax
  000e1	74 2c		 je	 SHORT $LN78@Emplace_re

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e3	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000e6	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e8	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000eb	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f1	72 12		 jb	 SHORT $LN88@Emplace_re

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f3	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f6	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fb	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fe	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00101	77 29		 ja	 SHORT $LN85@Emplace_re

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00103	8b c2		 mov	 eax, edx
$LN88@Emplace_re:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00105	51		 push	 ecx
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0010c	83 c4 08	 add	 esp, 8
$LN78@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0010f	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00112	89 3e		 mov	 DWORD PTR [esi], edi
  00114	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00117	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0011a	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  0011d	8d 0c 3b	 lea	 ecx, DWORD PTR [ebx+edi]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00120	5f		 pop	 edi

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00121	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 807  :     }

  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
$LN85@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0012c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 778  :             _Xlength();

  00131	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >::_Xlength
$LN97@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00136	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN94@Emplace_re:
  0013b	cc		 int	 3
??$_Emplace_reallocate@ABQAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ENDP ; std::vector<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationRandomDecorator * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv641 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z PROC ; std::vector<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationCCWDecorator * const &>, COMDAT
; _this$ = ecx

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b c1		 sub	 eax, ecx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001b	2b c1		 sub	 eax, ecx
  0001d	c1 f8 02	 sar	 eax, 2

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 06 01 00
	00		 je	 $LN96@Emplace_re

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b d1		 sub	 edx, ecx

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 fa 02	 sar	 edx, 2

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b ca		 mov	 ecx, edx
  00040	d1 e9		 shr	 ecx, 1
  00042	2b c1		 sub	 eax, ecx
  00044	3b d0		 cmp	 edx, eax
  00046	76 12		 jbe	 SHORT $LN12@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow

  00048	bb fc ff ff ff	 mov	 ebx, -4			; fffffffcH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004d	53		 push	 ebx
  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 41		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  0005d	8b df		 mov	 ebx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 d8	 cmovae	 ebx, eax
  00064	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0006a	0f 87 c6 00 00
	00		 ja	 $LN97@Emplace_re

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00070	c1 e3 02	 shl	 ebx, 2

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00073	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  00079	72 0d		 jb	 SHORT $LN24@Emplace_re

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007b	53		 push	 ebx
  0007c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00081	83 c4 04	 add	 esp, 4
  00084	8b f8		 mov	 edi, eax
  00086	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00088	85 db		 test	 ebx, ebx
  0008a	74 0d		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  0008c	53		 push	 ebx
  0008d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00092	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  00095	8b f8		 mov	 edi, eax
  00097	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  00099	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0009b	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  0009e	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	89 4d fc	 mov	 DWORD PTR tv641[ebp], ecx
  000a7	8b 00		 mov	 eax, DWORD PTR [eax]
  000a9	89 01		 mov	 DWORD PTR [ecx], eax

; 790  :         _Constructed_first = _Newvec + _Whereoff;
; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000ab	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ae	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b1	8b 16		 mov	 edx, DWORD PTR [esi]
  000b3	3b c1		 cmp	 eax, ecx
  000b5	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000b7	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 794  :         } else { // provide basic guarantee

  000b9	eb 17		 jmp	 SHORT $LN60@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bb	57		 push	 edi
  000bc	50		 push	 eax
  000bd	52		 push	 edx
  000be	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationCCWDecorator * *,NEffectUpdateDecorator::CTextureAnimationCCWDecorator * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000c3	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c9	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000cc	83 c0 04	 add	 eax, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000cf	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN60@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d2	50		 push	 eax
  000d3	51		 push	 ecx
  000d4	52		 push	 edx
  000d5	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationCCWDecorator * *,NEffectUpdateDecorator::CTextureAnimationCCWDecorator * *>

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000da	8b 06		 mov	 eax, DWORD PTR [esi]

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000dc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000df	85 c0		 test	 eax, eax
  000e1	74 2c		 je	 SHORT $LN78@Emplace_re

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e3	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000e6	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e8	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000eb	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f1	72 12		 jb	 SHORT $LN88@Emplace_re

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f3	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f6	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fb	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fe	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00101	77 29		 ja	 SHORT $LN85@Emplace_re

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00103	8b c2		 mov	 eax, edx
$LN88@Emplace_re:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00105	51		 push	 ecx
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0010c	83 c4 08	 add	 esp, 8
$LN78@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0010f	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00112	89 3e		 mov	 DWORD PTR [esi], edi
  00114	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00117	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0011a	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  0011d	8d 0c 3b	 lea	 ecx, DWORD PTR [ebx+edi]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00120	5f		 pop	 edi

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00121	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 807  :     }

  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
$LN85@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0012c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 778  :             _Xlength();

  00131	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >::_Xlength
$LN97@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00136	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN94@Emplace_re:
  0013b	cc		 int	 3
??$_Emplace_reallocate@ABQAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ENDP ; std::vector<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationCCWDecorator * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv641 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z PROC ; std::vector<NEffectUpdateDecorator::CTextureAnimationCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationCWDecorator * const &>, COMDAT
; _this$ = ecx

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b c1		 sub	 eax, ecx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001b	2b c1		 sub	 eax, ecx
  0001d	c1 f8 02	 sar	 eax, 2

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 06 01 00
	00		 je	 $LN96@Emplace_re

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b d1		 sub	 edx, ecx

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 fa 02	 sar	 edx, 2

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b ca		 mov	 ecx, edx
  00040	d1 e9		 shr	 ecx, 1
  00042	2b c1		 sub	 eax, ecx
  00044	3b d0		 cmp	 edx, eax
  00046	76 12		 jbe	 SHORT $LN12@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow

  00048	bb fc ff ff ff	 mov	 ebx, -4			; fffffffcH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004d	53		 push	 ebx
  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 41		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  0005d	8b df		 mov	 ebx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 d8	 cmovae	 ebx, eax
  00064	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0006a	0f 87 c6 00 00
	00		 ja	 $LN97@Emplace_re

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00070	c1 e3 02	 shl	 ebx, 2

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00073	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  00079	72 0d		 jb	 SHORT $LN24@Emplace_re

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007b	53		 push	 ebx
  0007c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00081	83 c4 04	 add	 esp, 4
  00084	8b f8		 mov	 edi, eax
  00086	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00088	85 db		 test	 ebx, ebx
  0008a	74 0d		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  0008c	53		 push	 ebx
  0008d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00092	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  00095	8b f8		 mov	 edi, eax
  00097	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  00099	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0009b	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  0009e	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	89 4d fc	 mov	 DWORD PTR tv641[ebp], ecx
  000a7	8b 00		 mov	 eax, DWORD PTR [eax]
  000a9	89 01		 mov	 DWORD PTR [ecx], eax

; 790  :         _Constructed_first = _Newvec + _Whereoff;
; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000ab	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ae	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b1	8b 16		 mov	 edx, DWORD PTR [esi]
  000b3	3b c1		 cmp	 eax, ecx
  000b5	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000b7	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 794  :         } else { // provide basic guarantee

  000b9	eb 17		 jmp	 SHORT $LN60@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bb	57		 push	 edi
  000bc	50		 push	 eax
  000bd	52		 push	 edx
  000be	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationCWDecorator * *,NEffectUpdateDecorator::CTextureAnimationCWDecorator * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000c3	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c9	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000cc	83 c0 04	 add	 eax, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000cf	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN60@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d2	50		 push	 eax
  000d3	51		 push	 ecx
  000d4	52		 push	 edx
  000d5	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CTextureAnimationCWDecorator * *,NEffectUpdateDecorator::CTextureAnimationCWDecorator * *>

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000da	8b 06		 mov	 eax, DWORD PTR [esi]

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000dc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000df	85 c0		 test	 eax, eax
  000e1	74 2c		 je	 SHORT $LN78@Emplace_re

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e3	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000e6	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e8	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000eb	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f1	72 12		 jb	 SHORT $LN88@Emplace_re

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f3	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f6	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fb	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fe	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00101	77 29		 ja	 SHORT $LN85@Emplace_re

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00103	8b c2		 mov	 eax, edx
$LN88@Emplace_re:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00105	51		 push	 ecx
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0010c	83 c4 08	 add	 esp, 8
$LN78@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0010f	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00112	89 3e		 mov	 DWORD PTR [esi], edi
  00114	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00117	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0011a	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  0011d	8d 0c 3b	 lea	 ecx, DWORD PTR [ebx+edi]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00120	5f		 pop	 edi

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00121	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 807  :     }

  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
$LN85@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0012c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 778  :             _Xlength();

  00131	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CTextureAnimationCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >::_Xlength
$LN97@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00136	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN94@Emplace_re:
  0013b	cc		 int	 3
??$_Emplace_reallocate@ABQAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ENDP ; std::vector<NEffectUpdateDecorator::CTextureAnimationCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationCWDecorator * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCNullDecorator@NEffectUpdateDecorator@@@?$vector@PAVCNullDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv641 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCNullDecorator@NEffectUpdateDecorator@@@?$vector@PAVCNullDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z PROC ; std::vector<NEffectUpdateDecorator::CNullDecorator *,std::allocator<NEffectUpdateDecorator::CNullDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CNullDecorator * const &>, COMDAT
; _this$ = ecx

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b c1		 sub	 eax, ecx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001b	2b c1		 sub	 eax, ecx
  0001d	c1 f8 02	 sar	 eax, 2

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 06 01 00
	00		 je	 $LN96@Emplace_re

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b d1		 sub	 edx, ecx

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 fa 02	 sar	 edx, 2

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b ca		 mov	 ecx, edx
  00040	d1 e9		 shr	 ecx, 1
  00042	2b c1		 sub	 eax, ecx
  00044	3b d0		 cmp	 edx, eax
  00046	76 12		 jbe	 SHORT $LN12@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow

  00048	bb fc ff ff ff	 mov	 ebx, -4			; fffffffcH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004d	53		 push	 ebx
  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 41		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  0005d	8b df		 mov	 ebx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 d8	 cmovae	 ebx, eax
  00064	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0006a	0f 87 c6 00 00
	00		 ja	 $LN97@Emplace_re

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00070	c1 e3 02	 shl	 ebx, 2

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00073	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  00079	72 0d		 jb	 SHORT $LN24@Emplace_re

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007b	53		 push	 ebx
  0007c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00081	83 c4 04	 add	 esp, 4
  00084	8b f8		 mov	 edi, eax
  00086	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00088	85 db		 test	 ebx, ebx
  0008a	74 0d		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  0008c	53		 push	 ebx
  0008d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00092	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  00095	8b f8		 mov	 edi, eax
  00097	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  00099	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0009b	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  0009e	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	89 4d fc	 mov	 DWORD PTR tv641[ebp], ecx
  000a7	8b 00		 mov	 eax, DWORD PTR [eax]
  000a9	89 01		 mov	 DWORD PTR [ecx], eax

; 790  :         _Constructed_first = _Newvec + _Whereoff;
; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000ab	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ae	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b1	8b 16		 mov	 edx, DWORD PTR [esi]
  000b3	3b c1		 cmp	 eax, ecx
  000b5	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000b7	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 794  :         } else { // provide basic guarantee

  000b9	eb 17		 jmp	 SHORT $LN60@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bb	57		 push	 edi
  000bc	50		 push	 eax
  000bd	52		 push	 edx
  000be	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CNullDecorator * *,NEffectUpdateDecorator::CNullDecorator * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000c3	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c9	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000cc	83 c0 04	 add	 eax, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000cf	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN60@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d2	50		 push	 eax
  000d3	51		 push	 ecx
  000d4	52		 push	 edx
  000d5	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCNullDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CNullDecorator * *,NEffectUpdateDecorator::CNullDecorator * *>

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000da	8b 06		 mov	 eax, DWORD PTR [esi]

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000dc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000df	85 c0		 test	 eax, eax
  000e1	74 2c		 je	 SHORT $LN78@Emplace_re

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e3	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000e6	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e8	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000eb	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f1	72 12		 jb	 SHORT $LN88@Emplace_re

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f3	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f6	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fb	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fe	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00101	77 29		 ja	 SHORT $LN85@Emplace_re

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00103	8b c2		 mov	 eax, edx
$LN88@Emplace_re:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00105	51		 push	 ecx
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0010c	83 c4 08	 add	 esp, 8
$LN78@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0010f	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00112	89 3e		 mov	 DWORD PTR [esi], edi
  00114	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00117	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0011a	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  0011d	8d 0c 3b	 lea	 ecx, DWORD PTR [ebx+edi]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00120	5f		 pop	 edi

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00121	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 807  :     }

  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
$LN85@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0012c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 778  :             _Xlength();

  00131	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCNullDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CNullDecorator *,std::allocator<NEffectUpdateDecorator::CNullDecorator *> >::_Xlength
$LN97@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00136	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN94@Emplace_re:
  0013b	cc		 int	 3
??$_Emplace_reallocate@ABQAVCNullDecorator@NEffectUpdateDecorator@@@?$vector@PAVCNullDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ENDP ; std::vector<NEffectUpdateDecorator::CNullDecorator *,std::allocator<NEffectUpdateDecorator::CNullDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CNullDecorator * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCHeaderDecorator@NEffectUpdateDecorator@@@?$vector@PAVCHeaderDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv641 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCHeaderDecorator@NEffectUpdateDecorator@@@?$vector@PAVCHeaderDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z PROC ; std::vector<NEffectUpdateDecorator::CHeaderDecorator *,std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CHeaderDecorator * const &>, COMDAT
; _this$ = ecx

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b c1		 sub	 eax, ecx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001b	2b c1		 sub	 eax, ecx
  0001d	c1 f8 02	 sar	 eax, 2

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 06 01 00
	00		 je	 $LN96@Emplace_re

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b d1		 sub	 edx, ecx

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 fa 02	 sar	 edx, 2

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b ca		 mov	 ecx, edx
  00040	d1 e9		 shr	 ecx, 1
  00042	2b c1		 sub	 eax, ecx
  00044	3b d0		 cmp	 edx, eax
  00046	76 12		 jbe	 SHORT $LN12@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow

  00048	bb fc ff ff ff	 mov	 ebx, -4			; fffffffcH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004d	53		 push	 ebx
  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 41		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  0005d	8b df		 mov	 ebx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 d8	 cmovae	 ebx, eax
  00064	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0006a	0f 87 c6 00 00
	00		 ja	 $LN97@Emplace_re

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00070	c1 e3 02	 shl	 ebx, 2

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00073	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  00079	72 0d		 jb	 SHORT $LN24@Emplace_re

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007b	53		 push	 ebx
  0007c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00081	83 c4 04	 add	 esp, 4
  00084	8b f8		 mov	 edi, eax
  00086	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00088	85 db		 test	 ebx, ebx
  0008a	74 0d		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  0008c	53		 push	 ebx
  0008d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00092	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  00095	8b f8		 mov	 edi, eax
  00097	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  00099	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0009b	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  0009e	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	89 4d fc	 mov	 DWORD PTR tv641[ebp], ecx
  000a7	8b 00		 mov	 eax, DWORD PTR [eax]
  000a9	89 01		 mov	 DWORD PTR [ecx], eax

; 790  :         _Constructed_first = _Newvec + _Whereoff;
; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000ab	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ae	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b1	8b 16		 mov	 edx, DWORD PTR [esi]
  000b3	3b c1		 cmp	 eax, ecx
  000b5	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000b7	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 794  :         } else { // provide basic guarantee

  000b9	eb 17		 jmp	 SHORT $LN60@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bb	57		 push	 edi
  000bc	50		 push	 eax
  000bd	52		 push	 edx
  000be	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CHeaderDecorator * *,NEffectUpdateDecorator::CHeaderDecorator * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000c3	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c9	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000cc	83 c0 04	 add	 eax, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000cf	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN60@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d2	50		 push	 eax
  000d3	51		 push	 ecx
  000d4	52		 push	 edx
  000d5	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@@std@@YAPAPAVCHeaderDecorator@NEffectUpdateDecorator@@PAPAV12@00@Z ; std::_Copy_memmove<NEffectUpdateDecorator::CHeaderDecorator * *,NEffectUpdateDecorator::CHeaderDecorator * *>

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000da	8b 06		 mov	 eax, DWORD PTR [esi]

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000dc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000df	85 c0		 test	 eax, eax
  000e1	74 2c		 je	 SHORT $LN78@Emplace_re

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e3	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000e6	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e8	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000eb	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f1	72 12		 jb	 SHORT $LN88@Emplace_re

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f3	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f6	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fb	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fe	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00101	77 29		 ja	 SHORT $LN85@Emplace_re

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00103	8b c2		 mov	 eax, edx
$LN88@Emplace_re:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00105	51		 push	 ecx
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0010c	83 c4 08	 add	 esp, 8
$LN78@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0010f	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00112	89 3e		 mov	 DWORD PTR [esi], edi
  00114	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00117	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0011a	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  0011d	8d 0c 3b	 lea	 ecx, DWORD PTR [ebx+edi]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00120	5f		 pop	 edi

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00121	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 807  :     }

  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
$LN85@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0012c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 778  :             _Xlength();

  00131	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCHeaderDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ; std::vector<NEffectUpdateDecorator::CHeaderDecorator *,std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >::_Xlength
$LN97@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00136	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN94@Emplace_re:
  0013b	cc		 int	 3
??$_Emplace_reallocate@ABQAVCHeaderDecorator@NEffectUpdateDecorator@@@?$vector@PAVCHeaderDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ENDP ; std::vector<NEffectUpdateDecorator::CHeaderDecorator *,std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CHeaderDecorator * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCParticleSystemData@@@?$vector@PAVCParticleSystemData@@V?$allocator@PAVCParticleSystemData@@@std@@@std@@QAEPAPAVCParticleSystemData@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv641 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCParticleSystemData@@@?$vector@PAVCParticleSystemData@@V?$allocator@PAVCParticleSystemData@@@std@@@std@@QAEPAPAVCParticleSystemData@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CParticleSystemData *,std::allocator<CParticleSystemData *> >::_Emplace_reallocate<CParticleSystemData * const &>, COMDAT
; _this$ = ecx

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b c1		 sub	 eax, ecx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001b	2b c1		 sub	 eax, ecx
  0001d	c1 f8 02	 sar	 eax, 2

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 06 01 00
	00		 je	 $LN96@Emplace_re

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b d1		 sub	 edx, ecx

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 fa 02	 sar	 edx, 2

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b ca		 mov	 ecx, edx
  00040	d1 e9		 shr	 ecx, 1
  00042	2b c1		 sub	 eax, ecx
  00044	3b d0		 cmp	 edx, eax
  00046	76 12		 jbe	 SHORT $LN12@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow

  00048	bb fc ff ff ff	 mov	 ebx, -4			; fffffffcH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004d	53		 push	 ebx
  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 41		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  0005d	8b df		 mov	 ebx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 d8	 cmovae	 ebx, eax
  00064	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0006a	0f 87 c6 00 00
	00		 ja	 $LN97@Emplace_re

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00070	c1 e3 02	 shl	 ebx, 2

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00073	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  00079	72 0d		 jb	 SHORT $LN24@Emplace_re

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007b	53		 push	 ebx
  0007c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00081	83 c4 04	 add	 esp, 4
  00084	8b f8		 mov	 edi, eax
  00086	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00088	85 db		 test	 ebx, ebx
  0008a	74 0d		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  0008c	53		 push	 ebx
  0008d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00092	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  00095	8b f8		 mov	 edi, eax
  00097	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  00099	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0009b	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  0009e	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	89 4d fc	 mov	 DWORD PTR tv641[ebp], ecx
  000a7	8b 00		 mov	 eax, DWORD PTR [eax]
  000a9	89 01		 mov	 DWORD PTR [ecx], eax

; 790  :         _Constructed_first = _Newvec + _Whereoff;
; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000ab	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ae	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b1	8b 16		 mov	 edx, DWORD PTR [esi]
  000b3	3b c1		 cmp	 eax, ecx
  000b5	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000b7	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 794  :         } else { // provide basic guarantee

  000b9	eb 17		 jmp	 SHORT $LN60@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bb	57		 push	 edi
  000bc	50		 push	 eax
  000bd	52		 push	 edx
  000be	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCParticleSystemData@@PAPAV1@@std@@YAPAPAVCParticleSystemData@@PAPAV1@00@Z ; std::_Copy_memmove<CParticleSystemData * *,CParticleSystemData * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000c3	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c9	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000cc	83 c0 04	 add	 eax, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000cf	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN60@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d2	50		 push	 eax
  000d3	51		 push	 ecx
  000d4	52		 push	 edx
  000d5	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCParticleSystemData@@PAPAV1@@std@@YAPAPAVCParticleSystemData@@PAPAV1@00@Z ; std::_Copy_memmove<CParticleSystemData * *,CParticleSystemData * *>

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000da	8b 06		 mov	 eax, DWORD PTR [esi]

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000dc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000df	85 c0		 test	 eax, eax
  000e1	74 2c		 je	 SHORT $LN78@Emplace_re

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e3	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000e6	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e8	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000eb	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f1	72 12		 jb	 SHORT $LN88@Emplace_re

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f3	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f6	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fb	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fe	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00101	77 29		 ja	 SHORT $LN85@Emplace_re

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00103	8b c2		 mov	 eax, edx
$LN88@Emplace_re:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00105	51		 push	 ecx
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0010c	83 c4 08	 add	 esp, 8
$LN78@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0010f	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00112	89 3e		 mov	 DWORD PTR [esi], edi
  00114	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00117	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0011a	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  0011d	8d 0c 3b	 lea	 ecx, DWORD PTR [ebx+edi]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00120	5f		 pop	 edi

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00121	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 807  :     }

  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
$LN85@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0012c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 778  :             _Xlength();

  00131	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCParticleSystemData@@V?$allocator@PAVCParticleSystemData@@@std@@@std@@CAXXZ ; std::vector<CParticleSystemData *,std::allocator<CParticleSystemData *> >::_Xlength
$LN97@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00136	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN94@Emplace_re:
  0013b	cc		 int	 3
??$_Emplace_reallocate@ABQAVCParticleSystemData@@@?$vector@PAVCParticleSystemData@@V?$allocator@PAVCParticleSystemData@@@std@@@std@@QAEPAPAVCParticleSystemData@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CParticleSystemData *,std::allocator<CParticleSystemData *> >::_Emplace_reallocate<CParticleSystemData * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABV?$CTimeEvent@M@@@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEPAV?$CTimeEvent@M@@QAV2@ABV2@@Z
_TEXT	SEGMENT
tv696 = -16						; size = 4
tv701 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
_this$1$ = -4						; size = 4
$T4 = 8							; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABV?$CTimeEvent@M@@@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEPAV?$CTimeEvent@M@@QAV2@ABV2@@Z PROC ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Emplace_reallocate<CTimeEvent<float> const &>, COMDAT
; _this$ = ecx

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00008	8b 75 08	 mov	 esi, DWORD PTR __Whereptr$[ebp]
  0000b	8b de		 mov	 ebx, esi
  0000d	57		 push	 edi
  0000e	8b f9		 mov	 edi, ecx
  00010	89 7d fc	 mov	 DWORD PTR _this$1$[ebp], edi
  00013	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00015	2b d9		 sub	 ebx, ecx

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00017	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0001a	2b c1		 sub	 eax, ecx
  0001c	c1 fb 03	 sar	 ebx, 3
  0001f	c1 f8 03	 sar	 eax, 3

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00022	3d ff ff ff 1f	 cmp	 eax, 536870911		; 1fffffffH
  00027	0f 84 50 01 00
	00		 je	 $LN110@Emplace_re

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002d	8b 57 08	 mov	 edx, DWORD PTR [edi+8]

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00030	40		 inc	 eax

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b d1		 sub	 edx, ecx

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 45 f8	 mov	 DWORD PTR __Newsize$1$[ebp], eax

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 fa 03	 sar	 edx, 3

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH
  0003e	8b ca		 mov	 ecx, edx
  00040	d1 e9		 shr	 ecx, 1
  00042	2b c1		 sub	 eax, ecx
  00044	3b d0		 cmp	 edx, eax
  00046	76 13		 jbe	 SHORT $LN12@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow

  00048	b8 f8 ff ff ff	 mov	 eax, -8			; fffffff8H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004d	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1689 :             return _Max; // geometric growth would overflow

  0004e	89 45 f4	 mov	 DWORD PTR tv701[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00051	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00056	83 c4 04	 add	 esp, 4
  00059	eb 44		 jmp	 SHORT $LN108@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005b	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  0005e	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]
  00061	3b c1		 cmp	 eax, ecx
  00063	0f 43 c8	 cmovae	 ecx, eax
  00066	81 f9 ff ff ff
	1f		 cmp	 ecx, 536870911		; 1fffffffH
  0006c	0f 87 10 01 00
	00		 ja	 $LN111@Emplace_re

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00072	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  00079	89 45 f4	 mov	 DWORD PTR tv701[ebp], eax

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007c	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00081	72 0b		 jb	 SHORT $LN24@Emplace_re

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00089	83 c4 04	 add	 esp, 4
  0008c	eb 11		 jmp	 SHORT $LN108@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  0008e	85 c0		 test	 eax, eax
  00090	74 0b		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00098	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  0009b	eb 02		 jmp	 SHORT $LN108@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  0009d	33 c0		 xor	 eax, eax
$LN108@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0009f	8d 14 d8	 lea	 edx, DWORD PTR [eax+ebx*8]
  000a2	89 45 08	 mov	 DWORD PTR $T4[ebp], eax
  000a5	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a8	89 55 f0	 mov	 DWORD PTR tv696[ebp], edx
  000ab	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ad	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000b0	89 0a		 mov	 DWORD PTR [edx], ecx
  000b2	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 790  :         _Constructed_first = _Newvec + _Whereoff;
; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000b5	8b 5f 04	 mov	 ebx, DWORD PTR [edi+4]
  000b8	8b 17		 mov	 edx, DWORD PTR [edi]
  000ba	3b f3		 cmp	 esi, ebx
  000bc	75 1e		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1620 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  000be	8b 75 08	 mov	 esi, DWORD PTR $T4[ebp]

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  000c1	3b d3		 cmp	 edx, ebx
  000c3	74 5f		 je	 SHORT $LN62@Emplace_re
$LL37@Emplace_re:

; 1631 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  000c5	8b 02		 mov	 eax, DWORD PTR [edx]

; 1632 :         ++_Last;

  000c7	8d 76 08	 lea	 esi, DWORD PTR [esi+8]
  000ca	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  000cd	83 c2 08	 add	 edx, 8

; 1631 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  000d0	89 46 f8	 mov	 DWORD PTR [esi-8], eax
  000d3	89 4e fc	 mov	 DWORD PTR [esi-4], ecx

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  000d6	3b d3		 cmp	 edx, ebx
  000d8	75 eb		 jne	 SHORT $LL37@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 794  :         } else { // provide basic guarantee

  000da	eb 48		 jmp	 SHORT $LN62@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1620 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  000dc	8b 7d 08	 mov	 edi, DWORD PTR $T4[ebp]

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  000df	3b d6		 cmp	 edx, esi
  000e1	74 1d		 je	 SHORT $LN106@Emplace_re
$LL50@Emplace_re:

; 1631 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  000e3	8b 02		 mov	 eax, DWORD PTR [edx]

; 1632 :         ++_Last;

  000e5	8d 7f 08	 lea	 edi, DWORD PTR [edi+8]
  000e8	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  000eb	83 c2 08	 add	 edx, 8

; 1631 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  000ee	89 47 f8	 mov	 DWORD PTR [edi-8], eax
  000f1	89 4f fc	 mov	 DWORD PTR [edi-4], ecx

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  000f4	3b d6		 cmp	 edx, esi
  000f6	75 eb		 jne	 SHORT $LL50@Emplace_re
  000f8	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
  000fb	8b 5f 04	 mov	 ebx, DWORD PTR [edi+4]
  000fe	eb 03		 jmp	 SHORT $LN49@Emplace_re
$LN106@Emplace_re:
  00100	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN49@Emplace_re:
  00103	3b f3		 cmp	 esi, ebx
  00105	74 1d		 je	 SHORT $LN62@Emplace_re
  00107	8b 55 f0	 mov	 edx, DWORD PTR tv696[ebp]
  0010a	2b d6		 sub	 edx, esi
  0010c	0f 1f 40 00	 npad	 4
$LL63@Emplace_re:

; 1631 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00110	8b 06		 mov	 eax, DWORD PTR [esi]
  00112	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00115	89 44 32 08	 mov	 DWORD PTR [edx+esi+8], eax
  00119	89 4c 32 0c	 mov	 DWORD PTR [edx+esi+12], ecx

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  0011d	83 c6 08	 add	 esi, 8
  00120	3b f3		 cmp	 esi, ebx
  00122	75 ec		 jne	 SHORT $LL63@Emplace_re
$LN62@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  00124	8b 07		 mov	 eax, DWORD PTR [edi]
  00126	85 c0		 test	 eax, eax
  00128	74 2c		 je	 SHORT $LN78@Emplace_re

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0012a	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0012d	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0012f	83 e1 f8	 and	 ecx, -8			; fffffff8H

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00132	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00138	72 12		 jb	 SHORT $LN88@Emplace_re

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0013a	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0013d	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00140	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00142	83 c0 fc	 add	 eax, -4			; fffffffcH
  00145	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00148	77 2e		 ja	 SHORT $LN85@Emplace_re

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0014a	8b c2		 mov	 eax, edx
$LN88@Emplace_re:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0014c	51		 push	 ecx
  0014d	50		 push	 eax
  0014e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00153	83 c4 08	 add	 esp, 8
$LN78@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1750 :         _Myfirst = _Newvec;

  00156	8b 45 08	 mov	 eax, DWORD PTR $T4[ebp]

; 1751 :         _Mylast  = _Newvec + _Newsize;

  00159	8b 4d f8	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]
  0015c	89 07		 mov	 DWORD PTR [edi], eax
  0015e	8d 0c c8	 lea	 ecx, DWORD PTR [eax+ecx*8]
  00161	89 4f 04	 mov	 DWORD PTR [edi+4], ecx

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00164	8b 4d f4	 mov	 ecx, DWORD PTR tv701[ebp]
  00167	03 c8		 add	 ecx, eax

; 795  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 796  :             _Constructed_first = _Newvec;
; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);
; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00169	8b 45 f0	 mov	 eax, DWORD PTR tv696[ebp]

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  0016c	89 4f 08	 mov	 DWORD PTR [edi+8], ecx

; 795  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 796  :             _Constructed_first = _Newvec;
; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);
; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  0016f	5f		 pop	 edi
  00170	5e		 pop	 esi
  00171	5b		 pop	 ebx

; 807  :     }

  00172	8b e5		 mov	 esp, ebp
  00174	5d		 pop	 ebp
  00175	c2 08 00	 ret	 8
$LN85@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00178	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN110@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 778  :             _Xlength();

  0017d	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@CAXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Xlength
$LN111@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00182	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN107@Emplace_re:
  00187	cc		 int	 3
??$_Emplace_reallocate@ABV?$CTimeEvent@M@@@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEPAV?$CTimeEvent@M@@QAV2@ABV2@@Z ENDP ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Emplace_reallocate<CTimeEvent<float> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABV?$CTimeEvent@UDWORDCOLOR@@@@@?$vector@V?$CTimeEvent@UDWORDCOLOR@@@@V?$allocator@V?$CTimeEvent@UDWORDCOLOR@@@@@std@@@std@@QAEPAV?$CTimeEvent@UDWORDCOLOR@@@@QAV2@ABV2@@Z
_TEXT	SEGMENT
tv953 = -12						; size = 4
tv948 = -8						; size = 4
__Newsize$1$ = -4					; size = 4
$T4 = 8							; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABV?$CTimeEvent@UDWORDCOLOR@@@@@?$vector@V?$CTimeEvent@UDWORDCOLOR@@@@V?$allocator@V?$CTimeEvent@UDWORDCOLOR@@@@@std@@@std@@QAEPAV?$CTimeEvent@UDWORDCOLOR@@@@QAV2@ABV2@@Z PROC ; std::vector<CTimeEvent<DWORDCOLOR>,std::allocator<CTimeEvent<DWORDCOLOR> > >::_Emplace_reallocate<CTimeEvent<DWORDCOLOR> const &>, COMDAT
; _this$ = ecx

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
  00009	56		 push	 esi

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  0000a	8b 75 08	 mov	 esi, DWORD PTR __Whereptr$[ebp]
  0000d	57		 push	 edi
  0000e	8b 13		 mov	 edx, DWORD PTR [ebx]
  00010	8b fe		 mov	 edi, esi

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00015	2b fa		 sub	 edi, edx
  00017	2b c2		 sub	 eax, edx
  00019	c1 ff 03	 sar	 edi, 3
  0001c	c1 f8 03	 sar	 eax, 3

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  0001f	3d ff ff ff 1f	 cmp	 eax, 536870911		; 1fffffffH
  00024	0f 84 47 01 00
	00		 je	 $LN133@Emplace_re

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002a	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  0002d	40		 inc	 eax

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 45 fc	 mov	 DWORD PTR __Newsize$1$[ebp], eax

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 03	 sar	 ecx, 3

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 15		 jbe	 SHORT $LN12@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow

  00045	b8 f8 ff ff ff	 mov	 eax, -8			; fffffff8H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004a	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1689 :             return _Max; // geometric growth would overflow

  0004b	89 45 f8	 mov	 DWORD PTR tv948[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b d0		 mov	 edx, eax
  00058	eb 4b		 jmp	 SHORT $LN131@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  0005d	8b 4d fc	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]
  00060	3b c1		 cmp	 eax, ecx
  00062	0f 43 c8	 cmovae	 ecx, eax
  00065	81 f9 ff ff ff
	1f		 cmp	 ecx, 536870911		; 1fffffffH
  0006b	0f 87 05 01 00
	00		 ja	 $LN134@Emplace_re

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00071	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  00078	89 45 f8	 mov	 DWORD PTR tv948[ebp], eax

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007b	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00080	72 0d		 jb	 SHORT $LN24@Emplace_re

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00082	50		 push	 eax
  00083	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00088	83 c4 04	 add	 esp, 4
  0008b	8b d0		 mov	 edx, eax
  0008d	eb 16		 jmp	 SHORT $LN131@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  0008f	85 c0		 test	 eax, eax
  00091	74 10		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00099	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  0009c	89 45 08	 mov	 DWORD PTR $T4[ebp], eax
  0009f	8b d0		 mov	 edx, eax
  000a1	eb 05		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  000a3	33 d2		 xor	 edx, edx
$LN131@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a5	89 55 08	 mov	 DWORD PTR $T4[ebp], edx
$LN23@Emplace_re:
  000a8	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
  000ab	8d 3c fa	 lea	 edi, DWORD PTR [edx+edi*8]
  000ae	89 7d f4	 mov	 DWORD PTR tv953[ebp], edi
  000b1	8b 01		 mov	 eax, DWORD PTR [ecx]
  000b3	89 07		 mov	 DWORD PTR [edi], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 137  : 		: m_dwColor(r.m_dwColor)

  000b5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000b8	89 47 04	 mov	 DWORD PTR [edi+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000bb	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
  000be	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  000c0	3b f7		 cmp	 esi, edi
  000c2	75 1b		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1670 :     for (; _UFirst != _ULast; ++_UFirst) {

  000c4	3b cf		 cmp	 ecx, edi
  000c6	74 50		 je	 SHORT $LN80@Emplace_re
$LL43@Emplace_re:
  000c8	8b 01		 mov	 eax, DWORD PTR [ecx]

; 1632 :         ++_Last;

  000ca	8d 52 08	 lea	 edx, DWORD PTR [edx+8]
  000cd	89 42 f8	 mov	 DWORD PTR [edx-8], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 137  : 		: m_dwColor(r.m_dwColor)

  000d0	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1670 :     for (; _UFirst != _ULast; ++_UFirst) {

  000d3	83 c1 08	 add	 ecx, 8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 137  : 		: m_dwColor(r.m_dwColor)

  000d6	89 42 fc	 mov	 DWORD PTR [edx-4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1670 :     for (; _UFirst != _ULast; ++_UFirst) {

  000d9	3b cf		 cmp	 ecx, edi
  000db	75 eb		 jne	 SHORT $LL43@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 794  :         } else { // provide basic guarantee

  000dd	eb 39		 jmp	 SHORT $LN80@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  000df	3b ce		 cmp	 ecx, esi
  000e1	74 18		 je	 SHORT $LN61@Emplace_re
$LL62@Emplace_re:
  000e3	8b 01		 mov	 eax, DWORD PTR [ecx]

; 1632 :         ++_Last;

  000e5	8d 52 08	 lea	 edx, DWORD PTR [edx+8]
  000e8	89 42 f8	 mov	 DWORD PTR [edx-8], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 137  : 		: m_dwColor(r.m_dwColor)

  000eb	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  000ee	83 c1 08	 add	 ecx, 8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 137  : 		: m_dwColor(r.m_dwColor)

  000f1	89 42 fc	 mov	 DWORD PTR [edx-4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  000f4	3b ce		 cmp	 ecx, esi
  000f6	75 eb		 jne	 SHORT $LL62@Emplace_re
  000f8	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
$LN61@Emplace_re:
  000fb	3b f7		 cmp	 esi, edi
  000fd	74 19		 je	 SHORT $LN80@Emplace_re
  000ff	8b 4d f4	 mov	 ecx, DWORD PTR tv953[ebp]
  00102	2b ce		 sub	 ecx, esi
$LL81@Emplace_re:
  00104	8b 06		 mov	 eax, DWORD PTR [esi]
  00106	89 44 31 08	 mov	 DWORD PTR [ecx+esi+8], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 137  : 		: m_dwColor(r.m_dwColor)

  0010a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0010d	89 44 31 0c	 mov	 DWORD PTR [ecx+esi+12], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  00111	83 c6 08	 add	 esi, 8
  00114	3b f7		 cmp	 esi, edi
  00116	75 ec		 jne	 SHORT $LL81@Emplace_re
$LN80@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  00118	8b 03		 mov	 eax, DWORD PTR [ebx]
  0011a	85 c0		 test	 eax, eax
  0011c	74 2c		 je	 SHORT $LN102@Emplace_re

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0011e	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00121	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00123	83 e1 f8	 and	 ecx, -8			; fffffff8H

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00126	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0012c	72 12		 jb	 SHORT $LN112@Emplace_re

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0012e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00131	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00134	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00136	83 c0 fc	 add	 eax, -4			; fffffffcH
  00139	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0013c	77 2e		 ja	 SHORT $LN109@Emplace_re

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0013e	8b c2		 mov	 eax, edx
$LN112@Emplace_re:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00140	51		 push	 ecx
  00141	50		 push	 eax
  00142	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00147	83 c4 08	 add	 esp, 8
$LN102@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1750 :         _Myfirst = _Newvec;

  0014a	8b 45 08	 mov	 eax, DWORD PTR $T4[ebp]

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0014d	8b 4d fc	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]
  00150	89 03		 mov	 DWORD PTR [ebx], eax

; 795  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 796  :             _Constructed_first = _Newvec;
; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);
; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00152	5f		 pop	 edi
  00153	5e		 pop	 esi

; 1751 :         _Mylast  = _Newvec + _Newsize;

  00154	8d 0c c8	 lea	 ecx, DWORD PTR [eax+ecx*8]
  00157	89 4b 04	 mov	 DWORD PTR [ebx+4], ecx

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  0015a	8b 4d f8	 mov	 ecx, DWORD PTR tv948[ebp]
  0015d	03 c8		 add	 ecx, eax

; 795  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 796  :             _Constructed_first = _Newvec;
; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);
; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  0015f	8b 45 f4	 mov	 eax, DWORD PTR tv953[ebp]

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00162	89 4b 08	 mov	 DWORD PTR [ebx+8], ecx

; 795  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 796  :             _Constructed_first = _Newvec;
; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);
; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00165	5b		 pop	 ebx

; 807  :     }

  00166	8b e5		 mov	 esp, ebp
  00168	5d		 pop	 ebp
  00169	c2 08 00	 ret	 8
$LN109@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0016c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN133@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 778  :             _Xlength();

  00171	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$CTimeEvent@UDWORDCOLOR@@@@V?$allocator@V?$CTimeEvent@UDWORDCOLOR@@@@@std@@@std@@CAXXZ ; std::vector<CTimeEvent<DWORDCOLOR>,std::allocator<CTimeEvent<DWORDCOLOR> > >::_Xlength
$LN134@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00176	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN130@Emplace_re:
  0017b	cc		 int	 3
??$_Emplace_reallocate@ABV?$CTimeEvent@UDWORDCOLOR@@@@@?$vector@V?$CTimeEvent@UDWORDCOLOR@@@@V?$allocator@V?$CTimeEvent@UDWORDCOLOR@@@@@std@@@std@@QAEPAV?$CTimeEvent@UDWORDCOLOR@@@@QAV2@ABV2@@Z ENDP ; std::vector<CTimeEvent<DWORDCOLOR>,std::allocator<CTimeEvent<DWORDCOLOR> > >::_Emplace_reallocate<CTimeEvent<DWORDCOLOR> const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCHeaderDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCHeaderDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ PROC ; std::vector<NEffectUpdateDecorator::CHeaderDecorator *,std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCHeaderDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ENDP ; std::vector<NEffectUpdateDecorator::CHeaderDecorator *,std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCNullDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCNullDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ PROC ; std::vector<NEffectUpdateDecorator::CNullDecorator *,std::allocator<NEffectUpdateDecorator::CNullDecorator *> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCNullDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ENDP ; std::vector<NEffectUpdateDecorator::CNullDecorator *,std::allocator<NEffectUpdateDecorator::CNullDecorator *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ PROC ; std::vector<NEffectUpdateDecorator::CTextureAnimationCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ENDP ; std::vector<NEffectUpdateDecorator::CTextureAnimationCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ PROC ; std::vector<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ENDP ; std::vector<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ PROC ; std::vector<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ENDP ; std::vector<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ PROC ; std::vector<NEffectUpdateDecorator::CAirResistanceDecorator *,std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ENDP ; std::vector<NEffectUpdateDecorator::CAirResistanceDecorator *,std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCGravityDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCGravityDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ PROC ; std::vector<NEffectUpdateDecorator::CGravityDecorator *,std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCGravityDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ENDP ; std::vector<NEffectUpdateDecorator::CGravityDecorator *,std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCRotationDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCRotationDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ PROC ; std::vector<NEffectUpdateDecorator::CRotationDecorator *,std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCRotationDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ENDP ; std::vector<NEffectUpdateDecorator::CRotationDecorator *,std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::~CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@std@@@std@@CAXXZ PROC ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<float> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<float> *> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ENDP ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<float> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<float> *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@KAXPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@KAXPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@KAXPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::~CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >::~CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<float> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::~CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@std@@@std@@CAXXZ PROC ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@std@@@std@@CAXXZ ENDP ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@KAXPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@KAXPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@KAXPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::~CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::~CDynamicPoolEx<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??_G?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@UAEPAXI@Z PROC ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 116  : 		virtual ~CTimeEventDecorator() {}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00016	a8 01		 test	 al, 1
  00018	74 1f		 je	 SHORT $LN10@scalar
  0001a	a8 04		 test	 al, 4
  0001c	75 10		 jne	 SHORT $LN3@scalar
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::operator delete
  00024	83 c4 04	 add	 esp, 4
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN3@scalar:
  0002e	6a 24		 push	 36			; 00000024H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00036	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??_G?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@UAEPAXI@Z ENDP ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Excute@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
_TEXT	SEGMENT
_length$1$ = 8						; size = 4
_d$ = 8							; size = 4
?__Excute@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z PROC ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::__Excute, COMDAT
; _this$ = ecx

; 134  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b d9		 mov	 ebx, ecx
  00006	56		 push	 esi
  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 154  :         return _Ptr == _Right._Ptr;

  00008	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  0000b	39 53 10	 cmp	 DWORD PTR [ebx+16], edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 135  : 			if (it_start==it_end)

  0000e	75 0b		 jne	 SHORT $LN4@Excute

; 70   : 			m_PrevDecorator->m_NextDecorator = m_NextDecorator;

  00010	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00013	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00016	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 136  : 			{
; 137  : 				RemoveMe();
; 138  : 			}

  00019	eb 5d		 jmp	 SHORT $LN62@Excute
$LN4@Excute:

; 139  : 			else if (it_cur->m_fTime>d.fTime)

  0001b	8b 73 18	 mov	 esi, DWORD PTR [ebx+24]
  0001e	8b 7d 08	 mov	 edi, DWORD PTR _d$[ebp]
  00021	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  00025	f3 0f 10 17	 movss	 xmm2, DWORD PTR [edi]
  00029	0f 2f c2	 comiss	 xmm0, xmm2
  0002c	76 0f		 jbe	 SHORT $LN55@Excute
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 142  : 		m_dwColor = r.m_dwColor;

  0002e	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  00031	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00034	89 01		 mov	 DWORD PTR [ecx], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 162  : 		}

  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
$LN55@Excute:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 154  :         return _Ptr == _Right._Ptr;

  0003d	8b 43 1c	 mov	 eax, DWORD PTR [ebx+28]
  00040	3b c2		 cmp	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 145  : 				while (it_next!=it_end && it_next->m_fTime<=d.fTime)

  00042	74 23		 je	 SHORT $LN61@Excute
  00044	8b c8		 mov	 ecx, eax
$LL2@Excute:
  00046	0f 2f 11	 comiss	 xmm2, DWORD PTR [ecx]
  00049	72 18		 jb	 SHORT $LN59@Excute
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 78   :         ++_Ptr;

  0004b	8b 43 1c	 mov	 eax, DWORD PTR [ebx+28]
  0004e	8b 73 18	 mov	 esi, DWORD PTR [ebx+24]
  00051	83 c0 08	 add	 eax, 8
  00054	83 c6 08	 add	 esi, 8
  00057	89 43 1c	 mov	 DWORD PTR [ebx+28], eax
  0005a	8b c8		 mov	 ecx, eax
  0005c	89 73 18	 mov	 DWORD PTR [ebx+24], esi

; 154  :         return _Ptr == _Right._Ptr;

  0005f	3b ca		 cmp	 ecx, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 145  : 				while (it_next!=it_end && it_next->m_fTime<=d.fTime)

  00061	75 e3		 jne	 SHORT $LL2@Excute
$LN59@Excute:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 154  :         return _Ptr == _Right._Ptr;

  00063	3b c2		 cmp	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 147  : 				if (it_next == it_end)

  00065	75 29		 jne	 SHORT $LN8@Excute
$LN61@Excute:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 142  : 		m_dwColor = r.m_dwColor;

  00067	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  0006a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0006d	89 01		 mov	 DWORD PTR [ecx], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 70   : 			m_PrevDecorator->m_NextDecorator = m_NextDecorator;

  0006f	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00072	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00075	89 41 04	 mov	 DWORD PTR [ecx+4], eax
$LN62@Excute:

; 162  : 		}

  00078	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0007b	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0007e	6a 01		 push	 1
  00080	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00083	8b cb		 mov	 ecx, ebx
  00085	8b 03		 mov	 eax, DWORD PTR [ebx]
  00087	ff 10		 call	 DWORD PTR [eax]
  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	5b		 pop	 ebx
  0008c	5d		 pop	 ebp
  0008d	c2 04 00	 ret	 4
$LN8@Excute:

; 148  : 				{
; 149  : 					// setting value
; 150  : 					*pData = it_cur->m_Value;
; 151  : 
; 152  : 					RemoveMe();
; 153  : 				}
; 154  : 				else
; 155  : 				{
; 156  : 					float length = it_next->m_fTime - it_cur->m_fTime;

  00090	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  00094	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]

; 158  : 					*pData = it_cur->m_Value*(1-(d.fTime-it_cur->m_fTime)/length) ;

  00098	f3 0f 5c d0	 subss	 xmm2, xmm0
  0009c	f3 0f 5c c8	 subss	 xmm1, xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 137  : 		: m_dwColor(r.m_dwColor)

  000a0	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 158  : 					*pData = it_cur->m_Value*(1-(d.fTime-it_cur->m_fTime)/length) ;

  000a3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000ab	f3 0f 5e d1	 divss	 xmm2, xmm1
  000af	f3 0f 11 4d 08	 movss	 DWORD PTR _length$1$[ebp], xmm1
  000b4	f3 0f 5c c2	 subss	 xmm0, xmm2
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 148  : 		DWORD idx = DWORD(f * 256);

  000b8	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@43800000
  000c0	e8 00 00 00 00	 call	 __ftoui3

; 149  : 		m_dwColor =

  000c5	8b d6		 mov	 edx, esi
  000c7	81 e6 ff 00 ff
	00		 and	 esi, 16711935		; 00ff00ffH
  000cd	0f af f0	 imul	 esi, eax
  000d0	c1 ea 08	 shr	 edx, 8
  000d3	8b ca		 mov	 ecx, edx
  000d5	81 e2 ff 00 ff
	00		 and	 edx, 16711935		; 00ff00ffH
  000db	81 e1 ff 00 ff
	ff		 and	 ecx, -65281		; ffff00ffH
  000e1	0f af d0	 imul	 edx, eax
  000e4	0f af c8	 imul	 ecx, eax

; 142  : 		m_dwColor = r.m_dwColor;

  000e7	8b 43 20	 mov	 eax, DWORD PTR [ebx+32]

; 149  : 		m_dwColor =

  000ea	c1 ee 08	 shr	 esi, 8
  000ed	33 f1		 xor	 esi, ecx
  000ef	81 e6 ff 00 ff
	00		 and	 esi, 16711935		; 00ff00ffH
  000f5	33 f2		 xor	 esi, edx

; 142  : 		m_dwColor = r.m_dwColor;

  000f7	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 159  : 					*pData += it_next->m_Value * ((d.fTime-it_cur->m_fTime)/length);

  000f9	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  000fc	f3 0f 10 07	 movss	 xmm0, DWORD PTR [edi]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 137  : 		: m_dwColor(r.m_dwColor)

  00100	8b 73 1c	 mov	 esi, DWORD PTR [ebx+28]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 159  : 					*pData += it_next->m_Value * ((d.fTime-it_cur->m_fTime)/length);

  00103	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 137  : 		: m_dwColor(r.m_dwColor)

  00107	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 159  : 					*pData += it_next->m_Value * ((d.fTime-it_cur->m_fTime)/length);

  0010a	f3 0f 5e 45 08	 divss	 xmm0, DWORD PTR _length$1$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 148  : 		DWORD idx = DWORD(f * 256);

  0010f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@43800000
  00117	e8 00 00 00 00	 call	 __ftoui3
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 159  : 					*pData += it_next->m_Value * ((d.fTime-it_cur->m_fTime)/length);

  0011c	8b 53 20	 mov	 edx, DWORD PTR [ebx+32]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 149  : 		m_dwColor =

  0011f	8b fe		 mov	 edi, esi
  00121	c1 ef 08	 shr	 edi, 8
  00124	81 e6 ff 00 ff
	00		 and	 esi, 16711935		; 00ff00ffH
  0012a	0f af f0	 imul	 esi, eax
  0012d	8b cf		 mov	 ecx, edi
  0012f	81 e1 ff 00 ff
	ff		 and	 ecx, -65281		; ffff00ffH
  00135	81 e7 ff 00 ff
	00		 and	 edi, 16711935		; 00ff00ffH
  0013b	0f af c8	 imul	 ecx, eax
  0013e	0f af f8	 imul	 edi, eax
  00141	c1 ee 08	 shr	 esi, 8
  00144	33 f1		 xor	 esi, ecx
  00146	81 e6 ff 00 ff
	00		 and	 esi, 16711935		; 00ff00ffH
  0014c	33 f7		 xor	 esi, edi

; 159  : 		m_dwColor += r.m_dwColor;

  0014e	01 32		 add	 DWORD PTR [edx], esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 162  : 		}

  00150	5f		 pop	 edi
  00151	5e		 pop	 esi
  00152	5b		 pop	 ebx
  00153	5d		 pop	 ebp
  00154	c2 04 00	 ret	 4
?__Excute@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ENDP ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::__Excute
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Clone@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
$T2 = 8							; size = 4
_pFirstInstance$ = 8					; size = 4
_pInstance$ = 12					; size = 4
?__Clone@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z PROC ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::__Clone, COMDAT
; _this$ = ecx

; 132  : 		virtual CBaseDecorator* __Clone(CParticleInstance* pFirstInstance, CParticleInstance* pInstance) { return new CTimeEventDecorator(*this, pFirstInstance, pInstance); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	57		 push	 edi
  00006	6a 24		 push	 36			; 00000024H
  00008	8b d9		 mov	 ebx, ecx
  0000a	e8 00 00 00 00	 call	 ??2?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::operator new
  0000f	8b f8		 mov	 edi, eax
  00011	83 c4 04	 add	 esp, 4
  00014	89 7d fc	 mov	 DWORD PTR $T1[ebp], edi
  00017	85 ff		 test	 edi, edi
  00019	74 5d		 je	 SHORT $LN3@Clone

; 24   : 		CBaseDecorator() :m_NextDecorator(0), m_PrevDecorator(0) {}

  0001b	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  00022	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 241  : 		{

  00029	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 128  : 			{

  00030	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00036	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], OFFSET ??_7?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@

; 24   : 		CBaseDecorator() :m_NextDecorator(0), m_PrevDecorator(0) {}

  0003d	56		 push	 esi

; 123  : 			:	it_start(ted.it_start),

  0003e	8b 73 10	 mov	 esi, DWORD PTR [ebx+16]
  00041	89 77 10	 mov	 DWORD PTR [edi+16], esi

; 124  : 				it_end(ted.it_end),

  00044	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  00047	89 57 14	 mov	 DWORD PTR [edi+20], edx

; 125  : 				it_cur(ted.it_cur),

  0004a	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  0004d	89 47 18	 mov	 DWORD PTR [edi+24], eax

; 126  : 				it_next(ted.it_next),

  00050	8b 43 1c	 mov	 eax, DWORD PTR [ebx+28]
  00053	89 47 1c	 mov	 DWORD PTR [edi+28], eax

; 127  : 				pData((T*)( (unsigned char*)ted.pData - (DWORD)pFirstInstance + (DWORD)pInstance))

  00056	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  00059	2b 4d 08	 sub	 ecx, DWORD PTR _pFirstInstance$[ebp]
  0005c	8b 45 0c	 mov	 eax, DWORD PTR _pInstance$[ebp]
  0005f	03 c1		 add	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 154  :         return _Ptr == _Right._Ptr;

  00061	3b f2		 cmp	 esi, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 127  : 				pData((T*)( (unsigned char*)ted.pData - (DWORD)pFirstInstance + (DWORD)pInstance))

  00063	89 47 20	 mov	 DWORD PTR [edi+32], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 154  :         return _Ptr == _Right._Ptr;

  00066	5e		 pop	 esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 129  : 				if (it_start == it_end)

  00067	75 05		 jne	 SHORT $LN7@Clone
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 142  : 		m_dwColor = r.m_dwColor;

  00069	8b 4d 08	 mov	 ecx, DWORD PTR $T2[ebp]
  0006c	89 08		 mov	 DWORD PTR [eax], ecx
$LN7@Clone:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 132  : 		virtual CBaseDecorator* __Clone(CParticleInstance* pFirstInstance, CParticleInstance* pInstance) { return new CTimeEventDecorator(*this, pFirstInstance, pInstance); }

  0006e	8b c7		 mov	 eax, edi
  00070	5f		 pop	 edi
  00071	5b		 pop	 ebx
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 08 00	 ret	 8
$LN3@Clone:
  00078	5f		 pop	 edi
  00079	33 c0		 xor	 eax, eax
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
?__Clone@?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ENDP ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::__Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??1?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@UAE@XZ
_TEXT	SEGMENT
??1?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@UAE@XZ PROC ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::~CTimeEventDecorator<DWORDCOLOR>, COMDAT
; _this$ = ecx

; 116  : 		virtual ~CTimeEventDecorator() {}

  00000	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  0000d	c3		 ret	 0
??1?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@UAE@XZ ENDP ; NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR>::~CTimeEventDecorator<DWORDCOLOR>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@
  0000f	a8 01		 test	 al, 1
  00011	74 1f		 je	 SHORT $LN7@scalar
  00013	a8 04		 test	 al, 4
  00015	75 10		 jne	 SHORT $LN3@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::operator delete
  0001d	83 c4 04	 add	 esp, 4
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
$LN3@scalar:
  00027	6a 04		 push	 4
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pkData$ = 8						; size = 4
_pT$ = 8						; size = 4
??3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAXPAX@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::operator delete, COMDAT

; 253  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00022	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+20
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 254  :             ms_kPool.Free((T*)pT);

  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pT$[ebp]
  0002a	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0002d	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+24
  00033	74 18		 je	 SHORT $LN8@operator

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00035	89 08		 mov	 DWORD PTR [eax], ecx

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  00037	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+20, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 255  :         }

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00048	59		 pop	 ecx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN8@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004d	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00050	51		 push	 ecx
  00051	50		 push	 eax
  00052	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+16
  00057	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 255  :         }

  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
  0006c	cc		 int	 3
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAXPAX@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAXPAX@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??3?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAXPAX@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::operator delete
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??2?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAPAXI@Z
_TEXT	SEGMENT
_pkNewData$1 = -4					; size = 4
___formal$ = 8						; size = 4
??2?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::operator new, COMDAT

; 248  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1544 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+16, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 173  : 			if (m_kVct_pkFree.empty())

  00010	75 4f		 jne	 SHORT $LN4@operator

; 220  : 			return (T*)::operator new(sizeof(T));

  00012	56		 push	 esi
  00013	6a 24		 push	 36			; 00000024H
  00015	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 175  : 				T* pkNewData=New();

  0001a	8b f0		 mov	 esi, eax

; 220  : 			return (T*)::operator new(sizeof(T));

  0001c	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0001f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 175  : 				T* pkNewData=New();

  00024	89 75 fc	 mov	 DWORD PTR _pkNewData$1[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00027	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+12
  0002d	74 16		 je	 SHORT $LN13@operator

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0002f	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 249  :             return ms_kPool.Alloc();

  00031	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 729  :         ++_Mylast;

  00033	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+8, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 177  : 				++m_uUsedCapacity;

  0003a	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+32

; 249  :             return ms_kPool.Alloc();

  00040	5e		 pop	 esi

; 250  :         }

  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
$LN13@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00045	8d 4d fc	 lea	 ecx, DWORD PTR _pkNewData$1[ebp]
  00048	51		 push	 ecx
  00049	50		 push	 eax
  0004a	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+4
  0004f	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAV?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 177  : 				++m_uUsedCapacity;

  00054	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+32

; 249  :             return ms_kPool.Alloc();

  0005a	8b c6		 mov	 eax, esi
  0005c	5e		 pop	 esi

; 250  :         }

  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
$LN4@operator:

; 181  : 			T* pkFreeData=m_kVct_pkFree.back();

  00061	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1624 :         return _My_data._Mylast[-1];

  00064	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1403 :         --_Mylast;

  00067	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@A+20, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 250  :         }

  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
??2?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::~CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >, COMDAT
; _this$ = ecx

; 244  : 		{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@

; 245  : 		}

  00006	c3		 ret	 0
??1?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::~CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??_G?$CTimeEventDecorator@M@NEffectUpdateDecorator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CTimeEventDecorator@M@NEffectUpdateDecorator@@UAEPAXI@Z PROC ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 116  : 		virtual ~CTimeEventDecorator() {}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00016	a8 01		 test	 al, 1
  00018	74 1f		 je	 SHORT $LN10@scalar
  0001a	a8 04		 test	 al, 4
  0001c	75 10		 jne	 SHORT $LN3@scalar
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator delete
  00024	83 c4 04	 add	 esp, 4
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN3@scalar:
  0002e	6a 24		 push	 36			; 00000024H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00036	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??_G?$CTimeEventDecorator@M@NEffectUpdateDecorator@@UAEPAXI@Z ENDP ; NEffectUpdateDecorator::CTimeEventDecorator<float>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Excute@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
_TEXT	SEGMENT
_d$ = 8							; size = 4
?__Excute@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z PROC ; NEffectUpdateDecorator::CTimeEventDecorator<float>::__Excute, COMDAT
; _this$ = ecx

; 134  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 154  :         return _Ptr == _Right._Ptr;

  00007	8b 7e 14	 mov	 edi, DWORD PTR [esi+20]
  0000a	39 7e 10	 cmp	 DWORD PTR [esi+16], edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 135  : 			if (it_start==it_end)

  0000d	75 20		 jne	 SHORT $LN4@Excute

; 70   : 			m_PrevDecorator->m_NextDecorator = m_NextDecorator;

  0000f	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 72   : 			delete this;

  00015	6a 01		 push	 1
  00017	89 42 04	 mov	 DWORD PTR [edx+4], eax
  0001a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001d	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00020	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00023	8b ce		 mov	 ecx, esi
  00025	8b 06		 mov	 eax, DWORD PTR [esi]
  00027	ff 10		 call	 DWORD PTR [eax]
  00029	5f		 pop	 edi

; 160  : 				}
; 161  : 			}
; 162  : 		}

  0002a	5e		 pop	 esi
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
$LN4@Excute:

; 136  : 			{
; 137  : 				RemoveMe();
; 138  : 			}
; 139  : 			else if (it_cur->m_fTime>d.fTime)

  0002f	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  00032	53		 push	 ebx
  00033	8b 5d 08	 mov	 ebx, DWORD PTR _d$[ebp]
  00036	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  0003a	f3 0f 10 13	 movss	 xmm2, DWORD PTR [ebx]
  0003e	0f 2f c2	 comiss	 xmm0, xmm2
  00041	76 0f		 jbe	 SHORT $LN31@Excute

; 140  : 			{
; 141  : 				*pData = it_cur->m_Value;

  00043	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  00046	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00049	5b		 pop	 ebx
  0004a	5f		 pop	 edi
  0004b	89 01		 mov	 DWORD PTR [ecx], eax

; 160  : 				}
; 161  : 			}
; 162  : 		}

  0004d	5e		 pop	 esi
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
$LN31@Excute:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 154  :         return _Ptr == _Right._Ptr;

  00052	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00055	3b c7		 cmp	 eax, edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 145  : 				while (it_next!=it_end && it_next->m_fTime<=d.fTime)

  00057	74 28		 je	 SHORT $LN38@Excute
  00059	8b c8		 mov	 ecx, eax
  0005b	0f 1f 44 00 00	 npad	 5
$LL2@Excute:
  00060	0f 2f 11	 comiss	 xmm2, DWORD PTR [ecx]
  00063	72 18		 jb	 SHORT $LN35@Excute
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 78   :         ++_Ptr;

  00065	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00068	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  0006b	83 c0 08	 add	 eax, 8
  0006e	83 c2 08	 add	 edx, 8
  00071	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  00074	8b c8		 mov	 ecx, eax
  00076	89 56 18	 mov	 DWORD PTR [esi+24], edx

; 154  :         return _Ptr == _Right._Ptr;

  00079	3b cf		 cmp	 ecx, edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 145  : 				while (it_next!=it_end && it_next->m_fTime<=d.fTime)

  0007b	75 e3		 jne	 SHORT $LL2@Excute
$LN35@Excute:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 154  :         return _Ptr == _Right._Ptr;

  0007d	3b c7		 cmp	 eax, edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 147  : 				if (it_next == it_end)

  0007f	75 29		 jne	 SHORT $LN8@Excute
$LN38@Excute:

; 148  : 				{
; 149  : 					// setting value
; 150  : 					*pData = it_cur->m_Value;

  00081	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  00084	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 72   : 			delete this;

  00087	6a 01		 push	 1

; 148  : 				{
; 149  : 					// setting value
; 150  : 					*pData = it_cur->m_Value;

  00089	89 01		 mov	 DWORD PTR [ecx], eax

; 70   : 			m_PrevDecorator->m_NextDecorator = m_NextDecorator;

  0008b	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0008e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00091	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 71   : 			m_NextDecorator->m_PrevDecorator=m_PrevDecorator;

  00094	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00097	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0009a	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 72   : 			delete this;

  0009d	8b ce		 mov	 ecx, esi
  0009f	8b 06		 mov	 eax, DWORD PTR [esi]
  000a1	ff 10		 call	 DWORD PTR [eax]
  000a3	5b		 pop	 ebx
  000a4	5f		 pop	 edi

; 160  : 				}
; 161  : 			}
; 162  : 		}

  000a5	5e		 pop	 esi
  000a6	5d		 pop	 ebp
  000a7	c2 04 00	 ret	 4
$LN8@Excute:

; 151  : 
; 152  : 					RemoveMe();
; 153  : 				}
; 154  : 				else
; 155  : 				{
; 156  : 					float length = it_next->m_fTime - it_cur->m_fTime;

  000aa	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  000ae	f3 0f 5c 0a	 subss	 xmm1, DWORD PTR [edx]

; 157  : 					//*pData = it_cur->m_Value + (it_next->m_Value - it_cur->m_Value)*(d.fTime-it_cur->m_fTime)/length;
; 158  : 					*pData = it_cur->m_Value*(1-(d.fTime-it_cur->m_fTime)/length) ;

  000b2	f3 0f 5c 12	 subss	 xmm2, DWORD PTR [edx]
  000b6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000be	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  000c1	f3 0f 5e d1	 divss	 xmm2, xmm1
  000c5	f3 0f 5c c2	 subss	 xmm0, xmm2
  000c9	f3 0f 59 42 04	 mulss	 xmm0, DWORD PTR [edx+4]
  000ce	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 159  : 					*pData += it_next->m_Value * ((d.fTime-it_cur->m_fTime)/length);

  000d2	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  000d5	f3 0f 10 03	 movss	 xmm0, DWORD PTR [ebx]
  000d9	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  000dc	5b		 pop	 ebx
  000dd	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  000e1	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  000e4	5f		 pop	 edi

; 160  : 				}
; 161  : 			}
; 162  : 		}

  000e5	5e		 pop	 esi
  000e6	f3 0f 5e c1	 divss	 xmm0, xmm1
  000ea	f3 0f 59 40 04	 mulss	 xmm0, DWORD PTR [eax+4]
  000ef	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  000f3	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0
  000f7	5d		 pop	 ebp
  000f8	c2 04 00	 ret	 4
?__Excute@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ENDP ; NEffectUpdateDecorator::CTimeEventDecorator<float>::__Excute
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Clone@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
_pFirstInstance$ = 8					; size = 4
_pInstance$ = 12					; size = 4
?__Clone@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z PROC ; NEffectUpdateDecorator::CTimeEventDecorator<float>::__Clone, COMDAT
; _this$ = ecx

; 132  : 		virtual CBaseDecorator* __Clone(CParticleInstance* pFirstInstance, CParticleInstance* pInstance) { return new CTimeEventDecorator(*this, pFirstInstance, pInstance); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	57		 push	 edi
  00006	6a 24		 push	 36			; 00000024H
  00008	8b d9		 mov	 ebx, ecx
  0000a	e8 00 00 00 00	 call	 ??2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator new
  0000f	8b f8		 mov	 edi, eax
  00011	83 c4 04	 add	 esp, 4
  00014	89 7d fc	 mov	 DWORD PTR $T1[ebp], edi
  00017	85 ff		 test	 edi, edi
  00019	74 5e		 je	 SHORT $LN3@Clone

; 24   : 		CBaseDecorator() :m_NextDecorator(0), m_PrevDecorator(0) {}

  0001b	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  00022	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 241  : 		{

  00029	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 128  : 			{

  00030	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00036	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], OFFSET ??_7?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@

; 24   : 		CBaseDecorator() :m_NextDecorator(0), m_PrevDecorator(0) {}

  0003d	56		 push	 esi

; 123  : 			:	it_start(ted.it_start),

  0003e	8b 73 10	 mov	 esi, DWORD PTR [ebx+16]
  00041	89 77 10	 mov	 DWORD PTR [edi+16], esi

; 124  : 				it_end(ted.it_end),

  00044	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  00047	89 57 14	 mov	 DWORD PTR [edi+20], edx

; 125  : 				it_cur(ted.it_cur),

  0004a	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  0004d	89 47 18	 mov	 DWORD PTR [edi+24], eax

; 126  : 				it_next(ted.it_next),

  00050	8b 43 1c	 mov	 eax, DWORD PTR [ebx+28]
  00053	89 47 1c	 mov	 DWORD PTR [edi+28], eax

; 127  : 				pData((T*)( (unsigned char*)ted.pData - (DWORD)pFirstInstance + (DWORD)pInstance))

  00056	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  00059	2b 4d 08	 sub	 ecx, DWORD PTR _pFirstInstance$[ebp]
  0005c	8b 45 0c	 mov	 eax, DWORD PTR _pInstance$[ebp]
  0005f	03 c1		 add	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 154  :         return _Ptr == _Right._Ptr;

  00061	3b f2		 cmp	 esi, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 127  : 				pData((T*)( (unsigned char*)ted.pData - (DWORD)pFirstInstance + (DWORD)pInstance))

  00063	89 47 20	 mov	 DWORD PTR [edi+32], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 154  :         return _Ptr == _Right._Ptr;

  00066	5e		 pop	 esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 129  : 				if (it_start == it_end)

  00067	75 06		 jne	 SHORT $LN7@Clone

; 130  : 					*pData = T();

  00069	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN7@Clone:

; 132  : 		virtual CBaseDecorator* __Clone(CParticleInstance* pFirstInstance, CParticleInstance* pInstance) { return new CTimeEventDecorator(*this, pFirstInstance, pInstance); }

  0006f	8b c7		 mov	 eax, edi
  00071	5f		 pop	 edi
  00072	5b		 pop	 ebx
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 08 00	 ret	 8
$LN3@Clone:
  00079	5f		 pop	 edi
  0007a	33 c0		 xor	 eax, eax
  0007c	5b		 pop	 ebx
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c2 08 00	 ret	 8
?__Clone@?$CTimeEventDecorator@M@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ENDP ; NEffectUpdateDecorator::CTimeEventDecorator<float>::__Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??1?$CTimeEventDecorator@M@NEffectUpdateDecorator@@UAE@XZ
_TEXT	SEGMENT
??1?$CTimeEventDecorator@M@NEffectUpdateDecorator@@UAE@XZ PROC ; NEffectUpdateDecorator::CTimeEventDecorator<float>::~CTimeEventDecorator<float>, COMDAT
; _this$ = ecx

; 116  : 		virtual ~CTimeEventDecorator() {}

  00000	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  0000d	c3		 ret	 0
??1?$CTimeEventDecorator@M@NEffectUpdateDecorator@@UAE@XZ ENDP ; NEffectUpdateDecorator::CTimeEventDecorator<float>::~CTimeEventDecorator<float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??0?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAE@ABV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@PAM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_TimeEventContainer$ = 8				; size = 4
_pValue$ = 12						; size = 4
??0?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAE@ABV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@PAM@Z PROC ; NEffectUpdateDecorator::CTimeEventDecorator<float>::CTimeEventDecorator<float>, COMDAT
; _this$ = ecx

; 110  : 			{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00004	8b 55 08	 mov	 edx, DWORD PTR _TimeEventContainer$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 110  : 			{

  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx
  0000b	89 7d fc	 mov	 DWORD PTR _this$[ebp], edi

; 24   : 		CBaseDecorator() :m_NextDecorator(0), m_PrevDecorator(0) {}

  0000e	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  00015	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 241  : 		{

  0001c	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 110  : 			{

  00023	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00029	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], OFFSET ??_7?$CTimeEventDecorator@M@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00030	8b 32		 mov	 esi, DWORD PTR [edx]
  00032	89 77 10	 mov	 DWORD PTR [edi+16], esi
  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
  0003b	8b 02		 mov	 eax, DWORD PTR [edx]
  0003d	89 47 18	 mov	 DWORD PTR [edi+24], eax
  00040	8b 12		 mov	 edx, DWORD PTR [edx]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 109  : 				pData(pValue)

  00042	8b 45 0c	 mov	 eax, DWORD PTR _pValue$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00045	89 57 1c	 mov	 DWORD PTR [edi+28], edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 109  : 				pData(pValue)

  00048	89 47 20	 mov	 DWORD PTR [edi+32], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 154  :         return _Ptr == _Right._Ptr;

  0004b	3b f1		 cmp	 esi, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 111  : 				if (it_start == it_end)

  0004d	75 10		 jne	 SHORT $LN2@CTimeEvent

; 112  : 					*pValue = T();

  0004f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 115  : 			}

  00055	8b c7		 mov	 eax, edi
  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 08 00	 ret	 8
$LN2@CTimeEvent:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 78   :         ++_Ptr;

  0005f	8d 42 08	 lea	 eax, DWORD PTR [edx+8]
  00062	89 47 1c	 mov	 DWORD PTR [edi+28], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 115  : 			}

  00065	8b c7		 mov	 eax, edi
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 08 00	 ret	 8
??0?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAE@ABV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@PAM@Z ENDP ; NEffectUpdateDecorator::CTimeEventDecorator<float>::CTimeEventDecorator<float>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@
  0000f	a8 01		 test	 al, 1
  00011	74 1f		 je	 SHORT $LN7@scalar
  00013	a8 04		 test	 al, 4
  00015	75 10		 jne	 SHORT $LN3@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator delete
  0001d	83 c4 04	 add	 esp, 4
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
$LN3@scalar:
  00027	6a 04		 push	 4
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pkData$ = 8						; size = 4
_pT$ = 8						; size = 4
??3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAXPAX@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator delete, COMDAT

; 253  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00022	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+20
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 254  :             ms_kPool.Free((T*)pT);

  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pT$[ebp]
  0002a	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0002d	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+24
  00033	74 18		 je	 SHORT $LN8@operator

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00035	89 08		 mov	 DWORD PTR [eax], ecx

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  00037	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+20, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 255  :         }

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00048	59		 pop	 ecx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN8@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004d	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00050	51		 push	 ecx
  00051	50		 push	 eax
  00052	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+16
  00057	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<float> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<float> *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTimeEventDecorator<float> * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 255  :         }

  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
  0006c	cc		 int	 3
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAXPAX@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAXPAX@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??3?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAXPAX@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator delete
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAPAXI@Z
_TEXT	SEGMENT
_pkNewData$1 = -4					; size = 4
___formal$ = 8						; size = 4
??2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator new, COMDAT

; 248  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1544 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+16, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 173  : 			if (m_kVct_pkFree.empty())

  00010	75 4f		 jne	 SHORT $LN4@operator

; 220  : 			return (T*)::operator new(sizeof(T));

  00012	56		 push	 esi
  00013	6a 24		 push	 36			; 00000024H
  00015	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 175  : 				T* pkNewData=New();

  0001a	8b f0		 mov	 esi, eax

; 220  : 			return (T*)::operator new(sizeof(T));

  0001c	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0001f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 175  : 				T* pkNewData=New();

  00024	89 75 fc	 mov	 DWORD PTR _pkNewData$1[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00027	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+12
  0002d	74 16		 je	 SHORT $LN13@operator

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0002f	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 249  :             return ms_kPool.Alloc();

  00031	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 729  :         ++_Mylast;

  00033	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+8, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 177  : 				++m_uUsedCapacity;

  0003a	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+32

; 249  :             return ms_kPool.Alloc();

  00040	5e		 pop	 esi

; 250  :         }

  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
$LN13@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00045	8d 4d fc	 lea	 ecx, DWORD PTR _pkNewData$1[ebp]
  00048	51		 push	 ecx
  00049	50		 push	 eax
  0004a	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+4
  0004f	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@?$vector@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@V?$allocator@PAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAV?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTimeEventDecorator<float> *,std::allocator<NEffectUpdateDecorator::CTimeEventDecorator<float> *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTimeEventDecorator<float> * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 177  : 				++m_uUsedCapacity;

  00054	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+32

; 249  :             return ms_kPool.Alloc();

  0005a	8b c6		 mov	 eax, esi
  0005c	5e		 pop	 esi

; 250  :         }

  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
$LN4@operator:

; 181  : 			T* pkFreeData=m_kVct_pkFree.back();

  00061	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1624 :         return _My_data._Mylast[-1];

  00064	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1403 :         --_Mylast;

  00067	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@A+20, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 250  :         }

  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
??2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::~CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >, COMDAT
; _this$ = ecx

; 244  : 		{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@6B@

; 245  : 		}

  00006	c3		 ret	 0
??1?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::~CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z
_TEXT	SEGMENT
$T4 = -24						; size = 8
_this$1$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z PROC ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::insert<0,0>, COMDAT
; _this$ = ecx

; 1235 :     pair<iterator, bool> insert(const value_type& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b c1		 mov	 eax, ecx
  0002a	89 45 f0	 mov	 DWORD PTR _this$1$[ebp], eax

; 1605 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  0002d	8b 18		 mov	 ebx, DWORD PTR [eax]
  0002f	33 f6		 xor	 esi, esi
  00031	8b d3		 mov	 edx, ebx
  00033	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]

; 1606 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1607 :         while (!_Trynode->_Isnil) {

  00036	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  0003a	75 2e		 jne	 SHORT $LN9@insert
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstddef

; 127  :         return _Left < _Right;

  0003c	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  0003f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00043	8b c7		 mov	 eax, edi
$LL8@insert:
  00045	0f 2f 40 10	 comiss	 xmm0, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 1608 :             _Result._Location._Parent = _Trynode;

  00049	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstddef

; 127  :         return _Left < _Right;

  0004b	0f 97 c1	 seta	 cl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 1609 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  0004e	84 c9		 test	 cl, cl
  00050	74 05		 je	 SHORT $LN10@insert

; 1610 :                 _Result._Location._Child = _Tree_child::_Right;
; 1611 :                 _Trynode                 = _Trynode->_Right;

  00052	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 1612 :             } else {

  00055	eb 04		 jmp	 SHORT $LN11@insert
$LN10@insert:

; 1613 :                 _Result._Location._Child = _Tree_child::_Left;
; 1614 :                 _Result._Bound           = _Trynode;

  00057	8b d0		 mov	 edx, eax

; 1615 :                 _Trynode                 = _Trynode->_Left;

  00059	8b 00		 mov	 eax, DWORD PTR [eax]
$LN11@insert:

; 1606 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1607 :         while (!_Trynode->_Isnil) {

  0005b	0f b6 f1	 movzx	 esi, cl
  0005e	83 f6 01	 xor	 esi, 1
  00061	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00065	74 de		 je	 SHORT $LL8@insert
  00067	8b 45 f0	 mov	 eax, DWORD PTR _this$1$[ebp]
$LN9@insert:

; 1599 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0006a	80 7a 0d 00	 cmp	 BYTE PTR [edx+13], 0
  0006e	75 11		 jne	 SHORT $LN4@insert
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstddef

; 127  :         return _Left < _Right;

  00070	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  00073	f3 0f 10 42 10	 movss	 xmm0, DWORD PTR [edx+16]
  00078	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 1599 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0007b	77 04		 ja	 SHORT $LN4@insert
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 193  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0007d	32 c9		 xor	 cl, cl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 1016 :                 return {_Loc._Bound, false};

  0007f	eb 4b		 jmp	 SHORT $LN89@insert
$LN4@insert:

; 1623 :         if (max_size() == _Get_scary()->_Mysize) {

  00081	81 78 04 cc cc
	cc 0c		 cmp	 DWORD PTR [eax+4], 214748364 ; 0cccccccH
  00088	74 5e		 je	 SHORT $LN107@insert
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1012 :     _CONSTEXPR20_DYNALLOC explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  0008a	89 45 e8	 mov	 DWORD PTR $T4[ebp], eax

; 85   :         return ::operator new(_Bytes);

  0008d	6a 14		 push	 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 790  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  0008f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1019 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00096	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0

; 85   :         return ::operator new(_Bytes);

  0009d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 244  :         return _Traits::_Allocate(_Bytes);

  000a2	8b c8		 mov	 ecx, eax

; 85   :         return ::operator new(_Bytes);

  000a4	83 c4 04	 add	 esp, 4

; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  000a7	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 1039 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000aa	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  000ab	8b 00		 mov	 eax, DWORD PTR [eax]
  000ad	89 41 10	 mov	 DWORD PTR [ecx+16], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 813  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  000b0	89 19		 mov	 DWORD PTR [ecx], ebx

; 814  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  000b2	89 59 04	 mov	 DWORD PTR [ecx+4], ebx

; 815  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  000b5	89 59 08	 mov	 DWORD PTR [ecx+8], ebx

; 1039 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000b8	56		 push	 esi

; 816  :         this->_Ptr->_Color = _Red;

  000b9	66 c7 41 0c 00
	00		 mov	 WORD PTR [ecx+12], 0

; 1039 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000bf	8b 4d f0	 mov	 ecx, DWORD PTR _this$1$[ebp]
  000c2	57		 push	 edi
  000c3	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@QAEPAU?$_Tree_node@MPAX@2@U?$_Tree_id@PAU?$_Tree_node@MPAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<float> >::_Insert_node
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 193  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  000c8	8b d0		 mov	 edx, eax
  000ca	b1 01		 mov	 cl, 1
$LN89@insert:
  000cc	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000cf	89 10		 mov	 DWORD PTR [eax], edx
  000d1	88 48 04	 mov	 BYTE PTR [eax+4], cl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 1238 :     }

  000d4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000de	59		 pop	 ecx
  000df	5f		 pop	 edi
  000e0	5e		 pop	 esi
  000e1	5b		 pop	 ebx
  000e2	8b e5		 mov	 esp, ebp
  000e4	5d		 pop	 ebp
  000e5	c2 08 00	 ret	 8
$LN107@insert:

; 1624 :             _Throw_tree_length_error();

  000e8	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN105@insert:
  000ed	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z$2:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<float,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<float,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z ENDP ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::insert<0,0>
; Function compile flags: /Ogtp
;	COMDAT ??1?$set@MU?$less@M@std@@V?$allocator@M@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$set@MU?$less@M@std@@V?$allocator@M@2@@std@@QAE@XZ PROC ; std::set<float,std::less<float>,std::allocator<float> >::~set<float,std::less<float>,std::allocator<float> >, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::~_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >
??1?$set@MU?$less@M@std@@V?$allocator@M@2@@std@@QAE@XZ ENDP ; std::set<float,std::less<float>,std::allocator<float> >::~set<float,std::less<float>,std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@QAEPAU?$_Tree_node@MPAX@2@U?$_Tree_id@PAU?$_Tree_node@MPAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@QAEPAU?$_Tree_node@MPAX@2@U?$_Tree_id@PAU?$_Tree_node@MPAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<float> >::_Insert_node, COMDAT
; _this$ = ecx

; 650  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 651  :         ++_Mysize;
; 652  :         const auto _Head  = _Myhead;
; 653  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 654  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 655  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 656  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 657  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 658  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 717  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 659  :             return _Newnode;
; 660  :         }
; 661  : 
; 662  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 663  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 665  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 666  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 668  :             }
; 669  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 670  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 671  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 672  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 673  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 674  :             }
; 675  :         }
; 676  : 
; 677  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 678  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 679  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 680  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 681  :                     _Pnode->_Parent->_Color          = _Black;
; 682  :                     _Parent_sibling->_Color          = _Black;
; 683  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 684  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 685  :                 } else { // parent's sibling has red and black children
; 686  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 466  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 687  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 466  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 467  : 
; 468  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 469  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 470  :         }
; 471  : 
; 472  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 473  : 
; 474  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 475  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 483  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 476  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 477  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 483  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 479  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 483  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 688  :                         _Lrotate(_Pnode);
; 689  :                     }
; 690  : 
; 691  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 692  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 693  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 487  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 488  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 489  : 
; 490  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 491  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 492  :         }
; 493  : 
; 494  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 495  : 
; 496  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 497  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 502  :         }
; 503  : 
; 504  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 694  :                 }
; 695  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 498  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 499  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 502  :         }
; 503  : 
; 504  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 694  :                 }
; 695  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 501  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 502  :         }
; 503  : 
; 504  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 694  :                 }
; 695  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 696  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 697  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 674  :             }
; 675  :         }
; 676  : 
; 677  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 698  :                     _Pnode->_Parent->_Color          = _Black;
; 699  :                     _Parent_sibling->_Color          = _Black;
; 700  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 701  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 702  :                 } else { // parent's sibling has red and black children
; 703  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 704  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 487  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 488  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 489  : 
; 490  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 491  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 492  :         }
; 493  : 
; 494  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 495  : 
; 496  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 497  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 498  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 499  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 500  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 501  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 502  :         }
; 503  : 
; 504  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 505  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 705  :                         _Rrotate(_Pnode);
; 706  :                     }
; 707  : 
; 708  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 709  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 710  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 465  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 466  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 467  : 
; 468  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 469  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 470  :         }
; 471  : 
; 472  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 473  : 
; 474  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 475  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 476  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 477  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 478  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 479  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 480  :         }
; 481  : 
; 482  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 674  :             }
; 675  :         }
; 676  : 
; 677  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 711  :                 }
; 712  :             }
; 713  :         }
; 714  : 
; 715  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 716  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 717  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@QAEPAU?$_Tree_node@MPAX@2@U?$_Tree_id@PAU?$_Tree_node@MPAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<float> >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::~_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >, COMDAT
; _this$ = ecx

; 1092 :     ~_Tree() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 758  :         _Erase_tree(_Al, _Myhead->_Parent);

  00004	8b 07		 mov	 eax, DWORD PTR [edi]
  00006	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 749  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00009	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000d	75 23		 jne	 SHORT $LN7@Tree
  0000f	90		 npad	 1
$LL6@Tree:

; 750  :             _Erase_tree(_Al, _Rootnode->_Right);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b cf		 mov	 ecx, edi
  00015	57		 push	 edi
  00016	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@MPAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@MPAX@std@@@1@PAU?$_Tree_node@MPAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<float> >::_Erase_tree<std::allocator<std::_Tree_node<float,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 616  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b c6		 mov	 eax, esi

; 617  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  0001f	6a 14		 push	 20			; 00000014H
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00027	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 749  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002e	74 e0		 je	 SHORT $LL6@Tree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00030	8b 07		 mov	 eax, DWORD PTR [edi]
$LN7@Tree:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00032	6a 14		 push	 20			; 00000014H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003a	83 c4 08	 add	 esp, 8
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 1099 :     }

  0003f	c3		 ret	 0
??1?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::~_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CParticleSystemData::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A ; CParticleSystemData::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@VCParticleSystemData@@@@UAE@XZ ; CDynamicPool<CParticleSystemData>::~CDynamicPool<CParticleSystemData>
??__F?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CParticleSystemData::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
;	COMDAT ??__E?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CParticleSystemData::ms_kPool'', COMDAT

; 6    : CDynamicPool<CParticleSystemData>		CParticleSystemData::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CParticleSystemData::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CParticleSystemData::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@VCParticleSystemData@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@VCParticleSystemData@@@@UAEPAXI@Z PROC ; CDynamicPool<CParticleSystemData>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@VCParticleSystemData@@@@UAE@XZ ; CDynamicPool<CParticleSystemData>::~CDynamicPool<CParticleSystemData>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@VCParticleSystemData@@@@UAEPAXI@Z ENDP ; CDynamicPool<CParticleSystemData>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCParticleSystemData@@V?$allocator@PAVCParticleSystemData@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCParticleSystemData@@V?$allocator@PAVCParticleSystemData@@@std@@@std@@CAXXZ PROC ; std::vector<CParticleSystemData *,std::allocator<CParticleSystemData *> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCParticleSystemData@@V?$allocator@PAVCParticleSystemData@@@std@@@std@@CAXXZ ENDP ; std::vector<CParticleSystemData *,std::allocator<CParticleSystemData *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@VCParticleSystemData@@@@KAXPAVCParticleSystemData@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@VCParticleSystemData@@@@KAXPAVCParticleSystemData@@@Z PROC ; CDynamicPool<CParticleSystemData>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@VCParticleSystemData@@@@KAXPAVCParticleSystemData@@@Z ENDP ; CDynamicPool<CParticleSystemData>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@VCParticleSystemData@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@VCParticleSystemData@@@@UAE@XZ PROC	; CDynamicPool<CParticleSystemData>::~CDynamicPool<CParticleSystemData>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@VCParticleSystemData@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0000c	85 c0		 test	 eax, eax
  0000e	74 41		 je	 SHORT $LN6@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00013	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00018	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001e	72 12		 jb	 SHORT $LN22@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00020	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00023	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00026	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00028	83 c0 fc	 add	 eax, -4			; fffffffcH
  0002b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002e	77 6b		 ja	 SHORT $LN44@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00030	8b c2		 mov	 eax, edx
$LN22@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00032	51		 push	 ecx
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  00039	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00040	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00043	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1769 :             _Myend   = nullptr;

  0004a	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00051	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00054	85 c0		 test	 eax, eax
  00056	74 41		 je	 SHORT $LN31@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00058	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0005b	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0005d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00060	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00066	72 12		 jb	 SHORT $LN47@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00068	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0006b	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0006e	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00070	83 c0 fc	 add	 eax, -4			; fffffffcH
  00073	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00076	77 23		 ja	 SHORT $LN44@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00078	8b c2		 mov	 eax, edx
$LN47@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0007a	51		 push	 ecx
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  00081	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00088	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  0008b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1769 :             _Myend   = nullptr;

  00092	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN31@CDynamicPo:
  00099	5e		 pop	 esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 26   : 		}

  0009a	c3		 ret	 0
$LN44@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0009b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN52@CDynamicPo:
  000a0	cc		 int	 3
??1?$CDynamicPool@VCParticleSystemData@@@@UAE@XZ ENDP	; CDynamicPool<CParticleSystemData>::~CDynamicPool<CParticleSystemData>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??_GCRotationDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCRotationDecorator@NEffectUpdateDecorator@@UAEPAXI@Z PROC ; NEffectUpdateDecorator::CRotationDecorator::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 276  : 		}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00016	a8 01		 test	 al, 1
  00018	74 1f		 je	 SHORT $LN10@scalar
  0001a	a8 04		 test	 al, 4
  0001c	75 10		 jne	 SHORT $LN3@scalar
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::operator delete
  00024	83 c4 04	 add	 esp, 4
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN3@scalar:
  0002e	6a 10		 push	 16			; 00000010H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00036	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??_GCRotationDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ENDP ; NEffectUpdateDecorator::CRotationDecorator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??1CRotationDecorator@NEffectUpdateDecorator@@UAE@XZ
_TEXT	SEGMENT
??1CRotationDecorator@NEffectUpdateDecorator@@UAE@XZ PROC ; NEffectUpdateDecorator::CRotationDecorator::~CRotationDecorator, COMDAT
; _this$ = ecx

; 276  : 		}

  00000	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  0000d	c3		 ret	 0
??1CRotationDecorator@NEffectUpdateDecorator@@UAE@XZ ENDP ; NEffectUpdateDecorator::CRotationDecorator::~CRotationDecorator
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
  0000f	a8 01		 test	 al, 1
  00011	74 1f		 je	 SHORT $LN7@scalar
  00013	a8 04		 test	 al, 4
  00015	75 10		 jne	 SHORT $LN3@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::operator delete
  0001d	83 c4 04	 add	 esp, 4
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
$LN3@scalar:
  00027	6a 04		 push	 4
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pkData$ = 8						; size = 4
_pT$ = 8						; size = 4
??3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z PROC ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::operator delete, COMDAT

; 253  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00022	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+20
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 254  :             ms_kPool.Free((T*)pT);

  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pT$[ebp]
  0002a	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0002d	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+24
  00033	74 18		 je	 SHORT $LN8@operator

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00035	89 08		 mov	 DWORD PTR [eax], ecx

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  00037	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+20, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 255  :         }

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00048	59		 pop	 ecx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN8@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004d	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00050	51		 push	 ecx
  00051	50		 push	 eax
  00052	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+16
  00057	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCRotationDecorator@NEffectUpdateDecorator@@@?$vector@PAVCRotationDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CRotationDecorator *,std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CRotationDecorator * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 255  :         }

  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
  0006c	cc		 int	 3
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??3?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::operator delete
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??2?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z
_TEXT	SEGMENT
_pkNewData$1 = -4					; size = 4
___formal$ = 8						; size = 4
??2?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::operator new, COMDAT

; 248  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1544 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+16, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 173  : 			if (m_kVct_pkFree.empty())

  00010	75 4f		 jne	 SHORT $LN4@operator

; 220  : 			return (T*)::operator new(sizeof(T));

  00012	56		 push	 esi
  00013	6a 10		 push	 16			; 00000010H
  00015	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 175  : 				T* pkNewData=New();

  0001a	8b f0		 mov	 esi, eax

; 220  : 			return (T*)::operator new(sizeof(T));

  0001c	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0001f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 175  : 				T* pkNewData=New();

  00024	89 75 fc	 mov	 DWORD PTR _pkNewData$1[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00027	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+12
  0002d	74 16		 je	 SHORT $LN13@operator

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0002f	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 249  :             return ms_kPool.Alloc();

  00031	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 729  :         ++_Mylast;

  00033	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+8, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 177  : 				++m_uUsedCapacity;

  0003a	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+32

; 249  :             return ms_kPool.Alloc();

  00040	5e		 pop	 esi

; 250  :         }

  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
$LN13@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00045	8d 4d fc	 lea	 ecx, DWORD PTR _pkNewData$1[ebp]
  00048	51		 push	 ecx
  00049	50		 push	 eax
  0004a	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+4
  0004f	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCRotationDecorator@NEffectUpdateDecorator@@@?$vector@PAVCRotationDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CRotationDecorator *,std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CRotationDecorator * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 177  : 				++m_uUsedCapacity;

  00054	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+32

; 249  :             return ms_kPool.Alloc();

  0005a	8b c6		 mov	 eax, esi
  0005c	5e		 pop	 esi

; 250  :         }

  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
$LN4@operator:

; 181  : 			T* pkFreeData=m_kVct_pkFree.back();

  00061	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1624 :         return _My_data._Mylast[-1];

  00064	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1403 :         --_Mylast;

  00067	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A+20, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 250  :         }

  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
??2?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::~CPooledObject<NEffectUpdateDecorator::CRotationDecorator>, COMDAT
; _this$ = ecx

; 244  : 		{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@

; 245  : 		}

  00006	c3		 ret	 0
??1?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::~CPooledObject<NEffectUpdateDecorator::CRotationDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??_GCGravityDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGravityDecorator@NEffectUpdateDecorator@@UAEPAXI@Z PROC ; NEffectUpdateDecorator::CGravityDecorator::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 264  : 		virtual ~CGravityDecorator(){}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00016	a8 01		 test	 al, 1
  00018	74 1f		 je	 SHORT $LN10@scalar
  0001a	a8 04		 test	 al, 4
  0001c	75 10		 jne	 SHORT $LN3@scalar
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::operator delete
  00024	83 c4 04	 add	 esp, 4
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN3@scalar:
  0002e	6a 10		 push	 16			; 00000010H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00036	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??_GCGravityDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ENDP ; NEffectUpdateDecorator::CGravityDecorator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??1CGravityDecorator@NEffectUpdateDecorator@@UAE@XZ
_TEXT	SEGMENT
??1CGravityDecorator@NEffectUpdateDecorator@@UAE@XZ PROC ; NEffectUpdateDecorator::CGravityDecorator::~CGravityDecorator, COMDAT
; _this$ = ecx

; 264  : 		virtual ~CGravityDecorator(){}

  00000	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  0000d	c3		 ret	 0
??1CGravityDecorator@NEffectUpdateDecorator@@UAE@XZ ENDP ; NEffectUpdateDecorator::CGravityDecorator::~CGravityDecorator
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
  0000f	a8 01		 test	 al, 1
  00011	74 1f		 je	 SHORT $LN7@scalar
  00013	a8 04		 test	 al, 4
  00015	75 10		 jne	 SHORT $LN3@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::operator delete
  0001d	83 c4 04	 add	 esp, 4
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
$LN3@scalar:
  00027	6a 04		 push	 4
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pkData$ = 8						; size = 4
_pT$ = 8						; size = 4
??3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z PROC ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::operator delete, COMDAT

; 253  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00022	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+20
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 254  :             ms_kPool.Free((T*)pT);

  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pT$[ebp]
  0002a	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0002d	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+24
  00033	74 18		 je	 SHORT $LN8@operator

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00035	89 08		 mov	 DWORD PTR [eax], ecx

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  00037	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+20, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 255  :         }

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00048	59		 pop	 ecx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN8@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004d	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00050	51		 push	 ecx
  00051	50		 push	 eax
  00052	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+16
  00057	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGravityDecorator@NEffectUpdateDecorator@@@?$vector@PAVCGravityDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CGravityDecorator *,std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CGravityDecorator * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 255  :         }

  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
  0006c	cc		 int	 3
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??3?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::operator delete
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??2?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z
_TEXT	SEGMENT
_pkNewData$1 = -4					; size = 4
___formal$ = 8						; size = 4
??2?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::operator new, COMDAT

; 248  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1544 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+16, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 173  : 			if (m_kVct_pkFree.empty())

  00010	75 4f		 jne	 SHORT $LN4@operator

; 220  : 			return (T*)::operator new(sizeof(T));

  00012	56		 push	 esi
  00013	6a 10		 push	 16			; 00000010H
  00015	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 175  : 				T* pkNewData=New();

  0001a	8b f0		 mov	 esi, eax

; 220  : 			return (T*)::operator new(sizeof(T));

  0001c	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0001f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 175  : 				T* pkNewData=New();

  00024	89 75 fc	 mov	 DWORD PTR _pkNewData$1[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00027	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+12
  0002d	74 16		 je	 SHORT $LN13@operator

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0002f	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 249  :             return ms_kPool.Alloc();

  00031	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 729  :         ++_Mylast;

  00033	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+8, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 177  : 				++m_uUsedCapacity;

  0003a	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+32

; 249  :             return ms_kPool.Alloc();

  00040	5e		 pop	 esi

; 250  :         }

  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
$LN13@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00045	8d 4d fc	 lea	 ecx, DWORD PTR _pkNewData$1[ebp]
  00048	51		 push	 ecx
  00049	50		 push	 eax
  0004a	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+4
  0004f	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCGravityDecorator@NEffectUpdateDecorator@@@?$vector@PAVCGravityDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CGravityDecorator *,std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CGravityDecorator * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 177  : 				++m_uUsedCapacity;

  00054	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+32

; 249  :             return ms_kPool.Alloc();

  0005a	8b c6		 mov	 eax, esi
  0005c	5e		 pop	 esi

; 250  :         }

  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
$LN4@operator:

; 181  : 			T* pkFreeData=m_kVct_pkFree.back();

  00061	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1624 :         return _My_data._Mylast[-1];

  00064	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1403 :         --_Mylast;

  00067	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A+20, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 250  :         }

  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
??2?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::~CPooledObject<NEffectUpdateDecorator::CGravityDecorator>, COMDAT
; _this$ = ecx

; 244  : 		{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@

; 245  : 		}

  00006	c3		 ret	 0
??1?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::~CPooledObject<NEffectUpdateDecorator::CGravityDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??_GCAirResistanceDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCAirResistanceDecorator@NEffectUpdateDecorator@@UAEPAXI@Z PROC ; NEffectUpdateDecorator::CAirResistanceDecorator::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 253  : 		virtual ~CAirResistanceDecorator(){}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00016	a8 01		 test	 al, 1
  00018	74 1f		 je	 SHORT $LN10@scalar
  0001a	a8 04		 test	 al, 4
  0001c	75 10		 jne	 SHORT $LN3@scalar
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::operator delete
  00024	83 c4 04	 add	 esp, 4
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN3@scalar:
  0002e	6a 10		 push	 16			; 00000010H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00036	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??_GCAirResistanceDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ENDP ; NEffectUpdateDecorator::CAirResistanceDecorator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??1CAirResistanceDecorator@NEffectUpdateDecorator@@UAE@XZ
_TEXT	SEGMENT
??1CAirResistanceDecorator@NEffectUpdateDecorator@@UAE@XZ PROC ; NEffectUpdateDecorator::CAirResistanceDecorator::~CAirResistanceDecorator, COMDAT
; _this$ = ecx

; 253  : 		virtual ~CAirResistanceDecorator(){}

  00000	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  0000d	c3		 ret	 0
??1CAirResistanceDecorator@NEffectUpdateDecorator@@UAE@XZ ENDP ; NEffectUpdateDecorator::CAirResistanceDecorator::~CAirResistanceDecorator
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
  0000f	a8 01		 test	 al, 1
  00011	74 1f		 je	 SHORT $LN7@scalar
  00013	a8 04		 test	 al, 4
  00015	75 10		 jne	 SHORT $LN3@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::operator delete
  0001d	83 c4 04	 add	 esp, 4
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
$LN3@scalar:
  00027	6a 04		 push	 4
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pkData$ = 8						; size = 4
_pT$ = 8						; size = 4
??3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z PROC ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::operator delete, COMDAT

; 253  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00022	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+20
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 254  :             ms_kPool.Free((T*)pT);

  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pT$[ebp]
  0002a	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0002d	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+24
  00033	74 18		 je	 SHORT $LN8@operator

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00035	89 08		 mov	 DWORD PTR [eax], ecx

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  00037	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+20, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 255  :         }

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00048	59		 pop	 ecx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN8@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004d	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00050	51		 push	 ecx
  00051	50		 push	 eax
  00052	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+16
  00057	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCAirResistanceDecorator@NEffectUpdateDecorator@@@?$vector@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CAirResistanceDecorator *,std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CAirResistanceDecorator * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 255  :         }

  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
  0006c	cc		 int	 3
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??3?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::operator delete
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??2?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z
_TEXT	SEGMENT
_pkNewData$1 = -4					; size = 4
___formal$ = 8						; size = 4
??2?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::operator new, COMDAT

; 248  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1544 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+16, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 173  : 			if (m_kVct_pkFree.empty())

  00010	75 4f		 jne	 SHORT $LN4@operator

; 220  : 			return (T*)::operator new(sizeof(T));

  00012	56		 push	 esi
  00013	6a 10		 push	 16			; 00000010H
  00015	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 175  : 				T* pkNewData=New();

  0001a	8b f0		 mov	 esi, eax

; 220  : 			return (T*)::operator new(sizeof(T));

  0001c	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0001f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 175  : 				T* pkNewData=New();

  00024	89 75 fc	 mov	 DWORD PTR _pkNewData$1[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00027	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+12
  0002d	74 16		 je	 SHORT $LN13@operator

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0002f	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 249  :             return ms_kPool.Alloc();

  00031	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 729  :         ++_Mylast;

  00033	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+8, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 177  : 				++m_uUsedCapacity;

  0003a	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+32

; 249  :             return ms_kPool.Alloc();

  00040	5e		 pop	 esi

; 250  :         }

  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
$LN13@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00045	8d 4d fc	 lea	 ecx, DWORD PTR _pkNewData$1[ebp]
  00048	51		 push	 ecx
  00049	50		 push	 eax
  0004a	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+4
  0004f	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCAirResistanceDecorator@NEffectUpdateDecorator@@@?$vector@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CAirResistanceDecorator *,std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CAirResistanceDecorator * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 177  : 				++m_uUsedCapacity;

  00054	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+32

; 249  :             return ms_kPool.Alloc();

  0005a	8b c6		 mov	 eax, esi
  0005c	5e		 pop	 esi

; 250  :         }

  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
$LN4@operator:

; 181  : 			T* pkFreeData=m_kVct_pkFree.back();

  00061	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1624 :         return _My_data._Mylast[-1];

  00064	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1403 :         --_Mylast;

  00067	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A+20, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 250  :         }

  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
??2?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::~CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>, COMDAT
; _this$ = ecx

; 244  : 		{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@

; 245  : 		}

  00006	c3		 ret	 0
??1?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::~CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??_GCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@UAEPAXI@Z PROC ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  : 		virtual ~CTextureAnimationRandomDecorator(){}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00016	a8 01		 test	 al, 1
  00018	74 1f		 je	 SHORT $LN10@scalar
  0001a	a8 04		 test	 al, 4
  0001c	75 10		 jne	 SHORT $LN3@scalar
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::operator delete
  00024	83 c4 04	 add	 esp, 4
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN3@scalar:
  0002e	6a 20		 push	 32			; 00000020H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00036	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??_GCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ENDP ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Excute@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
_TEXT	SEGMENT
_d$ = 8							; size = 4
?__Excute@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z PROC ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::__Excute, COMDAT
; _this$ = ecx

; 233  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 234  : 			fLastFrameTime -= d.fElapsedTime;

  00003	8b 45 08	 mov	 eax, DWORD PTR _d$[ebp]
  00006	0f 57 c9	 xorps	 xmm1, xmm1
  00009	56		 push	 esi
  0000a	8b f1		 mov	 esi, ecx
  0000c	f3 0f 10 46 14	 movss	 xmm0, DWORD PTR [esi+20]
  00011	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]

; 235  : 			if (fLastFrameTime<0.0f && n!=0)

  00016	0f 2f c8	 comiss	 xmm1, xmm0
  00019	f3 0f 11 46 14	 movss	 DWORD PTR [esi+20], xmm0
  0001e	76 42		 jbe	 SHORT $LN3@Excute
  00020	8a 46 10	 mov	 al, BYTE PTR [esi+16]
  00023	84 c0		 test	 al, al
  00025	74 1c		 je	 SHORT $LN6@Excute

; 236  : 			{
; 237  : 				*pIdx = (BYTE)random_range(0,n-1);

  00027	0f b6 c0	 movzx	 eax, al
  0002a	48		 dec	 eax
  0002b	50		 push	 eax
  0002c	6a 00		 push	 0
  0002e	e8 00 00 00 00	 call	 ?random_range@@YAJJJ@Z	; random_range
  00033	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00036	83 c4 08	 add	 esp, 8
  00039	0f 57 c9	 xorps	 xmm1, xmm1
  0003c	88 01		 mov	 BYTE PTR [ecx], al
  0003e	f3 0f 10 46 14	 movss	 xmm0, DWORD PTR [esi+20]
$LN6@Excute:

; 238  : 			}
; 239  : 			while (fLastFrameTime<0.0f)

  00043	0f 2f c8	 comiss	 xmm1, xmm0
  00046	76 1a		 jbe	 SHORT $LN3@Excute

; 240  : 				fLastFrameTime += fFrameTime;

  00048	f3 0f 10 56 18	 movss	 xmm2, DWORD PTR [esi+24]
  0004d	0f 1f 00	 npad	 3
$LL2@Excute:
  00050	0f 28 c2	 movaps	 xmm0, xmm2
  00053	f3 0f 58 46 14	 addss	 xmm0, DWORD PTR [esi+20]
  00058	0f 2f c8	 comiss	 xmm1, xmm0
  0005b	f3 0f 11 46 14	 movss	 DWORD PTR [esi+20], xmm0
  00060	77 ee		 ja	 SHORT $LL2@Excute
$LN3@Excute:
  00062	5e		 pop	 esi

; 241  : 		}

  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?__Excute@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ENDP ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::__Excute
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Clone@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
_pfi$ = 8						; size = 4
_pi$ = 12						; size = 4
?__Clone@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z PROC ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::__Clone, COMDAT
; _this$ = ecx

; 231  : 		virtual CBaseDecorator* __Clone(CParticleInstance* pfi, CParticleInstance* pi) { return new CTextureAnimationRandomDecorator(fFrameTime,n,(BYTE*)((unsigned char*)pi+((BYTE*)pIdx-(BYTE*)pfi))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	6a 20		 push	 32			; 00000020H
  00007	8b f1		 mov	 esi, ecx
  00009	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::operator new
  0000e	83 c4 04	 add	 esp, 4
  00011	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00014	85 c0		 test	 eax, eax
  00016	74 4a		 je	 SHORT $LN3@Clone
  00018	8b 56 1c	 mov	 edx, DWORD PTR [esi+28]
  0001b	8a 4e 10	 mov	 cl, BYTE PTR [esi+16]
  0001e	f3 0f 10 46 18	 movss	 xmm0, DWORD PTR [esi+24]
  00023	2b 55 08	 sub	 edx, DWORD PTR _pfi$[ebp]
  00026	03 55 0c	 add	 edx, DWORD PTR _pi$[ebp]

; 24   : 		CBaseDecorator() :m_NextDecorator(0), m_PrevDecorator(0) {}

  00029	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00030	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 241  : 		{

  00037	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 228  : 		CTextureAnimationRandomDecorator(float fFrameTime, BYTE n, BYTE * pIdx) :n(n),pIdx(pIdx),fFrameTime(fFrameTime),fLastFrameTime(fFrameTime){}

  0003e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00044	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@
  0004b	88 48 10	 mov	 BYTE PTR [eax+16], cl
  0004e	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0
  00053	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0
  00058	89 50 1c	 mov	 DWORD PTR [eax+28], edx
  0005b	5e		 pop	 esi

; 231  : 		virtual CBaseDecorator* __Clone(CParticleInstance* pfi, CParticleInstance* pi) { return new CTextureAnimationRandomDecorator(fFrameTime,n,(BYTE*)((unsigned char*)pi+((BYTE*)pIdx-(BYTE*)pfi))); }

  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 08 00	 ret	 8
$LN3@Clone:
  00062	33 c0		 xor	 eax, eax
  00064	5e		 pop	 esi
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 08 00	 ret	 8
?__Clone@CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ENDP ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::__Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??1CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@UAE@XZ
_TEXT	SEGMENT
??1CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@UAE@XZ PROC ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::~CTextureAnimationRandomDecorator, COMDAT
; _this$ = ecx

; 229  : 		virtual ~CTextureAnimationRandomDecorator(){}

  00000	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  0000d	c3		 ret	 0
??1CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@UAE@XZ ENDP ; NEffectUpdateDecorator::CTextureAnimationRandomDecorator::~CTextureAnimationRandomDecorator
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
  0000f	a8 01		 test	 al, 1
  00011	74 1f		 je	 SHORT $LN7@scalar
  00013	a8 04		 test	 al, 4
  00015	75 10		 jne	 SHORT $LN3@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::operator delete
  0001d	83 c4 04	 add	 esp, 4
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
$LN3@scalar:
  00027	6a 04		 push	 4
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pkData$ = 8						; size = 4
_pT$ = 8						; size = 4
??3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::operator delete, COMDAT

; 253  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00022	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+20
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 254  :             ms_kPool.Free((T*)pT);

  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pT$[ebp]
  0002a	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0002d	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+24
  00033	74 18		 je	 SHORT $LN8@operator

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00035	89 08		 mov	 DWORD PTR [eax], ecx

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  00037	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+20, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 255  :         }

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00048	59		 pop	 ecx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN8@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004d	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00050	51		 push	 ecx
  00051	50		 push	 eax
  00052	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+16
  00057	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationRandomDecorator * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 255  :         }

  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
  0006c	cc		 int	 3
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??3?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::operator delete
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??2?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z
_TEXT	SEGMENT
_pkNewData$1 = -4					; size = 4
___formal$ = 8						; size = 4
??2?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::operator new, COMDAT

; 248  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1544 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+16, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 173  : 			if (m_kVct_pkFree.empty())

  00010	75 4f		 jne	 SHORT $LN4@operator

; 220  : 			return (T*)::operator new(sizeof(T));

  00012	56		 push	 esi
  00013	6a 20		 push	 32			; 00000020H
  00015	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 175  : 				T* pkNewData=New();

  0001a	8b f0		 mov	 esi, eax

; 220  : 			return (T*)::operator new(sizeof(T));

  0001c	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0001f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 175  : 				T* pkNewData=New();

  00024	89 75 fc	 mov	 DWORD PTR _pkNewData$1[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00027	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+12
  0002d	74 16		 je	 SHORT $LN13@operator

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0002f	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 249  :             return ms_kPool.Alloc();

  00031	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 729  :         ++_Mylast;

  00033	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+8, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 177  : 				++m_uUsedCapacity;

  0003a	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+32

; 249  :             return ms_kPool.Alloc();

  00040	5e		 pop	 esi

; 250  :         }

  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
$LN13@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00045	8d 4d fc	 lea	 ecx, DWORD PTR _pkNewData$1[ebp]
  00048	51		 push	 ecx
  00049	50		 push	 eax
  0004a	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+4
  0004f	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationRandomDecorator * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 177  : 				++m_uUsedCapacity;

  00054	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+32

; 249  :             return ms_kPool.Alloc();

  0005a	8b c6		 mov	 eax, esi
  0005c	5e		 pop	 esi

; 250  :         }

  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
$LN4@operator:

; 181  : 			T* pkFreeData=m_kVct_pkFree.back();

  00061	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1624 :         return _My_data._Mylast[-1];

  00064	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1403 :         --_Mylast;

  00067	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A+20, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 250  :         }

  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
??2?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>, COMDAT
; _this$ = ecx

; 244  : 		{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@

; 245  : 		}

  00006	c3		 ret	 0
??1?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??_GCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z PROC ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 205  : 		virtual ~CTextureAnimationCCWDecorator(){}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00016	a8 01		 test	 al, 1
  00018	74 1f		 je	 SHORT $LN10@scalar
  0001a	a8 04		 test	 al, 4
  0001c	75 10		 jne	 SHORT $LN3@scalar
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::operator delete
  00024	83 c4 04	 add	 esp, 4
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN3@scalar:
  0002e	6a 20		 push	 32			; 00000020H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00036	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??_GCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ENDP ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Excute@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
_TEXT	SEGMENT
_d$ = 8							; size = 4
?__Excute@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z PROC ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::__Excute, COMDAT
; _this$ = ecx

; 209  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 210  : 			fLastFrameTime -= d.fElapsedTime;

  00003	8b 45 08	 mov	 eax, DWORD PTR _d$[ebp]
  00006	8b d1		 mov	 edx, ecx
  00008	0f 57 c9	 xorps	 xmm1, xmm1
  0000b	f3 0f 10 42 14	 movss	 xmm0, DWORD PTR [edx+20]
  00010	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]

; 211  : 			while (fLastFrameTime<0.0f)

  00015	0f 2f c8	 comiss	 xmm1, xmm0
  00018	f3 0f 11 42 14	 movss	 DWORD PTR [edx+20], xmm0
  0001d	76 2e		 jbe	 SHORT $LN3@Excute
  0001f	90		 npad	 1
$LL2@Excute:

; 212  : 			{
; 213  : 				fLastFrameTime += fFrameTime;

  00020	f3 0f 58 42 18	 addss	 xmm0, DWORD PTR [edx+24]

; 214  : 
; 215  : 				if (--(*pIdx) >= n && n != 0) // Because variable is unsigned..

  00025	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00028	f3 0f 11 42 14	 movss	 DWORD PTR [edx+20], xmm0
  0002d	fe 08		 dec	 BYTE PTR [eax]
  0002f	8a 00		 mov	 al, BYTE PTR [eax]
  00031	8a 4a 10	 mov	 cl, BYTE PTR [edx+16]
  00034	3a c1		 cmp	 al, cl
  00036	72 0b		 jb	 SHORT $LN4@Excute
  00038	84 c9		 test	 cl, cl
  0003a	74 07		 je	 SHORT $LN4@Excute

; 216  : 					*pIdx = BYTE(n - 1);

  0003c	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0003f	fe c9		 dec	 cl
  00041	88 08		 mov	 BYTE PTR [eax], cl
$LN4@Excute:

; 211  : 			while (fLastFrameTime<0.0f)

  00043	f3 0f 10 42 14	 movss	 xmm0, DWORD PTR [edx+20]
  00048	0f 2f c8	 comiss	 xmm1, xmm0
  0004b	77 d3		 ja	 SHORT $LL2@Excute
$LN3@Excute:

; 217  : 			}
; 218  : 		}

  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
?__Excute@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ENDP ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::__Excute
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Clone@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
_pfi$ = 8						; size = 4
_pi$ = 12						; size = 4
?__Clone@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z PROC ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::__Clone, COMDAT
; _this$ = ecx

; 207  : 		virtual CBaseDecorator* __Clone(CParticleInstance* pfi, CParticleInstance* pi) { return new CTextureAnimationCCWDecorator(fFrameTime,n,(BYTE*)((unsigned char*)pi+((BYTE*)pIdx-(BYTE*)pfi))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	6a 20		 push	 32			; 00000020H
  00007	8b f1		 mov	 esi, ecx
  00009	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::operator new
  0000e	83 c4 04	 add	 esp, 4
  00011	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00014	85 c0		 test	 eax, eax
  00016	74 4a		 je	 SHORT $LN3@Clone
  00018	8b 56 1c	 mov	 edx, DWORD PTR [esi+28]
  0001b	8a 4e 10	 mov	 cl, BYTE PTR [esi+16]
  0001e	f3 0f 10 46 18	 movss	 xmm0, DWORD PTR [esi+24]
  00023	2b 55 08	 sub	 edx, DWORD PTR _pfi$[ebp]
  00026	03 55 0c	 add	 edx, DWORD PTR _pi$[ebp]

; 24   : 		CBaseDecorator() :m_NextDecorator(0), m_PrevDecorator(0) {}

  00029	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00030	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 241  : 		{

  00037	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 204  : 		CTextureAnimationCCWDecorator(float fFrameTime, BYTE n, BYTE * pIdx) :n(n),pIdx(pIdx),fFrameTime(fFrameTime),fLastFrameTime(fFrameTime){}

  0003e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00044	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@
  0004b	88 48 10	 mov	 BYTE PTR [eax+16], cl
  0004e	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0
  00053	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0
  00058	89 50 1c	 mov	 DWORD PTR [eax+28], edx
  0005b	5e		 pop	 esi

; 207  : 		virtual CBaseDecorator* __Clone(CParticleInstance* pfi, CParticleInstance* pi) { return new CTextureAnimationCCWDecorator(fFrameTime,n,(BYTE*)((unsigned char*)pi+((BYTE*)pIdx-(BYTE*)pfi))); }

  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 08 00	 ret	 8
$LN3@Clone:
  00062	33 c0		 xor	 eax, eax
  00064	5e		 pop	 esi
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 08 00	 ret	 8
?__Clone@CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ENDP ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::__Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??1CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@UAE@XZ
_TEXT	SEGMENT
??1CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@UAE@XZ PROC ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::~CTextureAnimationCCWDecorator, COMDAT
; _this$ = ecx

; 205  : 		virtual ~CTextureAnimationCCWDecorator(){}

  00000	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  0000d	c3		 ret	 0
??1CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@UAE@XZ ENDP ; NEffectUpdateDecorator::CTextureAnimationCCWDecorator::~CTextureAnimationCCWDecorator
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
  0000f	a8 01		 test	 al, 1
  00011	74 1f		 je	 SHORT $LN7@scalar
  00013	a8 04		 test	 al, 4
  00015	75 10		 jne	 SHORT $LN3@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::operator delete
  0001d	83 c4 04	 add	 esp, 4
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
$LN3@scalar:
  00027	6a 04		 push	 4
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pkData$ = 8						; size = 4
_pT$ = 8						; size = 4
??3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::operator delete, COMDAT

; 253  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00022	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+20
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 254  :             ms_kPool.Free((T*)pT);

  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pT$[ebp]
  0002a	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0002d	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+24
  00033	74 18		 je	 SHORT $LN8@operator

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00035	89 08		 mov	 DWORD PTR [eax], ecx

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  00037	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+20, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 255  :         }

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00048	59		 pop	 ecx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN8@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004d	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00050	51		 push	 ecx
  00051	50		 push	 eax
  00052	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+16
  00057	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationCCWDecorator * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 255  :         }

  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
  0006c	cc		 int	 3
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??3?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::operator delete
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??2?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z
_TEXT	SEGMENT
_pkNewData$1 = -4					; size = 4
___formal$ = 8						; size = 4
??2?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::operator new, COMDAT

; 248  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1544 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+16, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 173  : 			if (m_kVct_pkFree.empty())

  00010	75 4f		 jne	 SHORT $LN4@operator

; 220  : 			return (T*)::operator new(sizeof(T));

  00012	56		 push	 esi
  00013	6a 20		 push	 32			; 00000020H
  00015	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 175  : 				T* pkNewData=New();

  0001a	8b f0		 mov	 esi, eax

; 220  : 			return (T*)::operator new(sizeof(T));

  0001c	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0001f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 175  : 				T* pkNewData=New();

  00024	89 75 fc	 mov	 DWORD PTR _pkNewData$1[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00027	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+12
  0002d	74 16		 je	 SHORT $LN13@operator

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0002f	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 249  :             return ms_kPool.Alloc();

  00031	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 729  :         ++_Mylast;

  00033	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+8, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 177  : 				++m_uUsedCapacity;

  0003a	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+32

; 249  :             return ms_kPool.Alloc();

  00040	5e		 pop	 esi

; 250  :         }

  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
$LN13@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00045	8d 4d fc	 lea	 ecx, DWORD PTR _pkNewData$1[ebp]
  00048	51		 push	 ecx
  00049	50		 push	 eax
  0004a	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+4
  0004f	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationCCWDecorator * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 177  : 				++m_uUsedCapacity;

  00054	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+32

; 249  :             return ms_kPool.Alloc();

  0005a	8b c6		 mov	 eax, esi
  0005c	5e		 pop	 esi

; 250  :         }

  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
$LN4@operator:

; 181  : 			T* pkFreeData=m_kVct_pkFree.back();

  00061	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1624 :         return _My_data._Mylast[-1];

  00064	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1403 :         --_Mylast;

  00067	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A+20, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 250  :         }

  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
??2?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>, COMDAT
; _this$ = ecx

; 244  : 		{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@

; 245  : 		}

  00006	c3		 ret	 0
??1?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??_GCTextureAnimationCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTextureAnimationCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z PROC ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		virtual ~CTextureAnimationCWDecorator(){}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00016	a8 01		 test	 al, 1
  00018	74 1f		 je	 SHORT $LN10@scalar
  0001a	a8 04		 test	 al, 4
  0001c	75 10		 jne	 SHORT $LN3@scalar
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::operator delete
  00024	83 c4 04	 add	 esp, 4
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN3@scalar:
  0002e	6a 20		 push	 32			; 00000020H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00036	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??_GCTextureAnimationCWDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ENDP ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Excute@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
_TEXT	SEGMENT
_d$ = 8							; size = 4
?__Excute@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z PROC ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::__Excute, COMDAT
; _this$ = ecx

; 186  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 			fLastFrameTime -= d.fElapsedTime;

  00003	8b 45 08	 mov	 eax, DWORD PTR _d$[ebp]
  00006	0f 57 c9	 xorps	 xmm1, xmm1
  00009	f3 0f 10 41 14	 movss	 xmm0, DWORD PTR [ecx+20]
  0000e	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]

; 188  : 			while (fLastFrameTime<0.0f)

  00013	0f 2f c8	 comiss	 xmm1, xmm0
  00016	f3 0f 11 41 14	 movss	 DWORD PTR [ecx+20], xmm0
  0001b	76 2c		 jbe	 SHORT $LN3@Excute
  0001d	0f 1f 00	 npad	 3
$LL2@Excute:

; 189  : 			{
; 190  : 				fLastFrameTime += fFrameTime;

  00020	f3 0f 58 41 18	 addss	 xmm0, DWORD PTR [ecx+24]

; 191  : 				if (++(*pIdx) >= n)

  00025	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00028	f3 0f 11 41 14	 movss	 DWORD PTR [ecx+20], xmm0
  0002d	fe 00		 inc	 BYTE PTR [eax]
  0002f	8a 00		 mov	 al, BYTE PTR [eax]
  00031	0f b6 c0	 movzx	 eax, al
  00034	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  00037	72 06		 jb	 SHORT $LN4@Excute

; 192  : 					*pIdx = 0;

  00039	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  0003c	c6 00 00	 mov	 BYTE PTR [eax], 0
$LN4@Excute:

; 188  : 			while (fLastFrameTime<0.0f)

  0003f	f3 0f 10 41 14	 movss	 xmm0, DWORD PTR [ecx+20]
  00044	0f 2f c8	 comiss	 xmm1, xmm0
  00047	77 d7		 ja	 SHORT $LL2@Excute
$LN3@Excute:

; 193  : 			}
; 194  : 		}

  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
?__Excute@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ENDP ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::__Excute
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Clone@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
_pfi$ = 8						; size = 4
_pi$ = 12						; size = 4
?__Clone@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z PROC ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::__Clone, COMDAT
; _this$ = ecx

; 184  : 		virtual CBaseDecorator* __Clone(CParticleInstance* pfi, CParticleInstance* pi) { return new CTextureAnimationCWDecorator(fFrameTime,n,(BYTE*)((unsigned char*)pi+((BYTE*)pIdx-(BYTE*)pfi))); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	6a 20		 push	 32			; 00000020H
  00007	8b f1		 mov	 esi, ecx
  00009	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::operator new
  0000e	83 c4 04	 add	 esp, 4
  00011	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00014	85 c0		 test	 eax, eax
  00016	74 4a		 je	 SHORT $LN3@Clone
  00018	8b 56 1c	 mov	 edx, DWORD PTR [esi+28]
  0001b	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0001e	f3 0f 10 46 18	 movss	 xmm0, DWORD PTR [esi+24]
  00023	2b 55 08	 sub	 edx, DWORD PTR _pfi$[ebp]
  00026	03 55 0c	 add	 edx, DWORD PTR _pi$[ebp]

; 24   : 		CBaseDecorator() :m_NextDecorator(0), m_PrevDecorator(0) {}

  00029	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00030	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 241  : 		{

  00037	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 181  : 		CTextureAnimationCWDecorator(float fFrameTime, DWORD n, BYTE * pIdx) :n(n),pIdx(pIdx),fFrameTime(fFrameTime),fLastFrameTime(fFrameTime){}

  0003e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00044	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@
  0004b	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  0004e	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0
  00053	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0
  00058	89 50 1c	 mov	 DWORD PTR [eax+28], edx
  0005b	5e		 pop	 esi

; 184  : 		virtual CBaseDecorator* __Clone(CParticleInstance* pfi, CParticleInstance* pi) { return new CTextureAnimationCWDecorator(fFrameTime,n,(BYTE*)((unsigned char*)pi+((BYTE*)pIdx-(BYTE*)pfi))); }

  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 08 00	 ret	 8
$LN3@Clone:
  00062	33 c0		 xor	 eax, eax
  00064	5e		 pop	 esi
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 08 00	 ret	 8
?__Clone@CTextureAnimationCWDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ENDP ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::__Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??1CTextureAnimationCWDecorator@NEffectUpdateDecorator@@UAE@XZ
_TEXT	SEGMENT
??1CTextureAnimationCWDecorator@NEffectUpdateDecorator@@UAE@XZ PROC ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::~CTextureAnimationCWDecorator, COMDAT
; _this$ = ecx

; 182  : 		virtual ~CTextureAnimationCWDecorator(){}

  00000	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  0000d	c3		 ret	 0
??1CTextureAnimationCWDecorator@NEffectUpdateDecorator@@UAE@XZ ENDP ; NEffectUpdateDecorator::CTextureAnimationCWDecorator::~CTextureAnimationCWDecorator
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
  0000f	a8 01		 test	 al, 1
  00011	74 1f		 je	 SHORT $LN7@scalar
  00013	a8 04		 test	 al, 4
  00015	75 10		 jne	 SHORT $LN3@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::operator delete
  0001d	83 c4 04	 add	 esp, 4
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
$LN3@scalar:
  00027	6a 04		 push	 4
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pkData$ = 8						; size = 4
_pT$ = 8						; size = 4
??3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::operator delete, COMDAT

; 253  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00022	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+20
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 254  :             ms_kPool.Free((T*)pT);

  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pT$[ebp]
  0002a	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0002d	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+24
  00033	74 18		 je	 SHORT $LN8@operator

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00035	89 08		 mov	 DWORD PTR [eax], ecx

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  00037	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+20, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 255  :         }

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00048	59		 pop	 ecx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN8@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004d	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00050	51		 push	 ecx
  00051	50		 push	 eax
  00052	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+16
  00057	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTextureAnimationCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationCWDecorator * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 255  :         }

  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
  0006c	cc		 int	 3
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??3?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::operator delete
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??2?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z
_TEXT	SEGMENT
_pkNewData$1 = -4					; size = 4
___formal$ = 8						; size = 4
??2?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::operator new, COMDAT

; 248  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1544 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+16, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 173  : 			if (m_kVct_pkFree.empty())

  00010	75 4f		 jne	 SHORT $LN4@operator

; 220  : 			return (T*)::operator new(sizeof(T));

  00012	56		 push	 esi
  00013	6a 20		 push	 32			; 00000020H
  00015	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 175  : 				T* pkNewData=New();

  0001a	8b f0		 mov	 esi, eax

; 220  : 			return (T*)::operator new(sizeof(T));

  0001c	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0001f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 175  : 				T* pkNewData=New();

  00024	89 75 fc	 mov	 DWORD PTR _pkNewData$1[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00027	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+12
  0002d	74 16		 je	 SHORT $LN13@operator

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0002f	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 249  :             return ms_kPool.Alloc();

  00031	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 729  :         ++_Mylast;

  00033	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+8, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 177  : 				++m_uUsedCapacity;

  0003a	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+32

; 249  :             return ms_kPool.Alloc();

  00040	5e		 pop	 esi

; 250  :         }

  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
$LN13@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00045	8d 4d fc	 lea	 ecx, DWORD PTR _pkNewData$1[ebp]
  00048	51		 push	 ecx
  00049	50		 push	 eax
  0004a	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+4
  0004f	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@?$vector@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CTextureAnimationCWDecorator *,std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CTextureAnimationCWDecorator * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 177  : 				++m_uUsedCapacity;

  00054	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+32

; 249  :             return ms_kPool.Alloc();

  0005a	8b c6		 mov	 eax, esi
  0005c	5e		 pop	 esi

; 250  :         }

  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
$LN4@operator:

; 181  : 			T* pkFreeData=m_kVct_pkFree.back();

  00061	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1624 :         return _My_data._Mylast[-1];

  00064	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1403 :         --_Mylast;

  00067	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A+20, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 250  :         }

  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
??2?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>, COMDAT
; _this$ = ecx

; 244  : 		{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@

; 245  : 		}

  00006	c3		 ret	 0
??1?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??_GCNullDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCNullDecorator@NEffectUpdateDecorator@@UAEPAXI@Z PROC ; NEffectUpdateDecorator::CNullDecorator::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 92   : 		virtual ~CNullDecorator(){}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00016	a8 01		 test	 al, 1
  00018	74 1f		 je	 SHORT $LN10@scalar
  0001a	a8 04		 test	 al, 4
  0001c	75 10		 jne	 SHORT $LN3@scalar
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::operator delete
  00024	83 c4 04	 add	 esp, 4
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN3@scalar:
  0002e	6a 10		 push	 16			; 00000010H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00036	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??_GCNullDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ENDP ; NEffectUpdateDecorator::CNullDecorator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Clone@CNullDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__Clone@CNullDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z PROC ; NEffectUpdateDecorator::CNullDecorator::__Clone, COMDAT
; _this$ = ecx

; 96   : 		virtual CBaseDecorator* __Clone(CParticleInstance*, CParticleInstance* ) { return new CNullDecorator; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	6a 10		 push	 16			; 00000010H
  00006	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::operator new
  0000b	83 c4 04	 add	 esp, 4
  0000e	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00011	85 c0		 test	 eax, eax
  00013	74 28		 je	 SHORT $LN3@Clone

; 24   : 		CBaseDecorator() :m_NextDecorator(0), m_PrevDecorator(0) {}

  00015	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  0001c	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 241  : 		{

  00023	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 91   : 		CNullDecorator(){}

  0002a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CNullDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00030	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7CNullDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@

; 96   : 		virtual CBaseDecorator* __Clone(CParticleInstance*, CParticleInstance* ) { return new CNullDecorator; }

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 08 00	 ret	 8
$LN3@Clone:
  0003d	33 c0		 xor	 eax, eax
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
?__Clone@CNullDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ENDP ; NEffectUpdateDecorator::CNullDecorator::__Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Excute@CNullDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
_TEXT	SEGMENT
_d$ = 8							; size = 4
?__Excute@CNullDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z PROC ; NEffectUpdateDecorator::CNullDecorator::__Excute, COMDAT
; _this$ = ecx

; 95   : 		virtual void __Excute(const CDecoratorData & d) {}

  00000	c2 04 00	 ret	 4
?__Excute@CNullDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ENDP ; NEffectUpdateDecorator::CNullDecorator::__Excute
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??1CNullDecorator@NEffectUpdateDecorator@@UAE@XZ
_TEXT	SEGMENT
??1CNullDecorator@NEffectUpdateDecorator@@UAE@XZ PROC	; NEffectUpdateDecorator::CNullDecorator::~CNullDecorator, COMDAT
; _this$ = ecx

; 92   : 		virtual ~CNullDecorator(){}

  00000	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  0000d	c3		 ret	 0
??1CNullDecorator@NEffectUpdateDecorator@@UAE@XZ ENDP	; NEffectUpdateDecorator::CNullDecorator::~CNullDecorator
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
  0000f	a8 01		 test	 al, 1
  00011	74 1f		 je	 SHORT $LN7@scalar
  00013	a8 04		 test	 al, 4
  00015	75 10		 jne	 SHORT $LN3@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::operator delete
  0001d	83 c4 04	 add	 esp, 4
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
$LN3@scalar:
  00027	6a 04		 push	 4
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pkData$ = 8						; size = 4
_pT$ = 8						; size = 4
??3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z PROC ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::operator delete, COMDAT

; 253  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00022	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+20
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 254  :             ms_kPool.Free((T*)pT);

  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pT$[ebp]
  0002a	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0002d	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+24
  00033	74 18		 je	 SHORT $LN8@operator

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00035	89 08		 mov	 DWORD PTR [eax], ecx

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  00037	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+20, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 255  :         }

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00048	59		 pop	 ecx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN8@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004d	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00050	51		 push	 ecx
  00051	50		 push	 eax
  00052	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+16
  00057	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCNullDecorator@NEffectUpdateDecorator@@@?$vector@PAVCNullDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CNullDecorator *,std::allocator<NEffectUpdateDecorator::CNullDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CNullDecorator * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 255  :         }

  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
  0006c	cc		 int	 3
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??3?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::operator delete
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??2?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z
_TEXT	SEGMENT
_pkNewData$1 = -4					; size = 4
___formal$ = 8						; size = 4
??2?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::operator new, COMDAT

; 248  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1544 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+16, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 173  : 			if (m_kVct_pkFree.empty())

  00010	75 4f		 jne	 SHORT $LN4@operator

; 220  : 			return (T*)::operator new(sizeof(T));

  00012	56		 push	 esi
  00013	6a 10		 push	 16			; 00000010H
  00015	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 175  : 				T* pkNewData=New();

  0001a	8b f0		 mov	 esi, eax

; 220  : 			return (T*)::operator new(sizeof(T));

  0001c	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0001f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 175  : 				T* pkNewData=New();

  00024	89 75 fc	 mov	 DWORD PTR _pkNewData$1[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00027	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+12
  0002d	74 16		 je	 SHORT $LN13@operator

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0002f	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 249  :             return ms_kPool.Alloc();

  00031	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 729  :         ++_Mylast;

  00033	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+8, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 177  : 				++m_uUsedCapacity;

  0003a	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+32

; 249  :             return ms_kPool.Alloc();

  00040	5e		 pop	 esi

; 250  :         }

  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
$LN13@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00045	8d 4d fc	 lea	 ecx, DWORD PTR _pkNewData$1[ebp]
  00048	51		 push	 ecx
  00049	50		 push	 eax
  0004a	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+4
  0004f	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCNullDecorator@NEffectUpdateDecorator@@@?$vector@PAVCNullDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CNullDecorator *,std::allocator<NEffectUpdateDecorator::CNullDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CNullDecorator * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 177  : 				++m_uUsedCapacity;

  00054	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+32

; 249  :             return ms_kPool.Alloc();

  0005a	8b c6		 mov	 eax, esi
  0005c	5e		 pop	 esi

; 250  :         }

  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
$LN4@operator:

; 181  : 			T* pkFreeData=m_kVct_pkFree.back();

  00061	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1624 :         return _My_data._Mylast[-1];

  00064	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1403 :         --_Mylast;

  00067	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A+20, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 250  :         }

  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
??2?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::~CPooledObject<NEffectUpdateDecorator::CNullDecorator>, COMDAT
; _this$ = ecx

; 244  : 		{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@

; 245  : 		}

  00006	c3		 ret	 0
??1?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::~CPooledObject<NEffectUpdateDecorator::CNullDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??_GCHeaderDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCHeaderDecorator@NEffectUpdateDecorator@@UAEPAXI@Z PROC ; NEffectUpdateDecorator::CHeaderDecorator::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 82   : 		virtual ~CHeaderDecorator() {}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], OFFSET ??_7?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
  00010	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00016	a8 01		 test	 al, 1
  00018	74 1f		 je	 SHORT $LN10@scalar
  0001a	a8 04		 test	 al, 4
  0001c	75 10		 jne	 SHORT $LN3@scalar
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::operator delete
  00024	83 c4 04	 add	 esp, 4
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN3@scalar:
  0002e	6a 10		 push	 16			; 00000010H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  00036	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
??_GCHeaderDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ENDP ; NEffectUpdateDecorator::CHeaderDecorator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Clone@CHeaderDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__Clone@CHeaderDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z PROC ; NEffectUpdateDecorator::CHeaderDecorator::__Clone, COMDAT
; _this$ = ecx

; 85   : 		virtual CBaseDecorator* __Clone(CParticleInstance*, CParticleInstance*) { return new CHeaderDecorator; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	6a 10		 push	 16			; 00000010H
  00006	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::operator new
  0000b	83 c4 04	 add	 esp, 4
  0000e	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00011	85 c0		 test	 eax, eax
  00013	74 28		 je	 SHORT $LN3@Clone

; 24   : 		CBaseDecorator() :m_NextDecorator(0), m_PrevDecorator(0) {}

  00015	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  0001c	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 241  : 		{

  00023	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 81   : 		CHeaderDecorator() {}

  0002a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CHeaderDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00030	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7CHeaderDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@

; 85   : 		virtual CBaseDecorator* __Clone(CParticleInstance*, CParticleInstance*) { return new CHeaderDecorator; }

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 08 00	 ret	 8
$LN3@Clone:
  0003d	33 c0		 xor	 eax, eax
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
?__Clone@CHeaderDecorator@NEffectUpdateDecorator@@MAEPAVCBaseDecorator@2@PAVCParticleInstance@@0@Z ENDP ; NEffectUpdateDecorator::CHeaderDecorator::__Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ?__Excute@CHeaderDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__Excute@CHeaderDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z PROC ; NEffectUpdateDecorator::CHeaderDecorator::__Excute, COMDAT
; _this$ = ecx

; 84   : 		virtual void __Excute(const CDecoratorData&) {}

  00000	c2 04 00	 ret	 4
?__Excute@CHeaderDecorator@NEffectUpdateDecorator@@MAEXABVCDecoratorData@2@@Z ENDP ; NEffectUpdateDecorator::CHeaderDecorator::__Excute
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??1CHeaderDecorator@NEffectUpdateDecorator@@UAE@XZ
_TEXT	SEGMENT
??1CHeaderDecorator@NEffectUpdateDecorator@@UAE@XZ PROC	; NEffectUpdateDecorator::CHeaderDecorator::~CHeaderDecorator, COMDAT
; _this$ = ecx

; 82   : 		virtual ~CHeaderDecorator() {}

  00000	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
  00007	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  0000d	c3		 ret	 0
??1CHeaderDecorator@NEffectUpdateDecorator@@UAE@XZ ENDP	; NEffectUpdateDecorator::CHeaderDecorator::~CHeaderDecorator
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
  0000f	a8 01		 test	 al, 1
  00011	74 1f		 je	 SHORT $LN7@scalar
  00013	a8 04		 test	 al, 4
  00015	75 10		 jne	 SHORT $LN3@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::operator delete
  0001d	83 c4 04	 add	 esp, 4
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
$LN3@scalar:
  00027	6a 04		 push	 4
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0002f	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_G?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pkData$ = 8						; size = 4
_pT$ = 8						; size = 4
??3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z PROC ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::operator delete, COMDAT

; 253  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00022	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+20
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 254  :             ms_kPool.Free((T*)pT);

  00027	8b 4d 08	 mov	 ecx, DWORD PTR _pT$[ebp]
  0002a	89 4d 08	 mov	 DWORD PTR _pkData$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0002d	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+24
  00033	74 18		 je	 SHORT $LN8@operator

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00035	89 08		 mov	 DWORD PTR [eax], ecx

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  00037	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+20, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 255  :         }

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00048	59		 pop	 ecx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN8@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004d	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  00050	51		 push	 ecx
  00051	50		 push	 eax
  00052	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+16
  00057	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCHeaderDecorator@NEffectUpdateDecorator@@@?$vector@PAVCHeaderDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CHeaderDecorator *,std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CHeaderDecorator * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 255  :         }

  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
  0006c	cc		 int	 3
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??3?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAXPAX@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::operator delete
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??2?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z
_TEXT	SEGMENT
_pkNewData$1 = -4					; size = 4
___formal$ = 8						; size = 4
??2?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z PROC ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::operator new, COMDAT

; 248  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1544 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+16, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 173  : 			if (m_kVct_pkFree.empty())

  00010	75 4f		 jne	 SHORT $LN4@operator

; 220  : 			return (T*)::operator new(sizeof(T));

  00012	56		 push	 esi
  00013	6a 10		 push	 16			; 00000010H
  00015	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 175  : 				T* pkNewData=New();

  0001a	8b f0		 mov	 esi, eax

; 220  : 			return (T*)::operator new(sizeof(T));

  0001c	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0001f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 175  : 				T* pkNewData=New();

  00024	89 75 fc	 mov	 DWORD PTR _pkNewData$1[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00027	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+12
  0002d	74 16		 je	 SHORT $LN13@operator

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0002f	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 249  :             return ms_kPool.Alloc();

  00031	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 729  :         ++_Mylast;

  00033	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+8, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 177  : 				++m_uUsedCapacity;

  0003a	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+32

; 249  :             return ms_kPool.Alloc();

  00040	5e		 pop	 esi

; 250  :         }

  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
$LN13@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00045	8d 4d fc	 lea	 ecx, DWORD PTR _pkNewData$1[ebp]
  00048	51		 push	 ecx
  00049	50		 push	 eax
  0004a	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+4
  0004f	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCHeaderDecorator@NEffectUpdateDecorator@@@?$vector@PAVCHeaderDecorator@NEffectUpdateDecorator@@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@QAEPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV23@ABQAV23@@Z ; std::vector<NEffectUpdateDecorator::CHeaderDecorator *,std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >::_Emplace_reallocate<NEffectUpdateDecorator::CHeaderDecorator * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 177  : 				++m_uUsedCapacity;

  00054	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+32

; 249  :             return ms_kPool.Alloc();

  0005a	8b c6		 mov	 eax, esi
  0005c	5e		 pop	 esi

; 250  :         }

  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
$LN4@operator:

; 181  : 			T* pkFreeData=m_kVct_pkFree.back();

  00061	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1624 :         return _My_data._Mylast[-1];

  00064	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1403 :         --_Mylast;

  00067	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A+20, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 250  :         }

  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
??2?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ENDP ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::~CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>, COMDAT
; _this$ = ecx

; 244  : 		{

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@

; 245  : 		}

  00006	c3		 ret	 0
??1?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::~CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCBaseDecorator@NEffectUpdateDecorator@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBaseDecorator@NEffectUpdateDecorator@@UAEPAXI@Z PROC ; NEffectUpdateDecorator::CBaseDecorator::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 0c		 push	 12			; 0000000cH
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GCBaseDecorator@NEffectUpdateDecorator@@UAEPAXI@Z ENDP ; NEffectUpdateDecorator::CBaseDecorator::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
;	COMDAT ??1CBaseDecorator@NEffectUpdateDecorator@@UAE@XZ
_TEXT	SEGMENT
??1CBaseDecorator@NEffectUpdateDecorator@@UAE@XZ PROC	; NEffectUpdateDecorator::CBaseDecorator::~CBaseDecorator, COMDAT
; _this$ = ecx

; 25   : 		virtual ~CBaseDecorator(){}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CBaseDecorator@NEffectUpdateDecorator@@6B@
  00006	c3		 ret	 0
??1CBaseDecorator@NEffectUpdateDecorator@@UAE@XZ ENDP	; NEffectUpdateDecorator::CBaseDecorator::~CBaseDecorator
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCParticleSystemData@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCParticleSystemData@@UAEPAXI@Z PROC			; CParticleSystemData::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CParticleSystemData@@UAE@XZ ; CParticleSystemData::~CParticleSystemData
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 4c 01 00 00	 push	 332			; 0000014cH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCParticleSystemData@@UAEPAXI@Z ENDP			; CParticleSystemData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
;	COMDAT ?Delete@CParticleSystemData@@SAXPAV1@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkData$ = 8						; size = 4
?Delete@CParticleSystemData@@SAXPAV1@@Z PROC		; CParticleSystemData::Delete, COMDAT

; 19   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 20   : 	pkData->Clear();

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkData$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?Clear@CEffectElementBase@@QAEXXZ ; CEffectElementBase::Clear
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0000e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+20
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 21   : 	ms_kPool.Free(pkData);

  00013	89 75 08	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00016	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+24
  0001c	74 0c		 je	 SHORT $LN8@Delete

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0001e	89 30		 mov	 DWORD PTR [eax], esi

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  00020	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+20, 4
  00027	5e		 pop	 esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 22   : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN8@Delete:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0002a	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0002d	51		 push	 ecx
  0002e	50		 push	 eax
  0002f	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+16
  00034	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCParticleSystemData@@@?$vector@PAVCParticleSystemData@@V?$allocator@PAVCParticleSystemData@@@std@@@std@@QAEPAPAVCParticleSystemData@@QAPAV2@ABQAV2@@Z ; std::vector<CParticleSystemData *,std::allocator<CParticleSystemData *> >::_Emplace_reallocate<CParticleSystemData * const &>
  00039	5e		 pop	 esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 22   : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?Delete@CParticleSystemData@@SAXPAV1@@Z ENDP		; CParticleSystemData::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
;	COMDAT ?New@CParticleSystemData@@SAPAV1@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
_pkNewData$3 = -16					; size = 4
__$EHRec$ = -12						; size = 12
?New@CParticleSystemData@@SAPAV1@XZ PROC		; CParticleSystemData::New, COMDAT

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?New@CParticleSystemData@@SAPAV1@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  00024	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+20
  0002a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+16, ecx
  00030	0f 85 87 00 00
	00		 jne	 $LN4@New

; 65   : 				T* pkNewData=new T;

  00036	68 4c 01 00 00	 push	 332			; 0000014cH
  0003b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00040	83 c4 04	 add	 esp, 4
  00043	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004d	85 c0		 test	 eax, eax
  0004f	74 0b		 je	 SHORT $LN6@New
  00051	8b c8		 mov	 ecx, eax
  00053	e8 00 00 00 00	 call	 ??0CParticleSystemData@@QAE@XZ ; CParticleSystemData::CParticleSystemData
  00058	8b f0		 mov	 esi, eax
  0005a	eb 02		 jmp	 SHORT $LN7@New
$LN6@New:
  0005c	33 f6		 xor	 esi, esi
$LN7@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0005e	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  00063	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006a	89 75 f0	 mov	 DWORD PTR _pkNewData$3[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0006d	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+12
  00073	74 21		 je	 SHORT $LN14@New

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00075	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 15   : 	return ms_kPool.Alloc();

  00077	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 729  :         ++_Mylast;

  00079	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+8, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  00080	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+32
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 16   : }

  00086	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00089	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00090	59		 pop	 ecx
  00091	5e		 pop	 esi
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c3		 ret	 0
$LN14@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00096	8d 4d f0	 lea	 ecx, DWORD PTR _pkNewData$3[ebp]
  00099	51		 push	 ecx
  0009a	50		 push	 eax
  0009b	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+4
  000a0	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCParticleSystemData@@@?$vector@PAVCParticleSystemData@@V?$allocator@PAVCParticleSystemData@@@std@@@std@@QAEPAPAVCParticleSystemData@@QAPAV2@ABQAV2@@Z ; std::vector<CParticleSystemData *,std::allocator<CParticleSystemData *> >::_Emplace_reallocate<CParticleSystemData * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  000a5	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+32
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 15   : 	return ms_kPool.Alloc();

  000ab	8b c6		 mov	 eax, esi

; 16   : }

  000ad	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b7	59		 pop	 ecx
  000b8	5e		 pop	 esi
  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c3		 ret	 0
$LN4@New:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  000bd	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1624 :         return _My_data._Mylast[-1];

  000c0	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1403 :         --_Mylast;

  000c3	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+20, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 16   : }

  000c9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d3	59		 pop	 ecx
  000d4	5e		 pop	 esi
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?New@CParticleSystemData@@SAPAV1@XZ$0:
  00000	68 4c 01 00 00	 push	 332			; 0000014cH
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?New@CParticleSystemData@@SAPAV1@XZ:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?New@CParticleSystemData@@SAPAV1@XZ
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?New@CParticleSystemData@@SAPAV1@XZ ENDP		; CParticleSystemData::New
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
;	COMDAT ?DestroySystem@CParticleSystemData@@SAXXZ
_TEXT	SEGMENT
?DestroySystem@CParticleSystemData@@SAXXZ PROC		; CParticleSystemData::DestroySystem, COMDAT

; 9    : {

  00000	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00001	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 9    : {

  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 269  :     const auto _ULast = _Get_unwrapped(_Last);

  00008	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+8

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b f7		 cmp	 esi, edi
  00010	74 2a		 je	 SHORT $LN30@DestroySys
$LL20@DestroySys:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00014	85 c9		 test	 ecx, ecx
  00016	74 06		 je	 SHORT $LN18@DestroySys
  00018	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001a	6a 01		 push	 1
  0001c	ff 10		 call	 DWORD PTR [eax]
$LN18@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001e	83 c6 04	 add	 esi, 4
  00021	3b f7		 cmp	 esi, edi
  00023	75 ed		 jne	 SHORT $LL20@DestroySys
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00025	a1 04 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+4
  0002a	a3 08 00 00 00	 mov	 DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+8, eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 11   : }

  0002f	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+16
  00034	5f		 pop	 edi
  00035	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+20, eax
  0003a	5e		 pop	 esi
  0003b	c3		 ret	 0
$LN30@DestroySys:
  0003c	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+16
  00041	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00042	89 35 08 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+8, esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 11   : }

  00048	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CParticleSystemData@@2V?$CDynamicPool@VCParticleSystemData@@@@A+20, eax
  0004d	5e		 pop	 esi
  0004e	c3		 ret	 0
?DestroySystem@CParticleSystemData@@SAXXZ ENDP		; CParticleSystemData::DestroySystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
;	COMDAT ?OnIsData@CParticleSystemData@@MAE_NXZ
_TEXT	SEGMENT
?OnIsData@CParticleSystemData@@MAE_NXZ PROC		; CParticleSystemData::OnIsData, COMDAT
; _this$ = ecx

; 307  : 	return true;

  00000	b0 01		 mov	 al, 1

; 308  : }

  00002	c3		 ret	 0
?OnIsData@CParticleSystemData@@MAE_NXZ ENDP		; CParticleSystemData::OnIsData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
;	COMDAT ?OnClear@CParticleSystemData@@MAEXXZ
_TEXT	SEGMENT
?OnClear@CParticleSystemData@@MAEXXZ PROC		; CParticleSystemData::OnClear, COMDAT
; _this$ = ecx

; 300  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 301  : 	m_EmitterProperty.Clear();

  00003	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00006	e8 00 00 00 00	 call	 ?Clear@CEmitterProperty@@QAEXXZ ; CEmitterProperty::Clear

; 302  : 	m_ParticleProperty.Clear();

  0000b	8d 8e c4 00 00
	00		 lea	 ecx, DWORD PTR [esi+196]
  00011	5e		 pop	 esi
  00012	e9 00 00 00 00	 jmp	 ?Clear@CParticleProperty@@QAEXXZ ; CParticleProperty::Clear
?OnClear@CParticleSystemData@@MAEXXZ ENDP		; CParticleSystemData::OnClear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\TextFileLoader.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\TextFileLoader.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\TextFileLoader.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\TextFileLoader.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\TextFileLoader.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\TextFileLoader.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
;	COMDAT ?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z
_TEXT	SEGMENT
_result$3 = -216					; size = 8
_result$4 = -208					; size = 8
_result$5 = -200					; size = 8
_fAirResistance$6 = -192				; size = 4
_fGravity$7 = -188					; size = 4
_pTextureVector$8 = -184				; size = 4
_t$9 = -180						; size = 8
$T10 = -180						; size = 8
$T11 = -180						; size = 8
$T12 = -180						; size = 8
$T13 = -180						; size = 8
__Left$1$ = -172					; size = 4
_this$1$ = -172						; size = 4
_rTextFileLoader$GSCopy$1$ = -168			; size = 4
_result$14 = -164					; size = 8
_f$15 = -164						; size = 8
_f$16 = -164						; size = 8
_TimeEventA$17 = -156					; size = 12
_TimeEventR$18 = -144					; size = 12
_TimeEventG$19 = -132					; size = 12
_TimeEventB$20 = -120					; size = 12
$T21 = -120						; size = 12
$T22 = -120						; size = 12
_times$23 = -108					; size = 8
__Result$2$ = -104					; size = 4
_GotoChild$24 = -104					; size = 4
_fB$1$ = -100						; size = 4
_i$1$ = -100						; size = 4
_fG$1$ = -96						; size = 4
__New_size$1$ = -96					; size = 4
_dwG$1$ = -96						; size = 4
_fR$1$ = -92						; size = 4
_dwR$1$ = -92						; size = 4
tv6653 = -92						; size = 4
_TimeEventFloat$25 = -88				; size = 8
_TimeEventFloat$26 = -88				; size = 8
_TimeEventFloat$27 = -88				; size = 8
_TimeEventFloat$28 = -88				; size = 8
_TimeEventFloat$29 = -88				; size = 8
_TimeEventFloat$30 = -88				; size = 8
_GotoChild$31 = -84					; size = 4
__Right_size$1$ = -80					; size = 4
_fElapsedTime$ = -80					; size = 4
_fA$1$ = -76						; size = 4
__Ptr$1$ = -76						; size = 4
_fElapsedTime$ = -76					; size = 4
_fElapsedTime$ = -76					; size = 4
_fElapsedTime$ = -76					; size = 4
$T32 = -69						; size = 1
$T33 = -69						; size = 1
$T34 = -69						; size = 1
$T35 = -69						; size = 1
$T36 = -69						; size = 1
_this$GSCopy$1$ = -68					; size = 4
_strTextureFileName$37 = -64				; size = 24
$T38 = -40						; size = 24
$T39 = -40						; size = 24
$T40 = -40						; size = 24
$T41 = -40						; size = 24
$T42 = -40						; size = 24
$T43 = -40						; size = 24
$T44 = -40						; size = 24
$T45 = -40						; size = 24
$T46 = -40						; size = 24
$T47 = -40						; size = 24
$T48 = -40						; size = 24
$T49 = -40						; size = 24
$T50 = -40						; size = 24
$T51 = -40						; size = 24
$T52 = -40						; size = 24
$T53 = -40						; size = 24
$T54 = -40						; size = 24
$T55 = -40						; size = 24
$T56 = -40						; size = 24
$T57 = -40						; size = 24
$T58 = -40						; size = 24
$T59 = -40						; size = 24
$T60 = -40						; size = 24
$T61 = -40						; size = 24
$T62 = -40						; size = 24
$T63 = -40						; size = 24
$T64 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z PROC ; CParticleSystemData::OnLoadScript, COMDAT
; _this$ = ecx

; 34   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	50		 push	 eax
  00024	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00027	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002d	8b f1		 mov	 esi, ecx
  0002f	89 75 bc	 mov	 DWORD PTR _this$GSCopy$1$[ebp], esi
  00032	8b 7d 08	 mov	 edi, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\TextFileLoader.h

; 47   : 				m_pOwner->SetChildNode(c_szKey);

  00035	8b cf		 mov	 ecx, edi
  00037	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@BHDCJGBH@emitterproperty@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 34   : {

  0003c	89 bd 58 ff ff
	ff		 mov	 DWORD PTR _rTextFileLoader$GSCopy$1$[ebp], edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\TextFileLoader.h

; 45   : 			CGotoChild(CTextFileLoader * pOwner, const char * c_szKey) : m_pOwner(pOwner)

  00042	89 7d 98	 mov	 DWORD PTR _GotoChild$24[ebp], edi

; 47   : 				m_pOwner->SetChildNode(c_szKey);

  00045	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 38   : 	if (!rTextFileLoader.GetTokenDoubleWord("maxemissioncount", &m_EmitterProperty.m_dwMaxEmissionCount))

  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GFCINCLJ@maxemissioncount@
  0004f	8d 4d d8	 lea	 ecx, DWORD PTR $T64[ebp]
  00052	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00059	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0005e	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
  00061	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00065	50		 push	 eax
  00066	8d 45 d8	 lea	 eax, DWORD PTR $T64[ebp]
  00069	8b cf		 mov	 ecx, edi
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00071	8b 55 ec	 mov	 edx, DWORD PTR $T64[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 38   : 	if (!rTextFileLoader.GetTokenDoubleWord("maxemissioncount", &m_EmitterProperty.m_dwMaxEmissionCount))

  00074	85 c0		 test	 eax, eax
  00076	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0007a	0f 94 c0	 sete	 al
  0007d	88 45 bb	 mov	 BYTE PTR $T36[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00080	83 fa 10	 cmp	 edx, 16			; 00000010H
  00083	72 2f		 jb	 SHORT $LN139@OnLoadScri
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00085	8b 4d d8	 mov	 ecx, DWORD PTR $T64[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00088	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00089	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0008b	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00091	72 14		 jb	 SHORT $LN149@OnLoadScri

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00093	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00096	83 c2 23	 add	 edx, 35			; 00000023H
  00099	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0009b	83 c0 fc	 add	 eax, -4			; fffffffcH
  0009e	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a1	0f 87 f4 14 00
	00		 ja	 $LN1426@OnLoadScri
$LN149@OnLoadScri:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a7	52		 push	 edx
  000a8	51		 push	 ecx
  000a9	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000ae	8a 45 bb	 mov	 al, BYTE PTR $T36[ebp]
  000b1	83 c4 08	 add	 esp, 8
$LN139@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 38   : 	if (!rTextFileLoader.GetTokenDoubleWord("maxemissioncount", &m_EmitterProperty.m_dwMaxEmissionCount))

  000b4	84 c0		 test	 al, al
  000b6	0f 85 b2 14 00
	00		 jne	 $LN108@OnLoadScri

; 41   : 	if (!rTextFileLoader.GetTokenFloat("cyclelength", &m_EmitterProperty.m_fCycleLength))

  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CMAFBHMP@cyclelength@
  000c1	8d 4d d8	 lea	 ecx, DWORD PTR $T63[ebp]
  000c4	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c9	83 c6 1c	 add	 esi, 28			; 0000001cH
  000cc	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000d0	56		 push	 esi
  000d1	8d 45 d8	 lea	 eax, DWORD PTR $T63[ebp]
  000d4	8b cf		 mov	 ecx, edi
  000d6	50		 push	 eax
  000d7	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000dc	8b 55 ec	 mov	 edx, DWORD PTR $T63[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 41   : 	if (!rTextFileLoader.GetTokenFloat("cyclelength", &m_EmitterProperty.m_fCycleLength))

  000df	85 c0		 test	 eax, eax
  000e1	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000e5	0f 94 c0	 sete	 al
  000e8	88 45 bb	 mov	 BYTE PTR $T35[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000eb	83 fa 10	 cmp	 edx, 16			; 00000010H
  000ee	72 2f		 jb	 SHORT $LN170@OnLoadScri
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000f0	8b 4d d8	 mov	 ecx, DWORD PTR $T63[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000f3	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000f4	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f6	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  000fc	72 14		 jb	 SHORT $LN180@OnLoadScri

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000fe	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00101	83 c2 23	 add	 edx, 35			; 00000023H
  00104	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00106	83 c0 fc	 add	 eax, -4			; fffffffcH
  00109	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0010c	0f 87 8e 14 00
	00		 ja	 $LN1495@OnLoadScri
$LN180@OnLoadScri:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00112	52		 push	 edx
  00113	51		 push	 ecx
  00114	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00119	8a 45 bb	 mov	 al, BYTE PTR $T35[ebp]
  0011c	83 c4 08	 add	 esp, 8
$LN170@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 41   : 	if (!rTextFileLoader.GetTokenFloat("cyclelength", &m_EmitterProperty.m_fCycleLength))

  0011f	84 c0		 test	 al, al
  00121	74 06		 je	 SHORT $LN21@OnLoadScri

; 42   : 	{
; 43   : 		m_EmitterProperty.m_fCycleLength = 0.05f;

  00123	c7 06 cd cc 4c
	3d		 mov	 DWORD PTR [esi], 1028443341 ; 3d4ccccdH
$LN21@OnLoadScri:

; 45   : 	if (!rTextFileLoader.GetTokenBoolean("cycleloopenable", &m_EmitterProperty.m_bCycleLoopFlag))

  00129	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@HFAFNHAP@cycleloopenable@
  0012e	8d 4d d8	 lea	 ecx, DWORD PTR $T62[ebp]
  00131	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00136	8b 75 bc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00139	8d 45 d8	 lea	 eax, DWORD PTR $T62[ebp]
  0013c	83 c6 20	 add	 esi, 32			; 00000020H
  0013f	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00143	56		 push	 esi
  00144	50		 push	 eax
  00145	8b cf		 mov	 ecx, edi
  00147	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0014c	8b 55 ec	 mov	 edx, DWORD PTR $T62[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 45   : 	if (!rTextFileLoader.GetTokenBoolean("cycleloopenable", &m_EmitterProperty.m_bCycleLoopFlag))

  0014f	85 c0		 test	 eax, eax
  00151	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00155	0f 94 c0	 sete	 al
  00158	88 45 bb	 mov	 BYTE PTR $T34[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0015b	83 fa 10	 cmp	 edx, 16			; 00000010H
  0015e	72 2f		 jb	 SHORT $LN197@OnLoadScri
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00160	8b 4d d8	 mov	 ecx, DWORD PTR $T62[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00163	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00164	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00166	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0016c	72 14		 jb	 SHORT $LN207@OnLoadScri

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0016e	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00171	83 c2 23	 add	 edx, 35			; 00000023H
  00174	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00176	83 c0 fc	 add	 eax, -4			; fffffffcH
  00179	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0017c	0f 87 23 14 00
	00		 ja	 $LN1496@OnLoadScri
$LN207@OnLoadScri:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00182	52		 push	 edx
  00183	51		 push	 ecx
  00184	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00189	8a 45 bb	 mov	 al, BYTE PTR $T34[ebp]
  0018c	83 c4 08	 add	 esp, 8
$LN197@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 45   : 	if (!rTextFileLoader.GetTokenBoolean("cycleloopenable", &m_EmitterProperty.m_bCycleLoopFlag))

  0018f	84 c0		 test	 al, al
  00191	74 06		 je	 SHORT $LN22@OnLoadScri

; 46   : 	{
; 47   : 		m_EmitterProperty.m_bCycleLoopFlag = FALSE;

  00193	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN22@OnLoadScri:

; 49   : 	if (!rTextFileLoader.GetTokenInteger("loopcount",&m_EmitterProperty.m_iLoopCount))

  00199	68 00 00 00 00	 push	 OFFSET ??_C@_09HBCOMICA@loopcount@
  0019e	8d 4d d8	 lea	 ecx, DWORD PTR $T61[ebp]
  001a1	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  001a6	8b 75 bc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  001a9	8d 45 d8	 lea	 eax, DWORD PTR $T61[ebp]
  001ac	83 c6 24	 add	 esi, 36			; 00000024H
  001af	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  001b3	56		 push	 esi
  001b4	50		 push	 eax
  001b5	8b cf		 mov	 ecx, edi
  001b7	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001bc	8b 55 ec	 mov	 edx, DWORD PTR $T61[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 49   : 	if (!rTextFileLoader.GetTokenInteger("loopcount",&m_EmitterProperty.m_iLoopCount))

  001bf	85 c0		 test	 eax, eax
  001c1	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001c5	0f 94 c0	 sete	 al
  001c8	88 45 bb	 mov	 BYTE PTR $T33[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001cb	83 fa 10	 cmp	 edx, 16			; 00000010H
  001ce	72 2f		 jb	 SHORT $LN224@OnLoadScri
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001d0	8b 4d d8	 mov	 ecx, DWORD PTR $T61[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001d3	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001d4	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  001d6	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  001dc	72 14		 jb	 SHORT $LN234@OnLoadScri

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  001de	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  001e1	83 c2 23	 add	 edx, 35			; 00000023H
  001e4	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001e6	83 c0 fc	 add	 eax, -4			; fffffffcH
  001e9	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  001ec	0f 87 b8 13 00
	00		 ja	 $LN1497@OnLoadScri
$LN234@OnLoadScri:

; 264  :         ::operator delete(_Ptr, _Bytes);

  001f2	52		 push	 edx
  001f3	51		 push	 ecx
  001f4	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  001f9	8a 45 bb	 mov	 al, BYTE PTR $T33[ebp]
  001fc	83 c4 08	 add	 esp, 8
$LN224@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 49   : 	if (!rTextFileLoader.GetTokenInteger("loopcount",&m_EmitterProperty.m_iLoopCount))

  001ff	84 c0		 test	 al, al
  00201	74 06		 je	 SHORT $LN23@OnLoadScri

; 50   : 	{
; 51   : 		m_EmitterProperty.m_iLoopCount = 0;

  00203	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN23@OnLoadScri:

; 54   : 	if (!rTextFileLoader.GetTokenByte("emittershape", &m_EmitterProperty.m_byEmitterShape))

  00209	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CEDHOJLK@emittershape@
  0020e	8d 4d d8	 lea	 ecx, DWORD PTR $T60[ebp]
  00211	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00216	8b 75 bc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00219	8b cf		 mov	 ecx, edi
  0021b	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  0021f	8d 46 28	 lea	 eax, DWORD PTR [esi+40]
  00222	50		 push	 eax
  00223	8d 45 d8	 lea	 eax, DWORD PTR $T60[ebp]
  00226	50		 push	 eax
  00227	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0022c	8b 55 ec	 mov	 edx, DWORD PTR $T60[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 54   : 	if (!rTextFileLoader.GetTokenByte("emittershape", &m_EmitterProperty.m_byEmitterShape))

  0022f	85 c0		 test	 eax, eax
  00231	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00235	0f 94 c0	 sete	 al
  00238	88 45 bb	 mov	 BYTE PTR $T32[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0023b	83 fa 10	 cmp	 edx, 16			; 00000010H
  0023e	72 2f		 jb	 SHORT $LN251@OnLoadScri
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00240	8b 4d d8	 mov	 ecx, DWORD PTR $T60[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00243	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00244	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00246	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0024c	72 14		 jb	 SHORT $LN261@OnLoadScri

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0024e	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00251	83 c2 23	 add	 edx, 35			; 00000023H
  00254	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00256	83 c0 fc	 add	 eax, -4			; fffffffcH
  00259	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0025c	0f 87 4d 13 00
	00		 ja	 $LN1498@OnLoadScri
$LN261@OnLoadScri:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00262	52		 push	 edx
  00263	51		 push	 ecx
  00264	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00269	8a 45 bb	 mov	 al, BYTE PTR $T32[ebp]
  0026c	83 c4 08	 add	 esp, 8
$LN251@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 54   : 	if (!rTextFileLoader.GetTokenByte("emittershape", &m_EmitterProperty.m_byEmitterShape))

  0026f	84 c0		 test	 al, al
  00271	0f 85 f7 12 00
	00		 jne	 $LN108@OnLoadScri

; 55   : 		return FALSE;
; 56   : 
; 57   : 	if (!rTextFileLoader.GetTokenByte("emitteradvancedtype", &m_EmitterProperty.m_byEmitterAdvancedType))

  00277	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@NHCLCKPF@emitteradvancedtype@
  0027c	8d 4d d8	 lea	 ecx, DWORD PTR $T59[ebp]
  0027f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00284	8d 46 29	 lea	 eax, DWORD PTR [esi+41]
  00287	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  0028b	50		 push	 eax
  0028c	8d 45 d8	 lea	 eax, DWORD PTR $T59[ebp]
  0028f	8b cf		 mov	 ecx, edi
  00291	50		 push	 eax
  00292	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
  00297	8d 4d d8	 lea	 ecx, DWORD PTR $T59[ebp]
  0029a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0029e	8b f0		 mov	 esi, eax
  002a0	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002a5	85 f6		 test	 esi, esi
  002a7	75 07		 jne	 SHORT $LN25@OnLoadScri

; 58   : 	{
; 59   : 		m_EmitterProperty.m_byEmitterShape = CEmitterProperty::EMITTER_ADVANCED_TYPE_FREE;

  002a9	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  002ac	c6 40 28 00	 mov	 BYTE PTR [eax+40], 0
$LN25@OnLoadScri:

; 60   : 	}
; 61   : 	if (!rTextFileLoader.GetTokenPosition("emittingsize", &m_EmitterProperty.m_v3EmittingSize))

  002b0	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JELCEBGI@emittingsize@
  002b5	8d 4d d8	 lea	 ecx, DWORD PTR $T58[ebp]
  002b8	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  002bd	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  002c0	8b cf		 mov	 ecx, edi
  002c2	83 c0 30	 add	 eax, 48			; 00000030H
  002c5	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  002c9	50		 push	 eax
  002ca	8d 45 d8	 lea	 eax, DWORD PTR $T58[ebp]
  002cd	50		 push	 eax
  002ce	e8 00 00 00 00	 call	 ?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenPosition
  002d3	8d 4d d8	 lea	 ecx, DWORD PTR $T58[ebp]
  002d6	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  002da	8b f0		 mov	 esi, eax
  002dc	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002e1	85 f6		 test	 esi, esi
  002e3	75 19		 jne	 SHORT $LN26@OnLoadScri

; 63   : 		m_EmitterProperty.m_v3EmittingSize = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

  002e5	8b 4d bc	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  002e8	0f 57 c9	 xorps	 xmm1, xmm1
  002eb	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 182  :     z = fz;

  002ee	89 75 90	 mov	 DWORD PTR $T22[ebp+8], esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 63   : 		m_EmitterProperty.m_v3EmittingSize = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

  002f1	0f 14 c1	 unpcklps xmm0, xmm1
  002f4	8b c6		 mov	 eax, esi
  002f6	66 0f d6 41 30	 movq	 QWORD PTR [ecx+48], xmm0
  002fb	89 41 38	 mov	 DWORD PTR [ecx+56], eax
$LN26@OnLoadScri:

; 64   : 	}
; 65   : 	if (!rTextFileLoader.GetTokenFloat("emittingradius", &m_EmitterProperty.m_fEmittingRadius))

  002fe	68 00 00 00 00	 push	 OFFSET ??_C@_0P@CFPFJLBH@emittingradius@
  00303	8d 4d d8	 lea	 ecx, DWORD PTR $T57[ebp]
  00306	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0030b	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  0030e	8b cf		 mov	 ecx, edi
  00310	83 c0 3c	 add	 eax, 60			; 0000003cH
  00313	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  00317	50		 push	 eax
  00318	8d 45 d8	 lea	 eax, DWORD PTR $T57[ebp]
  0031b	50		 push	 eax
  0031c	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  00321	8d 4d d8	 lea	 ecx, DWORD PTR $T57[ebp]
  00324	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00328	8b f0		 mov	 esi, eax
  0032a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0032f	85 f6		 test	 esi, esi
  00331	75 06		 jne	 SHORT $LN27@OnLoadScri

; 66   : 	{
; 67   : 		m_EmitterProperty.m_fEmittingRadius = 0.0f;

  00333	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00336	89 70 3c	 mov	 DWORD PTR [eax+60], esi
$LN27@OnLoadScri:

; 68   : 	}
; 69   : 
; 70   : 	if (!rTextFileLoader.GetTokenBoolean("emitteremitfromedgeflag", &m_EmitterProperty.m_bEmitFromEdgeFlag))

  00339	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@JPHOPPGG@emitteremitfromedgeflag@
  0033e	8d 4d d8	 lea	 ecx, DWORD PTR $T56[ebp]
  00341	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00346	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00349	8b cf		 mov	 ecx, edi
  0034b	83 c0 2c	 add	 eax, 44			; 0000002cH
  0034e	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  00352	50		 push	 eax
  00353	8d 45 d8	 lea	 eax, DWORD PTR $T56[ebp]
  00356	50		 push	 eax
  00357	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  0035c	8d 4d d8	 lea	 ecx, DWORD PTR $T56[ebp]
  0035f	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00363	8b f0		 mov	 esi, eax
  00365	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0036a	85 f6		 test	 esi, esi
  0036c	75 06		 jne	 SHORT $LN28@OnLoadScri

; 71   : 	{
; 72   : 		m_EmitterProperty.m_bEmitFromEdgeFlag = FALSE;

  0036e	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00371	89 70 2c	 mov	 DWORD PTR [eax+44], esi
$LN28@OnLoadScri:

; 73   : 	}
; 74   : 
; 75   : 	if (!rTextFileLoader.GetTokenPosition("emittingdirection", &m_EmitterProperty.m_v3EmittingDirection))

  00374	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DDGDKONG@emittingdirection@
  00379	8d 4d d8	 lea	 ecx, DWORD PTR $T55[ebp]
  0037c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00381	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00384	8b cf		 mov	 ecx, edi
  00386	83 c0 40	 add	 eax, 64			; 00000040H
  00389	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  0038d	50		 push	 eax
  0038e	8d 45 d8	 lea	 eax, DWORD PTR $T55[ebp]
  00391	50		 push	 eax
  00392	e8 00 00 00 00	 call	 ?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenPosition
  00397	8d 4d d8	 lea	 ecx, DWORD PTR $T55[ebp]
  0039a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0039e	8b f0		 mov	 esi, eax
  003a0	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003a5	8b 4d bc	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  003a8	85 f6		 test	 esi, esi
  003aa	75 16		 jne	 SHORT $LN29@OnLoadScri
  003ac	0f 57 c9	 xorps	 xmm1, xmm1
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 182  :     z = fz;

  003af	89 75 90	 mov	 DWORD PTR $T21[ebp+8], esi
  003b2	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 77   : 		m_EmitterProperty.m_v3EmittingDirection = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

  003b5	8b c6		 mov	 eax, esi
  003b7	0f 14 c1	 unpcklps xmm0, xmm1
  003ba	66 0f d6 41 40	 movq	 QWORD PTR [ecx+64], xmm0
  003bf	89 41 48	 mov	 DWORD PTR [ecx+72], eax
$LN29@OnLoadScri:

; 78   : 	}
; 79   : 
; 80   : 	if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventemittingsize", &m_EmitterProperty.m_TimeEventEmittingSize))

  003c2	8d 71 4c	 lea	 esi, DWORD PTR [ecx+76]
  003c5	56		 push	 esi
  003c6	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EOBNDMCN@timeeventemittingsize@
  003cb	57		 push	 edi
  003cc	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  003d1	83 c4 0c	 add	 esp, 12			; 0000000cH
  003d4	85 c0		 test	 eax, eax
  003d6	75 29		 jne	 SHORT $LN275@OnLoadScri

; 81   : 	{
; 82   : 		m_EmitterProperty.m_TimeEventEmittingSize.clear();

  003d8	8b 16		 mov	 edx, DWORD PTR [esi]
  003da	89 56 04	 mov	 DWORD PTR [esi+4], edx

; 83   : 		TTimeEventTypeFloat TimeEventFloat;
; 84   : 		TimeEventFloat.m_fTime = 0.0f;

  003dd	89 45 a8	 mov	 DWORD PTR _TimeEventFloat$30[ebp], eax

; 85   : 		TimeEventFloat.m_Value = 0.0f;

  003e0	89 45 ac	 mov	 DWORD PTR _TimeEventFloat$30[ebp+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  003e3	3b 56 08	 cmp	 edx, DWORD PTR [esi+8]
  003e6	74 0d		 je	 SHORT $LN276@OnLoadScri

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  003e8	8b c8		 mov	 ecx, eax
  003ea	89 02		 mov	 DWORD PTR [edx], eax
  003ec	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 729  :         ++_Mylast;

  003ef	83 46 04 08	 add	 DWORD PTR [esi+4], 8

; 744  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  003f3	eb 0c		 jmp	 SHORT $LN275@OnLoadScri
$LN276@OnLoadScri:

; 745  :         }
; 746  : 
; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  003f5	8d 45 a8	 lea	 eax, DWORD PTR _TimeEventFloat$30[ebp]
  003f8	8b ce		 mov	 ecx, esi
  003fa	50		 push	 eax
  003fb	52		 push	 edx
  003fc	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$CTimeEvent@M@@@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEPAV?$CTimeEvent@M@@QAV2@ABV2@@Z ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Emplace_reallocate<CTimeEvent<float> const &>
$LN275@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 89   : 	if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventemittingangularvelocity", &m_EmitterProperty.m_TimeEventEmittingAngularVelocity))

  00401	8b 75 bc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00404	83 c6 58	 add	 esi, 88			; 00000058H
  00407	56		 push	 esi
  00408	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@BEJHCOPI@timeeventemittingangularvelocit@
  0040d	57		 push	 edi
  0040e	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00413	83 c4 0c	 add	 esp, 12			; 0000000cH
  00416	85 c0		 test	 eax, eax
  00418	75 29		 jne	 SHORT $LN282@OnLoadScri

; 90   : 	{
; 91   : 		m_EmitterProperty.m_TimeEventEmittingAngularVelocity.clear();

  0041a	8b 16		 mov	 edx, DWORD PTR [esi]
  0041c	89 56 04	 mov	 DWORD PTR [esi+4], edx

; 92   : 		TTimeEventTypeFloat TimeEventFloat;
; 93   : 		TimeEventFloat.m_fTime = 0.0f;

  0041f	89 45 a8	 mov	 DWORD PTR _TimeEventFloat$29[ebp], eax

; 94   : 		TimeEventFloat.m_Value = 0.0f;

  00422	89 45 ac	 mov	 DWORD PTR _TimeEventFloat$29[ebp+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00425	3b 56 08	 cmp	 edx, DWORD PTR [esi+8]
  00428	74 0d		 je	 SHORT $LN283@OnLoadScri

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0042a	8b c8		 mov	 ecx, eax
  0042c	89 02		 mov	 DWORD PTR [edx], eax
  0042e	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 729  :         ++_Mylast;

  00431	83 46 04 08	 add	 DWORD PTR [esi+4], 8

; 744  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00435	eb 0c		 jmp	 SHORT $LN282@OnLoadScri
$LN283@OnLoadScri:

; 745  :         }
; 746  : 
; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00437	8d 45 a8	 lea	 eax, DWORD PTR _TimeEventFloat$29[ebp]
  0043a	8b ce		 mov	 ecx, esi
  0043c	50		 push	 eax
  0043d	52		 push	 edx
  0043e	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$CTimeEvent@M@@@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEPAV?$CTimeEvent@M@@QAV2@ABV2@@Z ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Emplace_reallocate<CTimeEvent<float> const &>
$LN282@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 98   : 	if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventemittingdirectionx", &m_EmitterProperty.m_TimeEventEmittingDirectionX))

  00443	8b 75 bc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00446	83 c6 64	 add	 esi, 100		; 00000064H
  00449	56		 push	 esi
  0044a	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@EDKEOBKF@timeeventemittingdirectionx@
  0044f	57		 push	 edi
  00450	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00455	83 c4 0c	 add	 esp, 12			; 0000000cH
  00458	85 c0		 test	 eax, eax
  0045a	75 29		 jne	 SHORT $LN289@OnLoadScri

; 99   : 	{
; 100  : 		m_EmitterProperty.m_TimeEventEmittingDirectionX.clear();

  0045c	8b 16		 mov	 edx, DWORD PTR [esi]
  0045e	89 56 04	 mov	 DWORD PTR [esi+4], edx

; 101  : 		TTimeEventTypeFloat TimeEventFloat;
; 102  : 		TimeEventFloat.m_fTime = 0.0f;

  00461	89 45 a8	 mov	 DWORD PTR _TimeEventFloat$28[ebp], eax

; 103  : 		TimeEventFloat.m_Value = 0.0f;

  00464	89 45 ac	 mov	 DWORD PTR _TimeEventFloat$28[ebp+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00467	3b 56 08	 cmp	 edx, DWORD PTR [esi+8]
  0046a	74 0d		 je	 SHORT $LN290@OnLoadScri

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0046c	8b c8		 mov	 ecx, eax
  0046e	89 02		 mov	 DWORD PTR [edx], eax
  00470	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 729  :         ++_Mylast;

  00473	83 46 04 08	 add	 DWORD PTR [esi+4], 8

; 744  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00477	eb 0c		 jmp	 SHORT $LN289@OnLoadScri
$LN290@OnLoadScri:

; 745  :         }
; 746  : 
; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00479	8d 45 a8	 lea	 eax, DWORD PTR _TimeEventFloat$28[ebp]
  0047c	8b ce		 mov	 ecx, esi
  0047e	50		 push	 eax
  0047f	52		 push	 edx
  00480	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$CTimeEvent@M@@@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEPAV?$CTimeEvent@M@@QAV2@ABV2@@Z ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Emplace_reallocate<CTimeEvent<float> const &>
$LN289@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 106  : 	if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventemittingdirectiony", &m_EmitterProperty.m_TimeEventEmittingDirectionY))

  00485	8b 75 bc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00488	83 c6 70	 add	 esi, 112		; 00000070H
  0048b	56		 push	 esi
  0048c	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@FKLPNAOE@timeeventemittingdirectiony@
  00491	57		 push	 edi
  00492	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00497	83 c4 0c	 add	 esp, 12			; 0000000cH
  0049a	85 c0		 test	 eax, eax
  0049c	75 29		 jne	 SHORT $LN296@OnLoadScri

; 107  : 	{
; 108  : 		m_EmitterProperty.m_TimeEventEmittingDirectionY.clear();

  0049e	8b 16		 mov	 edx, DWORD PTR [esi]
  004a0	89 56 04	 mov	 DWORD PTR [esi+4], edx

; 109  : 		TTimeEventTypeFloat TimeEventFloat;
; 110  : 		TimeEventFloat.m_fTime = 0.0f;

  004a3	89 45 a8	 mov	 DWORD PTR _TimeEventFloat$27[ebp], eax

; 111  : 		TimeEventFloat.m_Value = 0.0f;

  004a6	89 45 ac	 mov	 DWORD PTR _TimeEventFloat$27[ebp+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  004a9	3b 56 08	 cmp	 edx, DWORD PTR [esi+8]
  004ac	74 0d		 je	 SHORT $LN297@OnLoadScri

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  004ae	8b c8		 mov	 ecx, eax
  004b0	89 02		 mov	 DWORD PTR [edx], eax
  004b2	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 729  :         ++_Mylast;

  004b5	83 46 04 08	 add	 DWORD PTR [esi+4], 8

; 744  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  004b9	eb 0c		 jmp	 SHORT $LN296@OnLoadScri
$LN297@OnLoadScri:

; 745  :         }
; 746  : 
; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  004bb	8d 45 a8	 lea	 eax, DWORD PTR _TimeEventFloat$27[ebp]
  004be	8b ce		 mov	 ecx, esi
  004c0	50		 push	 eax
  004c1	52		 push	 edx
  004c2	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$CTimeEvent@M@@@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEPAV?$CTimeEvent@M@@QAV2@ABV2@@Z ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Emplace_reallocate<CTimeEvent<float> const &>
$LN296@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 114  : 	if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventemittingdirectionz", &m_EmitterProperty.m_TimeEventEmittingDirectionZ))

  004c7	8b 75 bc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  004ca	83 c6 7c	 add	 esi, 124		; 0000007cH
  004cd	56		 push	 esi
  004ce	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@HBJCIDCH@timeeventemittingdirectionz@
  004d3	57		 push	 edi
  004d4	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  004d9	83 c4 0c	 add	 esp, 12			; 0000000cH
  004dc	85 c0		 test	 eax, eax
  004de	75 29		 jne	 SHORT $LN303@OnLoadScri

; 115  : 	{
; 116  : 		m_EmitterProperty.m_TimeEventEmittingDirectionZ.clear();

  004e0	8b 16		 mov	 edx, DWORD PTR [esi]
  004e2	89 56 04	 mov	 DWORD PTR [esi+4], edx

; 117  : 		TTimeEventTypeFloat TimeEventFloat;
; 118  : 		TimeEventFloat.m_fTime = 0.0f;

  004e5	89 45 a8	 mov	 DWORD PTR _TimeEventFloat$26[ebp], eax

; 119  : 		TimeEventFloat.m_Value = 0.0f;

  004e8	89 45 ac	 mov	 DWORD PTR _TimeEventFloat$26[ebp+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  004eb	3b 56 08	 cmp	 edx, DWORD PTR [esi+8]
  004ee	74 0d		 je	 SHORT $LN304@OnLoadScri

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  004f0	8b c8		 mov	 ecx, eax
  004f2	89 02		 mov	 DWORD PTR [edx], eax
  004f4	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 729  :         ++_Mylast;

  004f7	83 46 04 08	 add	 DWORD PTR [esi+4], 8

; 744  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  004fb	eb 0c		 jmp	 SHORT $LN303@OnLoadScri
$LN304@OnLoadScri:

; 745  :         }
; 746  : 
; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  004fd	8d 45 a8	 lea	 eax, DWORD PTR _TimeEventFloat$26[ebp]
  00500	8b ce		 mov	 ecx, esi
  00502	50		 push	 eax
  00503	52		 push	 edx
  00504	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$CTimeEvent@M@@@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEPAV?$CTimeEvent@M@@QAV2@ABV2@@Z ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Emplace_reallocate<CTimeEvent<float> const &>
$LN303@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 122  : 	if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventemittingvelocity", &m_EmitterProperty.m_TimeEventEmittingVelocity))

  00509	8b 75 bc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  0050c	81 c6 88 00 00
	00		 add	 esi, 136		; 00000088H
  00512	56		 push	 esi
  00513	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@JMDFAGCJ@timeeventemittingvelocity@
  00518	57		 push	 edi
  00519	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  0051e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00521	85 c0		 test	 eax, eax
  00523	75 29		 jne	 SHORT $LN310@OnLoadScri

; 123  : 	{
; 124  : 		m_EmitterProperty.m_TimeEventEmittingVelocity.clear();

  00525	8b 16		 mov	 edx, DWORD PTR [esi]
  00527	89 56 04	 mov	 DWORD PTR [esi+4], edx

; 125  : 		TTimeEventTypeFloat TimeEventFloat;
; 126  : 		TimeEventFloat.m_fTime = 0.0f;

  0052a	89 45 a8	 mov	 DWORD PTR _TimeEventFloat$25[ebp], eax

; 127  : 		TimeEventFloat.m_Value = 0.0f;

  0052d	89 45 ac	 mov	 DWORD PTR _TimeEventFloat$25[ebp+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00530	3b 56 08	 cmp	 edx, DWORD PTR [esi+8]
  00533	74 0d		 je	 SHORT $LN311@OnLoadScri

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00535	8b c8		 mov	 ecx, eax
  00537	89 02		 mov	 DWORD PTR [edx], eax
  00539	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 729  :         ++_Mylast;

  0053c	83 46 04 08	 add	 DWORD PTR [esi+4], 8

; 744  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00540	eb 0c		 jmp	 SHORT $LN310@OnLoadScri
$LN311@OnLoadScri:

; 745  :         }
; 746  : 
; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00542	8d 45 a8	 lea	 eax, DWORD PTR _TimeEventFloat$25[ebp]
  00545	8b ce		 mov	 ecx, esi
  00547	50		 push	 eax
  00548	52		 push	 edx
  00549	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$CTimeEvent@M@@@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEPAV?$CTimeEvent@M@@QAV2@ABV2@@Z ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Emplace_reallocate<CTimeEvent<float> const &>
$LN310@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 130  : 	if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventemissioncountpersecond", &m_EmitterProperty.m_TimeEventEmissionCountPerSecond))

  0054e	8b 75 bc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00551	8d 86 94 00 00
	00		 lea	 eax, DWORD PTR [esi+148]
  00557	50		 push	 eax
  00558	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@KBEMNMAO@timeeventemissioncountpersecond@
  0055d	57		 push	 edi
  0055e	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00563	83 c4 0c	 add	 esp, 12			; 0000000cH
  00566	85 c0		 test	 eax, eax
  00568	0f 84 00 10 00
	00		 je	 $LN108@OnLoadScri

; 131  : 		return FALSE;
; 132  : 	if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventlifetime", &m_EmitterProperty.m_TimeEventLifeTime))

  0056e	8d 86 a0 00 00
	00		 lea	 eax, DWORD PTR [esi+160]
  00574	50		 push	 eax
  00575	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IBAOECEB@timeeventlifetime@
  0057a	57		 push	 edi
  0057b	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00580	83 c4 0c	 add	 esp, 12			; 0000000cH
  00583	85 c0		 test	 eax, eax
  00585	0f 84 e3 0f 00
	00		 je	 $LN108@OnLoadScri

; 133  : 		return FALSE;
; 134  : 	if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventsizex", &m_EmitterProperty.m_TimeEventSizeX))

  0058b	8d 86 ac 00 00
	00		 lea	 eax, DWORD PTR [esi+172]
  00591	50		 push	 eax
  00592	68 00 00 00 00	 push	 OFFSET ??_C@_0P@NKCDAPOH@timeeventsizex@
  00597	57		 push	 edi
  00598	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  0059d	83 c4 0c	 add	 esp, 12			; 0000000cH
  005a0	85 c0		 test	 eax, eax
  005a2	0f 84 c6 0f 00
	00		 je	 $LN108@OnLoadScri

; 135  : 		return FALSE;
; 136  : 	if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventsizey", &m_EmitterProperty.m_TimeEventSizeY))

  005a8	8d 86 b8 00 00
	00		 lea	 eax, DWORD PTR [esi+184]
  005ae	50		 push	 eax
  005af	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MDDIDOKG@timeeventsizey@
  005b4	57		 push	 edi
  005b5	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  005ba	83 c4 0c	 add	 esp, 12			; 0000000cH
  005bd	85 c0		 test	 eax, eax
  005bf	0f 84 a9 0f 00
	00		 je	 $LN108@OnLoadScri
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\TextFileLoader.h

; 55   : 				m_pOwner->SetParentNode();

  005c5	8b cf		 mov	 ecx, edi
  005c7	c7 45 fc 11 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 17 ; 00000011H
  005ce	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode

; 47   : 				m_pOwner->SetChildNode(c_szKey);

  005d3	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@HGNFNICN@particleproperty@
  005d8	8b cf		 mov	 ecx, edi

; 56   : 			}

  005da	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 45   : 			CGotoChild(CTextFileLoader * pOwner, const char * c_szKey) : m_pOwner(pOwner)

  005e1	89 7d ac	 mov	 DWORD PTR _GotoChild$31[ebp], edi

; 47   : 				m_pOwner->SetChildNode(c_szKey);

  005e4	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 143  : 	if (!rTextFileLoader.GetTokenByte("srcblendtype", &m_ParticleProperty.m_bySrcBlendType))

  005e9	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BPEOGKBI@srcblendtype@
  005ee	8d 4d d8	 lea	 ecx, DWORD PTR $T54[ebp]
  005f1	c7 45 fc 12 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 18 ; 00000012H
  005f8	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  005fd	8d 86 d4 00 00
	00		 lea	 eax, DWORD PTR [esi+212]
  00603	c6 45 fc 13	 mov	 BYTE PTR __$EHRec$[ebp+8], 19 ; 00000013H
  00607	50		 push	 eax
  00608	8d 45 d8	 lea	 eax, DWORD PTR $T54[ebp]
  0060b	8b cf		 mov	 ecx, edi
  0060d	50		 push	 eax
  0060e	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
  00613	8d 4d d8	 lea	 ecx, DWORD PTR $T54[ebp]
  00616	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  0061a	8b f0		 mov	 esi, eax
  0061c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00621	85 f6		 test	 esi, esi
  00623	75 0a		 jne	 SHORT $LN40@OnLoadScri

; 144  : 	{
; 145  : 		m_ParticleProperty.m_bySrcBlendType = D3DBLEND_SRCALPHA;

  00625	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00628	c6 80 d4 00 00
	00 05		 mov	 BYTE PTR [eax+212], 5
$LN40@OnLoadScri:

; 146  : 	}
; 147  : 	if (!rTextFileLoader.GetTokenByte("destblendtype", &m_ParticleProperty.m_byDestBlendType))

  0062f	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FMHKLBEP@destblendtype@
  00634	8d 4d d8	 lea	 ecx, DWORD PTR $T53[ebp]
  00637	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0063c	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  0063f	8b cf		 mov	 ecx, edi
  00641	05 d5 00 00 00	 add	 eax, 213		; 000000d5H
  00646	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
  0064a	50		 push	 eax
  0064b	8d 45 d8	 lea	 eax, DWORD PTR $T53[ebp]
  0064e	50		 push	 eax
  0064f	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
  00654	8d 4d d8	 lea	 ecx, DWORD PTR $T53[ebp]
  00657	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  0065b	8b f0		 mov	 esi, eax
  0065d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00662	85 f6		 test	 esi, esi
  00664	75 0a		 jne	 SHORT $LN41@OnLoadScri

; 148  : 	{
; 149  : 		m_ParticleProperty.m_byDestBlendType = D3DBLEND_ONE;

  00666	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00669	c6 80 d5 00 00
	00 02		 mov	 BYTE PTR [eax+213], 2
$LN41@OnLoadScri:

; 150  : 	}
; 151  : 	if (!rTextFileLoader.GetTokenByte("coloroperationtype", &m_ParticleProperty.m_byColorOperationType))

  00670	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DAMHAFBJ@coloroperationtype@
  00675	8d 4d d8	 lea	 ecx, DWORD PTR $T52[ebp]
  00678	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0067d	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00680	8b cf		 mov	 ecx, edi
  00682	05 d6 00 00 00	 add	 eax, 214		; 000000d6H
  00687	c6 45 fc 15	 mov	 BYTE PTR __$EHRec$[ebp+8], 21 ; 00000015H
  0068b	50		 push	 eax
  0068c	8d 45 d8	 lea	 eax, DWORD PTR $T52[ebp]
  0068f	50		 push	 eax
  00690	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
  00695	8d 4d d8	 lea	 ecx, DWORD PTR $T52[ebp]
  00698	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  0069c	8b f0		 mov	 esi, eax
  0069e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  006a3	85 f6		 test	 esi, esi
  006a5	75 0a		 jne	 SHORT $LN42@OnLoadScri

; 152  : 	{
; 153  : 		m_ParticleProperty.m_byColorOperationType = D3DTOP_MODULATE;

  006a7	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  006aa	c6 80 d6 00 00
	00 04		 mov	 BYTE PTR [eax+214], 4
$LN42@OnLoadScri:

; 154  : 	}
; 155  : 
; 156  : 	if (!rTextFileLoader.GetTokenByte("billboardtype", &m_ParticleProperty.m_byBillboardType))

  006b1	68 00 00 00 00	 push	 OFFSET ??_C@_0O@EJACNAIE@billboardtype@
  006b6	8d 4d d8	 lea	 ecx, DWORD PTR $T51[ebp]
  006b9	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  006be	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  006c1	8b cf		 mov	 ecx, edi
  006c3	05 d7 00 00 00	 add	 eax, 215		; 000000d7H
  006c8	c6 45 fc 16	 mov	 BYTE PTR __$EHRec$[ebp+8], 22 ; 00000016H
  006cc	50		 push	 eax
  006cd	8d 45 d8	 lea	 eax, DWORD PTR $T51[ebp]
  006d0	50		 push	 eax
  006d1	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
  006d6	8d 4d d8	 lea	 ecx, DWORD PTR $T51[ebp]
  006d9	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  006dd	8b f0		 mov	 esi, eax
  006df	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  006e4	85 f6		 test	 esi, esi
  006e6	0f 84 79 0e 00
	00		 je	 $LN119@OnLoadScri

; 157  : 		return FALSE;
; 158  : 
; 159  : 	if (!rTextFileLoader.GetTokenByte("rotationtype", &m_ParticleProperty.m_byRotationType))

  006ec	68 00 00 00 00	 push	 OFFSET ??_C@_0N@HLMOOIDA@rotationtype@
  006f1	8d 4d d8	 lea	 ecx, DWORD PTR $T50[ebp]
  006f4	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  006f9	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  006fc	8b cf		 mov	 ecx, edi
  006fe	05 d8 00 00 00	 add	 eax, 216		; 000000d8H
  00703	c6 45 fc 18	 mov	 BYTE PTR __$EHRec$[ebp+8], 24 ; 00000018H
  00707	50		 push	 eax
  00708	8d 45 d8	 lea	 eax, DWORD PTR $T50[ebp]
  0070b	50		 push	 eax
  0070c	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
  00711	8d 4d d8	 lea	 ecx, DWORD PTR $T50[ebp]
  00714	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00718	8b f0		 mov	 esi, eax
  0071a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0071f	85 f6		 test	 esi, esi
  00721	0f 84 3e 0e 00
	00		 je	 $LN119@OnLoadScri

; 160  : 		return FALSE;
; 161  : 	if (!rTextFileLoader.GetTokenFloat("rotationspeed", &m_ParticleProperty.m_fRotationSpeed))

  00727	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FAOBKFID@rotationspeed@
  0072c	8d 4d d8	 lea	 ecx, DWORD PTR $T49[ebp]
  0072f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00734	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00737	8b cf		 mov	 ecx, edi
  00739	05 dc 00 00 00	 add	 eax, 220		; 000000dcH
  0073e	c6 45 fc 1a	 mov	 BYTE PTR __$EHRec$[ebp+8], 26 ; 0000001aH
  00742	50		 push	 eax
  00743	8d 45 d8	 lea	 eax, DWORD PTR $T49[ebp]
  00746	50		 push	 eax
  00747	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  0074c	8d 4d d8	 lea	 ecx, DWORD PTR $T49[ebp]
  0074f	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00753	8b f0		 mov	 esi, eax
  00755	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0075a	85 f6		 test	 esi, esi
  0075c	0f 84 03 0e 00
	00		 je	 $LN119@OnLoadScri

; 162  : 		return FALSE;
; 163  : 	if (!rTextFileLoader.GetTokenWord("rotationrandomstartingbegin", &m_ParticleProperty.m_wRotationRandomStartingBegin))

  00762	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@BGHFBHHG@rotationrandomstartingbegin@
  00767	8d 4d d8	 lea	 ecx, DWORD PTR $T48[ebp]
  0076a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0076f	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00772	8b cf		 mov	 ecx, edi
  00774	05 e0 00 00 00	 add	 eax, 224		; 000000e0H
  00779	c6 45 fc 1c	 mov	 BYTE PTR __$EHRec$[ebp+8], 28 ; 0000001cH
  0077d	50		 push	 eax
  0077e	8d 45 d8	 lea	 eax, DWORD PTR $T48[ebp]
  00781	50		 push	 eax
  00782	e8 00 00 00 00	 call	 ?GetTokenWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAG@Z ; CTextFileLoader::GetTokenWord
  00787	8d 4d d8	 lea	 ecx, DWORD PTR $T48[ebp]
  0078a	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  0078e	8b f0		 mov	 esi, eax
  00790	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00795	85 f6		 test	 esi, esi
  00797	0f 84 c8 0d 00
	00		 je	 $LN119@OnLoadScri

; 164  : 		return FALSE;
; 165  : 	if (!rTextFileLoader.GetTokenWord("rotationrandomstartingend", &m_ParticleProperty.m_wRotationRandomStartingEnd))

  0079d	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@DKMEPDJP@rotationrandomstartingend@
  007a2	8d 4d d8	 lea	 ecx, DWORD PTR $T47[ebp]
  007a5	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  007aa	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  007ad	8b cf		 mov	 ecx, edi
  007af	05 e2 00 00 00	 add	 eax, 226		; 000000e2H
  007b4	c6 45 fc 1e	 mov	 BYTE PTR __$EHRec$[ebp+8], 30 ; 0000001eH
  007b8	50		 push	 eax
  007b9	8d 45 d8	 lea	 eax, DWORD PTR $T47[ebp]
  007bc	50		 push	 eax
  007bd	e8 00 00 00 00	 call	 ?GetTokenWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAG@Z ; CTextFileLoader::GetTokenWord
  007c2	8d 4d d8	 lea	 ecx, DWORD PTR $T47[ebp]
  007c5	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  007c9	8b f0		 mov	 esi, eax
  007cb	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  007d0	85 f6		 test	 esi, esi
  007d2	0f 84 8d 0d 00
	00		 je	 $LN119@OnLoadScri

; 166  : 		return FALSE;
; 167  : 
; 168  : 	if (!rTextFileLoader.GetTokenBoolean("attachenable", &m_ParticleProperty.m_bAttachFlag))

  007d8	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JFNGIJMG@attachenable@
  007dd	8d 4d d8	 lea	 ecx, DWORD PTR $T46[ebp]
  007e0	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  007e5	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  007e8	8b cf		 mov	 ecx, edi
  007ea	05 e4 00 00 00	 add	 eax, 228		; 000000e4H
  007ef	c6 45 fc 20	 mov	 BYTE PTR __$EHRec$[ebp+8], 32 ; 00000020H
  007f3	50		 push	 eax
  007f4	8d 45 d8	 lea	 eax, DWORD PTR $T46[ebp]
  007f7	50		 push	 eax
  007f8	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  007fd	8d 4d d8	 lea	 ecx, DWORD PTR $T46[ebp]
  00800	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00804	8b f0		 mov	 esi, eax
  00806	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0080b	85 f6		 test	 esi, esi
  0080d	75 09		 jne	 SHORT $LN48@OnLoadScri

; 169  : 	{
; 170  : 		m_ParticleProperty.m_bAttachFlag = FALSE;

  0080f	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00812	89 b0 e4 00 00
	00		 mov	 DWORD PTR [eax+228], esi
$LN48@OnLoadScri:

; 171  : 	}
; 172  : 	if (!rTextFileLoader.GetTokenBoolean("stretchenable", &m_ParticleProperty.m_bStretchFlag))

  00818	68 00 00 00 00	 push	 OFFSET ??_C@_0O@DFPNMBJD@stretchenable@
  0081d	8d 4d d8	 lea	 ecx, DWORD PTR $T45[ebp]
  00820	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00825	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00828	8b cf		 mov	 ecx, edi
  0082a	05 e8 00 00 00	 add	 eax, 232		; 000000e8H
  0082f	c6 45 fc 21	 mov	 BYTE PTR __$EHRec$[ebp+8], 33 ; 00000021H
  00833	50		 push	 eax
  00834	8d 45 d8	 lea	 eax, DWORD PTR $T45[ebp]
  00837	50		 push	 eax
  00838	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  0083d	8d 4d d8	 lea	 ecx, DWORD PTR $T45[ebp]
  00840	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00844	8b f0		 mov	 esi, eax
  00846	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0084b	85 f6		 test	 esi, esi
  0084d	0f 84 12 0d 00
	00		 je	 $LN119@OnLoadScri

; 173  : 		return FALSE;
; 174  : 
; 175  : 	if (!rTextFileLoader.GetTokenByte("texanitype", &m_ParticleProperty.m_byTexAniType))

  00853	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BIBLFGDP@texanitype@
  00858	8d 4d d8	 lea	 ecx, DWORD PTR $T44[ebp]
  0085b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00860	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00863	8b cf		 mov	 ecx, edi
  00865	05 c8 00 00 00	 add	 eax, 200		; 000000c8H
  0086a	c6 45 fc 23	 mov	 BYTE PTR __$EHRec$[ebp+8], 35 ; 00000023H
  0086e	50		 push	 eax
  0086f	8d 45 d8	 lea	 eax, DWORD PTR $T44[ebp]
  00872	50		 push	 eax
  00873	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
  00878	8d 4d d8	 lea	 ecx, DWORD PTR $T44[ebp]
  0087b	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  0087f	8b f0		 mov	 esi, eax
  00881	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00886	85 f6		 test	 esi, esi
  00888	0f 84 d7 0c 00
	00		 je	 $LN119@OnLoadScri

; 176  : 		return FALSE;
; 177  : 	if (!rTextFileLoader.GetTokenFloat("texanidelay", &m_ParticleProperty.m_fTexAniDelay))

  0088e	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PDIDMMDH@texanidelay@
  00893	8d 4d d8	 lea	 ecx, DWORD PTR $T43[ebp]
  00896	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0089b	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  0089e	8b cf		 mov	 ecx, edi
  008a0	05 cc 00 00 00	 add	 eax, 204		; 000000ccH
  008a5	c6 45 fc 25	 mov	 BYTE PTR __$EHRec$[ebp+8], 37 ; 00000025H
  008a9	50		 push	 eax
  008aa	8d 45 d8	 lea	 eax, DWORD PTR $T43[ebp]
  008ad	50		 push	 eax
  008ae	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  008b3	8d 4d d8	 lea	 ecx, DWORD PTR $T43[ebp]
  008b6	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  008ba	8b f0		 mov	 esi, eax
  008bc	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  008c1	85 f6		 test	 esi, esi
  008c3	0f 84 9c 0c 00
	00		 je	 $LN119@OnLoadScri

; 178  : 		return FALSE;
; 179  : 	if (!rTextFileLoader.GetTokenBoolean("texanirandomstartframeenable", &m_ParticleProperty.m_bTexAniRandomStartFrameFlag))

  008c9	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@DIHGKMNJ@texanirandomstartframeenable@
  008ce	8d 4d d8	 lea	 ecx, DWORD PTR $T42[ebp]
  008d1	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  008d6	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  008d9	8b cf		 mov	 ecx, edi
  008db	05 d0 00 00 00	 add	 eax, 208		; 000000d0H
  008e0	c6 45 fc 27	 mov	 BYTE PTR __$EHRec$[ebp+8], 39 ; 00000027H
  008e4	50		 push	 eax
  008e5	8d 45 d8	 lea	 eax, DWORD PTR $T42[ebp]
  008e8	50		 push	 eax
  008e9	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
  008ee	8d 4d d8	 lea	 ecx, DWORD PTR $T42[ebp]
  008f1	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  008f5	8b f0		 mov	 esi, eax
  008f7	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  008fc	85 f6		 test	 esi, esi
  008fe	0f 84 61 0c 00
	00		 je	 $LN119@OnLoadScri

; 180  : 		return FALSE;
; 181  : 
; 182  : 	float fGravity;
; 183  : 
; 184  : 	if (rTextFileLoader.GetTokenFloat("gravity", &fGravity))

  00904	68 00 00 00 00	 push	 OFFSET ??_C@_07GFBFDLBM@gravity@
  00909	8d 4d d8	 lea	 ecx, DWORD PTR $T41[ebp]
  0090c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00911	8d 85 44 ff ff
	ff		 lea	 eax, DWORD PTR _fGravity$7[ebp]
  00917	c6 45 fc 29	 mov	 BYTE PTR __$EHRec$[ebp+8], 41 ; 00000029H
  0091b	50		 push	 eax
  0091c	8d 45 d8	 lea	 eax, DWORD PTR $T41[ebp]
  0091f	8b cf		 mov	 ecx, edi
  00921	50		 push	 eax
  00922	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  00927	8d 4d d8	 lea	 ecx, DWORD PTR $T41[ebp]
  0092a	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  0092e	8b f0		 mov	 esi, eax
  00930	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00935	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00938	05 ec 00 00 00	 add	 eax, 236		; 000000ecH
  0093d	85 f6		 test	 esi, esi
  0093f	74 2a		 je	 SHORT $LN53@OnLoadScri

; 185  : 	{
; 186  : 		TTimeEventTypeFloat f;
; 187  : 		f.m_fTime = 0.0f;
; 188  : 		f.m_Value = fGravity;

  00941	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR _fGravity$7[ebp]

; 189  : 		m_ParticleProperty.m_TimeEventGravity.push_back(f);

  00949	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR _f$16[ebp]
  0094f	51		 push	 ecx
  00950	8b c8		 mov	 ecx, eax
  00952	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _f$16[ebp], 0
  0095c	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR _f$16[ebp+4], xmm0
  00964	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXABV?$CTimeEvent@M@@@Z ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::push_back

; 190  : 	}

  00969	eb 22		 jmp	 SHORT $LN55@OnLoadScri
$LN53@OnLoadScri:

; 191  : 	else if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventgravity", &m_ParticleProperty.m_TimeEventGravity))

  0096b	50		 push	 eax
  0096c	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@BHFJHILP@timeeventgravity@
  00971	57		 push	 edi
  00972	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00977	83 c4 0c	 add	 esp, 12			; 0000000cH
  0097a	85 c0		 test	 eax, eax
  0097c	75 0f		 jne	 SHORT $LN55@OnLoadScri

; 192  : 	{
; 193  : 		m_ParticleProperty.m_TimeEventGravity.clear();

  0097e	8b 4d bc	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00981	8b 81 ec 00 00
	00		 mov	 eax, DWORD PTR [ecx+236]
  00987	89 81 f0 00 00
	00		 mov	 DWORD PTR [ecx+240], eax
$LN55@OnLoadScri:

; 194  : 	}
; 195  : 
; 196  : 	float fAirResistance;
; 197  : 	if (rTextFileLoader.GetTokenFloat("airresistance", &fAirResistance))

  0098d	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IJAIPGAL@airresistance@
  00992	8d 4d d8	 lea	 ecx, DWORD PTR $T40[ebp]
  00995	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0099a	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _fAirResistance$6[ebp]
  009a0	c6 45 fc 2a	 mov	 BYTE PTR __$EHRec$[ebp+8], 42 ; 0000002aH
  009a4	50		 push	 eax
  009a5	8d 45 d8	 lea	 eax, DWORD PTR $T40[ebp]
  009a8	8b cf		 mov	 ecx, edi
  009aa	50		 push	 eax
  009ab	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  009b0	8d 4d d8	 lea	 ecx, DWORD PTR $T40[ebp]
  009b3	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  009b7	8b f0		 mov	 esi, eax
  009b9	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  009be	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  009c1	05 f8 00 00 00	 add	 eax, 248		; 000000f8H
  009c6	85 f6		 test	 esi, esi
  009c8	0f 84 dd 02 00
	00		 je	 $LN56@OnLoadScri

; 198  : 	{
; 199  : 		TTimeEventTypeFloat f;
; 200  : 		f.m_fTime = 0.0f;
; 201  : 		f.m_Value = fAirResistance;

  009ce	f3 0f 10 85 40
	ff ff ff	 movss	 xmm0, DWORD PTR _fAirResistance$6[ebp]

; 202  : 		m_ParticleProperty.m_TimeEventAirResistance.push_back(f);

  009d6	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR _f$15[ebp]
  009dc	51		 push	 ecx
  009dd	8b c8		 mov	 ecx, eax
  009df	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _f$15[ebp], 0
  009e9	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR _f$15[ebp+4], xmm0
  009f1	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXABV?$CTimeEvent@M@@@Z ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::push_back
$LN1485@OnLoadScri:

; 207  : 	}
; 208  : 
; 209  : 	if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventscalex", &m_ParticleProperty.m_TimeEventScaleX))

  009f6	8b 75 bc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
$LN58@OnLoadScri:
  009f9	8d 86 04 01 00
	00		 lea	 eax, DWORD PTR [esi+260]
  009ff	50		 push	 eax
  00a00	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@GAPFNHG@timeeventscalex@
  00a05	57		 push	 edi
  00a06	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00a0b	83 c4 0c	 add	 esp, 12			; 0000000cH
  00a0e	85 c0		 test	 eax, eax
  00a10	0f 84 4f 0b 00
	00		 je	 $LN119@OnLoadScri

; 210  : 		return FALSE;
; 211  : 	if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventscaley", &m_ParticleProperty.m_TimeEventScaleY))

  00a16	8d 86 10 01 00
	00		 lea	 eax, DWORD PTR [esi+272]
  00a1c	50		 push	 eax
  00a1d	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@BPBEGMDH@timeeventscaley@
  00a22	57		 push	 edi
  00a23	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00a28	83 c4 0c	 add	 esp, 12			; 0000000cH
  00a2b	85 c0		 test	 eax, eax
  00a2d	0f 84 32 0b 00
	00		 je	 $LN119@OnLoadScri
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00a33	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _TimeEventR$18[ebp], 0
  00a3d	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _TimeEventR$18[ebp+4], 0
  00a47	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _TimeEventR$18[ebp+8], 0
  00a51	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _TimeEventB$20[ebp], 0
  00a58	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR _TimeEventB$20[ebp+4], 0
  00a5f	c7 45 90 00 00
	00 00		 mov	 DWORD PTR _TimeEventB$20[ebp+8], 0
  00a66	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _TimeEventG$19[ebp], 0
  00a70	c7 45 80 00 00
	00 00		 mov	 DWORD PTR _TimeEventG$19[ebp+4], 0
  00a77	c7 45 84 00 00
	00 00		 mov	 DWORD PTR _TimeEventG$19[ebp+8], 0
  00a7e	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _TimeEventA$17[ebp], 0
  00a88	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _TimeEventA$17[ebp+4], 0
  00a92	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _TimeEventA$17[ebp+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 229  : 	if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventcolorred", &TimeEventR))

  00a9c	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _TimeEventR$18[ebp]
  00aa2	c6 45 fc 30	 mov	 BYTE PTR __$EHRec$[ebp+8], 48 ; 00000030H
  00aa6	50		 push	 eax
  00aa7	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@ICGDLNPI@timeeventcolorred@
  00aac	57		 push	 edi
  00aad	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00ab2	83 c4 0c	 add	 esp, 12			; 0000000cH
  00ab5	85 c0		 test	 eax, eax
  00ab7	0f 84 83 09 00
	00		 je	 $LN124@OnLoadScri

; 230  : 		return FALSE;
; 231  : 	if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventcolorgreen", &TimeEventG))

  00abd	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _TimeEventG$19[ebp]
  00ac3	50		 push	 eax
  00ac4	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@OFLANGNK@timeeventcolorgreen@
  00ac9	57		 push	 edi
  00aca	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00acf	83 c4 0c	 add	 esp, 12			; 0000000cH
  00ad2	85 c0		 test	 eax, eax
  00ad4	0f 84 66 09 00
	00		 je	 $LN124@OnLoadScri

; 232  : 		return FALSE;
; 233  : 	if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventcolorblue", &TimeEventB))

  00ada	8d 45 88	 lea	 eax, DWORD PTR _TimeEventB$20[ebp]
  00add	50		 push	 eax
  00ade	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KLGCJHDO@timeeventcolorblue@
  00ae3	57		 push	 edi
  00ae4	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00ae9	83 c4 0c	 add	 esp, 12			; 0000000cH
  00aec	85 c0		 test	 eax, eax
  00aee	0f 84 4c 09 00
	00		 je	 $LN124@OnLoadScri

; 234  : 		return FALSE;
; 235  : 	if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventalpha", &TimeEventA))

  00af4	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _TimeEventA$17[ebp]
  00afa	50		 push	 eax
  00afb	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KALIPJCI@timeeventalpha@
  00b00	57		 push	 edi
  00b01	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00b06	83 c4 0c	 add	 esp, 12			; 0000000cH
  00b09	85 c0		 test	 eax, eax
  00b0b	0f 84 2f 09 00
	00		 je	 $LN124@OnLoadScri

; 238  : 	m_ParticleProperty.m_TimeEventColor.clear();

  00b11	8d 86 1c 01 00
	00		 lea	 eax, DWORD PTR [esi+284]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 441  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  00b17	c7 45 94 00 00
	00 00		 mov	 DWORD PTR _times$23[ebp], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 238  : 	m_ParticleProperty.m_TimeEventColor.clear();

  00b1e	89 85 54 ff ff
	ff		 mov	 DWORD PTR _this$1$[ebp], eax
  00b24	8b 86 1c 01 00
	00		 mov	 eax, DWORD PTR [esi+284]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 85   :         return ::operator new(_Bytes);

  00b2a	6a 14		 push	 20			; 00000014H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 238  : 	m_ParticleProperty.m_TimeEventColor.clear();

  00b2c	89 86 20 01 00
	00		 mov	 DWORD PTR [esi+288], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 441  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  00b32	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _times$23[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 85   :         return ::operator new(_Bytes);

  00b39	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00b3e	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 350  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  00b41	89 00		 mov	 DWORD PTR [eax], eax

; 351  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  00b43	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 352  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  00b46	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 353  :         _Pnode->_Color = _Black;

  00b49	66 c7 40 0c 01
	01		 mov	 WORD PTR [eax+12], 257	; 00000101H

; 1925 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  00b4f	89 45 94	 mov	 DWORD PTR _times$23[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00b52	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR _TimeEventR$18[ebp+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 242  : 		for(i=0;i<TimeEventR.size();i++)

  00b58	33 f6		 xor	 esi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00b5a	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _TimeEventR$18[ebp]
  00b60	8b c2		 mov	 eax, edx
  00b62	2b c1		 sub	 eax, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 240  : 		std::set<float> times;

  00b64	c6 45 fc 35	 mov	 BYTE PTR __$EHRec$[ebp+8], 53 ; 00000035H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00b68	c1 f8 03	 sar	 eax, 3
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 242  : 		for(i=0;i<TimeEventR.size();i++)

  00b6b	85 c0		 test	 eax, eax
  00b6d	74 2c		 je	 SHORT $LN3@OnLoadScri
  00b6f	90		 npad	 1
$LL4@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  00b70	8d 04 f1	 lea	 eax, DWORD PTR [ecx+esi*8]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 243  : 			times.insert(TimeEventR[i].m_fTime);

  00b73	50		 push	 eax
  00b74	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR $T13[ebp]
  00b7a	50		 push	 eax
  00b7b	8d 4d 94	 lea	 ecx, DWORD PTR _times$23[ebp]
  00b7e	e8 00 00 00 00	 call	 ??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::insert<0,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00b83	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR _TimeEventR$18[ebp+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 242  : 		for(i=0;i<TimeEventR.size();i++)

  00b89	46		 inc	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00b8a	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _TimeEventR$18[ebp]
  00b90	8b c2		 mov	 eax, edx
  00b92	2b c1		 sub	 eax, ecx
  00b94	c1 f8 03	 sar	 eax, 3
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 242  : 		for(i=0;i<TimeEventR.size();i++)

  00b97	3b f0		 cmp	 esi, eax
  00b99	72 d5		 jb	 SHORT $LL4@OnLoadScri
$LN3@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00b9b	8b 45 80	 mov	 eax, DWORD PTR _TimeEventG$19[ebp+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 244  : 		for(i=0;i<TimeEventG.size();i++)

  00b9e	33 f6		 xor	 esi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00ba0	8b bd 7c ff ff
	ff		 mov	 edi, DWORD PTR _TimeEventG$19[ebp]
  00ba6	2b c7		 sub	 eax, edi
  00ba8	c1 f8 03	 sar	 eax, 3
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 244  : 		for(i=0;i<TimeEventG.size();i++)

  00bab	85 c0		 test	 eax, eax
  00bad	74 33		 je	 SHORT $LN6@OnLoadScri
  00baf	90		 npad	 1
$LL7@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  00bb0	8d 04 f7	 lea	 eax, DWORD PTR [edi+esi*8]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 245  : 			times.insert(TimeEventG[i].m_fTime);

  00bb3	50		 push	 eax
  00bb4	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR $T12[ebp]
  00bba	50		 push	 eax
  00bbb	8d 4d 94	 lea	 ecx, DWORD PTR _times$23[ebp]
  00bbe	e8 00 00 00 00	 call	 ??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::insert<0,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00bc3	8b 45 80	 mov	 eax, DWORD PTR _TimeEventG$19[ebp+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 244  : 		for(i=0;i<TimeEventG.size();i++)

  00bc6	46		 inc	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00bc7	8b bd 7c ff ff
	ff		 mov	 edi, DWORD PTR _TimeEventG$19[ebp]
  00bcd	2b c7		 sub	 eax, edi
  00bcf	c1 f8 03	 sar	 eax, 3
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 244  : 		for(i=0;i<TimeEventG.size();i++)

  00bd2	3b f0		 cmp	 esi, eax
  00bd4	72 da		 jb	 SHORT $LL7@OnLoadScri
  00bd6	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR _TimeEventR$18[ebp+4]
  00bdc	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _TimeEventR$18[ebp]
$LN6@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00be2	8b 45 8c	 mov	 eax, DWORD PTR _TimeEventB$20[ebp+4]
  00be5	8b 75 88	 mov	 esi, DWORD PTR _TimeEventB$20[ebp]
  00be8	2b c6		 sub	 eax, esi
  00bea	c1 f8 03	 sar	 eax, 3
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 246  : 		for(i=0;i<TimeEventB.size();i++)

  00bed	85 c0		 test	 eax, eax
  00bef	74 37		 je	 SHORT $LN9@OnLoadScri
  00bf1	33 ff		 xor	 edi, edi
$LL10@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  00bf3	8d 04 fe	 lea	 eax, DWORD PTR [esi+edi*8]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 247  : 			times.insert(TimeEventB[i].m_fTime);

  00bf6	50		 push	 eax
  00bf7	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR $T11[ebp]
  00bfd	50		 push	 eax
  00bfe	8d 4d 94	 lea	 ecx, DWORD PTR _times$23[ebp]
  00c01	e8 00 00 00 00	 call	 ??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::insert<0,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00c06	8b 45 8c	 mov	 eax, DWORD PTR _TimeEventB$20[ebp+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 246  : 		for(i=0;i<TimeEventB.size();i++)

  00c09	47		 inc	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00c0a	8b 75 88	 mov	 esi, DWORD PTR _TimeEventB$20[ebp]
  00c0d	2b c6		 sub	 eax, esi
  00c0f	c1 f8 03	 sar	 eax, 3
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 246  : 		for(i=0;i<TimeEventB.size();i++)

  00c12	3b f8		 cmp	 edi, eax
  00c14	72 dd		 jb	 SHORT $LL10@OnLoadScri
  00c16	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR _TimeEventR$18[ebp+4]
  00c1c	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _TimeEventR$18[ebp]
  00c22	8b bd 7c ff ff
	ff		 mov	 edi, DWORD PTR _TimeEventG$19[ebp]
$LN9@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00c28	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _TimeEventA$17[ebp+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 248  : 		for(i=0;i<TimeEventA.size();i++)

  00c2e	33 f6		 xor	 esi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00c30	2b 85 64 ff ff
	ff		 sub	 eax, DWORD PTR _TimeEventA$17[ebp]
  00c36	c1 f8 03	 sar	 eax, 3
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 248  : 		for(i=0;i<TimeEventA.size();i++)

  00c39	85 c0		 test	 eax, eax
  00c3b	74 42		 je	 SHORT $LN12@OnLoadScri
  00c3d	0f 1f 00	 npad	 3
$LL13@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  00c40	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _TimeEventA$17[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 249  : 			times.insert(TimeEventA[i].m_fTime);

  00c46	8d 4d 94	 lea	 ecx, DWORD PTR _times$23[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  00c49	8d 04 f0	 lea	 eax, DWORD PTR [eax+esi*8]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 249  : 			times.insert(TimeEventA[i].m_fTime);

  00c4c	50		 push	 eax
  00c4d	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR $T10[ebp]
  00c53	50		 push	 eax
  00c54	e8 00 00 00 00	 call	 ??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@M@std@@@std@@@std@@_N@1@ABM@Z ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::insert<0,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00c59	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR _TimeEventA$17[ebp+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 248  : 		for(i=0;i<TimeEventA.size();i++)

  00c5f	46		 inc	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00c60	2b 85 64 ff ff
	ff		 sub	 eax, DWORD PTR _TimeEventA$17[ebp]
  00c66	c1 f8 03	 sar	 eax, 3
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 248  : 		for(i=0;i<TimeEventA.size();i++)

  00c69	3b f0		 cmp	 esi, eax
  00c6b	72 d3		 jb	 SHORT $LL13@OnLoadScri
  00c6d	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR _TimeEventR$18[ebp+4]
  00c73	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _TimeEventR$18[ebp]
  00c79	8b bd 7c ff ff
	ff		 mov	 edi, DWORD PTR _TimeEventG$19[ebp]
$LN12@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00c7f	8b 45 94	 mov	 eax, DWORD PTR _times$23[ebp]
  00c82	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 251  : 		for(it = times.begin(); it != times.end(); ++it)

  00c84	3b f0		 cmp	 esi, eax
  00c86	0f 84 dc 04 00
	00		 je	 $LN1483@OnLoadScri
  00c8c	0f 1f 40 00	 npad	 4
$LL848@OnLoadScri:

; 252  : 		{
; 253  : 			float fTime = *it;

  00c90	f3 0f 10 4e 10	 movss	 xmm1, DWORD PTR [esi+16]

; 254  : 			float fR, fG, fB, fA;
; 255  : 			GetTimeEventBlendValue<float>(fTime, TimeEventR, &fR);

  00c95	f3 0f 11 4d b0	 movss	 DWORD PTR _fElapsedTime$[ebp], xmm1
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 229  : 	if (rVector.empty())

  00c9a	3b ca		 cmp	 ecx, edx
  00c9c	75 38		 jne	 SHORT $LN867@OnLoadScri
  00c9e	0f 57 c0	 xorps	 xmm0, xmm0

; 230  : 	{
; 231  : 		*pReturnValue = T();

  00ca1	f3 0f 11 45 a4	 movss	 DWORD PTR _fR$1$[ebp], xmm0

; 232  : 		return;

  00ca6	e9 d3 00 00 00	 jmp	 $LN872@OnLoadScri
$LN56@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 204  : 	else if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventairresistance", &m_ParticleProperty.m_TimeEventAirResistance))

  00cab	50		 push	 eax
  00cac	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@IPGEOMGJ@timeeventairresistance@
  00cb1	57		 push	 edi
  00cb2	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  00cb7	83 c4 0c	 add	 esp, 12			; 0000000cH
  00cba	85 c0		 test	 eax, eax
  00cbc	0f 85 34 fd ff
	ff		 jne	 $LN1485@OnLoadScri

; 205  : 	{
; 206  : 		m_ParticleProperty.m_TimeEventAirResistance.clear();

  00cc2	8b 75 bc	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00cc5	8b 86 f8 00 00
	00		 mov	 eax, DWORD PTR [esi+248]
  00ccb	89 86 fc 00 00
	00		 mov	 DWORD PTR [esi+252], eax
  00cd1	e9 23 fd ff ff	 jmp	 $LN58@OnLoadScri
$LN867@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 123  :         _Ptr += _Off;

  00cd6	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 235  : 	if(rVector.begin()+1==rVector.end())

  00cd9	3b c2		 cmp	 eax, edx
  00cdb	75 0f		 jne	 SHORT $LN868@OnLoadScri

; 236  : 	{
; 237  : 		*pReturnValue = rVector.front().m_Value;

  00cdd	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00ce2	f3 0f 11 45 a4	 movss	 DWORD PTR _fR$1$[ebp], xmm0

; 238  : 		return;

  00ce7	e9 92 00 00 00	 jmp	 $LN872@OnLoadScri
$LN868@OnLoadScri:

; 239  : 	}
; 240  : 
; 241  : 	if (fElapsedTime < rVector.front().m_fTime)

  00cec	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00cf0	0f 2f c1	 comiss	 xmm0, xmm1
  00cf3	76 0c		 jbe	 SHORT $LN869@OnLoadScri

; 242  : 	{
; 243  : 		*pReturnValue = rVector.front().m_Value;

  00cf5	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00cfa	f3 0f 11 45 a4	 movss	 DWORD PTR _fR$1$[ebp], xmm0

; 244  : 		return;

  00cff	eb 7d		 jmp	 SHORT $LN872@OnLoadScri
$LN869@OnLoadScri:

; 245  : 	}
; 246  : 
; 247  : 	if (fElapsedTime > rVector.back().m_fTime)

  00d01	0f 2f 4a f8	 comiss	 xmm1, DWORD PTR [edx-8]
  00d05	76 0c		 jbe	 SHORT $LN870@OnLoadScri

; 248  : 	{
; 249  : 		*pReturnValue = rVector.back().m_Value;

  00d07	f3 0f 10 42 fc	 movss	 xmm0, DWORD PTR [edx-4]
  00d0c	f3 0f 11 45 a4	 movss	 DWORD PTR _fR$1$[ebp], xmm0

; 250  : 		return;

  00d11	eb 6b		 jmp	 SHORT $LN872@OnLoadScri
$LN870@OnLoadScri:

; 251  : 	}
; 252  : 
; 253  : 	typedef typename std::vector<CTimeEvent<T> >::iterator iterator;
; 254  : 
; 255  : 	std::pair<iterator, iterator> result = std::equal_range(rVector.begin(), rVector.end(), fElapsedTime);

  00d13	8d 45 b0	 lea	 eax, DWORD PTR _fElapsedTime$[ebp]
  00d16	50		 push	 eax
  00d17	52		 push	 edx
  00d18	51		 push	 ecx
  00d19	8d 85 38 ff ff
	ff		 lea	 eax, DWORD PTR _result$5[ebp]
  00d1f	50		 push	 eax
  00d20	e8 00 00 00 00	 call	 ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float>

; 256  : 
; 257  : 	if (result.first != result.second)

  00d25	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _result$5[ebp]
  00d2b	83 c4 10	 add	 esp, 16			; 00000010H
  00d2e	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _result$5[ebp+4]
  00d34	3b c1		 cmp	 eax, ecx
  00d36	74 0c		 je	 SHORT $LN871@OnLoadScri

; 258  : 		*pReturnValue = result.first->m_Value;

  00d38	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00d3d	f3 0f 11 45 a4	 movss	 DWORD PTR _fR$1$[ebp], xmm0
  00d42	eb 35		 jmp	 SHORT $LN1488@OnLoadScri
$LN871@OnLoadScri:

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00d44	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 95   :         --_Ptr;

  00d48	83 e8 08	 sub	 eax, 8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00d4b	0f 28 c8	 movaps	 xmm1, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 95   :         --_Ptr;

  00d4e	89 85 38 ff ff
	ff		 mov	 DWORD PTR _result$5[ebp], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00d54	f3 0f 5c 4d b0	 subss	 xmm1, DWORD PTR _fElapsedTime$[ebp]
  00d59	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]

; 263  : 		*pReturnValue = T((result.first->m_Value-result.second->m_Value)*Head+(result.second->m_Value));

  00d5d	f3 0f 10 50 04	 movss	 xmm2, DWORD PTR [eax+4]
  00d62	f3 0f 5c 51 04	 subss	 xmm2, DWORD PTR [ecx+4]
  00d67	f3 0f 5e c8	 divss	 xmm1, xmm0
  00d6b	f3 0f 59 d1	 mulss	 xmm2, xmm1
  00d6f	f3 0f 58 51 04	 addss	 xmm2, DWORD PTR [ecx+4]
  00d74	f3 0f 11 55 a4	 movss	 DWORD PTR _fR$1$[ebp], xmm2
$LN1488@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 256  : 			GetTimeEventBlendValue<float>(fTime, TimeEventG, &fG);

  00d79	f3 0f 10 4d b0	 movss	 xmm1, DWORD PTR _fElapsedTime$[ebp]
$LN872@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 229  : 	if (rVector.empty())

  00d7e	8b 4d 80	 mov	 ecx, DWORD PTR _TimeEventG$19[ebp+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 256  : 			GetTimeEventBlendValue<float>(fTime, TimeEventG, &fG);

  00d81	f3 0f 11 4d b4	 movss	 DWORD PTR _fElapsedTime$[ebp], xmm1
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 229  : 	if (rVector.empty())

  00d86	3b f9		 cmp	 edi, ecx
  00d88	75 0d		 jne	 SHORT $LN921@OnLoadScri
  00d8a	0f 57 c0	 xorps	 xmm0, xmm0

; 230  : 	{
; 231  : 		*pReturnValue = T();

  00d8d	f3 0f 11 45 a0	 movss	 DWORD PTR _fG$1$[ebp], xmm0

; 232  : 		return;

  00d92	e9 a8 00 00 00	 jmp	 $LN926@OnLoadScri
$LN921@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 123  :         _Ptr += _Off;

  00d97	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 235  : 	if(rVector.begin()+1==rVector.end())

  00d9a	3b c1		 cmp	 eax, ecx
  00d9c	75 0f		 jne	 SHORT $LN922@OnLoadScri

; 236  : 	{
; 237  : 		*pReturnValue = rVector.front().m_Value;

  00d9e	f3 0f 10 47 04	 movss	 xmm0, DWORD PTR [edi+4]
  00da3	f3 0f 11 45 a0	 movss	 DWORD PTR _fG$1$[ebp], xmm0

; 238  : 		return;

  00da8	e9 92 00 00 00	 jmp	 $LN926@OnLoadScri
$LN922@OnLoadScri:

; 239  : 	}
; 240  : 
; 241  : 	if (fElapsedTime < rVector.front().m_fTime)

  00dad	f3 0f 10 07	 movss	 xmm0, DWORD PTR [edi]
  00db1	0f 2f c1	 comiss	 xmm0, xmm1
  00db4	76 0c		 jbe	 SHORT $LN923@OnLoadScri

; 242  : 	{
; 243  : 		*pReturnValue = rVector.front().m_Value;

  00db6	f3 0f 10 47 04	 movss	 xmm0, DWORD PTR [edi+4]
  00dbb	f3 0f 11 45 a0	 movss	 DWORD PTR _fG$1$[ebp], xmm0

; 244  : 		return;

  00dc0	eb 7d		 jmp	 SHORT $LN926@OnLoadScri
$LN923@OnLoadScri:

; 245  : 	}
; 246  : 
; 247  : 	if (fElapsedTime > rVector.back().m_fTime)

  00dc2	0f 2f 49 f8	 comiss	 xmm1, DWORD PTR [ecx-8]
  00dc6	76 0c		 jbe	 SHORT $LN924@OnLoadScri

; 248  : 	{
; 249  : 		*pReturnValue = rVector.back().m_Value;

  00dc8	f3 0f 10 41 fc	 movss	 xmm0, DWORD PTR [ecx-4]
  00dcd	f3 0f 11 45 a0	 movss	 DWORD PTR _fG$1$[ebp], xmm0

; 250  : 		return;

  00dd2	eb 6b		 jmp	 SHORT $LN926@OnLoadScri
$LN924@OnLoadScri:

; 251  : 	}
; 252  : 
; 253  : 	typedef typename std::vector<CTimeEvent<T> >::iterator iterator;
; 254  : 
; 255  : 	std::pair<iterator, iterator> result = std::equal_range(rVector.begin(), rVector.end(), fElapsedTime);

  00dd4	8d 45 b4	 lea	 eax, DWORD PTR _fElapsedTime$[ebp]
  00dd7	50		 push	 eax
  00dd8	51		 push	 ecx
  00dd9	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _result$4[ebp]
  00ddf	57		 push	 edi
  00de0	50		 push	 eax
  00de1	e8 00 00 00 00	 call	 ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float>

; 256  : 
; 257  : 	if (result.first != result.second)

  00de6	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _result$4[ebp]
  00dec	83 c4 10	 add	 esp, 16			; 00000010H
  00def	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR _result$4[ebp+4]
  00df5	3b c1		 cmp	 eax, ecx
  00df7	74 0c		 je	 SHORT $LN925@OnLoadScri

; 258  : 		*pReturnValue = result.first->m_Value;

  00df9	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00dfe	f3 0f 11 45 a0	 movss	 DWORD PTR _fG$1$[ebp], xmm0
  00e03	eb 35		 jmp	 SHORT $LN1489@OnLoadScri
$LN925@OnLoadScri:

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00e05	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 95   :         --_Ptr;

  00e09	83 e8 08	 sub	 eax, 8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00e0c	0f 28 c8	 movaps	 xmm1, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 95   :         --_Ptr;

  00e0f	89 85 30 ff ff
	ff		 mov	 DWORD PTR _result$4[ebp], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00e15	f3 0f 5c 4d b0	 subss	 xmm1, DWORD PTR _fElapsedTime$[ebp]
  00e1a	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]

; 263  : 		*pReturnValue = T((result.first->m_Value-result.second->m_Value)*Head+(result.second->m_Value));

  00e1e	f3 0f 10 50 04	 movss	 xmm2, DWORD PTR [eax+4]
  00e23	f3 0f 5c 51 04	 subss	 xmm2, DWORD PTR [ecx+4]
  00e28	f3 0f 5e c8	 divss	 xmm1, xmm0
  00e2c	f3 0f 59 d1	 mulss	 xmm2, xmm1
  00e30	f3 0f 58 51 04	 addss	 xmm2, DWORD PTR [ecx+4]
  00e35	f3 0f 11 55 a0	 movss	 DWORD PTR _fG$1$[ebp], xmm2
$LN1489@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 257  : 			GetTimeEventBlendValue<float>(fTime, TimeEventB, &fB);

  00e3a	f3 0f 10 4d b0	 movss	 xmm1, DWORD PTR _fElapsedTime$[ebp]
$LN926@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 229  : 	if (rVector.empty())

  00e3f	8b 4d 88	 mov	 ecx, DWORD PTR _TimeEventB$20[ebp]
  00e42	8b 55 8c	 mov	 edx, DWORD PTR _TimeEventB$20[ebp+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 257  : 			GetTimeEventBlendValue<float>(fTime, TimeEventB, &fB);

  00e45	f3 0f 11 4d b4	 movss	 DWORD PTR _fElapsedTime$[ebp], xmm1
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 229  : 	if (rVector.empty())

  00e4a	3b ca		 cmp	 ecx, edx
  00e4c	75 0d		 jne	 SHORT $LN975@OnLoadScri
  00e4e	0f 57 c0	 xorps	 xmm0, xmm0

; 230  : 	{
; 231  : 		*pReturnValue = T();

  00e51	f3 0f 11 45 9c	 movss	 DWORD PTR _fB$1$[ebp], xmm0

; 232  : 		return;

  00e56	e9 a8 00 00 00	 jmp	 $LN980@OnLoadScri
$LN975@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 123  :         _Ptr += _Off;

  00e5b	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 235  : 	if(rVector.begin()+1==rVector.end())

  00e5e	3b c2		 cmp	 eax, edx
  00e60	75 0f		 jne	 SHORT $LN976@OnLoadScri

; 236  : 	{
; 237  : 		*pReturnValue = rVector.front().m_Value;

  00e62	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00e67	f3 0f 11 45 9c	 movss	 DWORD PTR _fB$1$[ebp], xmm0

; 238  : 		return;

  00e6c	e9 92 00 00 00	 jmp	 $LN980@OnLoadScri
$LN976@OnLoadScri:

; 239  : 	}
; 240  : 
; 241  : 	if (fElapsedTime < rVector.front().m_fTime)

  00e71	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00e75	0f 2f c1	 comiss	 xmm0, xmm1
  00e78	76 0c		 jbe	 SHORT $LN977@OnLoadScri

; 242  : 	{
; 243  : 		*pReturnValue = rVector.front().m_Value;

  00e7a	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00e7f	f3 0f 11 45 9c	 movss	 DWORD PTR _fB$1$[ebp], xmm0

; 244  : 		return;

  00e84	eb 7d		 jmp	 SHORT $LN980@OnLoadScri
$LN977@OnLoadScri:

; 245  : 	}
; 246  : 
; 247  : 	if (fElapsedTime > rVector.back().m_fTime)

  00e86	0f 2f 4a f8	 comiss	 xmm1, DWORD PTR [edx-8]
  00e8a	76 0c		 jbe	 SHORT $LN978@OnLoadScri

; 248  : 	{
; 249  : 		*pReturnValue = rVector.back().m_Value;

  00e8c	f3 0f 10 42 fc	 movss	 xmm0, DWORD PTR [edx-4]
  00e91	f3 0f 11 45 9c	 movss	 DWORD PTR _fB$1$[ebp], xmm0

; 250  : 		return;

  00e96	eb 6b		 jmp	 SHORT $LN980@OnLoadScri
$LN978@OnLoadScri:

; 251  : 	}
; 252  : 
; 253  : 	typedef typename std::vector<CTimeEvent<T> >::iterator iterator;
; 254  : 
; 255  : 	std::pair<iterator, iterator> result = std::equal_range(rVector.begin(), rVector.end(), fElapsedTime);

  00e98	8d 45 b4	 lea	 eax, DWORD PTR _fElapsedTime$[ebp]
  00e9b	50		 push	 eax
  00e9c	52		 push	 edx
  00e9d	51		 push	 ecx
  00e9e	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _result$3[ebp]
  00ea4	50		 push	 eax
  00ea5	e8 00 00 00 00	 call	 ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float>

; 256  : 
; 257  : 	if (result.first != result.second)

  00eaa	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _result$3[ebp]
  00eb0	83 c4 10	 add	 esp, 16			; 00000010H
  00eb3	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR _result$3[ebp+4]
  00eb9	3b c1		 cmp	 eax, ecx
  00ebb	74 0c		 je	 SHORT $LN979@OnLoadScri

; 258  : 		*pReturnValue = result.first->m_Value;

  00ebd	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00ec2	f3 0f 11 45 9c	 movss	 DWORD PTR _fB$1$[ebp], xmm0
  00ec7	eb 35		 jmp	 SHORT $LN1490@OnLoadScri
$LN979@OnLoadScri:

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00ec9	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 95   :         --_Ptr;

  00ecd	83 e8 08	 sub	 eax, 8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00ed0	0f 28 c8	 movaps	 xmm1, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 95   :         --_Ptr;

  00ed3	89 85 28 ff ff
	ff		 mov	 DWORD PTR _result$3[ebp], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00ed9	f3 0f 5c 4d b0	 subss	 xmm1, DWORD PTR _fElapsedTime$[ebp]
  00ede	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]

; 263  : 		*pReturnValue = T((result.first->m_Value-result.second->m_Value)*Head+(result.second->m_Value));

  00ee2	f3 0f 10 50 04	 movss	 xmm2, DWORD PTR [eax+4]
  00ee7	f3 0f 5c 51 04	 subss	 xmm2, DWORD PTR [ecx+4]
  00eec	f3 0f 5e c8	 divss	 xmm1, xmm0
  00ef0	f3 0f 59 d1	 mulss	 xmm2, xmm1
  00ef4	f3 0f 58 51 04	 addss	 xmm2, DWORD PTR [ecx+4]
  00ef9	f3 0f 11 55 9c	 movss	 DWORD PTR _fB$1$[ebp], xmm2
$LN1490@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 258  : 			GetTimeEventBlendValue<float>(fTime, TimeEventA, &fA);

  00efe	f3 0f 10 4d b0	 movss	 xmm1, DWORD PTR _fElapsedTime$[ebp]
$LN980@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 229  : 	if (rVector.empty())

  00f03	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR _TimeEventA$17[ebp]
  00f09	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR _TimeEventA$17[ebp+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 258  : 			GetTimeEventBlendValue<float>(fTime, TimeEventA, &fA);

  00f0f	f3 0f 11 4d b4	 movss	 DWORD PTR _fElapsedTime$[ebp], xmm1
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 229  : 	if (rVector.empty())

  00f14	3b ca		 cmp	 ecx, edx
  00f16	75 0d		 jne	 SHORT $LN1029@OnLoadScri
  00f18	0f 57 c0	 xorps	 xmm0, xmm0

; 230  : 	{
; 231  : 		*pReturnValue = T();

  00f1b	f3 0f 11 45 b4	 movss	 DWORD PTR _fA$1$[ebp], xmm0

; 232  : 		return;

  00f20	e9 a8 00 00 00	 jmp	 $LN1034@OnLoadScri
$LN1029@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 123  :         _Ptr += _Off;

  00f25	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 235  : 	if(rVector.begin()+1==rVector.end())

  00f28	3b c2		 cmp	 eax, edx
  00f2a	75 0f		 jne	 SHORT $LN1030@OnLoadScri

; 236  : 	{
; 237  : 		*pReturnValue = rVector.front().m_Value;

  00f2c	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00f31	f3 0f 11 45 b4	 movss	 DWORD PTR _fA$1$[ebp], xmm0

; 238  : 		return;

  00f36	e9 92 00 00 00	 jmp	 $LN1034@OnLoadScri
$LN1030@OnLoadScri:

; 239  : 	}
; 240  : 
; 241  : 	if (fElapsedTime < rVector.front().m_fTime)

  00f3b	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00f3f	0f 2f c1	 comiss	 xmm0, xmm1
  00f42	76 0c		 jbe	 SHORT $LN1031@OnLoadScri

; 242  : 	{
; 243  : 		*pReturnValue = rVector.front().m_Value;

  00f44	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00f49	f3 0f 11 45 b4	 movss	 DWORD PTR _fA$1$[ebp], xmm0

; 244  : 		return;

  00f4e	eb 7d		 jmp	 SHORT $LN1034@OnLoadScri
$LN1031@OnLoadScri:

; 245  : 	}
; 246  : 
; 247  : 	if (fElapsedTime > rVector.back().m_fTime)

  00f50	0f 2f 4a f8	 comiss	 xmm1, DWORD PTR [edx-8]
  00f54	76 0c		 jbe	 SHORT $LN1032@OnLoadScri

; 248  : 	{
; 249  : 		*pReturnValue = rVector.back().m_Value;

  00f56	f3 0f 10 42 fc	 movss	 xmm0, DWORD PTR [edx-4]
  00f5b	f3 0f 11 45 b4	 movss	 DWORD PTR _fA$1$[ebp], xmm0

; 250  : 		return;

  00f60	eb 6b		 jmp	 SHORT $LN1034@OnLoadScri
$LN1032@OnLoadScri:

; 251  : 	}
; 252  : 
; 253  : 	typedef typename std::vector<CTimeEvent<T> >::iterator iterator;
; 254  : 
; 255  : 	std::pair<iterator, iterator> result = std::equal_range(rVector.begin(), rVector.end(), fElapsedTime);

  00f62	8d 45 b4	 lea	 eax, DWORD PTR _fElapsedTime$[ebp]
  00f65	50		 push	 eax
  00f66	52		 push	 edx
  00f67	51		 push	 ecx
  00f68	8d 85 5c ff ff
	ff		 lea	 eax, DWORD PTR _result$14[ebp]
  00f6e	50		 push	 eax
  00f6f	e8 00 00 00 00	 call	 ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@M@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABM@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float>

; 256  : 
; 257  : 	if (result.first != result.second)

  00f74	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR _result$14[ebp]
  00f7a	83 c4 10	 add	 esp, 16			; 00000010H
  00f7d	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _result$14[ebp+4]
  00f83	3b c1		 cmp	 eax, ecx
  00f85	74 0c		 je	 SHORT $LN1033@OnLoadScri

; 258  : 		*pReturnValue = result.first->m_Value;

  00f87	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00f8c	f3 0f 11 45 b4	 movss	 DWORD PTR _fA$1$[ebp], xmm0
  00f91	eb 35		 jmp	 SHORT $LN1491@OnLoadScri
$LN1033@OnLoadScri:

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00f93	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 95   :         --_Ptr;

  00f97	83 e8 08	 sub	 eax, 8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00f9a	0f 28 c8	 movaps	 xmm1, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 95   :         --_Ptr;

  00f9d	89 85 5c ff ff
	ff		 mov	 DWORD PTR _result$14[ebp], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  00fa3	f3 0f 5c 4d b0	 subss	 xmm1, DWORD PTR _fElapsedTime$[ebp]
  00fa8	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]

; 263  : 		*pReturnValue = T((result.first->m_Value-result.second->m_Value)*Head+(result.second->m_Value));

  00fac	f3 0f 10 50 04	 movss	 xmm2, DWORD PTR [eax+4]
  00fb1	f3 0f 5c 51 04	 subss	 xmm2, DWORD PTR [ecx+4]
  00fb6	f3 0f 5e c8	 divss	 xmm1, xmm0
  00fba	f3 0f 59 d1	 mulss	 xmm2, xmm1
  00fbe	f3 0f 58 51 04	 addss	 xmm2, DWORD PTR [ecx+4]
  00fc3	f3 0f 11 55 b4	 movss	 DWORD PTR _fA$1$[ebp], xmm2
$LN1491@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 260  : 			t.m_fTime = fTime;

  00fc8	f3 0f 10 4d b0	 movss	 xmm1, DWORD PTR _fElapsedTime$[ebp]
$LN1034@OnLoadScri:

; 261  : 			D3DXCOLOR c;
; 262  : 			c.r = fR;
; 263  : 			c.g = fG;
; 264  : 			c.b = fB;
; 265  : 			c.a = fA;

  00fcd	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR _fR$1$[ebp]
  00fd2	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00fd9	f3 0f 11 8d 4c
	ff ff ff	 movss	 DWORD PTR _t$9[ebp], xmm1
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 931  :     DWORD dwR = r >= 1.0f ? 0xff : r <= 0.0f ? 0x00 : (DWORD) (r * 255.0f + 0.5f);

  00fe1	0f 57 c9	 xorps	 xmm1, xmm1
  00fe4	72 09		 jb	 SHORT $LN1086@OnLoadScri
  00fe6	c7 45 a4 ff 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 255 ; 000000ffH
  00fed	eb 29		 jmp	 SHORT $LN1085@OnLoadScri
$LN1086@OnLoadScri:
  00fef	0f 2f c8	 comiss	 xmm1, xmm0
  00ff2	72 09		 jb	 SHORT $LN1084@OnLoadScri
  00ff4	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _dwR$1$[ebp], 0
  00ffb	eb 1b		 jmp	 SHORT $LN1085@OnLoadScri
$LN1084@OnLoadScri:
  00ffd	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  01005	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  0100d	e8 00 00 00 00	 call	 __ftoui3
  01012	89 45 a4	 mov	 DWORD PTR _dwR$1$[ebp], eax
  01015	0f 57 c9	 xorps	 xmm1, xmm1
$LN1085@OnLoadScri:

; 932  :     DWORD dwG = g >= 1.0f ? 0xff : g <= 0.0f ? 0x00 : (DWORD) (g * 255.0f + 0.5f);

  01018	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _fG$1$[ebp]
  0101d	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  01024	72 09		 jb	 SHORT $LN1090@OnLoadScri
  01026	c7 45 a0 ff 00
	00 00		 mov	 DWORD PTR _dwG$1$[ebp], 255 ; 000000ffH
  0102d	eb 26		 jmp	 SHORT $LN1089@OnLoadScri
$LN1090@OnLoadScri:
  0102f	0f 2f c8	 comiss	 xmm1, xmm0
  01032	72 09		 jb	 SHORT $LN1088@OnLoadScri
  01034	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _dwG$1$[ebp], 0
  0103b	eb 18		 jmp	 SHORT $LN1089@OnLoadScri
$LN1088@OnLoadScri:
  0103d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  01045	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  0104d	e8 00 00 00 00	 call	 __ftoui3
  01052	89 45 a0	 mov	 DWORD PTR _dwG$1$[ebp], eax
$LN1089@OnLoadScri:

; 933  :     DWORD dwB = b >= 1.0f ? 0xff : b <= 0.0f ? 0x00 : (DWORD) (b * 255.0f + 0.5f);

  01055	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _fB$1$[ebp]
  0105a	0f 57 c9	 xorps	 xmm1, xmm1
  0105d	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  01064	72 07		 jb	 SHORT $LN1094@OnLoadScri
  01066	bf ff 00 00 00	 mov	 edi, 255		; 000000ffH
  0106b	eb 23		 jmp	 SHORT $LN1093@OnLoadScri
$LN1094@OnLoadScri:
  0106d	0f 2f c8	 comiss	 xmm1, xmm0
  01070	72 04		 jb	 SHORT $LN1092@OnLoadScri
  01072	33 ff		 xor	 edi, edi
  01074	eb 1a		 jmp	 SHORT $LN1093@OnLoadScri
$LN1092@OnLoadScri:
  01076	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  0107e	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  01086	e8 00 00 00 00	 call	 __ftoui3
  0108b	8b f8		 mov	 edi, eax
  0108d	0f 57 c9	 xorps	 xmm1, xmm1
$LN1093@OnLoadScri:

; 934  :     DWORD dwA = a >= 1.0f ? 0xff : a <= 0.0f ? 0x00 : (DWORD) (a * 255.0f + 0.5f);

  01090	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _fA$1$[ebp]
  01095	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  0109c	72 07		 jb	 SHORT $LN1098@OnLoadScri
  0109e	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  010a3	eb 1e		 jmp	 SHORT $LN1097@OnLoadScri
$LN1098@OnLoadScri:
  010a5	0f 2f c8	 comiss	 xmm1, xmm0
  010a8	72 04		 jb	 SHORT $LN1096@OnLoadScri
  010aa	33 c0		 xor	 eax, eax
  010ac	eb 15		 jmp	 SHORT $LN1097@OnLoadScri
$LN1096@OnLoadScri:
  010ae	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  010b6	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  010be	e8 00 00 00 00	 call	 __ftoui3
$LN1097@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  010c3	8b 95 54 ff ff
	ff		 mov	 edx, DWORD PTR _this$1$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  010c9	c1 e0 08	 shl	 eax, 8
  010cc	0b 45 a4	 or	 eax, DWORD PTR _dwR$1$[ebp]
  010cf	c1 e0 08	 shl	 eax, 8
  010d2	0b 45 a0	 or	 eax, DWORD PTR _dwG$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  010d5	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 936  :     return (dwA << 24) | (dwR << 16) | (dwG << 8) | dwB;

  010d8	c1 e0 08	 shl	 eax, 8
  010db	0b c7		 or	 eax, edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 266  : 			t.m_Value.m_dwColor = /*(DWORD)*/ (DWORD)c;

  010dd	89 85 50 ff ff
	ff		 mov	 DWORD PTR _t$9[ebp+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  010e3	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  010e6	74 12		 je	 SHORT $LN1103@OnLoadScri
  010e8	f3 0f 10 55 b0	 movss	 xmm2, DWORD PTR _fElapsedTime$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 137  : 		: m_dwColor(r.m_dwColor)

  010ed	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 729  :         ++_Mylast;

  010f0	83 42 04 08	 add	 DWORD PTR [edx+4], 8
  010f4	f3 0f 11 11	 movss	 DWORD PTR [ecx], xmm2

; 744  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  010f8	eb 0f		 jmp	 SHORT $LN14@OnLoadScri
$LN1103@OnLoadScri:

; 745  :         }
; 746  : 
; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  010fa	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _t$9[ebp]
  01100	50		 push	 eax
  01101	51		 push	 ecx
  01102	8b ca		 mov	 ecx, edx
  01104	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$CTimeEvent@UDWORDCOLOR@@@@@?$vector@V?$CTimeEvent@UDWORDCOLOR@@@@V?$allocator@V?$CTimeEvent@UDWORDCOLOR@@@@@std@@@std@@QAEPAV?$CTimeEvent@UDWORDCOLOR@@@@QAV2@ABV2@@Z ; std::vector<CTimeEvent<DWORDCOLOR>,std::allocator<CTimeEvent<DWORDCOLOR> > >::_Emplace_reallocate<CTimeEvent<DWORDCOLOR> const &>
$LN14@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  01109	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0110c	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  01110	74 22		 je	 SHORT $LN847@OnLoadScri

; 53   :             _Nodeptr _Pnode;
; 54   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

  01112	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  01115	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  01119	75 15		 jne	 SHORT $LN1482@OnLoadScri
  0111b	0f 1f 44 00 00	 npad	 5
$LL845@OnLoadScri:
  01120	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  01123	75 0b		 jne	 SHORT $LN1482@OnLoadScri

; 55   :                 _Ptr = _Pnode; // ==> parent while right subtree

  01125	8b f0		 mov	 esi, eax
  01127	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0112a	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0112e	74 f0		 je	 SHORT $LL845@OnLoadScri
$LN1482@OnLoadScri:

; 56   :             }
; 57   : 
; 58   :             _Ptr = _Pnode; // ==> parent (head if end())

  01130	8b f0		 mov	 esi, eax

; 59   :         } else {

  01132	eb 18		 jmp	 SHORT $LN852@OnLoadScri
$LN847@OnLoadScri:

; 60   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

  01134	8b f0		 mov	 esi, eax

; 457  :         while (!_Pnode->_Left->_Isnil) {

  01136	8b 0e		 mov	 ecx, DWORD PTR [esi]
  01138	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  0113c	75 0e		 jne	 SHORT $LN852@OnLoadScri
  0113e	66 90		 npad	 2
$LL851@OnLoadScri:
  01140	8b 01		 mov	 eax, DWORD PTR [ecx]

; 458  :             _Pnode = _Pnode->_Left;

  01142	8b f1		 mov	 esi, ecx
  01144	8b c8		 mov	 ecx, eax
  01146	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0114a	74 f4		 je	 SHORT $LL851@OnLoadScri
$LN852@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 251  : 		for(it = times.begin(); it != times.end(); ++it)

  0114c	3b 75 94	 cmp	 esi, DWORD PTR _times$23[ebp]
  0114f	74 17		 je	 SHORT $LN1483@OnLoadScri
  01151	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR _TimeEventR$18[ebp+4]
  01157	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _TimeEventR$18[ebp]
  0115d	8b bd 7c ff ff
	ff		 mov	 edi, DWORD PTR _TimeEventG$19[ebp]
  01163	e9 28 fb ff ff	 jmp	 $LL848@OnLoadScri
$LN1483@OnLoadScri:
  01168	8d 4d 94	 lea	 ecx, DWORD PTR _times$23[ebp]

; 267  : 			m_ParticleProperty.m_TimeEventColor.push_back(t);
; 268  : 		}
; 269  : 	}

  0116b	c6 45 fc 30	 mov	 BYTE PTR __$EHRec$[ebp+8], 48 ; 00000030H
  0116f	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tset_traits@MU?$less@M@std@@V?$allocator@M@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >::~_Tree<std::_Tset_traits<float,std::less<float>,std::allocator<float>,0> >

; 270  : #endif
; 271  : 
; 272  : 	if (!GetTokenTimeEventFloat(rTextFileLoader, "timeeventrotation", &m_ParticleProperty.m_TimeEventRotation))

  01174	8b 45 bc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  01177	8b bd 58 ff ff
	ff		 mov	 edi, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  0117d	05 28 01 00 00	 add	 eax, 296		; 00000128H
  01182	50		 push	 eax
  01183	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KIMDBAHB@timeeventrotation@
  01188	57		 push	 edi
  01189	e8 00 00 00 00	 call	 ?GetTokenTimeEventFloat@@YAHAAVCTextFileLoader@@PBDPAV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@@Z ; GetTokenTimeEventFloat
  0118e	83 c4 0c	 add	 esp, 12			; 0000000cH
  01191	85 c0		 test	 eax, eax
  01193	0f 84 a7 02 00
	00		 je	 $LN124@OnLoadScri

; 273  : 		return FALSE;
; 274  : 
; 275  : 	CTokenVector * pTextureVector;
; 276  : 
; 277  : 	if (!rTextFileLoader.GetTokenVector("texturefiles", &pTextureVector))

  01199	68 00 00 00 00	 push	 OFFSET ??_C@_0N@HNMKMDCI@texturefiles@
  0119e	8d 4d d8	 lea	 ecx, DWORD PTR $T39[ebp]
  011a1	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  011a6	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR _pTextureVector$8[ebp]
  011ac	c6 45 fc 37	 mov	 BYTE PTR __$EHRec$[ebp+8], 55 ; 00000037H
  011b0	50		 push	 eax
  011b1	8d 45 d8	 lea	 eax, DWORD PTR $T39[ebp]
  011b4	8b cf		 mov	 ecx, edi
  011b6	50		 push	 eax
  011b7	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
  011bc	8d 4d d8	 lea	 ecx, DWORD PTR $T39[ebp]
  011bf	c6 45 fc 30	 mov	 BYTE PTR __$EHRec$[ebp+8], 48 ; 00000030H
  011c3	8b f0		 mov	 esi, eax
  011c5	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  011ca	85 f6		 test	 esi, esi
  011cc	0f 84 6e 02 00
	00		 je	 $LN124@OnLoadScri
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  011d2	8b bd 48 ff ff
	ff		 mov	 edi, DWORD PTR _pTextureVector$8[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 280  : 	for (DWORD i = 0; i < pTextureVector->size(); ++i)

  011d8	33 c9		 xor	 ecx, ecx
  011da	89 4d 9c	 mov	 DWORD PTR _i$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  011dd	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  011e2	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  011e5	8b ce		 mov	 ecx, esi
  011e7	2b 0f		 sub	 ecx, DWORD PTR [edi]
  011e9	f7 e9		 imul	 ecx
  011eb	c1 fa 02	 sar	 edx, 2
  011ee	8b c2		 mov	 eax, edx
  011f0	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  011f3	03 c2		 add	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 280  : 	for (DWORD i = 0; i < pTextureVector->size(); ++i)

  011f5	0f 84 00 02 00
	00		 je	 $LN18@OnLoadScri
  011fb	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv6653[ebp], 0
$LL19@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1584 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  01202	8b 0f		 mov	 ecx, DWORD PTR [edi]
  01204	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  01209	2b f1		 sub	 esi, ecx
  0120b	f7 ee		 imul	 esi
  0120d	8b 75 9c	 mov	 esi, DWORD PTR _i$1$[ebp]
  01210	c1 fa 02	 sar	 edx, 2
  01213	8b c2		 mov	 eax, edx
  01215	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  01218	03 c2		 add	 eax, edx
  0121a	3b c6		 cmp	 eax, esi
  0121c	0f 86 97 03 00
	00		 jbe	 $LN1445@OnLoadScri

; 1588 :         return _My_data._Myfirst[_Pos];

  01222	8b 7d a4	 mov	 edi, DWORD PTR tv6653[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  01225	83 7c 0f 14 10	 cmp	 DWORD PTR [edi+ecx+20], 16 ; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1588 :         return _My_data._Myfirst[_Pos];

  0122a	8d 04 0f	 lea	 eax, DWORD PTR [edi+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  0122d	72 02		 jb	 SHORT $LN1298@OnLoadScri

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  0122f	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1298@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 282  : 		std::string strTextureFileName = pTextureVector->at(i).c_str();

  01231	50		 push	 eax
  01232	8d 4d c0	 lea	 ecx, DWORD PTR _strTextureFileName$37[ebp]
  01235	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  0123a	83 7d d4 10	 cmp	 DWORD PTR _strTextureFileName$37[ebp+20], 16 ; 00000010H
  0123e	8d 45 c0	 lea	 eax, DWORD PTR _strTextureFileName$37[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 282  : 		std::string strTextureFileName = pTextureVector->at(i).c_str();

  01241	c6 45 fc 39	 mov	 BYTE PTR __$EHRec$[ebp+8], 57 ; 00000039H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  01245	0f 43 45 c0	 cmovae	 eax, DWORD PTR _strTextureFileName$37[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 284  : 		if (!IsGlobalFileName(strTextureFileName.c_str()))

  01249	50		 push	 eax
  0124a	e8 00 00 00 00	 call	 ?IsGlobalFileName@@YA_NPBD@Z ; IsGlobalFileName
  0124f	83 c4 04	 add	 esp, 4
  01252	84 c0		 test	 al, al
  01254	0f 85 1e 01 00
	00		 jne	 $LN1385@OnLoadScri

; 285  : 			strTextureFileName = GetOnlyPathName(rTextFileLoader.GetFileName()) + strTextureFileName;

  0125a	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  01260	e8 00 00 00 00	 call	 ?GetFileName@CTextFileLoader@@QAEPBDXZ ; CTextFileLoader::GetFileName
  01265	50		 push	 eax
  01266	e8 00 00 00 00	 call	 ?GetOnlyPathName@@YAPBDPBD@Z ; GetOnlyPathName
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0126b	8b f0		 mov	 esi, eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 285  : 			strTextureFileName = GetOnlyPathName(rTextFileLoader.GetFileName()) + strTextureFileName;

  0126d	89 85 54 ff ff
	ff		 mov	 DWORD PTR __Left$1$[ebp], eax
  01273	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  01276	8d 56 01	 lea	 edx, DWORD PTR [esi+1]
  01279	0f 1f 80 00 00
	00 00		 npad	 7
$LL1474@OnLoadScri:
  01280	8a 0e		 mov	 cl, BYTE PTR [esi]
  01282	46		 inc	 esi
  01283	84 c9		 test	 cl, cl
  01285	75 f9		 jne	 SHORT $LL1474@OnLoadScri

; 4701 :     const auto _Right_size = _Right.size();

  01287	8b 4d d0	 mov	 ecx, DWORD PTR _strTextureFileName$37[ebp+16]
  0128a	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH

; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0128f	2b f2		 sub	 esi, edx

; 4701 :     const auto _Right_size = _Right.size();

  01291	89 4d b0	 mov	 DWORD PTR __Right_size$1$[ebp], ecx
  01294	2b c1		 sub	 eax, ecx

; 4702 :     if (_Right.max_size() - _Right_size < _Left_size) {

  01296	3b c6		 cmp	 eax, esi
  01298	0f 82 16 03 00
	00		 jb	 $LN1446@OnLoadScri

; 2306 :         if (_Large_string_engaged()) {

  0129e	83 7d d4 10	 cmp	 DWORD PTR _strTextureFileName$37[ebp+20], 16 ; 00000010H
  012a2	8d 45 c0	 lea	 eax, DWORD PTR _strTextureFileName$37[ebp]

; 2636 :         size_type _New_capacity = _BUF_SIZE - 1;

  012a5	bf 0f 00 00 00	 mov	 edi, 15			; 0000000fH

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  012aa	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T38[ebp], 0

; 2306 :         if (_Large_string_engaged()) {

  012b1	0f 43 45 c0	 cmovae	 eax, DWORD PTR _strTextureFileName$37[ebp]

; 2635 :         const auto _New_size    = static_cast<size_type>(_Left_size + _Right_size);

  012b5	03 ce		 add	 ecx, esi

; 2306 :         if (_Large_string_engaged()) {

  012b7	89 45 98	 mov	 DWORD PTR __Result$2$[ebp], eax

; 2638 :         _Elem* _Ptr             = _My_data._Bx._Buf;

  012ba	8d 45 d8	 lea	 eax, DWORD PTR $T38[ebp]
  012bd	89 4d a0	 mov	 DWORD PTR __New_size$1$[ebp], ecx
  012c0	89 45 b4	 mov	 DWORD PTR __Ptr$1$[ebp], eax

; 2639 :         auto&& _Alproxy         = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2640 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data); // throws
; 2641 : 
; 2642 : #ifdef __cpp_lib_constexpr_string
; 2643 :         const bool _Activate_large_mode = _New_capacity < _New_size || _STD is_constant_evaluated();
; 2644 : #else // ^^^ __cpp_lib_constexpr_string / !__cpp_lib_constexpr_string vvv
; 2645 :         const bool _Activate_large_mode = _New_capacity < _New_size;
; 2646 : #endif // __cpp_lib_constexpr_string
; 2647 : 
; 2648 :         if (_Activate_large_mode) {

  012c3	3b cf		 cmp	 ecx, edi
  012c5	76 62		 jbe	 SHORT $LN1324@OnLoadScri

; 2649 :             // we should never allocate less than _BUF_SIZE space (_New_size could be small if constant evaluated)
; 2650 :             const size_type _Requested_size = (_STD max)(_New_size, _BUF_SIZE);

  012c7	8b f9		 mov	 edi, ecx

; 4488 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  012c9	83 cf 0f	 or	 edi, 15			; 0000000fH
  012cc	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4489 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  012d2	76 18		 jbe	 SHORT $LN1337@OnLoadScri

; 4490 :             return _Max;

  012d4	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  012d9	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  012de	50		 push	 eax
  012df	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  012e4	8b 4d a0	 mov	 ecx, DWORD PTR __New_size$1$[ebp]
  012e7	83 c4 04	 add	 esp, 4
  012ea	eb 37		 jmp	 SHORT $LN1492@OnLoadScri
$LN1337@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4497 :         return (_STD max)(_Masked, _Old + _Old / 2);

  012ec	83 ff 16	 cmp	 edi, 22			; 00000016H
  012ef	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  012f4	0f 42 f8	 cmovb	 edi, eax

; 2652 :             const pointer _Fancyptr         = _Getal().allocate(_New_capacity + 1); // throws

  012f7	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  012fa	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  012ff	72 0e		 jb	 SHORT $LN1345@OnLoadScri

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  01301	50		 push	 eax
  01302	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  01307	8b 4d a0	 mov	 ecx, DWORD PTR __New_size$1$[ebp]
  0130a	83 c4 04	 add	 esp, 4
  0130d	eb 14		 jmp	 SHORT $LN1492@OnLoadScri
$LN1345@OnLoadScri:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  0130f	85 c0		 test	 eax, eax
  01311	74 0e		 je	 SHORT $LN1346@OnLoadScri

; 85   :         return ::operator new(_Bytes);

  01313	50		 push	 eax
  01314	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 244  :         return _Traits::_Allocate(_Bytes);

  01319	8b 4d a0	 mov	 ecx, DWORD PTR __New_size$1$[ebp]

; 85   :         return ::operator new(_Bytes);

  0131c	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  0131f	eb 02		 jmp	 SHORT $LN1492@OnLoadScri
$LN1346@OnLoadScri:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  01321	33 c0		 xor	 eax, eax
$LN1492@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2654 :             _Construct_in_place(_My_data._Bx._Ptr, _Fancyptr);

  01323	89 45 b4	 mov	 DWORD PTR __Ptr$1$[ebp], eax
  01326	89 45 d8	 mov	 DWORD PTR $T38[ebp], eax
$LN1324@OnLoadScri:

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  01329	56		 push	 esi
  0132a	ff b5 54 ff ff
	ff		 push	 DWORD PTR __Left$1$[ebp]

; 2663 :         _My_data._Mysize = _New_size;

  01330	89 4d e8	 mov	 DWORD PTR $T38[ebp+16], ecx

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  01333	50		 push	 eax

; 2664 :         _My_data._Myres  = _New_capacity;

  01334	89 7d ec	 mov	 DWORD PTR $T38[ebp+20], edi

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  01337	e8 00 00 00 00	 call	 _memcpy

; 2666 :         _Traits::copy(_Ptr + static_cast<ptrdiff_t>(_Left_size), _Right_ptr, _Right_size);

  0133c	8b 7d b4	 mov	 edi, DWORD PTR __Ptr$1$[ebp]

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0133f	ff 75 b0	 push	 DWORD PTR __Right_size$1$[ebp]
  01342	ff 75 98	 push	 DWORD PTR __Result$2$[ebp]

; 2666 :         _Traits::copy(_Ptr + static_cast<ptrdiff_t>(_Left_size), _Right_ptr, _Right_size);

  01345	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  01348	50		 push	 eax
  01349	e8 00 00 00 00	 call	 _memcpy

; 2667 :         _Traits::assign(_Ptr[_New_size], _Elem());

  0134e	8b 45 a0	 mov	 eax, DWORD PTR __New_size$1$[ebp]

; 2776 :         _Tidy_deallocate();

  01351	8d 4d c0	 lea	 ecx, DWORD PTR _strTextureFileName$37[ebp]

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  01354	83 c4 18	 add	 esp, 24			; 00000018H

; 2667 :         _Traits::assign(_Ptr[_New_size], _Elem());

  01357	c6 04 07 00	 mov	 BYTE PTR [edi+eax], 0

; 2776 :         _Tidy_deallocate();

  0135b	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  01360	0f 10 45 d8	 movups	 xmm0, XMMWORD PTR $T38[ebp]
  01364	8b 75 9c	 mov	 esi, DWORD PTR _i$1$[ebp]
  01367	8b 7d a4	 mov	 edi, DWORD PTR tv6653[ebp]
  0136a	0f 11 45 c0	 movups	 XMMWORD PTR _strTextureFileName$37[ebp], xmm0
  0136e	f3 0f 7e 45 e8	 movq	 xmm0, QWORD PTR $T38[ebp+16]
  01373	66 0f d6 45 d0	 movq	 QWORD PTR _strTextureFileName$37[ebp+16], xmm0
$LN1385@OnLoadScri:

; 2306 :         if (_Large_string_engaged()) {

  01378	83 7d d4 10	 cmp	 DWORD PTR _strTextureFileName$37[ebp+20], 16 ; 00000010H
  0137c	8d 45 c0	 lea	 eax, DWORD PTR _strTextureFileName$37[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 287  : 		m_ParticleProperty.InsertTexture(strTextureFileName.c_str());

  0137f	8b 4d bc	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  01382	0f 43 45 c0	 cmovae	 eax, DWORD PTR _strTextureFileName$37[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 287  : 		m_ParticleProperty.InsertTexture(strTextureFileName.c_str());

  01386	50		 push	 eax
  01387	8d 89 c4 00 00
	00		 lea	 ecx, DWORD PTR [ecx+196]
  0138d	e8 00 00 00 00	 call	 ?InsertTexture@CParticleProperty@@QAEXPBD@Z ; CParticleProperty::InsertTexture
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  01392	8b 55 d4	 mov	 edx, DWORD PTR _strTextureFileName$37[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 288  : 	}

  01395	c6 45 fc 30	 mov	 BYTE PTR __$EHRec$[ebp+8], 48 ; 00000030H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  01399	83 fa 10	 cmp	 edx, 16			; 00000010H
  0139c	72 2c		 jb	 SHORT $LN1419@OnLoadScri
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0139e	8b 4d c0	 mov	 ecx, DWORD PTR _strTextureFileName$37[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  013a1	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  013a2	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  013a4	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  013aa	72 14		 jb	 SHORT $LN1429@OnLoadScri

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  013ac	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  013af	83 c2 23	 add	 edx, 35			; 00000023H
  013b2	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  013b4	83 c0 fc	 add	 eax, -4			; fffffffcH
  013b7	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  013ba	0f 87 db 01 00
	00		 ja	 $LN1426@OnLoadScri
$LN1429@OnLoadScri:

; 264  :         ::operator delete(_Ptr, _Bytes);

  013c0	52		 push	 edx
  013c1	51		 push	 ecx
  013c2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  013c7	83 c4 08	 add	 esp, 8
$LN1419@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 280  : 	for (DWORD i = 0; i < pTextureVector->size(); ++i)

  013ca	83 c7 18	 add	 edi, 24			; 00000018H
  013cd	46		 inc	 esi
  013ce	89 7d a4	 mov	 DWORD PTR tv6653[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  013d1	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  013d6	8b bd 48 ff ff
	ff		 mov	 edi, DWORD PTR _pTextureVector$8[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 280  : 	for (DWORD i = 0; i < pTextureVector->size(); ++i)

  013dc	89 75 9c	 mov	 DWORD PTR _i$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  013df	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  013e2	8b ce		 mov	 ecx, esi
  013e4	2b 0f		 sub	 ecx, DWORD PTR [edi]
  013e6	f7 e9		 imul	 ecx
  013e8	c1 fa 02	 sar	 edx, 2
  013eb	8b c2		 mov	 eax, edx
  013ed	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  013f0	03 c2		 add	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 280  : 	for (DWORD i = 0; i < pTextureVector->size(); ++i)

  013f2	39 45 9c	 cmp	 DWORD PTR _i$1$[ebp], eax
  013f5	0f 82 07 fe ff
	ff		 jb	 $LL19@OnLoadScri
$LN18@OnLoadScri:

; 289  : 	}

  013fb	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR _TimeEventA$17[ebp]
  01401	e8 00 00 00 00	 call	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
  01406	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _TimeEventG$19[ebp]
  0140c	e8 00 00 00 00	 call	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
  01411	8d 4d 88	 lea	 ecx, DWORD PTR _TimeEventB$20[ebp]
  01414	e8 00 00 00 00	 call	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
  01419	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _TimeEventR$18[ebp]
  0141f	e8 00 00 00 00	 call	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\TextFileLoader.h

; 55   : 				m_pOwner->SetParentNode();

  01424	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  0142a	c7 45 fc 3a 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 58 ; 0000003aH
  01431	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 291  : 	return TRUE;

  01436	b8 01 00 00 00	 mov	 eax, 1
  0143b	e9 3e 01 00 00	 jmp	 $LN1@OnLoadScri
$LN124@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  01440	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR _TimeEventA$17[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 278  : 		return FALSE;

  01446	c6 45 fc 2f	 mov	 BYTE PTR __$EHRec$[ebp+8], 47 ; 0000002fH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  0144a	85 c9		 test	 ecx, ecx
  0144c	74 58		 je	 SHORT $LN1218@OnLoadScri

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0144e	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR _TimeEventA$17[ebp+8]
  01454	2b c1		 sub	 eax, ecx
  01456	c1 f8 03	 sar	 eax, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01459	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  01460	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01462	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  01468	72 14		 jb	 SHORT $LN1234@OnLoadScri

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0146a	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0146d	83 c2 23	 add	 edx, 35			; 00000023H
  01470	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01472	83 c0 fc	 add	 eax, -4			; fffffffcH
  01475	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01478	0f 87 40 01 00
	00		 ja	 $LN1279@OnLoadScri
$LN1234@OnLoadScri:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0147e	52		 push	 edx
  0147f	51		 push	 ecx
  01480	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01485	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  01488	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _TimeEventA$17[ebp], 0

; 1768 :             _Mylast  = nullptr;

  01492	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _TimeEventA$17[ebp+4], 0

; 1769 :             _Myend   = nullptr;

  0149c	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _TimeEventA$17[ebp+8], 0
$LN1218@OnLoadScri:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  014a6	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _TimeEventG$19[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 278  : 		return FALSE;

  014ac	c6 45 fc 2e	 mov	 BYTE PTR __$EHRec$[ebp+8], 46 ; 0000002eH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  014b0	85 c9		 test	 ecx, ecx
  014b2	74 4f		 je	 SHORT $LN1242@OnLoadScri

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  014b4	8b 45 84	 mov	 eax, DWORD PTR _TimeEventG$19[ebp+8]
  014b7	2b c1		 sub	 eax, ecx
  014b9	c1 f8 03	 sar	 eax, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  014bc	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  014c3	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  014c5	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  014cb	72 14		 jb	 SHORT $LN1258@OnLoadScri

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  014cd	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  014d0	83 c2 23	 add	 edx, 35			; 00000023H
  014d3	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  014d5	83 c0 fc	 add	 eax, -4			; fffffffcH
  014d8	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  014db	0f 87 dd 00 00
	00		 ja	 $LN1279@OnLoadScri
$LN1258@OnLoadScri:

; 264  :         ::operator delete(_Ptr, _Bytes);

  014e1	52		 push	 edx
  014e2	51		 push	 ecx
  014e3	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  014e8	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  014eb	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _TimeEventG$19[ebp], 0

; 1768 :             _Mylast  = nullptr;

  014f5	c7 45 80 00 00
	00 00		 mov	 DWORD PTR _TimeEventG$19[ebp+4], 0

; 1769 :             _Myend   = nullptr;

  014fc	c7 45 84 00 00
	00 00		 mov	 DWORD PTR _TimeEventG$19[ebp+8], 0
$LN1242@OnLoadScri:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  01503	8b 4d 88	 mov	 ecx, DWORD PTR _TimeEventB$20[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 278  : 		return FALSE;

  01506	c6 45 fc 2d	 mov	 BYTE PTR __$EHRec$[ebp+8], 45 ; 0000002dH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  0150a	85 c9		 test	 ecx, ecx
  0150c	74 4c		 je	 SHORT $LN1266@OnLoadScri

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0150e	8b 45 90	 mov	 eax, DWORD PTR _TimeEventB$20[ebp+8]
  01511	2b c1		 sub	 eax, ecx
  01513	c1 f8 03	 sar	 eax, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01516	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  0151d	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0151f	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  01525	72 14		 jb	 SHORT $LN1282@OnLoadScri

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  01527	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0152a	83 c2 23	 add	 edx, 35			; 00000023H
  0152d	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0152f	83 c0 fc	 add	 eax, -4			; fffffffcH
  01532	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01535	0f 87 83 00 00
	00		 ja	 $LN1279@OnLoadScri
$LN1282@OnLoadScri:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0153b	52		 push	 edx
  0153c	51		 push	 ecx
  0153d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01542	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  01545	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _TimeEventB$20[ebp], 0

; 1768 :             _Mylast  = nullptr;

  0154c	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR _TimeEventB$20[ebp+4], 0

; 1769 :             _Myend   = nullptr;

  01553	c7 45 90 00 00
	00 00		 mov	 DWORD PTR _TimeEventB$20[ebp+8], 0
$LN1266@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 278  : 		return FALSE;

  0155a	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _TimeEventR$18[ebp]
  01560	e8 00 00 00 00	 call	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
$LN119@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\TextFileLoader.h

; 54   : 			{

  01565	c7 45 fc 38 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 56 ; 00000038H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 278  : 		return FALSE;

  0156c	eb 07		 jmp	 SHORT $LN1493@OnLoadScri
$LN108@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\TextFileLoader.h

; 54   : 			{

  0156e	c7 45 fc 10 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 16 ; 00000010H
$LN1493@OnLoadScri:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 292  : }

  01575	8b cf		 mov	 ecx, edi
  01577	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
  0157c	33 c0		 xor	 eax, eax
$LN1@OnLoadScri:
  0157e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01581	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  01588	59		 pop	 ecx
  01589	5f		 pop	 edi
  0158a	5e		 pop	 esi
  0158b	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0158e	33 cd		 xor	 ecx, ebp
  01590	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01595	8b e5		 mov	 esp, ebp
  01597	5d		 pop	 ebp
  01598	c2 04 00	 ret	 4
$LN1426@OnLoadScri:
  0159b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1495@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  015a0	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1496@OnLoadScri:
  015a5	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1497@OnLoadScri:
  015aa	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1498@OnLoadScri:
  015af	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1446@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4703 :         _Xlen_string();

  015b4	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN1445@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1585 :             _Xrange();

  015b9	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN1279@OnLoadScri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  015be	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1487@OnLoadScri:
  015c3	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$0:
  00000	8d 4d 98	 lea	 ecx, DWORD PTR _GotoChild$24[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CGotoChild@CTextFileLoader@@QAE@XZ ; CTextFileLoader::CGotoChild::~CGotoChild
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T64[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$2:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR $T63[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$3:
  00018	8d 4d d8	 lea	 ecx, DWORD PTR $T62[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$4:
  00020	8d 4d d8	 lea	 ecx, DWORD PTR $T61[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$5:
  00028	8d 4d d8	 lea	 ecx, DWORD PTR $T60[ebp]
  0002b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$6:
  00030	8d 4d d8	 lea	 ecx, DWORD PTR $T59[ebp]
  00033	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$7:
  00038	8d 4d d8	 lea	 ecx, DWORD PTR $T58[ebp]
  0003b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$8:
  00040	8d 4d d8	 lea	 ecx, DWORD PTR $T57[ebp]
  00043	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$9:
  00048	8d 4d d8	 lea	 ecx, DWORD PTR $T56[ebp]
  0004b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$10:
  00050	8d 4d d8	 lea	 ecx, DWORD PTR $T55[ebp]
  00053	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$11:
  00058	8d 4d ac	 lea	 ecx, DWORD PTR _GotoChild$31[ebp]
  0005b	e9 00 00 00 00	 jmp	 ??1CGotoChild@CTextFileLoader@@QAE@XZ ; CTextFileLoader::CGotoChild::~CGotoChild
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$12:
  00060	8d 4d d8	 lea	 ecx, DWORD PTR $T54[ebp]
  00063	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$13:
  00068	8d 4d d8	 lea	 ecx, DWORD PTR $T53[ebp]
  0006b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$14:
  00070	8d 4d d8	 lea	 ecx, DWORD PTR $T52[ebp]
  00073	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$15:
  00078	8d 4d d8	 lea	 ecx, DWORD PTR $T51[ebp]
  0007b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$16:
  00080	8d 4d d8	 lea	 ecx, DWORD PTR $T50[ebp]
  00083	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$17:
  00088	8d 4d d8	 lea	 ecx, DWORD PTR $T49[ebp]
  0008b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$18:
  00090	8d 4d d8	 lea	 ecx, DWORD PTR $T48[ebp]
  00093	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$19:
  00098	8d 4d d8	 lea	 ecx, DWORD PTR $T47[ebp]
  0009b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$20:
  000a0	8d 4d d8	 lea	 ecx, DWORD PTR $T46[ebp]
  000a3	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$21:
  000a8	8d 4d d8	 lea	 ecx, DWORD PTR $T45[ebp]
  000ab	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$22:
  000b0	8d 4d d8	 lea	 ecx, DWORD PTR $T44[ebp]
  000b3	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$23:
  000b8	8d 4d d8	 lea	 ecx, DWORD PTR $T43[ebp]
  000bb	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$24:
  000c0	8d 4d d8	 lea	 ecx, DWORD PTR $T42[ebp]
  000c3	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$25:
  000c8	8d 4d d8	 lea	 ecx, DWORD PTR $T41[ebp]
  000cb	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$26:
  000d0	8d 4d d8	 lea	 ecx, DWORD PTR $T40[ebp]
  000d3	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$27:
  000d8	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR _TimeEventR$18[ebp]
  000de	e9 00 00 00 00	 jmp	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$28:
  000e3	8d 4d 88	 lea	 ecx, DWORD PTR _TimeEventB$20[ebp]
  000e6	e9 00 00 00 00	 jmp	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$29:
  000eb	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _TimeEventG$19[ebp]
  000f1	e9 00 00 00 00	 jmp	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$30:
  000f6	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR _TimeEventA$17[ebp]
  000fc	e9 00 00 00 00	 jmp	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$31:
  00101	8d 4d 94	 lea	 ecx, DWORD PTR _times$23[ebp]
  00104	e9 00 00 00 00	 jmp	 ??1?$set@MU?$less@M@std@@V?$allocator@M@2@@std@@QAE@XZ
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$32:
  00109	8d 4d d8	 lea	 ecx, DWORD PTR $T39[ebp]
  0010c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z$33:
  00111	8d 4d c0	 lea	 ecx, DWORD PTR _strTextureFileName$37[ebp]
  00114	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00119	cc		 int	 3
  0011a	cc		 int	 3
  0011b	cc		 int	 3
  0011c	cc		 int	 3
  0011d	cc		 int	 3
__ehhandler$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z:
  0011e	90		 npad	 1
  0011f	90		 npad	 1
  00120	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00124	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00127	8b 8a 28 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-216]
  0012d	33 c8		 xor	 ecx, eax
  0012f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00134	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00137	33 c8		 xor	 ecx, eax
  00139	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0013e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z
  00143	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnLoadScript@CParticleSystemData@@MAEHAAVCTextFileLoader@@@Z ENDP ; CParticleSystemData::OnLoadScript
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
;	COMDAT ?BuildDecorator@CParticleSystemData@@QAEXPAVCParticleInstance@@@Z
_TEXT	SEGMENT
tv2123 = -12						; size = 4
$T1 = -12						; size = 4
$T2 = -12						; size = 4
$T3 = -12						; size = 4
$T4 = -12						; size = 4
$T5 = -12						; size = 4
$T6 = -12						; size = 4
$T7 = -12						; size = 4
_pValue$1$ = -8						; size = 4
$T8 = -4						; size = 4
$T9 = 8							; size = 4
$T10 = 8						; size = 4
$T11 = 8						; size = 4
$T12 = 8						; size = 4
$T13 = 8						; size = 4
$T14 = 8						; size = 4
$T15 = 8						; size = 4
$T16 = 8						; size = 4
$T17 = 8						; size = 4
$T18 = 8						; size = 4
_pInstance$ = 8						; size = 4
?BuildDecorator@CParticleSystemData@@QAEXPAVCParticleInstance@@@Z PROC ; CParticleSystemData::BuildDecorator, COMDAT
; _this$ = ecx

; 311  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	57		 push	 edi

; 314  : 	pInstance->m_pDecorator = new CNullDecorator;

  00008	6a 10		 push	 16			; 00000010H
  0000a	8b f9		 mov	 edi, ecx
  0000c	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::operator new
  00011	83 c4 04	 add	 esp, 4
  00014	89 45 f4	 mov	 DWORD PTR $T7[ebp], eax
  00017	85 c0		 test	 eax, eax
  00019	74 24		 je	 SHORT $LN23@BuildDecor
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 24   : 		CBaseDecorator() :m_NextDecorator(0), m_PrevDecorator(0) {}

  0001b	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00022	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 241  : 		{

  00029	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 91   : 		CNullDecorator(){}

  00030	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CNullDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00036	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7CNullDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 314  : 	pInstance->m_pDecorator = new CNullDecorator;

  0003d	eb 02		 jmp	 SHORT $LN24@BuildDecor
$LN23@BuildDecor:
  0003f	33 c0		 xor	 eax, eax
$LN24@BuildDecor:
  00041	8b 75 08	 mov	 esi, DWORD PTR _pInstance$[ebp]
  00044	89 46 70	 mov	 DWORD PTR [esi+112], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00047	8b 87 fc 00 00
	00		 mov	 eax, DWORD PTR [edi+252]
  0004d	8b 8f f8 00 00
	00		 mov	 ecx, DWORD PTR [edi+248]
  00053	2b c1		 sub	 eax, ecx
  00055	c1 f8 03	 sar	 eax, 3
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 318  : 	if (m_ParticleProperty.m_TimeEventAirResistance.size()>1)

  00058	83 f8 01	 cmp	 eax, 1
  0005b	76 6c		 jbe	 SHORT $LN6@BuildDecor

; 320  : 		pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(new CAirResistanceDecorator);

  0005d	6a 10		 push	 16			; 00000010H
  0005f	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::operator new
  00064	8b c8		 mov	 ecx, eax
  00066	83 c4 04	 add	 esp, 4
  00069	89 4d f4	 mov	 DWORD PTR $T6[ebp], ecx
  0006c	85 c9		 test	 ecx, ecx
  0006e	74 24		 je	 SHORT $LN25@BuildDecor
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 24   : 		CBaseDecorator() :m_NextDecorator(0), m_PrevDecorator(0) {}

  00070	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00077	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 241  : 		{

  0007e	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 252  : 		CAirResistanceDecorator(){}

  00085	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CAirResistanceDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  0008b	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7CAirResistanceDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 320  : 		pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(new CAirResistanceDecorator);

  00092	eb 02		 jmp	 SHORT $LN26@BuildDecor
$LN25@BuildDecor:
  00094	33 c9		 xor	 ecx, ecx
$LN26@BuildDecor:
  00096	8b 46 70	 mov	 eax, DWORD PTR [esi+112]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 39   : 			pd->m_NextDecorator = this;

  00099	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 321  : 		pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(

  0009c	6a 24		 push	 36			; 00000024H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 40   : 			m_PrevDecorator = pd;

  0009e	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 320  : 		pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(new CAirResistanceDecorator);

  000a1	89 4e 70	 mov	 DWORD PTR [esi+112], ecx

; 321  : 		pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(

  000a4	e8 00 00 00 00	 call	 ??2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator new
  000a9	83 c4 04	 add	 esp, 4
  000ac	89 45 f4	 mov	 DWORD PTR $T5[ebp], eax
  000af	85 c0		 test	 eax, eax
  000b1	74 55		 je	 SHORT $LN29@BuildDecor
  000b3	8d 4e 64	 lea	 ecx, DWORD PTR [esi+100]
  000b6	51		 push	 ecx
  000b7	8d 8f f8 00 00
	00		 lea	 ecx, DWORD PTR [edi+248]
  000bd	51		 push	 ecx
  000be	8b c8		 mov	 ecx, eax
  000c0	e8 00 00 00 00	 call	 ??0?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAE@ABV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@PAM@Z ; NEffectUpdateDecorator::CTimeEventDecorator<float>::CTimeEventDecorator<float>
  000c5	8b c8		 mov	 ecx, eax
  000c7	eb 41		 jmp	 SHORT $LN30@BuildDecor
$LN6@BuildDecor:

; 322  : 			new CAirResistanceValueDecorator(m_ParticleProperty.m_TimeEventAirResistance, &pInstance->m_fAirResistance)
; 323  : 			);
; 324  : 	}
; 325  : 	else if (m_ParticleProperty.m_TimeEventAirResistance.size()==1)

  000c9	75 4b		 jne	 SHORT $LN8@BuildDecor

; 326  : 	{
; 327  : 		pInstance->m_fAirResistance = m_ParticleProperty.m_TimeEventAirResistance[0].m_Value;

  000cb	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 328  : 		pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(new CAirResistanceDecorator);

  000ce	6a 10		 push	 16			; 00000010H
  000d0	89 46 64	 mov	 DWORD PTR [esi+100], eax
  000d3	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::operator new
  000d8	8b c8		 mov	 ecx, eax
  000da	83 c4 04	 add	 esp, 4
  000dd	89 4d f4	 mov	 DWORD PTR $T4[ebp], ecx
  000e0	85 c9		 test	 ecx, ecx
  000e2	74 24		 je	 SHORT $LN29@BuildDecor
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 24   : 		CBaseDecorator() :m_NextDecorator(0), m_PrevDecorator(0) {}

  000e4	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  000eb	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 241  : 		{

  000f2	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 252  : 		CAirResistanceDecorator(){}

  000f9	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CAirResistanceDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  000ff	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7CAirResistanceDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 328  : 		pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(new CAirResistanceDecorator);

  00106	eb 02		 jmp	 SHORT $LN30@BuildDecor
$LN29@BuildDecor:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00108	33 c9		 xor	 ecx, ecx
$LN30@BuildDecor:
  0010a	8b 46 70	 mov	 eax, DWORD PTR [esi+112]
  0010d	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00110	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00113	89 4e 70	 mov	 DWORD PTR [esi+112], ecx
$LN8@BuildDecor:
  00116	8b 87 f0 00 00
	00		 mov	 eax, DWORD PTR [edi+240]
  0011c	8b 8f ec 00 00
	00		 mov	 ecx, DWORD PTR [edi+236]
  00122	2b c1		 sub	 eax, ecx
  00124	c1 f8 03	 sar	 eax, 3
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 331  : 	if (m_ParticleProperty.m_TimeEventGravity.size() > 1)

  00127	83 f8 01	 cmp	 eax, 1
  0012a	76 6c		 jbe	 SHORT $LN9@BuildDecor

; 333  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(new CGravityDecorator);

  0012c	6a 10		 push	 16			; 00000010H
  0012e	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::operator new
  00133	8b c8		 mov	 ecx, eax
  00135	83 c4 04	 add	 esp, 4
  00138	89 4d f4	 mov	 DWORD PTR $T3[ebp], ecx
  0013b	85 c9		 test	 ecx, ecx
  0013d	74 24		 je	 SHORT $LN31@BuildDecor
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 24   : 		CBaseDecorator() :m_NextDecorator(0), m_PrevDecorator(0) {}

  0013f	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00146	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 241  : 		{

  0014d	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 263  : 		CGravityDecorator(){}

  00154	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CGravityDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  0015a	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7CGravityDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 333  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(new CGravityDecorator);

  00161	eb 02		 jmp	 SHORT $LN32@BuildDecor
$LN31@BuildDecor:
  00163	33 c9		 xor	 ecx, ecx
$LN32@BuildDecor:
  00165	8b 46 70	 mov	 eax, DWORD PTR [esi+112]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 39   : 			pd->m_NextDecorator = this;

  00168	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 334  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  0016b	6a 24		 push	 36			; 00000024H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 40   : 			m_PrevDecorator = pd;

  0016d	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 333  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(new CGravityDecorator);

  00170	89 4e 70	 mov	 DWORD PTR [esi+112], ecx

; 334  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  00173	e8 00 00 00 00	 call	 ??2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator new
  00178	83 c4 04	 add	 esp, 4
  0017b	89 45 f4	 mov	 DWORD PTR $T2[ebp], eax
  0017e	85 c0		 test	 eax, eax
  00180	74 55		 je	 SHORT $LN35@BuildDecor
  00182	8d 4e 6c	 lea	 ecx, DWORD PTR [esi+108]
  00185	51		 push	 ecx
  00186	8d 8f ec 00 00
	00		 lea	 ecx, DWORD PTR [edi+236]
  0018c	51		 push	 ecx
  0018d	8b c8		 mov	 ecx, eax
  0018f	e8 00 00 00 00	 call	 ??0?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAE@ABV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@PAM@Z ; NEffectUpdateDecorator::CTimeEventDecorator<float>::CTimeEventDecorator<float>
  00194	8b c8		 mov	 ecx, eax
  00196	eb 41		 jmp	 SHORT $LN36@BuildDecor
$LN9@BuildDecor:

; 335  : 			new CGravityValueDecorator(m_ParticleProperty.m_TimeEventGravity, &pInstance->m_fGravity)
; 336  : 			);
; 337  : 	}
; 338  : 	else if (m_ParticleProperty.m_TimeEventGravity.size() == 1)

  00198	75 4b		 jne	 SHORT $LN11@BuildDecor

; 339  : 	{
; 340  : 		pInstance->m_fGravity = m_ParticleProperty.m_TimeEventGravity[0].m_Value;

  0019a	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 341  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(new CGravityDecorator);

  0019d	6a 10		 push	 16			; 00000010H
  0019f	89 46 6c	 mov	 DWORD PTR [esi+108], eax
  001a2	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::operator new
  001a7	8b c8		 mov	 ecx, eax
  001a9	83 c4 04	 add	 esp, 4
  001ac	89 4d f4	 mov	 DWORD PTR $T1[ebp], ecx
  001af	85 c9		 test	 ecx, ecx
  001b1	74 24		 je	 SHORT $LN35@BuildDecor
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 24   : 		CBaseDecorator() :m_NextDecorator(0), m_PrevDecorator(0) {}

  001b3	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  001ba	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 241  : 		{

  001c1	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 263  : 		CGravityDecorator(){}

  001c8	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CGravityDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  001ce	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7CGravityDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 341  : 		pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(new CGravityDecorator);

  001d5	eb 02		 jmp	 SHORT $LN36@BuildDecor
$LN35@BuildDecor:

; 353  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  001d7	33 c9		 xor	 ecx, ecx
$LN36@BuildDecor:
  001d9	8b 46 70	 mov	 eax, DWORD PTR [esi+112]
  001dc	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  001df	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  001e2	89 4e 70	 mov	 DWORD PTR [esi+112], ecx
$LN11@BuildDecor:
  001e5	6a 24		 push	 36			; 00000024H
  001e7	e8 00 00 00 00	 call	 ??2?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<DWORDCOLOR> >::operator new
  001ec	83 c4 04	 add	 esp, 4
  001ef	89 45 fc	 mov	 DWORD PTR $T8[ebp], eax
  001f2	85 c0		 test	 eax, eax
  001f4	74 79		 je	 SHORT $LN37@BuildDecor
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 24   : 		CBaseDecorator() :m_NextDecorator(0), m_PrevDecorator(0) {}

  001f6	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 353  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  001fd	8d 4e 44	 lea	 ecx, DWORD PTR [esi+68]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00200	8b 75 fc	 mov	 esi, DWORD PTR $T8[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 24   : 		CBaseDecorator() :m_NextDecorator(0), m_PrevDecorator(0) {}

  00203	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 241  : 		{

  0020a	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 110  : 			{

  00211	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00217	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], OFFSET ??_7?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@6B?$CPooledObject@V?$CTimeEventDecorator@UDWORDCOLOR@@@NEffectUpdateDecorator@@@@@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0021e	8b 97 1c 01 00
	00		 mov	 edx, DWORD PTR [edi+284]
  00224	89 50 10	 mov	 DWORD PTR [eax+16], edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 353  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  00227	89 4d f8	 mov	 DWORD PTR _pValue$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0022a	8b 8f 20 01 00
	00		 mov	 ecx, DWORD PTR [edi+288]

; 154  :         return _Ptr == _Right._Ptr;

  00230	3b d1		 cmp	 edx, ecx

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00232	89 48 14	 mov	 DWORD PTR [eax+20], ecx
  00235	8b 87 1c 01 00
	00		 mov	 eax, DWORD PTR [edi+284]
  0023b	89 46 18	 mov	 DWORD PTR [esi+24], eax
  0023e	8b 45 fc	 mov	 eax, DWORD PTR $T8[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 111  : 				if (it_start == it_end)

  00241	8b c8		 mov	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00243	8b b7 1c 01 00
	00		 mov	 esi, DWORD PTR [edi+284]
  00249	89 75 f4	 mov	 DWORD PTR tv2123[ebp], esi
  0024c	89 70 1c	 mov	 DWORD PTR [eax+28], esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 109  : 				pData(pValue)

  0024f	8b 75 f8	 mov	 esi, DWORD PTR _pValue$1$[ebp]
  00252	89 70 20	 mov	 DWORD PTR [eax+32], esi

; 111  : 				if (it_start == it_end)

  00255	75 0a		 jne	 SHORT $LN132@BuildDecor
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\Type.h

; 142  : 		m_dwColor = r.m_dwColor;

  00257	8b 45 08	 mov	 eax, DWORD PTR $T9[ebp]
  0025a	89 06		 mov	 DWORD PTR [esi], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 353  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  0025c	8b 75 08	 mov	 esi, DWORD PTR _pInstance$[ebp]
  0025f	eb 10		 jmp	 SHORT $LN38@BuildDecor
$LN132@BuildDecor:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 78   :         ++_Ptr;

  00261	8b 45 f4	 mov	 eax, DWORD PTR tv2123[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 353  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  00264	8b 75 08	 mov	 esi, DWORD PTR _pInstance$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 78   :         ++_Ptr;

  00267	83 c0 08	 add	 eax, 8
  0026a	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 353  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  0026d	eb 02		 jmp	 SHORT $LN38@BuildDecor
$LN37@BuildDecor:
  0026f	33 c9		 xor	 ecx, ecx
$LN38@BuildDecor:
  00271	8b 46 70	 mov	 eax, DWORD PTR [esi+112]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 39   : 			pd->m_NextDecorator = this;

  00274	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 357  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  00277	6a 24		 push	 36			; 00000024H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 40   : 			m_PrevDecorator = pd;

  00279	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 353  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  0027c	89 4e 70	 mov	 DWORD PTR [esi+112], ecx

; 357  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  0027f	e8 00 00 00 00	 call	 ??2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator new
  00284	83 c4 04	 add	 esp, 4
  00287	89 45 08	 mov	 DWORD PTR $T18[ebp], eax
  0028a	85 c0		 test	 eax, eax
  0028c	74 16		 je	 SHORT $LN39@BuildDecor
  0028e	8d 4e 38	 lea	 ecx, DWORD PTR [esi+56]
  00291	51		 push	 ecx
  00292	8d 8f 04 01 00
	00		 lea	 ecx, DWORD PTR [edi+260]
  00298	51		 push	 ecx
  00299	8b c8		 mov	 ecx, eax
  0029b	e8 00 00 00 00	 call	 ??0?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAE@ABV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@PAM@Z ; NEffectUpdateDecorator::CTimeEventDecorator<float>::CTimeEventDecorator<float>
  002a0	8b c8		 mov	 ecx, eax
  002a2	eb 02		 jmp	 SHORT $LN40@BuildDecor
$LN39@BuildDecor:
  002a4	33 c9		 xor	 ecx, ecx
$LN40@BuildDecor:
  002a6	8b 46 70	 mov	 eax, DWORD PTR [esi+112]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 39   : 			pd->m_NextDecorator = this;

  002a9	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 359  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  002ac	6a 24		 push	 36			; 00000024H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 40   : 			m_PrevDecorator = pd;

  002ae	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 357  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  002b1	89 4e 70	 mov	 DWORD PTR [esi+112], ecx

; 359  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  002b4	e8 00 00 00 00	 call	 ??2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator new
  002b9	83 c4 04	 add	 esp, 4
  002bc	89 45 08	 mov	 DWORD PTR $T17[ebp], eax
  002bf	85 c0		 test	 eax, eax
  002c1	74 16		 je	 SHORT $LN41@BuildDecor
  002c3	8d 4e 3c	 lea	 ecx, DWORD PTR [esi+60]
  002c6	51		 push	 ecx
  002c7	8d 8f 10 01 00
	00		 lea	 ecx, DWORD PTR [edi+272]
  002cd	51		 push	 ecx
  002ce	8b c8		 mov	 ecx, eax
  002d0	e8 00 00 00 00	 call	 ??0?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAE@ABV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@PAM@Z ; NEffectUpdateDecorator::CTimeEventDecorator<float>::CTimeEventDecorator<float>
  002d5	8b c8		 mov	 ecx, eax
  002d7	eb 02		 jmp	 SHORT $LN42@BuildDecor
$LN41@BuildDecor:
  002d9	33 c9		 xor	 ecx, ecx
$LN42@BuildDecor:
  002db	8b 46 70	 mov	 eax, DWORD PTR [esi+112]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 39   : 			pd->m_NextDecorator = this;

  002de	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 40   : 			m_PrevDecorator = pd;

  002e1	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 359  : 	pInstance->m_pDecorator = pInstance->m_pDecorator->AddChainFront(

  002e4	89 4e 70	 mov	 DWORD PTR [esi+112], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  002e7	8b 87 38 01 00
	00		 mov	 eax, DWORD PTR [edi+312]
  002ed	2b 87 34 01 00
	00		 sub	 eax, DWORD PTR [edi+308]
  002f3	c1 f8 02	 sar	 eax, 2
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 362  : 	if (m_ParticleProperty.GetTextureAnimationFrameCount()>1 &&m_ParticleProperty.GetTextureAnimationFrameDelay()>1e-6)

  002f6	83 f8 01	 cmp	 eax, 1
  002f9	0f 86 50 01 00
	00		 jbe	 $LN2@BuildDecor
  002ff	f3 0f 10 87 cc
	00 00 00	 movss	 xmm0, DWORD PTR [edi+204]
  00307	0f 5a c0	 cvtps2pd xmm0, xmm0
  0030a	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3eb0c6f7a0b5ed8d
  00312	0f 86 37 01 00
	00		 jbe	 $LN2@BuildDecor

; 363  : 	{
; 364  : 		switch (pInstance->m_byTextureAnimationType)

  00318	0f b6 46 48	 movzx	 eax, BYTE PTR [esi+72]
  0031c	83 e8 01	 sub	 eax, 1
  0031f	0f 84 bb 00 00
	00		 je	 $LN13@BuildDecor
  00325	83 e8 01	 sub	 eax, 1
  00328	74 61		 je	 SHORT $LN14@BuildDecor
  0032a	83 e8 01	 sub	 eax, 1
  0032d	0f 85 1c 01 00
	00		 jne	 $LN2@BuildDecor

; 375  : 				pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(

  00333	6a 20		 push	 32			; 00000020H
  00335	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::operator new
  0033a	8b d0		 mov	 edx, eax
  0033c	83 c4 04	 add	 esp, 4
  0033f	89 55 08	 mov	 DWORD PTR $T14[ebp], edx
  00342	85 d2		 test	 edx, edx
  00344	0f 84 f7 00 00
	00		 je	 $LN43@BuildDecor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0034a	8b 8f 38 01 00
	00		 mov	 ecx, DWORD PTR [edi+312]
  00350	2b 8f 34 01 00
	00		 sub	 ecx, DWORD PTR [edi+308]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 375  : 				pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(

  00356	f3 0f 10 87 cc
	00 00 00	 movss	 xmm0, DWORD PTR [edi+204]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0035e	c1 f9 02	 sar	 ecx, 2
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 24   : 		CBaseDecorator() :m_NextDecorator(0), m_PrevDecorator(0) {}

  00361	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00368	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 241  : 		{

  0036f	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 228  : 		CTextureAnimationRandomDecorator(float fFrameTime, BYTE n, BYTE * pIdx) :n(n),pIdx(pIdx),fFrameTime(fFrameTime),fLastFrameTime(fFrameTime){}

  00376	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  0037c	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], OFFSET ??_7CTextureAnimationRandomDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@
  00383	88 4a 10	 mov	 BYTE PTR [edx+16], cl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 375  : 				pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(

  00386	e9 a4 00 00 00	 jmp	 $LN241@BuildDecor
$LN14@BuildDecor:

; 371  : 				pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(

  0038b	6a 20		 push	 32			; 00000020H
  0038d	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::operator new
  00392	8b d0		 mov	 edx, eax
  00394	83 c4 04	 add	 esp, 4
  00397	89 55 08	 mov	 DWORD PTR $T15[ebp], edx
  0039a	85 d2		 test	 edx, edx
  0039c	0f 84 9f 00 00
	00		 je	 $LN43@BuildDecor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  003a2	8b 8f 38 01 00
	00		 mov	 ecx, DWORD PTR [edi+312]
  003a8	2b 8f 34 01 00
	00		 sub	 ecx, DWORD PTR [edi+308]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 371  : 				pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(

  003ae	f3 0f 10 87 cc
	00 00 00	 movss	 xmm0, DWORD PTR [edi+204]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  003b6	c1 f9 02	 sar	 ecx, 2
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 24   : 		CBaseDecorator() :m_NextDecorator(0), m_PrevDecorator(0) {}

  003b9	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  003c0	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 241  : 		{

  003c7	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 204  : 		CTextureAnimationCCWDecorator(float fFrameTime, BYTE n, BYTE * pIdx) :n(n),pIdx(pIdx),fFrameTime(fFrameTime),fLastFrameTime(fFrameTime){}

  003ce	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  003d4	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], OFFSET ??_7CTextureAnimationCCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@
  003db	88 4a 10	 mov	 BYTE PTR [edx+16], cl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 371  : 				pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(

  003de	eb 4f		 jmp	 SHORT $LN241@BuildDecor
$LN13@BuildDecor:

; 367  : 				pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(

  003e0	6a 20		 push	 32			; 00000020H
  003e2	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::operator new
  003e7	8b d0		 mov	 edx, eax
  003e9	83 c4 04	 add	 esp, 4
  003ec	89 55 08	 mov	 DWORD PTR $T16[ebp], edx
  003ef	85 d2		 test	 edx, edx
  003f1	74 4e		 je	 SHORT $LN43@BuildDecor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  003f3	8b 8f 38 01 00
	00		 mov	 ecx, DWORD PTR [edi+312]
  003f9	2b 8f 34 01 00
	00		 sub	 ecx, DWORD PTR [edi+308]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 367  : 				pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(

  003ff	f3 0f 10 87 cc
	00 00 00	 movss	 xmm0, DWORD PTR [edi+204]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00407	c1 f9 02	 sar	 ecx, 2
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 24   : 		CBaseDecorator() :m_NextDecorator(0), m_PrevDecorator(0) {}

  0040a	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00411	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 241  : 		{

  00418	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], OFFSET ??_7?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 181  : 		CTextureAnimationCWDecorator(float fFrameTime, DWORD n, BYTE * pIdx) :n(n),pIdx(pIdx),fFrameTime(fFrameTime),fLastFrameTime(fFrameTime){}

  0041f	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], OFFSET ??_7CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00425	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], OFFSET ??_7CTextureAnimationCWDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@
  0042c	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
$LN241@BuildDecor:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 381  : 	BYTE byRotationType = m_ParticleProperty.m_byRotationType;

  0042f	f3 0f 11 42 14	 movss	 DWORD PTR [edx+20], xmm0
  00434	8d 46 50	 lea	 eax, DWORD PTR [esi+80]
  00437	f3 0f 11 42 18	 movss	 DWORD PTR [edx+24], xmm0
  0043c	89 42 1c	 mov	 DWORD PTR [edx+28], eax
  0043f	eb 02		 jmp	 SHORT $LN44@BuildDecor
$LN43@BuildDecor:
  00441	33 d2		 xor	 edx, edx
$LN44@BuildDecor:
  00443	8b 46 70	 mov	 eax, DWORD PTR [esi+112]
  00446	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00449	89 50 08	 mov	 DWORD PTR [eax+8], edx
  0044c	89 56 70	 mov	 DWORD PTR [esi+112], edx
$LN2@BuildDecor:

; 382  : 
; 383  : 	if (m_ParticleProperty.m_fRotationSpeed==0.0f && byRotationType!=CParticleProperty::ROTATION_TYPE_TIME_EVENT)

  0044f	f3 0f 10 87 dc
	00 00 00	 movss	 xmm0, DWORD PTR [edi+220]
  00457	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  0045e	8a 8f d8 00 00
	00		 mov	 cl, BYTE PTR [edi+216]
  00464	9f		 lahf
  00465	f6 c4 44	 test	 ah, 68			; 00000044H
  00468	7a 09		 jp	 SHORT $LN16@BuildDecor
  0046a	80 f9 01	 cmp	 cl, 1
  0046d	74 18		 je	 SHORT $LN18@BuildDecor

; 384  : 	{
; 385  : 		byRotationType = CParticleProperty::ROTATION_TYPE_NONE;

  0046f	32 c9		 xor	 cl, cl

; 386  : 	}

  00471	eb 14		 jmp	 SHORT $LN18@BuildDecor
$LN16@BuildDecor:

; 387  : 	else if (byRotationType==CParticleProperty::ROTATION_TYPE_RANDOM_DIRECTION)

  00473	80 f9 04	 cmp	 cl, 4
  00476	75 0f		 jne	 SHORT $LN18@BuildDecor

; 388  : 	{
; 389  : 		byRotationType = (random()&1)?CParticleProperty::ROTATION_TYPE_CW:CParticleProperty::ROTATION_TYPE_CCW;

  00478	e8 00 00 00 00	 call	 ?random@@YAKXZ		; random
  0047d	8b c8		 mov	 ecx, eax
  0047f	f6 d1		 not	 cl
  00481	80 e1 01	 and	 cl, 1
  00484	80 c9 02	 or	 cl, 2
$LN18@BuildDecor:

; 390  : 	}
; 391  : 
; 392  : 	switch(byRotationType)

  00487	0f b6 c1	 movzx	 eax, cl
  0048a	83 e8 01	 sub	 eax, 1
  0048d	74 68		 je	 SHORT $LN19@BuildDecor
  0048f	83 e8 01	 sub	 eax, 1
  00492	74 58		 je	 SHORT $LN20@BuildDecor
  00494	83 e8 01	 sub	 eax, 1
  00497	0f 85 d4 00 00
	00		 jne	 $LN4@BuildDecor

; 404  : 				new CRotationDecorator());
; 405  : 			break;
; 406  : 
; 407  : 		case CParticleProperty::ROTATION_TYPE_CCW:
; 408  : 			pInstance->m_fRotationSpeed = - m_ParticleProperty.m_fRotationSpeed;

  0049d	f3 0f 10 87 dc
	00 00 00	 movss	 xmm0, DWORD PTR [edi+220]
  004a5	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  004ac	f3 0f 11 46 68	 movss	 DWORD PTR [esi+104], xmm0
$LN242@BuildDecor:

; 416  : 	pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(new CHeaderDecorator);

  004b1	6a 10		 push	 16			; 00000010H
  004b3	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::operator new
  004b8	8b c8		 mov	 ecx, eax
  004ba	83 c4 04	 add	 esp, 4
  004bd	89 4d 08	 mov	 DWORD PTR $T11[ebp], ecx
  004c0	85 c9		 test	 ecx, ecx
  004c2	0f 84 9b 00 00
	00		 je	 $LN51@BuildDecor
  004c8	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  004cf	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  004d6	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
  004dd	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CRotationDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  004e3	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7CRotationDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@
  004ea	eb 79		 jmp	 SHORT $LN52@BuildDecor
$LN20@BuildDecor:

; 398  : 				new CRotationSpeedValueDecorator(m_ParticleProperty.m_TimeEventRotation,&pInstance->m_fRotationSpeed));
; 399  : 			break;
; 400  : 
; 401  : 		case CParticleProperty::ROTATION_TYPE_CW:
; 402  : 			pInstance->m_fRotationSpeed = m_ParticleProperty.m_fRotationSpeed;

  004ec	8b 87 dc 00 00
	00		 mov	 eax, DWORD PTR [edi+220]
  004f2	89 46 68	 mov	 DWORD PTR [esi+104], eax

; 403  : 			pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(

  004f5	eb ba		 jmp	 SHORT $LN242@BuildDecor
$LN19@BuildDecor:

; 395  : 			pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(

  004f7	6a 10		 push	 16			; 00000010H
  004f9	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::operator new
  004fe	8b c8		 mov	 ecx, eax
  00500	83 c4 04	 add	 esp, 4
  00503	89 4d 08	 mov	 DWORD PTR $T13[ebp], ecx
  00506	85 c9		 test	 ecx, ecx
  00508	74 24		 je	 SHORT $LN49@BuildDecor
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 24   : 		CBaseDecorator() :m_NextDecorator(0), m_PrevDecorator(0) {}

  0050a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00511	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 241  : 		{

  00518	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 273  : 		CRotationDecorator(){}

  0051f	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CRotationDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  00525	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7CRotationDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 395  : 			pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(

  0052c	eb 02		 jmp	 SHORT $LN50@BuildDecor
$LN49@BuildDecor:
  0052e	33 c9		 xor	 ecx, ecx
$LN50@BuildDecor:
  00530	8b 46 70	 mov	 eax, DWORD PTR [esi+112]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 39   : 			pd->m_NextDecorator = this;

  00533	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 397  : 			pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(

  00536	6a 24		 push	 36			; 00000024H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 40   : 			m_PrevDecorator = pd;

  00538	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 395  : 			pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(

  0053b	89 4e 70	 mov	 DWORD PTR [esi+112], ecx

; 397  : 			pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(

  0053e	e8 00 00 00 00	 call	 ??2?$CPooledObject@V?$CTimeEventDecorator@M@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CTimeEventDecorator<float> >::operator new
  00543	83 c4 04	 add	 esp, 4
  00546	89 45 08	 mov	 DWORD PTR $T12[ebp], eax
  00549	85 c0		 test	 eax, eax
  0054b	74 16		 je	 SHORT $LN51@BuildDecor
  0054d	8d 4e 68	 lea	 ecx, DWORD PTR [esi+104]
  00550	51		 push	 ecx
  00551	8d 8f 28 01 00
	00		 lea	 ecx, DWORD PTR [edi+296]
  00557	51		 push	 ecx
  00558	8b c8		 mov	 ecx, eax
  0055a	e8 00 00 00 00	 call	 ??0?$CTimeEventDecorator@M@NEffectUpdateDecorator@@QAE@ABV?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@PAM@Z ; NEffectUpdateDecorator::CTimeEventDecorator<float>::CTimeEventDecorator<float>
  0055f	8b c8		 mov	 ecx, eax
  00561	eb 02		 jmp	 SHORT $LN52@BuildDecor
$LN51@BuildDecor:

; 416  : 	pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(new CHeaderDecorator);

  00563	33 c9		 xor	 ecx, ecx
$LN52@BuildDecor:
  00565	8b 46 70	 mov	 eax, DWORD PTR [esi+112]
  00568	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0056b	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0056e	89 4e 70	 mov	 DWORD PTR [esi+112], ecx
$LN4@BuildDecor:
  00571	6a 10		 push	 16			; 00000010H
  00573	e8 00 00 00 00	 call	 ??2?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@SAPAXI@Z ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::operator new
  00578	8b c8		 mov	 ecx, eax
  0057a	83 c4 04	 add	 esp, 4
  0057d	89 4d 08	 mov	 DWORD PTR $T10[ebp], ecx
  00580	85 c9		 test	 ecx, ecx
  00582	74 36		 je	 SHORT $LN57@BuildDecor
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 24   : 		CBaseDecorator() :m_NextDecorator(0), m_PrevDecorator(0) {}

  00584	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0058b	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 241  : 		{

  00592	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 81   : 		CHeaderDecorator() {}

  00599	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CHeaderDecorator@NEffectUpdateDecorator@@6BCBaseDecorator@1@@
  0059f	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], OFFSET ??_7CHeaderDecorator@NEffectUpdateDecorator@@6B?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 416  : 	pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(new CHeaderDecorator);

  005a6	8b 46 70	 mov	 eax, DWORD PTR [esi+112]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 39   : 			pd->m_NextDecorator = this;

  005a9	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 416  : 	pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(new CHeaderDecorator);

  005ac	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 40   : 			m_PrevDecorator = pd;

  005ad	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 416  : 	pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(new CHeaderDecorator);

  005b0	89 4e 70	 mov	 DWORD PTR [esi+112], ecx
  005b3	5e		 pop	 esi

; 417  : }

  005b4	8b e5		 mov	 esp, ebp
  005b6	5d		 pop	 ebp
  005b7	c2 04 00	 ret	 4
$LN57@BuildDecor:

; 416  : 	pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(new CHeaderDecorator);

  005ba	8b 46 70	 mov	 eax, DWORD PTR [esi+112]
  005bd	33 c9		 xor	 ecx, ecx
  005bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\EffectUpdateDecorator.h

; 39   : 			pd->m_NextDecorator = this;

  005c0	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 40   : 			m_PrevDecorator = pd;

  005c3	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp

; 416  : 	pInstance->m_pDecorator=pInstance->m_pDecorator->AddChainFront(new CHeaderDecorator);

  005c6	89 4e 70	 mov	 DWORD PTR [esi+112], ecx
  005c9	5e		 pop	 esi

; 417  : }

  005ca	8b e5		 mov	 esp, ebp
  005cc	5d		 pop	 ebp
  005cd	c2 04 00	 ret	 4
?BuildDecorator@CParticleSystemData@@QAEXPAVCParticleInstance@@@Z ENDP ; CParticleSystemData::BuildDecorator
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
;	COMDAT ?ChangeTexture@CParticleSystemData@@QAEXPBD@Z
_TEXT	SEGMENT
_c_szFileName$ = 8					; size = 4
?ChangeTexture@CParticleSystemData@@QAEXPBD@Z PROC	; CParticleSystemData::ChangeTexture, COMDAT
; _this$ = ecx

; 295  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 296  : 	m_ParticleProperty.SetTexture(c_szFileName);

  00003	81 c1 c4 00 00
	00		 add	 ecx, 196		; 000000c4H

; 297  : }

  00009	5d		 pop	 ebp

; 296  : 	m_ParticleProperty.SetTexture(c_szFileName);

  0000a	e9 00 00 00 00	 jmp	 ?SetTexture@CParticleProperty@@QAE_NPBD@Z ; CParticleProperty::SetTexture
?ChangeTexture@CParticleSystemData@@QAEXPBD@Z ENDP	; CParticleSystemData::ChangeTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
;	COMDAT ?GetParticlePropertyPointer@CParticleSystemData@@QAEPAVCParticleProperty@@XZ
_TEXT	SEGMENT
?GetParticlePropertyPointer@CParticleSystemData@@QAEPAVCParticleProperty@@XZ PROC ; CParticleSystemData::GetParticlePropertyPointer, COMDAT
; _this$ = ecx

; 30   : 	return &m_ParticleProperty;

  00000	8d 81 c4 00 00
	00		 lea	 eax, DWORD PTR [ecx+196]

; 31   : }

  00006	c3		 ret	 0
?GetParticlePropertyPointer@CParticleSystemData@@QAEPAVCParticleProperty@@XZ ENDP ; CParticleSystemData::GetParticlePropertyPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
;	COMDAT ?GetEmitterPropertyPointer@CParticleSystemData@@QAEPAVCEmitterProperty@@XZ
_TEXT	SEGMENT
?GetEmitterPropertyPointer@CParticleSystemData@@QAEPAVCEmitterProperty@@XZ PROC ; CParticleSystemData::GetEmitterPropertyPointer, COMDAT
; _this$ = ecx

; 26   : 	return &m_EmitterProperty;

  00000	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]

; 27   : }

  00003	c3		 ret	 0
?GetEmitterPropertyPointer@CParticleSystemData@@QAEPAVCEmitterProperty@@XZ ENDP ; CParticleSystemData::GetEmitterPropertyPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
;	COMDAT ??0CParticleSystemData@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CParticleSystemData@@QAE@XZ PROC			; CParticleSystemData::CParticleSystemData, COMDAT
; _this$ = ecx

; 420  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CParticleSystemData@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	e8 00 00 00 00	 call	 ??0CEffectElementBase@@QAE@XZ ; CEffectElementBase::CEffectElementBase
  0002e	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00031	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00038	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CParticleSystemData@@6B@
  0003e	e8 00 00 00 00	 call	 ??0CEmitterProperty@@QAE@XZ ; CEmitterProperty::CEmitterProperty
  00043	8d 8e c4 00 00
	00		 lea	 ecx, DWORD PTR [esi+196]
  00049	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0004d	e8 00 00 00 00	 call	 ??0CParticleProperty@@QAE@XZ ; CParticleProperty::CParticleProperty

; 421  : }

  00052	8b c6		 mov	 eax, esi
  00054	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00057	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005e	59		 pop	 ecx
  0005f	5e		 pop	 esi
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CParticleSystemData@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CEffectElementBase@@UAE@XZ ; CEffectElementBase::~CEffectElementBase
__unwindfunclet$??0CParticleSystemData@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 14	 add	 ecx, 20			; 00000014H
  0000e	e9 00 00 00 00	 jmp	 ??1CEmitterProperty@@UAE@XZ ; CEmitterProperty::~CEmitterProperty
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
  00017	cc		 int	 3
__ehhandler$??0CParticleSystemData@@QAE@XZ:
  00018	90		 npad	 1
  00019	90		 npad	 1
  0001a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00021	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CParticleSystemData@@QAE@XZ
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CParticleSystemData@@QAE@XZ ENDP			; CParticleSystemData::CParticleSystemData
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
;	COMDAT ??1CParticleSystemData@@UAE@XZ
_TEXT	SEGMENT
??1CParticleSystemData@@UAE@XZ PROC			; CParticleSystemData::~CParticleSystemData, COMDAT
; _this$ = ecx

; 423  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 424  : }

  00003	8d 8e c4 00 00
	00		 lea	 ecx, DWORD PTR [esi+196]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CParticleSystemData@@6B@
  0000f	e8 00 00 00 00	 call	 ??1CParticleProperty@@UAE@XZ ; CParticleProperty::~CParticleProperty
  00014	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00017	e8 00 00 00 00	 call	 ??1CEmitterProperty@@UAE@XZ ; CEmitterProperty::~CEmitterProperty
  0001c	8b ce		 mov	 ecx, esi
  0001e	5e		 pop	 esi
  0001f	e9 00 00 00 00	 jmp	 ??1CEffectElementBase@@UAE@XZ ; CEffectElementBase::~CEffectElementBase
??1CParticleSystemData@@UAE@XZ ENDP			; CParticleSystemData::~CParticleSystemData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@V?$CTimeEvent@UDWORDCOLOR@@@@V?$allocator@V?$CTimeEvent@UDWORDCOLOR@@@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@V?$CTimeEvent@UDWORDCOLOR@@@@V?$allocator@V?$CTimeEvent@UDWORDCOLOR@@@@@std@@@std@@CAXXZ PROC ; std::vector<CTimeEvent<DWORDCOLOR>,std::allocator<CTimeEvent<DWORDCOLOR> > >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@V?$CTimeEvent@UDWORDCOLOR@@@@V?$allocator@V?$CTimeEvent@UDWORDCOLOR@@@@@std@@@std@@CAXXZ ENDP ; std::vector<CTimeEvent<DWORDCOLOR>,std::allocator<CTimeEvent<DWORDCOLOR> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@CAXXZ PROC ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@CAXXZ ENDP ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?push_back@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXABV?$CTimeEvent@M@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXABV?$CTimeEvent@M@@@Z PROC ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::push_back, COMDAT
; _this$ = ecx

; 755  :     _CONSTEXPR20_CONTAINER void push_back(const _Ty& _Val) { // insert element at end, provide strong guarantee

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 743  :         if (_Mylast != _My_data._Myend) {

  00004	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00007	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  0000a	74 16		 je	 SHORT $LN4@push_back

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00014	89 16		 mov	 DWORD PTR [esi], edx
  00016	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  00019	83 41 04 08	 add	 DWORD PTR [ecx+4], 8
  0001d	5e		 pop	 esi

; 756  :         emplace_back(_Val);
; 757  :     }

  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
$LN4@push_back:

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00022	ff 75 08	 push	 DWORD PTR __Val$[ebp]
  00025	56		 push	 esi
  00026	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABV?$CTimeEvent@M@@@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEPAV?$CTimeEvent@M@@QAV2@ABV2@@Z ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Emplace_reallocate<CTimeEvent<float> const &>
  0002b	5e		 pop	 esi

; 756  :         emplace_back(_Val);
; 757  :     }

  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
?push_back@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXABV?$CTimeEvent@M@@@Z ENDP ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::push_back
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ PROC ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >, COMDAT
; _this$ = ecx

; 711  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 40		 je	 SHORT $LN4@vector

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000c	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000e	83 e1 f8	 and	 ecx, -8			; fffffff8H

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00011	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00017	72 12		 jb	 SHORT $LN20@vector

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00019	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001c	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001f	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00021	83 c0 fc	 add	 eax, -4			; fffffffcH
  00024	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00027	77 22		 ja	 SHORT $LN17@vector

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00029	8b c2		 mov	 eax, edx
$LN20@vector:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0002b	51		 push	 ecx
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  00032	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00038	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  0003b	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1769 :             _Myend   = nullptr;

  00042	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  00049	5e		 pop	 esi

; 717  :     }

  0004a	c3		 ret	 0
$LN17@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN25@vector:
  00050	cc		 int	 3
??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ENDP ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 134  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 135  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 137  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 85   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 138  :         _Throw_bad_array_new_length(); // add overflow
; 139  :     }
; 140  : 
; 141  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 85   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 145  : 
; 146  : #ifdef _DEBUG
; 147  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 148  : #endif // _DEBUG
; 149  :     return _Ptr;
; 150  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\TextFileLoader.h
;	COMDAT ??1CGotoChild@CTextFileLoader@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CGotoChild@CTextFileLoader@@QAE@XZ PROC		; CTextFileLoader::CGotoChild::~CGotoChild, COMDAT
; _this$ = ecx

; 54   : 			{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGotoChild@CTextFileLoader@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 55   : 				m_pOwner->SetParentNode();

  00022	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00024	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode

; 56   : 			}

  00029	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0002c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00033	59		 pop	 ecx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
  00038	cc		 int	 3
  00039	cc		 int	 3
  0003a	cc		 int	 3
  0003b	cc		 int	 3
  0003c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CGotoChild@CTextFileLoader@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CGotoChild@CTextFileLoader@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CGotoChild@CTextFileLoader@@QAE@XZ ENDP		; CTextFileLoader::CGotoChild::~CGotoChild
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange, COMDAT

; 1778 :         _Xout_of_range("invalid vector subscript");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
  00005	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN3@Xrange:
  0000a	cc		 int	 3
?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Throw_tree_length_error@std@@YAXXZ
_TEXT	SEGMENT
?_Throw_tree_length_error@std@@YAXXZ PROC		; std::_Throw_tree_length_error, COMDAT

; 421  :     _Xlength_error("map/set too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Throw_tree:
  0000a	cc		 int	 3
?_Throw_tree_length_error@std@@YAXXZ ENDP		; std::_Throw_tree_length_error
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT
; _this$ = ecx

; 4616 :     _CONSTEXPR20_CONTAINER void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2319 :         return _BUF_SIZE <= _Myres;

  00003	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00006	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4617 :         _Mypair._Myval2._Orphan_all();
; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 27		 jb	 SHORT $LN10@Tidy_deall
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000d	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0000e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00014	72 12		 jb	 SHORT $LN20@Tidy_deall

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00016	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00019	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0001e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00021	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00024	77 1f		 ja	 SHORT $LN17@Tidy_deall

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00026	8b c2		 mov	 eax, edx
$LN20@Tidy_deall:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00028	51		 push	 ecx
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	83 c4 08	 add	 esp, 8
$LN10@Tidy_deall:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00032	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00039	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00040	c6 06 00	 mov	 BYTE PTR [esi], 0
  00043	5e		 pop	 esi

; 4638 :     }

  00044	c3		 ret	 0
$LN17@Tidy_deall:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00045	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN24@Tidy_deall:
  0004a	cc		 int	 3
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 3002 :     _CONSTEXPR20_CONTAINER ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2319 :         return _BUF_SIZE <= _Myres;

  00003	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00006	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 27		 jb	 SHORT $LN12@basic_stri
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000d	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0000e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00014	72 12		 jb	 SHORT $LN22@basic_stri

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00016	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00019	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0001e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00021	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00024	77 1f		 ja	 SHORT $LN19@basic_stri

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00026	8b c2		 mov	 eax, edx
$LN22@basic_stri:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00028	51		 push	 ecx
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	83 c4 08	 add	 esp, 8
$LN12@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00032	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00039	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00040	c6 06 00	 mov	 BYTE PTR [esi], 0
  00043	5e		 pop	 esi

; 3010 :     }

  00044	c3		 ret	 0
$LN19@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00045	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN27@basic_stri:
  0004a	cc		 int	 3
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2517 :     _CONSTEXPR20_CONTAINER basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b d9		 mov	 ebx, ecx
  00008	57		 push	 edi

; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00009	8b 7d 08	 mov	 edi, DWORD PTR __Ptr$[ebp]
  0000c	8b f7		 mov	 esi, edi

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0000e	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0

; 4596 :         _My_data._Mysize = 0;

  00014	c7 43 10 00 00
	00 00		 mov	 DWORD PTR [ebx+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0001b	c7 43 14 0f 00
	00 00		 mov	 DWORD PTR [ebx+20], 15	; 0000000fH

; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00022	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL74@basic_stri:
  00025	8a 06		 mov	 al, BYTE PTR [esi]
  00027	46		 inc	 esi
  00028	84 c0		 test	 al, al
  0002a	75 f9		 jne	 SHORT $LL74@basic_stri
  0002c	2b f1		 sub	 esi, ecx

; 3246 :         if (_Count <= _Mypair._Myval2._Myres) {

  0002e	83 fe 0f	 cmp	 esi, 15			; 0000000fH
  00031	77 1d		 ja	 SHORT $LN18@basic_stri

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00033	56		 push	 esi
  00034	57		 push	 edi
  00035	53		 push	 ebx

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  00036	89 73 10	 mov	 DWORD PTR [ebx+16], esi

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00039	e8 00 00 00 00	 call	 _memmove

; 2518 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2519 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2520 :         _Tidy_init();
; 2521 :         assign(_Ptr);
; 2522 :         _Proxy._Release();
; 2523 :     }

  0003e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00041	c6 04 1e 00	 mov	 BYTE PTR [esi+ebx], 0

; 2518 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2519 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2520 :         _Tidy_init();
; 2521 :         assign(_Ptr);
; 2522 :         _Proxy._Release();
; 2523 :     }

  00045	8b c3		 mov	 eax, ebx
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 04 00	 ret	 4
$LN18@basic_stri:

; 4508 :         if (_New_size > max_size()) {

  00050	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH
  00056	77 7c		 ja	 SHORT $LN79@basic_stri

; 4488 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00058	8b fe		 mov	 edi, esi
  0005a	83 cf 0f	 or	 edi, 15			; 0000000fH
  0005d	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4489 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00063	76 15		 jbe	 SHORT $LN35@basic_stri

; 4490 :             return _Max;

  00065	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  0006a	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00075	83 c4 04	 add	 esp, 4
  00078	eb 30		 jmp	 SHORT $LN77@basic_stri
$LN35@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  0007a	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  0007f	3b f8		 cmp	 edi, eax
  00081	0f 42 f8	 cmovb	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4515 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00084	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00087	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0008c	72 0b		 jb	 SHORT $LN43@basic_stri

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0008e	50		 push	 eax
  0008f	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00094	83 c4 04	 add	 esp, 4
  00097	eb 11		 jmp	 SHORT $LN77@basic_stri
$LN43@basic_stri:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00099	85 c0		 test	 eax, eax
  0009b	74 0b		 je	 SHORT $LN44@basic_stri

; 85   :         return ::operator new(_Bytes);

  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000a3	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  000a6	eb 02		 jmp	 SHORT $LN77@basic_stri
$LN44@basic_stri:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  000a8	33 c0		 xor	 eax, eax
$LN77@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000aa	56		 push	 esi
  000ab	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4523 :         _Mypair._Myval2._Mysize = _New_size;

  000ae	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000b1	50		 push	 eax

; 4523 :         _Mypair._Myval2._Mysize = _New_size;

  000b2	89 73 10	 mov	 DWORD PTR [ebx+16], esi

; 4524 :         _Mypair._Myval2._Myres  = _New_capacity;

  000b5	89 7b 14	 mov	 DWORD PTR [ebx+20], edi

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000b8	e8 00 00 00 00	 call	 _memcpy

; 3258 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000bd	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]

; 2518 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2519 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2520 :         _Tidy_init();
; 2521 :         assign(_Ptr);
; 2522 :         _Proxy._Release();
; 2523 :     }

  000c0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3258 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000c3	c6 04 30 00	 mov	 BYTE PTR [eax+esi], 0

; 2518 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2519 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2520 :         _Tidy_init();
; 2521 :         assign(_Ptr);
; 2522 :         _Proxy._Release();
; 2523 :     }

  000c7	5f		 pop	 edi

; 4530 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000c8	89 03		 mov	 DWORD PTR [ebx], eax

; 2518 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2519 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2520 :         _Tidy_init();
; 2521 :         assign(_Ptr);
; 2522 :         _Proxy._Release();
; 2523 :     }

  000ca	8b c3		 mov	 eax, ebx
  000cc	5e		 pop	 esi
  000cd	5b		 pop	 ebx
  000ce	8b e5		 mov	 esp, ebp
  000d0	5d		 pop	 ebp
  000d1	c2 04 00	 ret	 4
$LN79@basic_stri:

; 4509 :             _Xlen_string(); // result too long

  000d4	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN75@basic_stri:
  000d9	cc		 int	 3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2374 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EffectLib\ParticleSystemData.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
