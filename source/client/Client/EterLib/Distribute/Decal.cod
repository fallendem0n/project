; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30137.0 

	TITLE	C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Distribute\Decal.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0D3DXVECTOR3@@QAE@XZ				; D3DXVECTOR3::D3DXVECTOR3
PUBLIC	??0D3DXMATRIX@@QAE@XZ				; D3DXMATRIX::D3DXMATRIX
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??0SPDTVertex@@QAE@XZ				; SPDTVertex::SPDTVertex
PUBLIC	??0CDecal@@QAE@XZ				; CDecal::CDecal
PUBLIC	??1CDecal@@UAE@XZ				; CDecal::~CDecal
PUBLIC	?Clear@CDecal@@QAEXXZ				; CDecal::Clear
PUBLIC	?Render@CDecal@@UAEXXZ				; CDecal::Render
PUBLIC	?_Xlength@?$vector@UTTRIANGLEFANSTRUCT@CDecal@@V?$allocator@UTTRIANGLEFANSTRUCT@CDecal@@@std@@@std@@CAXXZ ; std::vector<CDecal::TTRIANGLEFANSTRUCT,std::allocator<CDecal::TTRIANGLEFANSTRUCT> >::_Xlength
PUBLIC	?AddPolygon@CDecal@@IAE_NKPBUD3DXVECTOR3@@0@Z	; CDecal::AddPolygon
PUBLIC	?ClipMesh@CDecal@@IAEXKPBUD3DXVECTOR3@@0@Z	; CDecal::ClipMesh
PUBLIC	?ClipPolygon@CDecal@@IBEKKPBUD3DXVECTOR3@@0PAU2@1@Z ; CDecal::ClipPolygon
PUBLIC	?ClipPolygonAgainstPlane@CDecal@@KAKABUD3DXPLANE@@KPBUD3DXVECTOR3@@1PAU3@2@Z ; CDecal::ClipPolygonAgainstPlane
PUBLIC	??_GCDecal@@UAEPAXI@Z				; CDecal::`scalar deleting destructor'
PUBLIC	??$_Emplace_reallocate@ABUTTRIANGLEFANSTRUCT@CDecal@@@?$vector@UTTRIANGLEFANSTRUCT@CDecal@@V?$allocator@UTTRIANGLEFANSTRUCT@CDecal@@@std@@@std@@QAEPAUTTRIANGLEFANSTRUCT@CDecal@@QAU23@ABU23@@Z ; std::vector<CDecal::TTRIANGLEFANSTRUCT,std::allocator<CDecal::TTRIANGLEFANSTRUCT> >::_Emplace_reallocate<CDecal::TTRIANGLEFANSTRUCT const &>
PUBLIC	??$_Copy_memmove@PAUTTRIANGLEFANSTRUCT@CDecal@@PAU12@@std@@YAPAUTTRIANGLEFANSTRUCT@CDecal@@PAU12@00@Z ; std::_Copy_memmove<CDecal::TTRIANGLEFANSTRUCT *,CDecal::TTRIANGLEFANSTRUCT *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7CDecal@@6B@					; CDecal::`vftable'
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CDecal@@6B@				; CDecal::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDecal@@@8				; CDecal `RTTI Type Descriptor'
PUBLIC	??_R3CDecal@@8					; CDecal::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDecal@@8					; CDecal::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDecal@@8				; CDecal::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3f800000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	??_ECDecal@@UAEPAXI@Z:PROC			; CDecal::`vector deleting destructor'
EXTRN	?SetVertexShader@CStateManager@@QAEXK@Z:PROC	; CStateManager::SetVertexShader
EXTRN	?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z:PROC ; CStateManager::SetTransform
EXTRN	?DrawIndexedPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIIPBXW4_D3DFORMAT@@1I@Z:PROC ; CStateManager::DrawIndexedPrimitiveUP
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CDecal@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDecal@@8 DD FLAT:??_R0?AVCDecal@@@8	; CDecal::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDecal@@8
rdata$r	ENDS
;	COMDAT ??_R2CDecal@@8
rdata$r	SEGMENT
??_R2CDecal@@8 DD FLAT:??_R1A@?0A@EA@CDecal@@8		; CDecal::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CDecal@@8
rdata$r	SEGMENT
??_R3CDecal@@8 DD 00H					; CDecal::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CDecal@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDecal@@@8
data$rs	SEGMENT
??_R0?AVCDecal@@@8 DD FLAT:??_7type_info@@6B@		; CDecal `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDecal@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CDecal@@6B@
rdata$r	SEGMENT
??_R4CDecal@@6B@ DD 00H					; CDecal::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDecal@@@8
	DD	FLAT:??_R3CDecal@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CDecal@@6B@
CONST	SEGMENT
??_7CDecal@@6B@ DD FLAT:??_R4CDecal@@6B@		; CDecal::`vftable'
	DD	FLAT:??_ECDecal@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:?Render@CDecal@@UAEXXZ
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAUTTRIANGLEFANSTRUCT@CDecal@@PAU12@@std@@YAPAUTTRIANGLEFANSTRUCT@CDecal@@PAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAUTTRIANGLEFANSTRUCT@CDecal@@PAU12@@std@@YAPAUTTRIANGLEFANSTRUCT@CDecal@@PAU12@00@Z PROC ; std::_Copy_memmove<CDecal::TTRIANGLEFANSTRUCT *,CDecal::TTRIANGLEFANSTRUCT *>, COMDAT

; 4159 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4160 :     auto _FirstPtr              = _To_address(_First);
; 4161 :     auto _LastPtr               = _To_address(_Last);
; 4162 :     auto _DestPtr               = _To_address(_Dest);
; 4163 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4164 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4165 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4166 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4167 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4168 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4169 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4170 :     } else {
; 4171 :         return _Dest + (_LastPtr - _FirstPtr);
; 4172 :     }
; 4173 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAUTTRIANGLEFANSTRUCT@CDecal@@PAU12@@std@@YAPAUTTRIANGLEFANSTRUCT@CDecal@@PAU12@00@Z ENDP ; std::_Copy_memmove<CDecal::TTRIANGLEFANSTRUCT *,CDecal::TTRIANGLEFANSTRUCT *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABUTTRIANGLEFANSTRUCT@CDecal@@@?$vector@UTTRIANGLEFANSTRUCT@CDecal@@V?$allocator@UTTRIANGLEFANSTRUCT@CDecal@@@std@@@std@@QAEPAUTTRIANGLEFANSTRUCT@CDecal@@QAU23@ABU23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv669 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABUTTRIANGLEFANSTRUCT@CDecal@@@?$vector@UTTRIANGLEFANSTRUCT@CDecal@@V?$allocator@UTTRIANGLEFANSTRUCT@CDecal@@@std@@@std@@QAEPAUTTRIANGLEFANSTRUCT@CDecal@@QAU23@ABU23@@Z PROC ; std::vector<CDecal::TTRIANGLEFANSTRUCT,std::allocator<CDecal::TTRIANGLEFANSTRUCT> >::_Emplace_reallocate<CDecal::TTRIANGLEFANSTRUCT const &>, COMDAT
; _this$ = ecx

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
  0000e	8b 37		 mov	 esi, DWORD PTR [edi]
  00010	2b ce		 sub	 ecx, esi

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00015	2b c6		 sub	 eax, esi
  00017	c1 f9 04	 sar	 ecx, 4
  0001a	c1 f8 04	 sar	 eax, 4
  0001d	89 4d fc	 mov	 DWORD PTR __Whereoff$1$[ebp], ecx

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 0f	 cmp	 eax, 268435455		; 0fffffffH
  00025	0f 84 12 01 00
	00		 je	 $LN104@Emplace_re

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 50 01	 lea	 edx, DWORD PTR [eax+1]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b de		 sub	 ebx, esi

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 55 f8	 mov	 DWORD PTR __Newsize$1$[ebp], edx

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 fb 04	 sar	 ebx, 4

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 0f	 mov	 eax, 268435455		; 0fffffffH
  0003e	8b f3		 mov	 esi, ebx
  00040	d1 ee		 shr	 esi, 1
  00042	2b c6		 sub	 eax, esi
  00044	3b d8		 cmp	 ebx, eax
  00046	76 15		 jbe	 SHORT $LN12@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow

  00048	be f0 ff ff ff	 mov	 esi, -16		; fffffff0H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004d	56		 push	 esi
  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	8b 4d fc	 mov	 ecx, DWORD PTR __Whereoff$1$[ebp]
  00056	83 c4 04	 add	 esp, 4
  00059	8b d8		 mov	 ebx, eax
  0005b	eb 47		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005d	8d 04 1e	 lea	 eax, DWORD PTR [esi+ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  00060	8b f2		 mov	 esi, edx
  00062	3b c2		 cmp	 eax, edx
  00064	0f 43 f0	 cmovae	 esi, eax
  00067	81 fe ff ff ff
	0f		 cmp	 esi, 268435455		; 0fffffffH
  0006d	0f 87 cf 00 00
	00		 ja	 $LN105@Emplace_re

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00073	c1 e6 04	 shl	 esi, 4

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00076	81 fe 00 10 00
	00		 cmp	 esi, 4096		; 00001000H
  0007c	72 10		 jb	 SHORT $LN24@Emplace_re

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007e	56		 push	 esi
  0007f	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00084	8b 4d fc	 mov	 ecx, DWORD PTR __Whereoff$1$[ebp]
  00087	83 c4 04	 add	 esp, 4
  0008a	8b d8		 mov	 ebx, eax
  0008c	eb 16		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  0008e	85 f6		 test	 esi, esi
  00090	74 10		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  00092	56		 push	 esi
  00093	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 244  :         return _Traits::_Allocate(_Bytes);

  00098	8b 4d fc	 mov	 ecx, DWORD PTR __Whereoff$1$[ebp]

; 85   :         return ::operator new(_Bytes);

  0009b	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  0009e	8b d8		 mov	 ebx, eax
  000a0	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  000a2	33 db		 xor	 ebx, ebx
$LN23@Emplace_re:

; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  000a4	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a7	c1 e1 04	 shl	 ecx, 4
  000aa	03 cb		 add	 ecx, ebx
  000ac	89 4d fc	 mov	 DWORD PTR tv669[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  000af	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000b2	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  000b5	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000b8	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000bb	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000bd	3b c2		 cmp	 eax, edx
  000bf	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c1	8b c3		 mov	 eax, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 794  :         } else { // provide basic guarantee

  000c3	eb 17		 jmp	 SHORT $LN66@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c5	53		 push	 ebx
  000c6	50		 push	 eax
  000c7	51		 push	 ecx
  000c8	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTTRIANGLEFANSTRUCT@CDecal@@PAU12@@std@@YAPAUTTRIANGLEFANSTRUCT@CDecal@@PAU12@00@Z ; std::_Copy_memmove<CDecal::TTRIANGLEFANSTRUCT *,CDecal::TTRIANGLEFANSTRUCT *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000cd	8b 45 fc	 mov	 eax, DWORD PTR tv669[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d0	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d3	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d6	83 c0 10	 add	 eax, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d9	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
$LN66@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000dc	50		 push	 eax
  000dd	52		 push	 edx
  000de	51		 push	 ecx
  000df	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUTTRIANGLEFANSTRUCT@CDecal@@PAU12@@std@@YAPAUTTRIANGLEFANSTRUCT@CDecal@@PAU12@00@Z ; std::_Copy_memmove<CDecal::TTRIANGLEFANSTRUCT *,CDecal::TTRIANGLEFANSTRUCT *>

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000e4	8b 07		 mov	 eax, DWORD PTR [edi]

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000e6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000e9	85 c0		 test	 eax, eax
  000eb	74 2c		 je	 SHORT $LN86@Emplace_re

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000ed	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  000f0	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000f2	83 e1 f0	 and	 ecx, -16		; fffffff0H

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f5	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000fb	72 12		 jb	 SHORT $LN96@Emplace_re

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000fd	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00100	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00103	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00105	83 c0 fc	 add	 eax, -4			; fffffffcH
  00108	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0010b	77 2b		 ja	 SHORT $LN93@Emplace_re

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0010d	8b c2		 mov	 eax, edx
$LN96@Emplace_re:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0010f	51		 push	 ecx
  00110	50		 push	 eax
  00111	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00116	83 c4 08	 add	 esp, 8
$LN86@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1751 :         _Mylast  = _Newvec + _Newsize;

  00119	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$1$[ebp]

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  0011c	8d 0c 1e	 lea	 ecx, DWORD PTR [esi+ebx]
  0011f	c1 e0 04	 shl	 eax, 4
  00122	89 1f		 mov	 DWORD PTR [edi], ebx
  00124	03 c3		 add	 eax, ebx
  00126	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00129	8b 45 fc	 mov	 eax, DWORD PTR tv669[ebp]

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  0012c	89 4f 08	 mov	 DWORD PTR [edi+8], ecx

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  0012f	5f		 pop	 edi
  00130	5e		 pop	 esi
  00131	5b		 pop	 ebx

; 807  :     }

  00132	8b e5		 mov	 esp, ebp
  00134	5d		 pop	 ebp
  00135	c2 08 00	 ret	 8
$LN93@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00138	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN104@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 778  :             _Xlength();

  0013d	e8 00 00 00 00	 call	 ?_Xlength@?$vector@UTTRIANGLEFANSTRUCT@CDecal@@V?$allocator@UTTRIANGLEFANSTRUCT@CDecal@@@std@@@std@@CAXXZ ; std::vector<CDecal::TTRIANGLEFANSTRUCT,std::allocator<CDecal::TTRIANGLEFANSTRUCT> >::_Xlength
$LN105@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00142	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN102@Emplace_re:
  00147	cc		 int	 3
??$_Emplace_reallocate@ABUTTRIANGLEFANSTRUCT@CDecal@@@?$vector@UTTRIANGLEFANSTRUCT@CDecal@@V?$allocator@UTTRIANGLEFANSTRUCT@CDecal@@@std@@@std@@QAEPAUTTRIANGLEFANSTRUCT@CDecal@@QAU23@ABU23@@Z ENDP ; std::vector<CDecal::TTRIANGLEFANSTRUCT,std::allocator<CDecal::TTRIANGLEFANSTRUCT> >::_Emplace_reallocate<CDecal::TTRIANGLEFANSTRUCT const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCDecal@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCDecal@@UAEPAXI@Z PROC				; CDecal::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CDecal@@UAE@XZ	; CDecal::~CDecal
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 94 1a 00 00	 push	 6804			; 00001a94H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCDecal@@UAEPAXI@Z ENDP				; CDecal::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
;	COMDAT ?ClipPolygonAgainstPlane@CDecal@@KAKABUD3DXPLANE@@KPBUD3DXVECTOR3@@1PAU3@2@Z
_TEXT	SEGMENT
$T1 = -104						; size = 12
$T2 = -92						; size = 12
$T3 = -80						; size = 12
$T4 = -68						; size = 12
tv2112 = -56						; size = 4
tv2105 = -52						; size = 4
_c_rv4Plane$GSCopy$1$ = -48				; size = 4
_dwCurIndex$1$ = -44					; size = 4
_c_pv3Normal$GSCopy$1$ = -40				; size = 4
_c_pv3NewNormal$GSCopy$1$ = -36				; size = 4
_c_pv3Vertex$GSCopy$1$ = -32				; size = 4
_ft$1$ = -28						; size = 4
_ft$1$ = -28						; size = 4
_dwCount$1$ = -24					; size = 4
tv2113 = -17						; size = 1
_bNegative$ = -16					; size = 10
__$ArrayPad$ = -4					; size = 4
_c_rv4Plane$ = 8					; size = 4
_dwVertexCount$ = 12					; size = 4
_c_pv3Vertex$ = 16					; size = 4
_c_pv3Normal$ = 20					; size = 4
_c_pv3NewVertex$ = 24					; size = 4
_c_pv3NewNormal$ = 28					; size = 4
?ClipPolygonAgainstPlane@CDecal@@KAKABUD3DXPLANE@@KPBUD3DXVECTOR3@@1PAU3@2@Z PROC ; CDecal::ClipPolygonAgainstPlane, COMDAT

; 151  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 4d 10	 mov	 ecx, DWORD PTR _c_pv3Vertex$[ebp]
  00013	33 d2		 xor	 edx, edx
  00015	8b 45 08	 mov	 eax, DWORD PTR _c_rv4Plane$[ebp]
  00018	53		 push	 ebx
  00019	8b 5d 18	 mov	 ebx, DWORD PTR _c_pv3NewVertex$[ebp]
  0001c	56		 push	 esi

; 152  : 	bool bNegative[10];
; 153  : 
; 154  : 	// Classify vertices
; 155  : 	DWORD dwNegativeCount = 0;
; 156  : 	for (DWORD dwi = 0; dwi < dwVertexCount; ++dwi)

  0001d	8b 75 0c	 mov	 esi, DWORD PTR _dwVertexCount$[ebp]
  00020	89 4d e0	 mov	 DWORD PTR _c_pv3Vertex$GSCopy$1$[ebp], ecx
  00023	8b 4d 14	 mov	 ecx, DWORD PTR _c_pv3Normal$[ebp]
  00026	57		 push	 edi
  00027	89 4d d8	 mov	 DWORD PTR _c_pv3Normal$GSCopy$1$[ebp], ecx
  0002a	33 ff		 xor	 edi, edi
  0002c	8b 4d 1c	 mov	 ecx, DWORD PTR _c_pv3NewNormal$[ebp]
  0002f	89 45 d0	 mov	 DWORD PTR _c_rv4Plane$GSCopy$1$[ebp], eax
  00032	89 4d dc	 mov	 DWORD PTR _c_pv3NewNormal$GSCopy$1$[ebp], ecx
  00035	85 f6		 test	 esi, esi
  00037	74 56		 je	 SHORT $LN3@ClipPolygo
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 1647 :     return pP->a * pV->x + pP->b * pV->y + pP->c * pV->z + pP->d;

  00039	8b 4d e0	 mov	 ecx, DWORD PTR _c_pv3Vertex$GSCopy$1$[ebp]
  0003c	0f 57 f6	 xorps	 xmm6, xmm6
  0003f	f3 0f 10 50 04	 movss	 xmm2, DWORD PTR [eax+4]
  00044	83 c1 08	 add	 ecx, 8
  00047	f3 0f 10 18	 movss	 xmm3, DWORD PTR [eax]
  0004b	f3 0f 10 60 08	 movss	 xmm4, DWORD PTR [eax+8]
  00050	f3 0f 10 68 0c	 movss	 xmm5, DWORD PTR [eax+12]
$LL4@ClipPolygo:
  00055	0f 28 c3	 movaps	 xmm0, xmm3
  00058	0f 28 ca	 movaps	 xmm1, xmm2
  0005b	f3 0f 59 49 fc	 mulss	 xmm1, DWORD PTR [ecx-4]
  00060	f3 0f 59 41 f8	 mulss	 xmm0, DWORD PTR [ecx-8]
  00065	f3 0f 58 c8	 addss	 xmm1, xmm0
  00069	0f 28 c4	 movaps	 xmm0, xmm4
  0006c	f3 0f 59 01	 mulss	 xmm0, DWORD PTR [ecx]
  00070	f3 0f 58 c8	 addss	 xmm1, xmm0
  00074	f3 0f 58 cd	 addss	 xmm1, xmm5
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 158  : 		bool bNeg = (D3DXPlaneDotCoord(&c_rv4Plane, &c_pv3Vertex[dwi]) < 0.0F);

  00078	0f 2f f1	 comiss	 xmm6, xmm1
  0007b	0f 97 c0	 seta	 al
  0007e	83 c1 0c	 add	 ecx, 12			; 0000000cH

; 159  : 		bNegative[dwi] = bNeg;

  00081	88 44 15 f0	 mov	 BYTE PTR _bNegative$[ebp+edx], al
  00085	42		 inc	 edx

; 160  : 		dwNegativeCount += bNeg;

  00086	0f b6 c0	 movzx	 eax, al
  00089	03 f8		 add	 edi, eax
  0008b	3b d6		 cmp	 edx, esi
  0008d	72 c6		 jb	 SHORT $LL4@ClipPolygo
$LN3@ClipPolygo:

; 161  : 	}
; 162  : 
; 163  : 	// Discard this polygon if it's completely culled
; 164  : 	if (dwNegativeCount == dwVertexCount)

  0008f	33 c0		 xor	 eax, eax
  00091	3b fe		 cmp	 edi, esi
  00093	0f 84 2b 03 00
	00		 je	 $LN1@ClipPolygo

; 165  : 		return 0;
; 166  : 
; 167  : 	DWORD dwCount = 0;

  00099	33 d2		 xor	 edx, edx
  0009b	89 45 e8	 mov	 DWORD PTR _dwCount$1$[ebp], eax
  0009e	89 55 d4	 mov	 DWORD PTR _dwCurIndex$1$[ebp], edx

; 168  : 	for (DWORD dwCurIndex = 0; dwCurIndex < dwVertexCount; ++dwCurIndex)

  000a1	85 f6		 test	 esi, esi
  000a3	0f 84 1b 03 00
	00		 je	 $LN1@ClipPolygo

; 165  : 		return 0;
; 166  : 
; 167  : 	DWORD dwCount = 0;

  000a9	8b 7d d8	 mov	 edi, DWORD PTR _c_pv3Normal$GSCopy$1$[ebp]
  000ac	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  000af	89 45 c8	 mov	 DWORD PTR tv2112[ebp], eax
  000b2	8b cf		 mov	 ecx, edi
  000b4	8b 45 e0	 mov	 eax, DWORD PTR _c_pv3Vertex$GSCopy$1$[ebp]
  000b7	2b c8		 sub	 ecx, eax
  000b9	89 4d cc	 mov	 DWORD PTR tv2105[ebp], ecx
  000bc	8d 70 08	 lea	 esi, DWORD PTR [eax+8]
  000bf	90		 npad	 1
$LL7@ClipPolygo:

; 169  : 	{
; 170  : 		// dwPrevIndex is the index of the previous vertex
; 171  : 		DWORD dwPrevIndex = (dwCurIndex != 0) ? dwCurIndex - 1 : dwVertexCount - 1;
; 172  : 
; 173  : 		if (bNegative[dwCurIndex])

  000c0	85 d2		 test	 edx, edx
  000c2	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]
  000c5	0f 44 45 c8	 cmove	 eax, DWORD PTR tv2112[ebp]
  000c9	80 7c 15 f0 00	 cmp	 BYTE PTR _bNegative$[ebp+edx], 0
  000ce	8a 4c 05 f0	 mov	 cl, BYTE PTR _bNegative$[ebp+eax]
  000d2	88 4d ef	 mov	 BYTE PTR tv2113[ebp], cl
  000d5	8b 4d dc	 mov	 ecx, DWORD PTR _c_pv3NewNormal$GSCopy$1$[ebp]
  000d8	0f 84 5c 01 00
	00		 je	 $LN9@ClipPolygo

; 174  : 		{
; 175  : 			if (!bNegative[dwPrevIndex])

  000de	80 7d ef 00	 cmp	 BYTE PTR tv2113[ebp], 0
  000e2	0f 85 c6 02 00
	00		 jne	 $LN78@ClipPolygo
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 1647 :     return pP->a * pV->x + pP->b * pV->y + pP->c * pV->z + pP->d;

  000e8	8b 55 e0	 mov	 edx, DWORD PTR _c_pv3Vertex$GSCopy$1$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 179  : 				const D3DXVECTOR3& v3_1 = c_pv3Vertex[dwPrevIndex];

  000eb	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 1647 :     return pP->a * pV->x + pP->b * pV->y + pP->c * pV->z + pP->d;

  000ee	8b 45 d0	 mov	 eax, DWORD PTR _c_rv4Plane$GSCopy$1$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 181  : 				float ft = D3DXPlaneDotCoord(&c_rv4Plane, &v3_1) / (c_rv4Plane.a * (v3_1.x - v3_2.x) + c_rv4Plane.b * (v3_1.y - v3_2.y) + c_rv4Plane.c * (v3_1.z - v3_2.z));

  000f1	f3 0f 10 7e fc	 movss	 xmm7, DWORD PTR [esi-4]
  000f6	f3 0f 10 6e f8	 movss	 xmm5, DWORD PTR [esi-8]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 1647 :     return pP->a * pV->x + pP->b * pV->y + pP->c * pV->z + pP->d;

  000fb	f3 0f 10 34 8a	 movss	 xmm6, DWORD PTR [edx+ecx*4]
  00100	f3 0f 10 10	 movss	 xmm2, DWORD PTR [eax]
  00104	f3 0f 10 60 04	 movss	 xmm4, DWORD PTR [eax+4]
  00109	0f 28 ca	 movaps	 xmm1, xmm2
  0010c	f3 0f 10 44 8a
	04		 movss	 xmm0, DWORD PTR [edx+ecx*4+4]
  00112	f3 0f 10 58 08	 movss	 xmm3, DWORD PTR [eax+8]
  00117	f3 0f 59 c4	 mulss	 xmm0, xmm4
  0011b	f3 0f 59 ce	 mulss	 xmm1, xmm6
  0011f	f3 0f 58 c8	 addss	 xmm1, xmm0
  00123	f3 0f 10 44 8a
	08		 movss	 xmm0, DWORD PTR [edx+ecx*4+8]
  00129	f3 0f 59 c3	 mulss	 xmm0, xmm3
  0012d	f3 0f 58 c8	 addss	 xmm1, xmm0
  00131	f3 0f 58 48 0c	 addss	 xmm1, DWORD PTR [eax+12]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 181  : 				float ft = D3DXPlaneDotCoord(&c_rv4Plane, &v3_1) / (c_rv4Plane.a * (v3_1.x - v3_2.x) + c_rv4Plane.b * (v3_1.y - v3_2.y) + c_rv4Plane.c * (v3_1.z - v3_2.z));

  00136	8b c2		 mov	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00138	8b 55 cc	 mov	 edx, DWORD PTR tv2105[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 181  : 				float ft = D3DXPlaneDotCoord(&c_rv4Plane, &v3_1) / (c_rv4Plane.a * (v3_1.x - v3_2.x) + c_rv4Plane.b * (v3_1.y - v3_2.y) + c_rv4Plane.c * (v3_1.z - v3_2.z));

  0013b	f3 0f 10 44 88
	04		 movss	 xmm0, DWORD PTR [eax+ecx*4+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 1647 :     return pP->a * pV->x + pP->b * pV->y + pP->c * pV->z + pP->d;

  00141	f3 0f 11 4d e4	 movss	 DWORD PTR _ft$1$[ebp], xmm1
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 181  : 				float ft = D3DXPlaneDotCoord(&c_rv4Plane, &v3_1) / (c_rv4Plane.a * (v3_1.x - v3_2.x) + c_rv4Plane.b * (v3_1.y - v3_2.y) + c_rv4Plane.c * (v3_1.z - v3_2.z));

  00146	f3 0f 5c c7	 subss	 xmm0, xmm7
  0014a	0f 28 ce	 movaps	 xmm1, xmm6
  0014d	f3 0f 5c cd	 subss	 xmm1, xmm5
  00151	f3 0f 59 c4	 mulss	 xmm0, xmm4
  00155	f3 0f 10 26	 movss	 xmm4, DWORD PTR [esi]
  00159	f3 0f 59 ca	 mulss	 xmm1, xmm2
  0015d	f3 0f 58 c8	 addss	 xmm1, xmm0
  00161	f3 0f 10 44 88
	08		 movss	 xmm0, DWORD PTR [eax+ecx*4+8]
  00167	f3 0f 5c c4	 subss	 xmm0, xmm4
  0016b	f3 0f 59 c3	 mulss	 xmm0, xmm3

; 182  :  				c_pv3NewVertex[dwCount] = v3_1 * (1.0f - ft) + v3_2 * ft;

  0016f	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@3f800000
  00177	f3 0f 58 c8	 addss	 xmm1, xmm0
  0017b	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _ft$1$[ebp]
  00180	f3 0f 5e c1	 divss	 xmm0, xmm1
  00184	f3 0f 5c d8	 subss	 xmm3, xmm0
  00188	f3 0f 11 45 e4	 movss	 DWORD PTR _ft$1$[ebp], xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  0018d	0f 28 d3	 movaps	 xmm2, xmm3
  00190	0f 28 cb	 movaps	 xmm1, xmm3
  00193	f3 0f 59 4c 88
	04		 mulss	 xmm1, DWORD PTR [eax+ecx*4+4]
  00199	f3 0f 59 d6	 mulss	 xmm2, xmm6
  0019d	0f 28 f0	 movaps	 xmm6, xmm0
  001a0	0f 28 c3	 movaps	 xmm0, xmm3
  001a3	f3 0f 59 ee	 mulss	 xmm5, xmm6
  001a7	f3 0f 59 44 88
	08		 mulss	 xmm0, DWORD PTR [eax+ecx*4+8]
  001ad	f3 0f 59 fe	 mulss	 xmm7, xmm6

; 182  :     z = fz;

  001b1	f3 0f 58 d5	 addss	 xmm2, xmm5

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  001b5	f3 0f 59 e6	 mulss	 xmm4, xmm6

; 180  :     x = fx;

  001b9	f3 0f 58 cf	 addss	 xmm1, xmm7

; 181  :     y = fy;

  001bd	f3 0f 58 c4	 addss	 xmm0, xmm4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 182  :  				c_pv3NewVertex[dwCount] = v3_1 * (1.0f - ft) + v3_2 * ft;

  001c1	0f 14 d1	 unpcklps xmm2, xmm1
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  001c4	0f 28 ce	 movaps	 xmm1, xmm6
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 182  :  				c_pv3NewVertex[dwCount] = v3_1 * (1.0f - ft) + v3_2 * ft;

  001c7	66 0f d6 13	 movq	 QWORD PTR [ebx], xmm2
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  001cb	0f 28 d3	 movaps	 xmm2, xmm3

; 182  :     z = fz;

  001ce	f3 0f 11 45 c4	 movss	 DWORD PTR $T4[ebp+8], xmm0

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  001d3	0f 28 c6	 movaps	 xmm0, xmm6
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 182  :  				c_pv3NewVertex[dwCount] = v3_1 * (1.0f - ft) + v3_2 * ft;

  001d6	8b 45 c4	 mov	 eax, DWORD PTR $T4[ebp+8]
  001d9	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 186  : 				++dwCount;

  001dc	83 c3 0c	 add	 ebx, 12			; 0000000cH
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  001df	8b 45 d8	 mov	 eax, DWORD PTR _c_pv3Normal$GSCopy$1$[ebp]
  001e2	f3 0f 59 07	 mulss	 xmm0, DWORD PTR [edi]
  001e6	f3 0f 59 4f 04	 mulss	 xmm1, DWORD PTR [edi+4]
  001eb	f3 0f 59 14 88	 mulss	 xmm2, DWORD PTR [eax+ecx*4]
  001f0	f3 0f 59 34 16	 mulss	 xmm6, DWORD PTR [esi+edx]

; 182  :     z = fz;

  001f5	f3 0f 58 d0	 addss	 xmm2, xmm0

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  001f9	0f 28 c3	 movaps	 xmm0, xmm3
  001fc	f3 0f 59 44 88
	04		 mulss	 xmm0, DWORD PTR [eax+ecx*4+4]
  00202	f3 0f 59 5c 88
	08		 mulss	 xmm3, DWORD PTR [eax+ecx*4+8]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 185  :  				c_pv3NewNormal[dwCount] = v3_n1 * (1.0f - ft) + v3_n2 * ft;

  00208	8b 4d dc	 mov	 ecx, DWORD PTR _c_pv3NewNormal$GSCopy$1$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 180  :     x = fx;

  0020b	f3 0f 58 c8	 addss	 xmm1, xmm0

; 181  :     y = fy;

  0020f	f3 0f 58 f3	 addss	 xmm6, xmm3
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 185  :  				c_pv3NewNormal[dwCount] = v3_n1 * (1.0f - ft) + v3_n2 * ft;

  00213	0f 14 d1	 unpcklps xmm2, xmm1
  00216	66 0f d6 11	 movq	 QWORD PTR [ecx], xmm2
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0021a	f3 0f 11 75 b8	 movss	 DWORD PTR $T3[ebp+8], xmm6
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 185  :  				c_pv3NewNormal[dwCount] = v3_n1 * (1.0f - ft) + v3_n2 * ft;

  0021f	8b 45 b8	 mov	 eax, DWORD PTR $T3[ebp+8]
  00222	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 186  : 				++dwCount;

  00225	8b 45 e8	 mov	 eax, DWORD PTR _dwCount$1$[ebp]
  00228	40		 inc	 eax
  00229	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0022c	89 45 e8	 mov	 DWORD PTR _dwCount$1$[ebp], eax

; 187  : 			}
; 188  : 		}

  0022f	8b 55 d4	 mov	 edx, DWORD PTR _dwCurIndex$1$[ebp]
  00232	89 4d dc	 mov	 DWORD PTR _c_pv3NewNormal$GSCopy$1$[ebp], ecx
  00235	e9 77 01 00 00	 jmp	 $LN5@ClipPolygo
$LN9@ClipPolygo:

; 189  : 		else
; 190  : 		{
; 191  : 			if (bNegative[dwPrevIndex])

  0023a	80 7d ef 00	 cmp	 BYTE PTR tv2113[ebp], 0
  0023e	0f 84 3c 01 00
	00		 je	 $LN12@ClipPolygo
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 1647 :     return pP->a * pV->x + pP->b * pV->y + pP->c * pV->z + pP->d;

  00244	f3 0f 10 76 f8	 movss	 xmm6, DWORD PTR [esi-8]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 196  : 				const D3DXVECTOR3& v3_2 = c_pv3Vertex[dwPrevIndex];

  00249	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 1647 :     return pP->a * pV->x + pP->b * pV->y + pP->c * pV->z + pP->d;

  0024c	8b 45 d0	 mov	 eax, DWORD PTR _c_rv4Plane$GSCopy$1$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 197  : 				float ft = D3DXPlaneDotCoord(&c_rv4Plane, &v3_1) / (c_rv4Plane.a * (v3_1.x - v3_2.x) + c_rv4Plane.b * (v3_1.y - v3_2.y) + c_rv4Plane.c * (v3_1.z - v3_2.z));

  0024f	8b 55 e0	 mov	 edx, DWORD PTR _c_pv3Vertex$GSCopy$1$[ebp]

; 202  : 				++dwCount;

  00252	ff 45 e8	 inc	 DWORD PTR _dwCount$1$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 1647 :     return pP->a * pV->x + pP->b * pV->y + pP->c * pV->z + pP->d;

  00255	f3 0f 10 10	 movss	 xmm2, DWORD PTR [eax]
  00259	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0025e	0f 28 ca	 movaps	 xmm1, xmm2
  00261	f3 0f 59 46 fc	 mulss	 xmm0, DWORD PTR [esi-4]
  00266	f3 0f 10 58 08	 movss	 xmm3, DWORD PTR [eax+8]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 197  : 				float ft = D3DXPlaneDotCoord(&c_rv4Plane, &v3_1) / (c_rv4Plane.a * (v3_1.x - v3_2.x) + c_rv4Plane.b * (v3_1.y - v3_2.y) + c_rv4Plane.c * (v3_1.z - v3_2.z));

  0026b	f3 0f 10 7c 8a
	04		 movss	 xmm7, DWORD PTR [edx+ecx*4+4]
  00271	f3 0f 10 2c 8a	 movss	 xmm5, DWORD PTR [edx+ecx*4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 1647 :     return pP->a * pV->x + pP->b * pV->y + pP->c * pV->z + pP->d;

  00276	f3 0f 59 ce	 mulss	 xmm1, xmm6
  0027a	f3 0f 58 c8	 addss	 xmm1, xmm0
  0027e	0f 28 c3	 movaps	 xmm0, xmm3
  00281	f3 0f 59 06	 mulss	 xmm0, DWORD PTR [esi]
  00285	f3 0f 58 c8	 addss	 xmm1, xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 197  : 				float ft = D3DXPlaneDotCoord(&c_rv4Plane, &v3_1) / (c_rv4Plane.a * (v3_1.x - v3_2.x) + c_rv4Plane.b * (v3_1.y - v3_2.y) + c_rv4Plane.c * (v3_1.z - v3_2.z));

  00289	f3 0f 10 46 fc	 movss	 xmm0, DWORD PTR [esi-4]
  0028e	f3 0f 5c c7	 subss	 xmm0, xmm7
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 1647 :     return pP->a * pV->x + pP->b * pV->y + pP->c * pV->z + pP->d;

  00292	f3 0f 58 48 0c	 addss	 xmm1, DWORD PTR [eax+12]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 197  : 				float ft = D3DXPlaneDotCoord(&c_rv4Plane, &v3_1) / (c_rv4Plane.a * (v3_1.x - v3_2.x) + c_rv4Plane.b * (v3_1.y - v3_2.y) + c_rv4Plane.c * (v3_1.z - v3_2.z));

  00297	f3 0f 59 40 04	 mulss	 xmm0, DWORD PTR [eax+4]
  0029c	8b c2		 mov	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  0029e	8b 55 cc	 mov	 edx, DWORD PTR tv2105[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 197  : 				float ft = D3DXPlaneDotCoord(&c_rv4Plane, &v3_1) / (c_rv4Plane.a * (v3_1.x - v3_2.x) + c_rv4Plane.b * (v3_1.y - v3_2.y) + c_rv4Plane.c * (v3_1.z - v3_2.z));

  002a1	f3 0f 10 64 88
	08		 movss	 xmm4, DWORD PTR [eax+ecx*4+8]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 1647 :     return pP->a * pV->x + pP->b * pV->y + pP->c * pV->z + pP->d;

  002a7	f3 0f 11 4d e4	 movss	 DWORD PTR _ft$1$[ebp], xmm1
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 197  : 				float ft = D3DXPlaneDotCoord(&c_rv4Plane, &v3_1) / (c_rv4Plane.a * (v3_1.x - v3_2.x) + c_rv4Plane.b * (v3_1.y - v3_2.y) + c_rv4Plane.c * (v3_1.z - v3_2.z));

  002ac	0f 28 ce	 movaps	 xmm1, xmm6
  002af	f3 0f 5c cd	 subss	 xmm1, xmm5
  002b3	f3 0f 59 ca	 mulss	 xmm1, xmm2
  002b7	f3 0f 58 c8	 addss	 xmm1, xmm0
  002bb	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  002bf	f3 0f 5c c4	 subss	 xmm0, xmm4
  002c3	f3 0f 59 c3	 mulss	 xmm0, xmm3

; 198  :  				c_pv3NewVertex[dwCount] = v3_1 * (1.0f - ft) + v3_2 * ft;

  002c7	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@3f800000
  002cf	f3 0f 58 c8	 addss	 xmm1, xmm0
  002d3	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _ft$1$[ebp]
  002d8	f3 0f 5e c1	 divss	 xmm0, xmm1
  002dc	f3 0f 5c d8	 subss	 xmm3, xmm0
  002e0	f3 0f 11 45 e4	 movss	 DWORD PTR _ft$1$[ebp], xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  002e5	0f 28 d3	 movaps	 xmm2, xmm3
  002e8	0f 28 cb	 movaps	 xmm1, xmm3
  002eb	f3 0f 59 4e fc	 mulss	 xmm1, DWORD PTR [esi-4]
  002f0	f3 0f 59 d6	 mulss	 xmm2, xmm6
  002f4	0f 28 f0	 movaps	 xmm6, xmm0
  002f7	0f 28 c3	 movaps	 xmm0, xmm3
  002fa	f3 0f 59 ee	 mulss	 xmm5, xmm6
  002fe	f3 0f 59 06	 mulss	 xmm0, DWORD PTR [esi]
  00302	f3 0f 59 fe	 mulss	 xmm7, xmm6

; 182  :     z = fz;

  00306	f3 0f 58 d5	 addss	 xmm2, xmm5

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  0030a	f3 0f 59 e6	 mulss	 xmm4, xmm6

; 180  :     x = fx;

  0030e	f3 0f 58 cf	 addss	 xmm1, xmm7

; 181  :     y = fy;

  00312	f3 0f 58 c4	 addss	 xmm0, xmm4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 198  :  				c_pv3NewVertex[dwCount] = v3_1 * (1.0f - ft) + v3_2 * ft;

  00316	0f 14 d1	 unpcklps xmm2, xmm1
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00319	0f 28 ce	 movaps	 xmm1, xmm6
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 198  :  				c_pv3NewVertex[dwCount] = v3_1 * (1.0f - ft) + v3_2 * ft;

  0031c	66 0f d6 13	 movq	 QWORD PTR [ebx], xmm2
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00320	0f 28 d3	 movaps	 xmm2, xmm3

; 182  :     z = fz;

  00323	f3 0f 11 45 ac	 movss	 DWORD PTR $T2[ebp+8], xmm0

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00328	0f 28 c6	 movaps	 xmm0, xmm6
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 198  :  				c_pv3NewVertex[dwCount] = v3_1 * (1.0f - ft) + v3_2 * ft;

  0032b	8b 45 ac	 mov	 eax, DWORD PTR $T2[ebp+8]
  0032e	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 202  : 				++dwCount;

  00331	83 c3 0c	 add	 ebx, 12			; 0000000cH
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00334	8b 45 d8	 mov	 eax, DWORD PTR _c_pv3Normal$GSCopy$1$[ebp]
  00337	f3 0f 59 17	 mulss	 xmm2, DWORD PTR [edi]
  0033b	f3 0f 59 04 88	 mulss	 xmm0, DWORD PTR [eax+ecx*4]
  00340	f3 0f 59 4c 88
	04		 mulss	 xmm1, DWORD PTR [eax+ecx*4+4]
  00346	f3 0f 59 74 88
	08		 mulss	 xmm6, DWORD PTR [eax+ecx*4+8]

; 182  :     z = fz;

  0034c	f3 0f 58 d0	 addss	 xmm2, xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 201  :  				c_pv3NewNormal[dwCount] = v3_n1 * (1.0f - ft) + v3_n2 * ft;

  00350	8b 4d dc	 mov	 ecx, DWORD PTR _c_pv3NewNormal$GSCopy$1$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00353	0f 28 c3	 movaps	 xmm0, xmm3
  00356	f3 0f 59 1c 16	 mulss	 xmm3, DWORD PTR [esi+edx]
  0035b	8b 55 d4	 mov	 edx, DWORD PTR _dwCurIndex$1$[ebp]
  0035e	f3 0f 59 47 04	 mulss	 xmm0, DWORD PTR [edi+4]

; 181  :     y = fy;

  00363	f3 0f 58 de	 addss	 xmm3, xmm6
  00367	f3 0f 58 c8	 addss	 xmm1, xmm0

; 182  :     z = fz;

  0036b	f3 0f 11 5d a0	 movss	 DWORD PTR $T1[ebp+8], xmm3
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 201  :  				c_pv3NewNormal[dwCount] = v3_n1 * (1.0f - ft) + v3_n2 * ft;

  00370	8b 45 a0	 mov	 eax, DWORD PTR $T1[ebp+8]
  00373	0f 14 d1	 unpcklps xmm2, xmm1
  00376	66 0f d6 11	 movq	 QWORD PTR [ecx], xmm2
  0037a	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 202  : 				++dwCount;

  0037d	83 c1 0c	 add	 ecx, 12			; 0000000cH
$LN12@ClipPolygo:

; 203  : 			}
; 204  : 
; 205  : 			// Include current vertex
; 206  :  			c_pv3NewVertex[dwCount] = c_pv3Vertex[dwCurIndex];

  00380	f3 0f 7e 46 f8	 movq	 xmm0, QWORD PTR [esi-8]
  00385	66 0f d6 03	 movq	 QWORD PTR [ebx], xmm0
  00389	8b 06		 mov	 eax, DWORD PTR [esi]
  0038b	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 207  :  			c_pv3NewNormal[dwCount] = c_pv3Normal[dwCurIndex];
; 208  : 			++dwCount;

  0038e	83 c3 0c	 add	 ebx, 12			; 0000000cH
  00391	f3 0f 7e 07	 movq	 xmm0, QWORD PTR [edi]
  00395	66 0f d6 01	 movq	 QWORD PTR [ecx], xmm0
  00399	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0039c	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0039f	8b 45 e8	 mov	 eax, DWORD PTR _dwCount$1$[ebp]
  003a2	40		 inc	 eax
  003a3	83 c1 0c	 add	 ecx, 12			; 0000000cH
  003a6	89 45 e8	 mov	 DWORD PTR _dwCount$1$[ebp], eax
  003a9	89 4d dc	 mov	 DWORD PTR _c_pv3NewNormal$GSCopy$1$[ebp], ecx
  003ac	eb 03		 jmp	 SHORT $LN5@ClipPolygo
$LN78@ClipPolygo:

; 174  : 		{
; 175  : 			if (!bNegative[dwPrevIndex])

  003ae	8b 45 e8	 mov	 eax, DWORD PTR _dwCount$1$[ebp]
$LN5@ClipPolygo:

; 168  : 	for (DWORD dwCurIndex = 0; dwCurIndex < dwVertexCount; ++dwCurIndex)

  003b1	42		 inc	 edx
  003b2	83 c6 0c	 add	 esi, 12			; 0000000cH
  003b5	83 c7 0c	 add	 edi, 12			; 0000000cH
  003b8	89 55 d4	 mov	 DWORD PTR _dwCurIndex$1$[ebp], edx
  003bb	3b 55 0c	 cmp	 edx, DWORD PTR _dwVertexCount$[ebp]
  003be	0f 82 fc fc ff
	ff		 jb	 $LL7@ClipPolygo
$LN1@ClipPolygo:

; 209  : 		}
; 210  : 	}
; 211  : 
; 212  : 	// Return number of vertices in clipped polygon
; 213  : 	return dwCount;
; 214  : }

  003c4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003c7	5f		 pop	 edi
  003c8	5e		 pop	 esi
  003c9	33 cd		 xor	 ecx, ebp
  003cb	5b		 pop	 ebx
  003cc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003d1	8b e5		 mov	 esp, ebp
  003d3	5d		 pop	 ebp
  003d4	c3		 ret	 0
?ClipPolygonAgainstPlane@CDecal@@KAKABUD3DXPLANE@@KPBUD3DXVECTOR3@@1PAU3@2@Z ENDP ; CDecal::ClipPolygonAgainstPlane
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
;	COMDAT ?ClipPolygon@CDecal@@IBEKKPBUD3DXVECTOR3@@0PAU2@1@Z
_TEXT	SEGMENT
_v3TempVertex$ = -220					; size = 108
_v3TempNormal$ = -112					; size = 108
__$ArrayPad$ = -4					; size = 4
_dwVertexCount$ = 8					; size = 4
_c_pv3Vertex$ = 12					; size = 4
_c_pv3Normal$ = 16					; size = 4
_c_pv3NewVertex$ = 20					; size = 4
_c_pv3NewNormal$ = 24					; size = 4
?ClipPolygon@CDecal@@IBEKKPBUD3DXVECTOR3@@0PAU2@1@Z PROC ; CDecal::ClipPolygon, COMDAT
; _this$ = ecx

; 116  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	8b 45 10	 mov	 eax, DWORD PTR _c_pv3Normal$[ebp]
  00016	8b 55 0c	 mov	 edx, DWORD PTR _c_pv3Vertex$[ebp]
  00019	53		 push	 ebx
  0001a	8b 5d 18	 mov	 ebx, DWORD PTR _c_pv3NewNormal$[ebp]
  0001d	56		 push	 esi
  0001e	57		 push	 edi
  0001f	8b 7d 14	 mov	 edi, DWORD PTR _c_pv3NewVertex$[ebp]
  00022	8b f1		 mov	 esi, ecx

; 117  : 	D3DXVECTOR3		v3TempVertex[9];
; 118  : 	D3DXVECTOR3		v3TempNormal[9];
; 119  : 
; 120  : 	// Clip against all six planes
; 121  : 	DWORD dwCount = ClipPolygonAgainstPlane(m_v4LeftPlane, dwVertexCount, c_pv3Vertex, c_pv3Normal, v3TempVertex, v3TempNormal);

  00024	8d 4d 90	 lea	 ecx, DWORD PTR _v3TempNormal$[ebp]
  00027	51		 push	 ecx
  00028	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR _v3TempVertex$[ebp]
  0002e	51		 push	 ecx
  0002f	50		 push	 eax
  00030	52		 push	 edx
  00031	ff 75 08	 push	 DWORD PTR _dwVertexCount$[ebp]
  00034	8d 46 1c	 lea	 eax, DWORD PTR [esi+28]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?ClipPolygonAgainstPlane@CDecal@@KAKABUD3DXPLANE@@KPBUD3DXVECTOR3@@1PAU3@2@Z ; CDecal::ClipPolygonAgainstPlane
  0003d	83 c4 18	 add	 esp, 24			; 00000018H

; 122  : 	if (dwCount != 0)

  00040	85 c0		 test	 eax, eax
  00042	0f 84 92 00 00
	00		 je	 $LN6@ClipPolygo

; 123  : 	{
; 124  : 		dwCount = ClipPolygonAgainstPlane(m_v4RightPlane, dwCount, v3TempVertex, v3TempNormal, c_pv3NewVertex, c_pv3NewNormal);

  00048	53		 push	 ebx
  00049	57		 push	 edi
  0004a	8d 4d 90	 lea	 ecx, DWORD PTR _v3TempNormal$[ebp]
  0004d	51		 push	 ecx
  0004e	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR _v3TempVertex$[ebp]
  00054	51		 push	 ecx
  00055	50		 push	 eax
  00056	8d 46 2c	 lea	 eax, DWORD PTR [esi+44]
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?ClipPolygonAgainstPlane@CDecal@@KAKABUD3DXPLANE@@KPBUD3DXVECTOR3@@1PAU3@2@Z ; CDecal::ClipPolygonAgainstPlane
  0005f	83 c4 18	 add	 esp, 24			; 00000018H

; 125  : 		if (dwCount != 0)

  00062	85 c0		 test	 eax, eax
  00064	74 74		 je	 SHORT $LN6@ClipPolygo

; 126  : 		{
; 127  : 			dwCount = ClipPolygonAgainstPlane(m_v4BottomPlane, dwCount, c_pv3NewVertex, c_pv3NewNormal, v3TempVertex, v3TempNormal);

  00066	8d 4d 90	 lea	 ecx, DWORD PTR _v3TempNormal$[ebp]
  00069	51		 push	 ecx
  0006a	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR _v3TempVertex$[ebp]
  00070	51		 push	 ecx
  00071	53		 push	 ebx
  00072	57		 push	 edi
  00073	50		 push	 eax
  00074	8d 46 3c	 lea	 eax, DWORD PTR [esi+60]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?ClipPolygonAgainstPlane@CDecal@@KAKABUD3DXPLANE@@KPBUD3DXVECTOR3@@1PAU3@2@Z ; CDecal::ClipPolygonAgainstPlane
  0007d	83 c4 18	 add	 esp, 24			; 00000018H

; 128  : 			if (dwCount != 0)

  00080	85 c0		 test	 eax, eax
  00082	74 56		 je	 SHORT $LN6@ClipPolygo

; 129  : 			{
; 130  : 				dwCount = ClipPolygonAgainstPlane(m_v4TopPlane, dwCount, v3TempVertex, v3TempNormal, c_pv3NewVertex, c_pv3NewNormal);

  00084	53		 push	 ebx
  00085	57		 push	 edi
  00086	8d 4d 90	 lea	 ecx, DWORD PTR _v3TempNormal$[ebp]
  00089	51		 push	 ecx
  0008a	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR _v3TempVertex$[ebp]
  00090	51		 push	 ecx
  00091	50		 push	 eax
  00092	8d 46 4c	 lea	 eax, DWORD PTR [esi+76]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ?ClipPolygonAgainstPlane@CDecal@@KAKABUD3DXPLANE@@KPBUD3DXVECTOR3@@1PAU3@2@Z ; CDecal::ClipPolygonAgainstPlane
  0009b	83 c4 18	 add	 esp, 24			; 00000018H

; 131  : 				if (dwCount != 0)

  0009e	85 c0		 test	 eax, eax
  000a0	74 38		 je	 SHORT $LN6@ClipPolygo

; 132  : 				{
; 133  : 					dwCount = ClipPolygonAgainstPlane(m_v4BackPlane, dwCount, c_pv3NewVertex, c_pv3NewNormal, v3TempVertex, v3TempNormal);

  000a2	8d 4d 90	 lea	 ecx, DWORD PTR _v3TempNormal$[ebp]
  000a5	51		 push	 ecx
  000a6	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR _v3TempVertex$[ebp]
  000ac	51		 push	 ecx
  000ad	53		 push	 ebx
  000ae	57		 push	 edi
  000af	50		 push	 eax
  000b0	8d 46 6c	 lea	 eax, DWORD PTR [esi+108]
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ?ClipPolygonAgainstPlane@CDecal@@KAKABUD3DXPLANE@@KPBUD3DXVECTOR3@@1PAU3@2@Z ; CDecal::ClipPolygonAgainstPlane
  000b9	83 c4 18	 add	 esp, 24			; 00000018H

; 134  : 					if (dwCount != 0)

  000bc	85 c0		 test	 eax, eax
  000be	74 1a		 je	 SHORT $LN6@ClipPolygo

; 135  : 					{
; 136  : 						dwCount = ClipPolygonAgainstPlane(m_v4FrontPlane, dwCount, v3TempVertex, v3TempNormal, c_pv3NewVertex, c_pv3NewNormal);

  000c0	53		 push	 ebx
  000c1	57		 push	 edi
  000c2	8d 4d 90	 lea	 ecx, DWORD PTR _v3TempNormal$[ebp]
  000c5	51		 push	 ecx
  000c6	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR _v3TempVertex$[ebp]
  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	8d 46 5c	 lea	 eax, DWORD PTR [esi+92]
  000d1	50		 push	 eax
  000d2	e8 00 00 00 00	 call	 ?ClipPolygonAgainstPlane@CDecal@@KAKABUD3DXPLANE@@KPBUD3DXVECTOR3@@1PAU3@2@Z ; CDecal::ClipPolygonAgainstPlane
  000d7	83 c4 18	 add	 esp, 24			; 00000018H
$LN6@ClipPolygo:

; 137  : 					}
; 138  : 				}
; 139  : 			}
; 140  : 		}
; 141  : 	}
; 142  : 	return dwCount;
; 143  : }

  000da	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000dd	5f		 pop	 edi
  000de	5e		 pop	 esi
  000df	33 cd		 xor	 ecx, ebp
  000e1	5b		 pop	 ebx
  000e2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e7	8b e5		 mov	 esp, ebp
  000e9	5d		 pop	 ebp
  000ea	c2 14 00	 ret	 20			; 00000014H
?ClipPolygon@CDecal@@IBEKKPBUD3DXVECTOR3@@0PAU2@1@Z ENDP ; CDecal::ClipPolygon
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_math.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_math.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
;	COMDAT ?ClipMesh@CDecal@@IAEXKPBUD3DXVECTOR3@@0@Z
_TEXT	SEGMENT
_this$GSCopy$1$ = -240					; size = 4
tv1128 = -236						; size = 4
tv1122 = -236						; size = 4
_v3NewNormal$ = -232					; size = 108
_v3NewVertex$ = -120					; size = 108
__$ArrayPad$ = -4					; size = 4
_dwPrimitiveCount$ = 8					; size = 4
_c_pv3Vertex$ = 12					; size = 4
_c_pv3Normal$ = 16					; size = 4
?ClipMesh@CDecal@@IAEXKPBUD3DXVECTOR3@@0@Z PROC		; CDecal::ClipMesh, COMDAT
; _this$ = ecx

; 45   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	81 ec f4 00 00
	00		 sub	 esp, 244		; 000000f4H
  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00011	33 c4		 xor	 eax, esp
  00013	89 84 24 f0 00
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+244], eax
  0001a	53		 push	 ebx
  0001b	56		 push	 esi
  0001c	8b 75 0c	 mov	 esi, DWORD PTR _c_pv3Vertex$[ebp]

; 46   : 	D3DXVECTOR3		v3NewVertex[9];
; 47   : 	D3DXVECTOR3		v3NewNormal[9];
; 48   : 
; 49   : 	// Clip one triangle at a time
; 50   : 	for(DWORD dwi = 0; dwi < dwPrimitiveCount; ++dwi)

  0001f	33 db		 xor	 ebx, ebx
  00021	57		 push	 edi
  00022	89 4c 24 10	 mov	 DWORD PTR _this$GSCopy$1$[esp+256], ecx
  00026	39 5d 08	 cmp	 DWORD PTR _dwPrimitiveCount$[ebp], ebx
  00029	0f 86 c8 01 00
	00		 jbe	 $LN47@ClipMesh
  0002f	8b 7d 10	 mov	 edi, DWORD PTR _c_pv3Normal$[ebp]
  00032	83 c7 18	 add	 edi, 24			; 00000018H
  00035	83 c6 20	 add	 esi, 32			; 00000020H
  00038	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL4@ClipMesh:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00040	f3 0f 10 66 ec	 movss	 xmm4, DWORD PTR [esi-20]
  00045	f3 0f 5c 66 e0	 subss	 xmm4, DWORD PTR [esi-32]
  0004a	f3 0f 10 76 f4	 movss	 xmm6, DWORD PTR [esi-12]
  0004f	f3 0f 5c 76 e8	 subss	 xmm6, DWORD PTR [esi-24]
  00054	f3 0f 10 56 f0	 movss	 xmm2, DWORD PTR [esi-16]
  00059	f3 0f 10 1e	 movss	 xmm3, DWORD PTR [esi]
  0005d	f3 0f 5c 5e e8	 subss	 xmm3, DWORD PTR [esi-24]
  00062	f3 0f 5c 56 e4	 subss	 xmm2, DWORD PTR [esi-28]
  00067	f3 0f 10 6e fc	 movss	 xmm5, DWORD PTR [esi-4]

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  0006c	0f 28 c6	 movaps	 xmm0, xmm6

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0006f	f3 0f 5c 6e e4	 subss	 xmm5, DWORD PTR [esi-28]
  00074	f3 0f 10 7e f8	 movss	 xmm7, DWORD PTR [esi-8]
  00079	f3 0f 5c 7e e0	 subss	 xmm7, DWORD PTR [esi-32]
  0007e	f3 0f 11 64 24
	14		 movss	 DWORD PTR tv1122[esp+256], xmm4

; 182  :     z = fz;

  00084	0f 28 e2	 movaps	 xmm4, xmm2
  00087	f3 0f 59 e3	 mulss	 xmm4, xmm3

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  0008b	f3 0f 59 c5	 mulss	 xmm0, xmm5
  0008f	f3 0f 59 f7	 mulss	 xmm6, xmm7
  00093	f3 0f 5c e0	 subss	 xmm4, xmm0

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  00097	f3 0f 59 d7	 mulss	 xmm2, xmm7
  0009b	f3 0f 10 44 24
	14		 movss	 xmm0, DWORD PTR tv1122[esp+256]
  000a1	f3 0f 59 c3	 mulss	 xmm0, xmm3
  000a5	f3 0f 10 5c 24
	14		 movss	 xmm3, DWORD PTR tv1122[esp+256]

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  000ab	0f 28 cc	 movaps	 xmm1, xmm4
  000ae	f3 0f 59 49 10	 mulss	 xmm1, DWORD PTR [ecx+16]

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  000b3	f3 0f 5c f0	 subss	 xmm6, xmm0
  000b7	f3 0f 59 dd	 mulss	 xmm3, xmm5

; 1239 :     return sqrtf(pV->x * pV->x + pV->y * pV->y + pV->z * pV->z);

  000bb	f3 0f 59 e4	 mulss	 xmm4, xmm4

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  000bf	f3 0f 5c da	 subss	 xmm3, xmm2

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  000c3	0f 28 c6	 movaps	 xmm0, xmm6
  000c6	f3 0f 59 f6	 mulss	 xmm6, xmm6
  000ca	f3 0f 59 41 14	 mulss	 xmm0, DWORD PTR [ecx+20]

; 1239 :     return sqrtf(pV->x * pV->x + pV->y * pV->y + pV->z * pV->z);

  000cf	f3 0f 58 f4	 addss	 xmm6, xmm4

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  000d3	f3 0f 58 c8	 addss	 xmm1, xmm0
  000d7	0f 28 c3	 movaps	 xmm0, xmm3
  000da	f3 0f 59 41 18	 mulss	 xmm0, DWORD PTR [ecx+24]

; 1239 :     return sqrtf(pV->x * pV->x + pV->y * pV->y + pV->z * pV->z);

  000df	f3 0f 59 db	 mulss	 xmm3, xmm3

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  000e3	f3 0f 58 c8	 addss	 xmm1, xmm0

; 1239 :     return sqrtf(pV->x * pV->x + pV->y * pV->y + pV->z * pV->z);

  000e7	f3 0f 58 f3	 addss	 xmm6, xmm3

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  000eb	f3 0f 11 4c 24
	14		 movss	 DWORD PTR tv1128[esp+256], xmm1
  000f1	0f 57 c9	 xorps	 xmm1, xmm1
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_math.h

; 758  :             return (float)sqrt(_X);

  000f4	0f 5a c6	 cvtps2pd xmm0, xmm6
  000f7	66 0f 2e c8	 ucomisd xmm1, xmm0
  000fb	77 06		 ja	 SHORT $LN49@ClipMesh
  000fd	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  00101	eb 05		 jmp	 SHORT $LN50@ClipMesh
$LN49@ClipMesh:
  00103	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN50@ClipMesh:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 58   : 		if (D3DXVec3Dot(&m_v3Normal, &v3Cross) > ( m_cfDecalEpsilon ) * D3DXVec3Length(&v3Cross))

  00108	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$GSCopy$1$[esp+256]
  0010c	f3 0f 10 4c 24
	14		 movss	 xmm1, DWORD PTR tv1128[esp+256]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_math.h

; 758  :             return (float)sqrt(_X);

  00112	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 58   : 		if (D3DXVec3Dot(&m_v3Normal, &v3Cross) > ( m_cfDecalEpsilon ) * D3DXVec3Length(&v3Cross))

  00116	f3 0f 59 81 90
	1a 00 00	 mulss	 xmm0, DWORD PTR [ecx+6800]
  0011e	0f 2f c8	 comiss	 xmm1, xmm0
  00121	0f 86 c0 00 00
	00		 jbe	 $LN2@ClipMesh

; 59   : 		{
; 60   : 			v3NewVertex[0] = v3_1;

  00127	8b 46 e8	 mov	 eax, DWORD PTR [esi-24]
  0012a	f3 0f 7e 46 e0	 movq	 xmm0, QWORD PTR [esi-32]
  0012f	89 84 24 90 00
	00 00		 mov	 DWORD PTR _v3NewVertex$[esp+264], eax

; 61   : 			v3NewVertex[1] = v3_2;

  00136	8b 46 f4	 mov	 eax, DWORD PTR [esi-12]
  00139	89 84 24 9c 00
	00 00		 mov	 DWORD PTR _v3NewVertex$[esp+276], eax

; 62   : 			v3NewVertex[2] = v3_3;

  00140	8b 06		 mov	 eax, DWORD PTR [esi]
  00142	89 84 24 a8 00
	00 00		 mov	 DWORD PTR _v3NewVertex$[esp+288], eax

; 63   : 
; 64   : 			v3NewNormal[0] = c_pv3Normal[3 * dwi];

  00149	8b 47 f0	 mov	 eax, DWORD PTR [edi-16]
  0014c	89 44 24 20	 mov	 DWORD PTR _v3NewNormal$[esp+264], eax

; 65   : 			v3NewNormal[1] = c_pv3Normal[3 * dwi + 1];

  00150	8b 47 fc	 mov	 eax, DWORD PTR [edi-4]
  00153	89 44 24 2c	 mov	 DWORD PTR _v3NewNormal$[esp+276], eax

; 66   : 			v3NewNormal[2] = c_pv3Normal[3 * dwi + 2];

  00157	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0015a	66 0f d6 84 24
	88 00 00 00	 movq	 QWORD PTR _v3NewVertex$[esp+256], xmm0
  00163	f3 0f 7e 46 ec	 movq	 xmm0, QWORD PTR [esi-20]
  00168	89 44 24 38	 mov	 DWORD PTR _v3NewNormal$[esp+288], eax

; 67   : 
; 68   : 			DWORD dwCount = ClipPolygon(3, v3NewVertex, v3NewNormal, v3NewVertex, v3NewNormal);

  0016c	8d 44 24 18	 lea	 eax, DWORD PTR _v3NewNormal$[esp+256]
  00170	50		 push	 eax
  00171	66 0f d6 84 24
	98 00 00 00	 movq	 QWORD PTR _v3NewVertex$[esp+272], xmm0
  0017a	8d 84 24 8c 00
	00 00		 lea	 eax, DWORD PTR _v3NewVertex$[esp+260]
  00181	f3 0f 7e 46 f8	 movq	 xmm0, QWORD PTR [esi-8]
  00186	50		 push	 eax
  00187	66 0f d6 84 24
	a8 00 00 00	 movq	 QWORD PTR _v3NewVertex$[esp+288], xmm0
  00190	8d 44 24 20	 lea	 eax, DWORD PTR _v3NewNormal$[esp+264]
  00194	f3 0f 7e 47 e8	 movq	 xmm0, QWORD PTR [edi-24]
  00199	50		 push	 eax
  0019a	66 0f d6 44 24
	24		 movq	 QWORD PTR _v3NewNormal$[esp+268], xmm0
  001a0	8d 84 24 94 00
	00 00		 lea	 eax, DWORD PTR _v3NewVertex$[esp+268]
  001a7	f3 0f 7e 47 f4	 movq	 xmm0, QWORD PTR [edi-12]
  001ac	66 0f d6 44 24
	30		 movq	 QWORD PTR _v3NewNormal$[esp+280], xmm0
  001b2	f3 0f 7e 07	 movq	 xmm0, QWORD PTR [edi]
  001b6	50		 push	 eax
  001b7	6a 03		 push	 3
  001b9	66 0f d6 44 24
	44		 movq	 QWORD PTR _v3NewNormal$[esp+300], xmm0
  001bf	e8 00 00 00 00	 call	 ?ClipPolygon@CDecal@@IBEKKPBUD3DXVECTOR3@@0PAU2@1@Z ; CDecal::ClipPolygon

; 69   : 			if ((dwCount != 0) && (!AddPolygon(dwCount, v3NewVertex, v3NewNormal))) break;

  001c4	85 c0		 test	 eax, eax
  001c6	74 1b		 je	 SHORT $LN48@ClipMesh
  001c8	8d 4c 24 18	 lea	 ecx, DWORD PTR _v3NewNormal$[esp+256]
  001cc	51		 push	 ecx
  001cd	8d 8c 24 8c 00
	00 00		 lea	 ecx, DWORD PTR _v3NewVertex$[esp+260]
  001d4	51		 push	 ecx
  001d5	8b 4c 24 18	 mov	 ecx, DWORD PTR _this$GSCopy$1$[esp+264]
  001d9	50		 push	 eax
  001da	e8 00 00 00 00	 call	 ?AddPolygon@CDecal@@IAE_NKPBUD3DXVECTOR3@@0@Z ; CDecal::AddPolygon
  001df	84 c0		 test	 al, al
  001e1	74 14		 je	 SHORT $LN47@ClipMesh
$LN48@ClipMesh:

; 46   : 	D3DXVECTOR3		v3NewVertex[9];
; 47   : 	D3DXVECTOR3		v3NewNormal[9];
; 48   : 
; 49   : 	// Clip one triangle at a time
; 50   : 	for(DWORD dwi = 0; dwi < dwPrimitiveCount; ++dwi)

  001e3	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$GSCopy$1$[esp+256]
$LN2@ClipMesh:
  001e7	43		 inc	 ebx
  001e8	83 c6 24	 add	 esi, 36			; 00000024H
  001eb	83 c7 24	 add	 edi, 36			; 00000024H
  001ee	3b 5d 08	 cmp	 ebx, DWORD PTR _dwPrimitiveCount$[ebp]
  001f1	0f 82 49 fe ff
	ff		 jb	 $LL4@ClipMesh
$LN47@ClipMesh:

; 70   :  		}
; 71   : 	}
; 72   : }

  001f7	8b 8c 24 fc 00
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+256]
  001fe	5f		 pop	 edi
  001ff	5e		 pop	 esi
  00200	5b		 pop	 ebx
  00201	33 cc		 xor	 ecx, esp
  00203	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00208	8b e5		 mov	 esp, ebp
  0020a	5d		 pop	 ebp
  0020b	c2 0c 00	 ret	 12			; 0000000cH
?ClipMesh@CDecal@@IAEXKPBUD3DXVECTOR3@@0@Z ENDP		; CDecal::ClipMesh
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
;	COMDAT ?AddPolygon@CDecal@@IAE_NKPBUD3DXVECTOR3@@0@Z
_TEXT	SEGMENT
_aTriangleFanStruct$ = -20				; size = 16
_this$1$ = -4						; size = 4
_dwAddCount$ = 8					; size = 4
_c_pv3Vertex$ = 12					; size = 4
___formal$ = 16						; size = 4
?AddPolygon@CDecal@@IAE_NKPBUD3DXVECTOR3@@0@Z PROC	; CDecal::AddPolygon, COMDAT
; _this$ = ecx

; 75   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H

; 76   : 	if (m_dwVertexCount + dwAddCount >= MAX_DECAL_VERTICES)

  00006	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR _dwAddCount$[ebp]
  0000d	89 4d fc	 mov	 DWORD PTR _this$1$[ebp], ecx
  00010	8d 04 3a	 lea	 eax, DWORD PTR [edx+edi]
  00013	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  00018	72 09		 jb	 SHORT $LN5@AddPolygon

; 77   : 		return false;

  0001a	32 c0		 xor	 al, al
  0001c	5f		 pop	 edi

; 109  : }

  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c2 0c 00	 ret	 12			; 0000000cH
$LN5@AddPolygon:

; 82   : 	aTriangleFanStruct.m_dwPrimitiveCount = dwAddCount - 2;

  00023	8d 47 fe	 lea	 eax, DWORD PTR [edi-2]
  00026	66 89 55 ec	 mov	 WORD PTR _aTriangleFanStruct$[ebp], dx
  0002a	89 45 f4	 mov	 DWORD PTR _aTriangleFanStruct$[ebp+8], eax

; 83   : 	aTriangleFanStruct.m_dwVBOffset = m_dwVertexCount;
; 84   : 
; 85   : 	m_TriangleFanStructVector.push_back(aTriangleFanStruct);

  0002d	8d 81 84 00 00
	00		 lea	 eax, DWORD PTR [ecx+132]
  00033	89 55 f8	 mov	 DWORD PTR _aTriangleFanStruct$[ebp+12], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00036	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 81   : 	aTriangleFanStruct.m_dwVertexCount = dwAddCount;

  00039	89 7d f0	 mov	 DWORD PTR _aTriangleFanStruct$[ebp+4], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0003c	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  0003f	74 0d		 je	 SHORT $LN10@AddPolygon
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  00041	0f 10 45 ec	 movups	 xmm0, XMMWORD PTR _aTriangleFanStruct$[ebp]
  00045	0f 11 02	 movups	 XMMWORD PTR [edx], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 729  :         ++_Mylast;

  00048	83 40 04 10	 add	 DWORD PTR [eax+4], 16	; 00000010H

; 744  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0004c	eb 0f		 jmp	 SHORT $LN9@AddPolygon
$LN10@AddPolygon:

; 745  :         }
; 746  : 
; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004e	8d 4d ec	 lea	 ecx, DWORD PTR _aTriangleFanStruct$[ebp]
  00051	51		 push	 ecx
  00052	52		 push	 edx
  00053	8b c8		 mov	 ecx, eax
  00055	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABUTTRIANGLEFANSTRUCT@CDecal@@@?$vector@UTTRIANGLEFANSTRUCT@CDecal@@V?$allocator@UTTRIANGLEFANSTRUCT@CDecal@@@std@@@std@@QAEPAUTTRIANGLEFANSTRUCT@CDecal@@QAU23@ABU23@@Z ; std::vector<CDecal::TTRIANGLEFANSTRUCT,std::allocator<CDecal::TTRIANGLEFANSTRUCT> >::_Emplace_reallocate<CDecal::TTRIANGLEFANSTRUCT const &>
  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
$LN9@AddPolygon:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 87   : 	DWORD dwCount = m_dwVertexCount;

  0005d	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]

; 88   : 
; 89   : 	// Add polygon as a triangle fan
; 90   : 	WORD * wIndex = m_Indices + dwCount;
; 91   : 
; 92   : 	m_dwPrimitiveCount += dwAddCount - 2;

  00060	8d 47 fe	 lea	 eax, DWORD PTR [edi-2]
  00063	01 81 80 00 00
	00		 add	 DWORD PTR [ecx+128], eax
  00069	53		 push	 ebx
  0006a	8d 9a 48 0c 00
	00		 lea	 ebx, DWORD PTR [edx+3144]
  00070	8d 1c 59	 lea	 ebx, DWORD PTR [ecx+ebx*2]

; 93   : 	//float fOne_over_1MinusDecalEpsilon = 1.0f / (1.0f - m_cfDecalEpsilon);
; 94   : 
; 95   : 	// Assign vertex colors
; 96   : 	for (DWORD dwVertexNum = 0; dwVertexNum < dwAddCount; ++dwVertexNum)

  00073	85 ff		 test	 edi, edi
  00075	74 45		 je	 SHORT $LN3@AddPolygon

; 87   : 	DWORD dwCount = m_dwVertexCount;

  00077	8d 04 52	 lea	 eax, DWORD PTR [edx+edx*2]
  0007a	8d 0c c1	 lea	 ecx, DWORD PTR [ecx+eax*8]
  0007d	56		 push	 esi
  0007e	8b 75 0c	 mov	 esi, DWORD PTR _c_pv3Vertex$[ebp]
  00081	81 c1 9c 00 00
	00		 add	 ecx, 156		; 0000009cH
  00087	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL4@AddPolygon:

; 97   : 	{
; 98   : 		*wIndex++ = (WORD) dwCount;

  00090	66 89 13	 mov	 WORD PTR [ebx], dx
  00093	8d 5b 02	 lea	 ebx, DWORD PTR [ebx+2]

; 99   : 		m_Vertices[dwCount].position = c_pv3Vertex[dwVertexNum];

  00096	f3 0f 7e 06	 movq	 xmm0, QWORD PTR [esi]

; 100  : 		//const D3DXVECTOR3 & v3Normal = c_pv3Normal[dwVertexNum];
; 101  : 		//float fAlpha = (D3DXVec3Dot(&m_v3Normal, &v3Normal) / D3DXVec3Length(&v3Normal) - m_cfDecalEpsilon) * fOne_over_1MinusDecalEpsilon;
; 102  : 		//m_Vertices[dwCount].diffuse = D3DXCOLOR(1.0f, 1.0f, 1.0f, (fAlpha > 0.0f) ? fAlpha : 0.0f);
; 103  : 		m_Vertices[dwCount].diffuse = 0xFFFFFFFF;
; 104  : 		++dwCount;

  0009a	8d 49 18	 lea	 ecx, DWORD PTR [ecx+24]
  0009d	66 0f d6 41 dc	 movq	 QWORD PTR [ecx-36], xmm0
  000a2	8d 76 0c	 lea	 esi, DWORD PTR [esi+12]
  000a5	8b 46 fc	 mov	 eax, DWORD PTR [esi-4]
  000a8	42		 inc	 edx
  000a9	89 41 e4	 mov	 DWORD PTR [ecx-28], eax
  000ac	c7 41 e8 ff ff
	ff ff		 mov	 DWORD PTR [ecx-24], -1
  000b3	83 ef 01	 sub	 edi, 1
  000b6	75 d8		 jne	 SHORT $LL4@AddPolygon
  000b8	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  000bb	5e		 pop	 esi
$LN3@AddPolygon:

; 105  : 	}
; 106  : 
; 107  : 	m_dwVertexCount = dwCount;
; 108  : 	return true;

  000bc	5b		 pop	 ebx
  000bd	89 51 7c	 mov	 DWORD PTR [ecx+124], edx
  000c0	b0 01		 mov	 al, 1
  000c2	5f		 pop	 edi

; 109  : }

  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 0c 00	 ret	 12			; 0000000cH
?AddPolygon@CDecal@@IAE_NKPBUD3DXVECTOR3@@0@Z ENDP	; CDecal::AddPolygon
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@UTTRIANGLEFANSTRUCT@CDecal@@V?$allocator@UTTRIANGLEFANSTRUCT@CDecal@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UTTRIANGLEFANSTRUCT@CDecal@@V?$allocator@UTTRIANGLEFANSTRUCT@CDecal@@@std@@@std@@CAXXZ PROC ; std::vector<CDecal::TTRIANGLEFANSTRUCT,std::allocator<CDecal::TTRIANGLEFANSTRUCT> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@UTTRIANGLEFANSTRUCT@CDecal@@V?$allocator@UTTRIANGLEFANSTRUCT@CDecal@@@std@@@std@@CAXXZ ENDP ; std::vector<CDecal::TTRIANGLEFANSTRUCT,std::allocator<CDecal::TTRIANGLEFANSTRUCT> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
;	COMDAT ?Render@CDecal@@UAEXXZ
_TEXT	SEGMENT
_matWorld$ = -68					; size = 64
__$ArrayPad$ = -4					; size = 4
?Render@CDecal@@UAEXXZ PROC				; CDecal::Render, COMDAT
; _this$ = ecx

; 223  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi

; 226  : 	STATEMANAGER.SetTransform(D3DTS_WORLD, &matWorld);

  00012	8d 45 bc	 lea	 eax, DWORD PTR _matWorld$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  00015	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+56], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 226  : 	STATEMANAGER.SetTransform(D3DTS_WORLD, &matWorld);

  0001c	50		 push	 eax
  0001d	8b f1		 mov	 esi, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  0001f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+52], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 226  : 	STATEMANAGER.SetTransform(D3DTS_WORLD, &matWorld);

  00026	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0002c	68 00 01 00 00	 push	 256			; 00000100H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  00031	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+48], 0
  00038	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+44], 0
  0003f	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+36], 0
  00046	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+32], 0
  0004d	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+28], 0
  00054	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+24], 0
  0005b	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+16], 0
  00062	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+12], 0
  00069	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+8], 0
  00070	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _matWorld$[ebp+4], 0

; 1517 :     pOut->m[1][0] = pOut->m[1][2] = pOut->m[1][3] =
; 1518 :     pOut->m[2][0] = pOut->m[2][1] = pOut->m[2][3] =
; 1519 :     pOut->m[3][0] = pOut->m[3][1] = pOut->m[3][2] = 0.0f;
; 1520 : 
; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  00077	c7 45 f8 00 00
	80 3f		 mov	 DWORD PTR _matWorld$[ebp+60], 1065353216 ; 3f800000H
  0007e	c7 45 e4 00 00
	80 3f		 mov	 DWORD PTR _matWorld$[ebp+40], 1065353216 ; 3f800000H
  00085	c7 45 d0 00 00
	80 3f		 mov	 DWORD PTR _matWorld$[ebp+20], 1065353216 ; 3f800000H
  0008c	c7 45 bc 00 00
	80 3f		 mov	 DWORD PTR _matWorld$[ebp], 1065353216 ; 3f800000H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 226  : 	STATEMANAGER.SetTransform(D3DTS_WORLD, &matWorld);

  00093	e8 00 00 00 00	 call	 ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform

; 227  : 
; 228  : 	STATEMANAGER.SetVertexShader(D3DFVF_XYZ|D3DFVF_DIFFUSE|D3DFVF_TEX1);

  00098	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0009e	68 42 01 00 00	 push	 322			; 00000142H
  000a3	e8 00 00 00 00	 call	 ?SetVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SetVertexShader
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000a8	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 230  : 	for (DWORD dwi = 0; dwi < m_TriangleFanStructVector.size(); ++dwi)

  000ae	33 db		 xor	 ebx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000b0	2b 86 84 00 00
	00		 sub	 eax, DWORD PTR [esi+132]
  000b6	c1 f8 04	 sar	 eax, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 230  : 	for (DWORD dwi = 0; dwi < m_TriangleFanStructVector.size(); ++dwi)

  000b9	85 c0		 test	 eax, eax
  000bb	74 56		 je	 SHORT $LN3@Render

; 223  : {

  000bd	57		 push	 edi
  000be	8d 86 90 00 00
	00		 lea	 eax, DWORD PTR [esi+144]
  000c4	33 ff		 xor	 edi, edi
$LL4@Render:

; 231  : 		STATEMANAGER.DrawIndexedPrimitiveUP(D3DPT_TRIANGLEFAN,

  000c6	8b 8e 84 00 00
	00		 mov	 ecx, DWORD PTR [esi+132]
  000cc	6a 18		 push	 24			; 00000018H
  000ce	50		 push	 eax
  000cf	6a 65		 push	 101			; 00000065H
  000d1	0f b7 14 0f	 movzx	 edx, WORD PTR [edi+ecx]
  000d5	8d 86 90 18 00
	00		 lea	 eax, DWORD PTR [esi+6288]
  000db	8d 04 50	 lea	 eax, DWORD PTR [eax+edx*2]
  000de	50		 push	 eax
  000df	ff 74 0f 08	 push	 DWORD PTR [edi+ecx+8]
  000e3	ff 74 0f 04	 push	 DWORD PTR [edi+ecx+4]
  000e7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000ed	52		 push	 edx
  000ee	6a 06		 push	 6
  000f0	e8 00 00 00 00	 call	 ?DrawIndexedPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIIPBXW4_D3DFORMAT@@1I@Z ; CStateManager::DrawIndexedPrimitiveUP
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000f5	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 230  : 	for (DWORD dwi = 0; dwi < m_TriangleFanStructVector.size(); ++dwi)

  000fb	8d 7f 10	 lea	 edi, DWORD PTR [edi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  000fe	2b 86 84 00 00
	00		 sub	 eax, DWORD PTR [esi+132]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 230  : 	for (DWORD dwi = 0; dwi < m_TriangleFanStructVector.size(); ++dwi)

  00104	43		 inc	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00105	c1 f8 04	 sar	 eax, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 230  : 	for (DWORD dwi = 0; dwi < m_TriangleFanStructVector.size(); ++dwi)

  00108	3b d8		 cmp	 ebx, eax
  0010a	8d 86 90 00 00
	00		 lea	 eax, DWORD PTR [esi+144]
  00110	72 b4		 jb	 SHORT $LL4@Render
  00112	5f		 pop	 edi
$LN3@Render:

; 232  : 		m_TriangleFanStructVector[dwi].m_wMinIndex,
; 233  : 		m_TriangleFanStructVector[dwi].m_dwVertexCount,
; 234  : 		m_TriangleFanStructVector[dwi].m_dwPrimitiveCount,
; 235  : 		m_Indices + m_TriangleFanStructVector[dwi].m_wMinIndex,
; 236  : 		D3DFMT_INDEX16,
; 237  : 		m_Vertices,
; 238  : 		sizeof(TPDTVertex));
; 239  : }

  00113	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00116	5e		 pop	 esi
  00117	33 cd		 xor	 ecx, ebp
  00119	5b		 pop	 ebx
  0011a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011f	8b e5		 mov	 esp, ebp
  00121	5d		 pop	 ebp
  00122	c3		 ret	 0
?Render@CDecal@@UAEXXZ ENDP				; CDecal::Render
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
;	COMDAT ?Clear@CDecal@@QAEXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
?Clear@CDecal@@QAEXXZ PROC				; CDecal::Clear, COMDAT
; _this$ = ecx

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	0f 57 c9	 xorps	 xmm1, xmm1
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 25   : 	m_v3Center = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

  00010	8b 45 fc	 mov	 eax, DWORD PTR $T2[ebp+8]
  00013	0f 57 c0	 xorps	 xmm0, xmm0
  00016	0f 14 c1	 unpcklps xmm0, xmm1
  00019	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0
  0001e	0f 57 c0	 xorps	 xmm0, xmm0
  00021	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 26   : 	m_v3Normal = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

  00024	0f 14 c9	 unpcklps xmm1, xmm1
  00027	66 0f d6 49 10	 movq	 QWORD PTR [ecx+16], xmm1
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0002c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T1[ebp+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 26   : 	m_v3Normal = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

  00033	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp+8]
  00036	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 27   : 
; 28   : 	m_v4LeftPlane = D3DXPLANE(0.0f, 0.0f, 0.0f, 0.0f);

  00039	0f 11 41 1c	 movups	 XMMWORD PTR [ecx+28], xmm0

; 29   : 	m_v4RightPlane = D3DXPLANE(0.0f, 0.0f, 0.0f, 0.0f);
; 30   : 	m_v4TopPlane = D3DXPLANE(0.0f, 0.0f, 0.0f, 0.0f);
; 31   : 	m_v4BottomPlane = D3DXPLANE(0.0f, 0.0f, 0.0f, 0.0f);
; 32   : 	m_v4FrontPlane = D3DXPLANE(0.0f, 0.0f, 0.0f, 0.0f);
; 33   : 	m_v4BackPlane = D3DXPLANE(0.0f, 0.0f, 0.0f, 0.0f);
; 34   : 
; 35   : 	m_dwVertexCount = 0;
; 36   : 	m_dwPrimitiveCount = 0;
; 37   : 
; 38   : 	m_TriangleFanStructVector.clear();
; 39   : 
; 40   : 	memset(m_Vertices, 0, sizeof(m_Vertices));
; 41   : 	memset(m_Indices, 0, sizeof(m_Indices));

  0003d	68 00 1a 00 00	 push	 6656			; 00001a00H
  00042	0f 11 41 2c	 movups	 XMMWORD PTR [ecx+44], xmm0
  00046	6a 00		 push	 0
  00048	0f 11 41 4c	 movups	 XMMWORD PTR [ecx+76], xmm0
  0004c	c7 41 7c 00 00
	00 00		 mov	 DWORD PTR [ecx+124], 0
  00053	0f 11 41 3c	 movups	 XMMWORD PTR [ecx+60], xmm0
  00057	c7 81 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+128], 0
  00061	0f 11 41 5c	 movups	 XMMWORD PTR [ecx+92], xmm0
  00065	0f 11 41 6c	 movups	 XMMWORD PTR [ecx+108], xmm0
  00069	8b 81 84 00 00
	00		 mov	 eax, DWORD PTR [ecx+132]
  0006f	89 81 88 00 00
	00		 mov	 DWORD PTR [ecx+136], eax
  00075	8d 81 90 00 00
	00		 lea	 eax, DWORD PTR [ecx+144]
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 _memset
  00081	83 c4 0c	 add	 esp, 12			; 0000000cH

; 42   : }

  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
?Clear@CDecal@@QAEXXZ ENDP				; CDecal::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
;	COMDAT ??1CDecal@@UAE@XZ
_TEXT	SEGMENT
??1CDecal@@UAE@XZ PROC					; CDecal::~CDecal, COMDAT
; _this$ = ecx

; 19   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CDecal@@6B@

; 20   : 	Clear();

  00009	e8 00 00 00 00	 call	 ?Clear@CDecal@@QAEXXZ	; CDecal::Clear
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  0000e	8b 86 84 00 00
	00		 mov	 eax, DWORD PTR [esi+132]
  00014	85 c0		 test	 eax, eax
  00016	74 4d		 je	 SHORT $LN6@CDecal

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00018	8b 8e 8c 00 00
	00		 mov	 ecx, DWORD PTR [esi+140]
  0001e	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00020	83 e1 f0	 and	 ecx, -16		; fffffff0H

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00023	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00029	72 12		 jb	 SHORT $LN22@CDecal

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0002b	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0002e	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00031	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00033	83 c0 fc	 add	 eax, -4			; fffffffcH
  00036	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00039	77 2c		 ja	 SHORT $LN19@CDecal

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0003b	8b c2		 mov	 eax, edx
$LN22@CDecal:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0003d	51		 push	 ecx
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  00044	c7 86 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+132], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  0004e	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00051	c7 86 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+136], 0

; 1769 :             _Myend   = nullptr;

  0005b	c7 86 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+140], 0
$LN6@CDecal:
  00065	5e		 pop	 esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 21   : }

  00066	c3		 ret	 0
$LN19@CDecal:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00067	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN28@CDecal:
  0006c	cc		 int	 3
??1CDecal@@UAE@XZ ENDP					; CDecal::~CDecal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp
;	COMDAT ??0CDecal@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDecal@@QAE@XZ PROC					; CDecal::CDecal, COMDAT
; _this$ = ecx

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CDecal@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00010	c7 86 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+132], 0
  0001a	c7 86 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+136], 0
  00024	c7 86 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+140], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\EterLib\Decal.cpp

; 13   : CDecal::CDecal():m_cfDecalEpsilon(0.25f)

  0002e	c7 86 90 1a 00
	00 00 00 80 3e	 mov	 DWORD PTR [esi+6800], 1048576000 ; 3e800000H

; 15   : 	Clear();

  00038	e8 00 00 00 00	 call	 ?Clear@CDecal@@QAEXXZ	; CDecal::Clear

; 16   : }

  0003d	8b c6		 mov	 eax, esi
  0003f	5e		 pop	 esi
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
??0CDecal@@QAE@XZ ENDP					; CDecal::CDecal
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0SPDTVertex@@QAE@XZ
_TEXT	SEGMENT
??0SPDTVertex@@QAE@XZ PROC				; SPDTVertex::SPDTVertex, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0SPDTVertex@@QAE@XZ ENDP				; SPDTVertex::SPDTVertex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 134  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 135  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 137  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 85   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 138  :         _Throw_bad_array_new_length(); // add overflow
; 139  :     }
; 140  : 
; 141  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 85   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 145  : 
; 146  : #ifdef _DEBUG
; 147  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 148  : #endif // _DEBUG
; 149  :     return _Ptr;
; 150  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.h
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT
??0D3DXMATRIX@@QAE@XZ PROC				; D3DXMATRIX::D3DXMATRIX, COMDAT
; _this$ = ecx

; 177  :     D3DXMATRIX() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXMATRIX@@QAE@XZ ENDP				; D3DXMATRIX::D3DXMATRIX
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.h
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT
??0D3DXVECTOR3@@QAE@XZ PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 89   :     D3DXVECTOR3() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXVECTOR3@@QAE@XZ ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
