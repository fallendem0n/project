; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30137.0 

	TITLE	C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\Distribute\RaceDataFile.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vector deleting destructor'
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDe'
	DB	'corator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDec'
	DB	'orator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpd'
	DB	'ateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@N'
	DB	'EffectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEff'
	DB	'ectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffe'
	DB	'ctUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecora'
	DB	'tor@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDeco'
	DB	'rator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	___local_stdio_printf_options
PUBLIC	__snprintf
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	?LoadRaceData@CRaceData@@QAEHPBD@Z		; CRaceData::LoadRaceData
PUBLIC	??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position@	; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
PUBLIC	?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
PUBLIC	??_C@_0BC@NDOIOPFI@basemodelfilename@		; `string'
PUBLIC	??_C@_0N@FNBFCAFH@treefilename@			; `string'
PUBLIC	??_C@_0BC@KCFLFBNM@attributefilename@		; `string'
PUBLIC	??_C@_0O@OKJLKLAI@smokebonename@		; `string'
PUBLIC	??_C@_0BD@HKKNCHKI@motionlistfilename@		; `string'
PUBLIC	??_C@_0O@OGIHOCKK@smokefilename@		; `string'
PUBLIC	??_C@_0CA@DLOGAHGG@SmokeFileName?5ArgCount?$FL?$CFd?$FN?$CF2?$DN?$DN0@ ; `string'
PUBLIC	??_C@_0CI@MHBPKAGN@SmokeFileName?5SmokeNum?$FL?$CFd?$FN?5OUT?5@ ; `string'
PUBLIC	??_C@_0CF@GEINCGMO@CRaceData?3?3RegisterEffect2?$CI?$CFs?$CJ?5@ ; `string'
PUBLIC	??_C@_09IOJGLPMI@shapedata@			; `string'
PUBLIC	??_C@_08PEIJGPHF@pathname@			; `string'
PUBLIC	??_C@_0P@BDBLEP@shapedatacount@			; `string'
PUBLIC	??_C@_0M@GCDLCIFI@specialpath@			; `string'
PUBLIC	??_C@_0L@BLAJFEIP@shapeindex@			; `string'
PUBLIC	??_C@_05NCCFOPHA@model@				; `string'
PUBLIC	??_C@_0M@NFFHMNPF@local_model@			; `string'
PUBLIC	??_C@_0BB@OAFGNDMP@local_sourceskin@		; `string'
PUBLIC	??_C@_0BB@CMMEEAHN@local_targetskin@		; `string'
PUBLIC	??_C@_0L@ILFPKBGB@sourceskin@			; `string'
PUBLIC	??_C@_0L@EHMNDCND@targetskin@			; `string'
PUBLIC	??_C@_0N@LBPJELHP@sourceskin?$CFu@		; `string'
PUBLIC	??_C@_0N@OAMIJCJ@targetskin?$CFu@		; `string'
PUBLIC	??_C@_08HKPOBGLF@hairdata@			; `string'
PUBLIC	??_C@_0O@HCGNHJP@hairdatacount@			; `string'
PUBLIC	??_C@_09DFEJDBKH@hairindex@			; `string'
PUBLIC	??_C@_0O@OPEMPJIC@attachingdata@		; `string'
PUBLIC	??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@	; `string'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_tolower:PROC
EXTRN	__atoi64:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	??0CTextFileLoader@@QAE@XZ:PROC			; CTextFileLoader::CTextFileLoader
EXTRN	??1CTextFileLoader@@UAE@XZ:PROC			; CTextFileLoader::~CTextFileLoader
EXTRN	?Load@CTextFileLoader@@QAE_NPBD@Z:PROC		; CTextFileLoader::Load
EXTRN	?SetTop@CTextFileLoader@@QAEXXZ:PROC		; CTextFileLoader::SetTop
EXTRN	?SetChildNode@CTextFileLoader@@QAEHPBD@Z:PROC	; CTextFileLoader::SetChildNode
EXTRN	?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z:PROC ; CTextFileLoader::SetChildNode
EXTRN	?SetParentNode@CTextFileLoader@@QAEHXZ:PROC	; CTextFileLoader::SetParentNode
EXTRN	?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z:PROC ; CTextFileLoader::GetTokenVector
EXTRN	?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z:PROC ; CTextFileLoader::GetTokenDoubleWord
EXTRN	?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z:PROC ; CTextFileLoader::GetTokenString
EXTRN	?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z:PROC ; NRaceData::LoadAttachingData
EXTRN	?SetShapeModel@CRaceData@@QAEXIPBD@Z:PROC	; CRaceData::SetShapeModel
EXTRN	?AppendShapeSkin@CRaceData@@QAEXIIPBD0@Z:PROC	; CRaceData::AppendShapeSkin
EXTRN	?SetHairSkin@CRaceData@@QAEXIIPBD00@Z:PROC	; CRaceData::SetHairSkin
EXTRN	?RegisterEffect2@CEffectManager@@QAEHPBDPAK_N@Z:PROC ; CEffectManager::RegisterEffect2
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A DD 01H DUP (?) ; CSingleton<CEffectManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?__szSkin1@?BN@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA
_BSS	SEGMENT
?__szSkin1@?BN@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA DB 0cH DUP (?) ; `CRaceData::LoadRaceData'::`29'::__szSkin1
_BSS	ENDS
;	COMDAT ?__szSkin2@?BN@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA
_BSS	SEGMENT
?__szSkin2@?BN@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA DB 0cH DUP (?) ; `CRaceData::LoadRaceData'::`29'::__szSkin2
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
CONST	SEGMENT
??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@ DB 'invalid vector subscri'
	DB	'pt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OPEMPJIC@attachingdata@
CONST	SEGMENT
??_C@_0O@OPEMPJIC@attachingdata@ DB 'attachingdata', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09DFEJDBKH@hairindex@
CONST	SEGMENT
??_C@_09DFEJDBKH@hairindex@ DB 'hairindex', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HCGNHJP@hairdatacount@
CONST	SEGMENT
??_C@_0O@HCGNHJP@hairdatacount@ DB 'hairdatacount', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HKPOBGLF@hairdata@
CONST	SEGMENT
??_C@_08HKPOBGLF@hairdata@ DB 'hairdata', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OAMIJCJ@targetskin?$CFu@
CONST	SEGMENT
??_C@_0N@OAMIJCJ@targetskin?$CFu@ DB 'targetskin%u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LBPJELHP@sourceskin?$CFu@
CONST	SEGMENT
??_C@_0N@LBPJELHP@sourceskin?$CFu@ DB 'sourceskin%u', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EHMNDCND@targetskin@
CONST	SEGMENT
??_C@_0L@EHMNDCND@targetskin@ DB 'targetskin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ILFPKBGB@sourceskin@
CONST	SEGMENT
??_C@_0L@ILFPKBGB@sourceskin@ DB 'sourceskin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CMMEEAHN@local_targetskin@
CONST	SEGMENT
??_C@_0BB@CMMEEAHN@local_targetskin@ DB 'local_targetskin', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OAFGNDMP@local_sourceskin@
CONST	SEGMENT
??_C@_0BB@OAFGNDMP@local_sourceskin@ DB 'local_sourceskin', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NFFHMNPF@local_model@
CONST	SEGMENT
??_C@_0M@NFFHMNPF@local_model@ DB 'local_model', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05NCCFOPHA@model@
CONST	SEGMENT
??_C@_05NCCFOPHA@model@ DB 'model', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BLAJFEIP@shapeindex@
CONST	SEGMENT
??_C@_0L@BLAJFEIP@shapeindex@ DB 'shapeindex', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GCDLCIFI@specialpath@
CONST	SEGMENT
??_C@_0M@GCDLCIFI@specialpath@ DB 'specialpath', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BDBLEP@shapedatacount@
CONST	SEGMENT
??_C@_0P@BDBLEP@shapedatacount@ DB 'shapedatacount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PEIJGPHF@pathname@
CONST	SEGMENT
??_C@_08PEIJGPHF@pathname@ DB 'pathname', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09IOJGLPMI@shapedata@
CONST	SEGMENT
??_C@_09IOJGLPMI@shapedata@ DB 'shapedata', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@GEINCGMO@CRaceData?3?3RegisterEffect2?$CI?$CFs?$CJ?5@
CONST	SEGMENT
??_C@_0CF@GEINCGMO@CRaceData?3?3RegisterEffect2?$CI?$CFs?$CJ?5@ DB 'CRace'
	DB	'Data::RegisterEffect2(%s) ERROR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@MHBPKAGN@SmokeFileName?5SmokeNum?$FL?$CFd?$FN?5OUT?5@
CONST	SEGMENT
??_C@_0CI@MHBPKAGN@SmokeFileName?5SmokeNum?$FL?$CFd?$FN?5OUT?5@ DB 'Smoke'
	DB	'FileName SmokeNum[%d] OUT OF RANGE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@DLOGAHGG@SmokeFileName?5ArgCount?$FL?$CFd?$FN?$CF2?$DN?$DN0@
CONST	SEGMENT
??_C@_0CA@DLOGAHGG@SmokeFileName?5ArgCount?$FL?$CFd?$FN?$CF2?$DN?$DN0@ DB 'S'
	DB	'mokeFileName ArgCount[%d]%2==0', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OGIHOCKK@smokefilename@
CONST	SEGMENT
??_C@_0O@OGIHOCKK@smokefilename@ DB 'smokefilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HKKNCHKI@motionlistfilename@
CONST	SEGMENT
??_C@_0BD@HKKNCHKI@motionlistfilename@ DB 'motionlistfilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OKJLKLAI@smokebonename@
CONST	SEGMENT
??_C@_0O@OKJLKLAI@smokebonename@ DB 'smokebonename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KCFLFBNM@attributefilename@
CONST	SEGMENT
??_C@_0BC@KCFLFBNM@attributefilename@ DB 'attributefilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FNBFCAFH@treefilename@
CONST	SEGMENT
??_C@_0N@FNBFCAFH@treefilename@ DB 'treefilename', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NDOIOPFI@basemodelfilename@
CONST	SEGMENT
??_C@_0BC@NDOIOPFI@basemodelfilename@ DB 'basemodelfilename', 00H ; `string'
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position@ DB 'invalid string position'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?LoadRaceData@CRaceData@@QAEHPBD@Z DD 019930522H
	DD	02cH
	DD	FLAT:__unwindtable$?LoadRaceData@CRaceData@@QAEHPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LoadRaceData@CRaceData@@QAEHPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$6
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$9
	DD	07H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$10
	DD	07H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$11
	DD	07H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$12
	DD	07H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$13
	DD	0dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$14
	DD	0dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$15
	DD	0dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$16
	DD	0dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$17
	DD	011H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$18
	DD	012H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$19
	DD	013H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$20
	DD	012H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$21
	DD	015H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$22
	DD	012H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$23
	DD	017H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$24
	DD	012H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$25
	DD	019H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$26
	DD	012H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$27
	DD	01bH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$28
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$29
	DD	01dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$30
	DD	01eH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$31
	DD	01dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$32
	DD	01dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$33
	DD	01dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$34
	DD	01dH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$35
	DD	023H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$36
	DD	024H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$37
	DD	025H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$38
	DD	026H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$39
	DD	027H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$40
	DD	025H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$41
	DD	029H
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$42
	DD	02aH
	DD	FLAT:__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$43
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterBase\filename.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterBase\filename.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterBase\filename.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterBase\filename.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
;	COMDAT ?LoadRaceData@CRaceData@@QAEHPBD@Z
_TEXT	SEGMENT
_uLineCount$1$ = -344					; size = 4
_dwShapeIndex$2 = -344					; size = 4
_pSmokeTokenVector$ = -340				; size = 4
_this$GSCopy$1$ = -336					; size = 4
tv9488 = -332						; size = 4
_dwShapeIndex$3 = -332					; size = 4
_nLength$1$ = -328					; size = 4
_i$1$ = -328						; size = 4
_i$1$ = -328						; size = 4
tv9507 = -328						; size = 4
tv9497 = -328						; size = 4
__Result$1$ = -324					; size = 4
_uLine$1$ = -324					; size = 4
_dwHairDataCount$4 = -324				; size = 4
_dwShapeDataCount$5 = -324				; size = 4
tv9538 = -320						; size = 4
$T6 = -320						; size = 4
$T7 = -313						; size = 1
$T8 = -313						; size = 1
$T9 = -313						; size = 1
$T10 = -313						; size = 1
$T11 = -313						; size = 1
$T12 = -313						; size = 1
$T13 = -313						; size = 1
$T14 = -313						; size = 1
$T15 = -313						; size = 1
$T16 = -313						; size = 1
$T17 = -313						; size = 1
_TextFileLoader$ = -312					; size = 128
_strModel$18 = -184					; size = 24
$T19 = -184						; size = 24
$T20 = -184						; size = 24
$T21 = -184						; size = 24
$T22 = -160						; size = 24
$T23 = -160						; size = 24
_strPathName$24 = -160					; size = 24
_strSourceSkin$25 = -136				; size = 24
_strSourceSkin$26 = -136				; size = 24
_strPathName$27 = -112					; size = 24
_strTargetSkin$28 = -112				; size = 24
_strTargetSkin$29 = -88					; size = 24
_strModel$30 = -88					; size = 24
$T31 = -88						; size = 24
$T32 = -64						; size = 24
$T33 = -64						; size = 24
$T34 = -64						; size = 24
$T35 = -64						; size = 24
$T36 = -64						; size = 24
$T37 = -64						; size = 24
$T38 = -64						; size = 24
$T39 = -64						; size = 24
$T40 = -64						; size = 24
$T41 = -64						; size = 24
$T42 = -64						; size = 24
$T43 = -40						; size = 24
$T44 = -40						; size = 24
$T45 = -40						; size = 24
$T46 = -40						; size = 24
$T47 = -40						; size = 24
$T48 = -40						; size = 24
$T49 = -40						; size = 24
$T50 = -40						; size = 24
$T51 = -40						; size = 24
$T52 = -40						; size = 24
$T53 = -40						; size = 24
$T54 = -40						; size = 24
$T55 = -40						; size = 24
$T56 = -40						; size = 24
$T57 = -40						; size = 24
$T58 = -40						; size = 24
$T59 = -40						; size = 24
$T60 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
?LoadRaceData@CRaceData@@QAEHPBD@Z PROC			; CRaceData::LoadRaceData, COMDAT
; _this$ = ecx

; 11   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadRaceData@CRaceData@@QAEHPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 4c 01 00
	00		 sub	 esp, 332		; 0000014cH
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b f9		 mov	 edi, ecx
  00030	89 bd b0 fe ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi
  00036	8b 75 08	 mov	 esi, DWORD PTR _c_szFileName$[ebp]

; 12   : 	CTextFileLoader TextFileLoader;

  00039	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0003f	33 db		 xor	 ebx, ebx
  00041	89 9d c0 fe ff
	ff		 mov	 DWORD PTR $T6[ebp], ebx
  00047	e8 00 00 00 00	 call	 ??0CTextFileLoader@@QAE@XZ ; CTextFileLoader::CTextFileLoader

; 13   : 	if (!TextFileLoader.Load(c_szFileName))

  0004c	56		 push	 esi
  0004d	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00053	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  00056	e8 00 00 00 00	 call	 ?Load@CTextFileLoader@@QAE_NPBD@Z ; CTextFileLoader::Load
  0005b	84 c0		 test	 al, al
  0005d	0f 84 8b 03 00
	00		 je	 $LN124@LoadRaceDa

; 14   : 		return FALSE;
; 15   : 
; 16   : 	TextFileLoader.SetTop();

  00063	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00069	e8 00 00 00 00	 call	 ?SetTop@CTextFileLoader@@QAEXXZ ; CTextFileLoader::SetTop
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0006e	6a 11		 push	 17			; 00000011H

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00070	89 5d d8	 mov	 DWORD PTR $T60[ebp], ebx

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00073	8d 4d d8	 lea	 ecx, DWORD PTR $T60[ebp]
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@NDOIOPFI@basemodelfilename@

; 4596 :         _My_data._Mysize = 0;

  0007b	89 5d e8	 mov	 DWORD PTR $T60[ebp+16], ebx

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0007e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T60[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00085	88 5d d8	 mov	 BYTE PTR $T60[ebp], bl

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00088	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 18   : 	TextFileLoader.GetTokenString("basemodelfilename", &m_strBaseModelFileName);

  0008d	8d 47 20	 lea	 eax, DWORD PTR [edi+32]
  00090	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00094	50		 push	 eax
  00095	8d 45 d8	 lea	 eax, DWORD PTR $T60[ebp]
  00098	50		 push	 eax
  00099	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0009f	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000a4	8b 55 ec	 mov	 edx, DWORD PTR $T60[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 18   : 	TextFileLoader.GetTokenString("basemodelfilename", &m_strBaseModelFileName);

  000a7	88 5d fc	 mov	 BYTE PTR __$EHRec$[ebp+8], bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000aa	83 fa 10	 cmp	 edx, 16			; 00000010H
  000ad	72 2c		 jb	 SHORT $LN154@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	8b 4d d8	 mov	 ecx, DWORD PTR $T60[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000b2	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000b3	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000b5	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  000bb	72 14		 jb	 SHORT $LN164@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000bd	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  000c0	83 c2 23	 add	 edx, 35			; 00000023H
  000c3	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c5	83 c0 fc	 add	 eax, -4			; fffffffcH
  000c8	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000cb	0f 87 61 18 00
	00		 ja	 $LN942@LoadRaceDa
$LN164@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000d1	52		 push	 edx
  000d2	51		 push	 ecx
  000d3	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000d8	83 c4 08	 add	 esp, 8
$LN154@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  000db	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0N@FNBFCAFH@treefilename@
  000e3	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0N@FNBFCAFH@treefilename@+8

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  000e8	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T59[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  000ef	c7 45 e8 0c 00
	00 00		 mov	 DWORD PTR $T59[ebp+16], 12 ; 0000000cH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  000f6	66 0f d6 45 d8	 movq	 QWORD PTR $T59[ebp], xmm0
  000fb	89 45 e0	 mov	 DWORD PTR $T59[ebp+8], eax

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  000fe	c6 45 e4 00	 mov	 BYTE PTR $T59[ebp+12], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 19   : 	TextFileLoader.GetTokenString("treefilename", &m_strTreeFileName);

  00102	8d 77 38	 lea	 esi, DWORD PTR [edi+56]
  00105	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00109	56		 push	 esi
  0010a	8d 45 d8	 lea	 eax, DWORD PTR $T59[ebp]
  0010d	50		 push	 eax
  0010e	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00114	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00119	8b 55 ec	 mov	 edx, DWORD PTR $T59[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 19   : 	TextFileLoader.GetTokenString("treefilename", &m_strTreeFileName);

  0011c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00120	83 fa 10	 cmp	 edx, 16			; 00000010H
  00123	72 2c		 jb	 SHORT $LN254@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00125	8b 4d d8	 mov	 ecx, DWORD PTR $T59[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00128	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00129	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0012b	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00131	72 14		 jb	 SHORT $LN264@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00133	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00136	83 c2 23	 add	 edx, 35			; 00000023H
  00139	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0013b	83 c0 fc	 add	 eax, -4			; fffffffcH
  0013e	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00141	0f 87 f0 17 00
	00		 ja	 $LN2257@LoadRaceDa
$LN264@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00147	52		 push	 edx
  00148	51		 push	 ecx
  00149	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0014e	83 c4 08	 add	 esp, 8
$LN254@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00151	6a 11		 push	 17			; 00000011H

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00153	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T58[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0015a	8d 4d d8	 lea	 ecx, DWORD PTR $T58[ebp]
  0015d	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KCFLFBNM@attributefilename@

; 4596 :         _My_data._Mysize = 0;

  00162	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T58[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00169	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T58[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00170	c6 45 d8 00	 mov	 BYTE PTR $T58[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00174	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 20   : 	TextFileLoader.GetTokenString("attributefilename", &m_strAttributeFileName);

  00179	8d 47 50	 lea	 eax, DWORD PTR [edi+80]
  0017c	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00180	50		 push	 eax
  00181	8d 45 d8	 lea	 eax, DWORD PTR $T58[ebp]
  00184	50		 push	 eax
  00185	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0018b	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00190	8b 55 ec	 mov	 edx, DWORD PTR $T58[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 20   : 	TextFileLoader.GetTokenString("attributefilename", &m_strAttributeFileName);

  00193	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00197	83 fa 10	 cmp	 edx, 16			; 00000010H
  0019a	72 2c		 jb	 SHORT $LN297@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0019c	8b 4d d8	 mov	 ecx, DWORD PTR $T58[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0019f	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001a0	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  001a2	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  001a8	72 14		 jb	 SHORT $LN307@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  001aa	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  001ad	83 c2 23	 add	 edx, 35			; 00000023H
  001b0	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001b2	83 c0 fc	 add	 eax, -4			; fffffffcH
  001b5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  001b8	0f 87 7e 17 00
	00		 ja	 $LN2258@LoadRaceDa
$LN307@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  001be	52		 push	 edx
  001bf	51		 push	 ecx
  001c0	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  001c5	83 c4 08	 add	 esp, 8
$LN297@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  001c8	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0O@OKJLKLAI@smokebonename@+8
  001cd	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0O@OKJLKLAI@smokebonename@
  001d5	89 45 e0	 mov	 DWORD PTR $T57[ebp+8], eax
  001d8	a0 0c 00 00 00	 mov	 al, BYTE PTR ??_C@_0O@OKJLKLAI@smokebonename@+12

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  001dd	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T57[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  001e4	c7 45 e8 0d 00
	00 00		 mov	 DWORD PTR $T57[ebp+16], 13 ; 0000000dH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  001eb	66 0f d6 45 d8	 movq	 QWORD PTR $T57[ebp], xmm0
  001f0	88 45 e4	 mov	 BYTE PTR $T57[ebp+12], al

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  001f3	c6 45 e5 00	 mov	 BYTE PTR $T57[ebp+13], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 21   : 	TextFileLoader.GetTokenString("smokebonename", &m_strSmokeBoneName);

  001f7	8d 87 80 00 00
	00		 lea	 eax, DWORD PTR [edi+128]
  001fd	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00201	50		 push	 eax
  00202	8d 45 d8	 lea	 eax, DWORD PTR $T57[ebp]
  00205	50		 push	 eax
  00206	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0020c	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00211	8b 55 ec	 mov	 edx, DWORD PTR $T57[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 21   : 	TextFileLoader.GetTokenString("smokebonename", &m_strSmokeBoneName);

  00214	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00218	83 fa 10	 cmp	 edx, 16			; 00000010H
  0021b	72 2c		 jb	 SHORT $LN396@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0021d	8b 4d d8	 mov	 ecx, DWORD PTR $T57[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00220	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00221	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00223	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00229	72 14		 jb	 SHORT $LN406@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0022b	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0022e	83 c2 23	 add	 edx, 35			; 00000023H
  00231	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00233	83 c0 fc	 add	 eax, -4			; fffffffcH
  00236	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00239	0f 87 02 17 00
	00		 ja	 $LN2259@LoadRaceDa
$LN406@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0023f	52		 push	 edx
  00240	51		 push	 ecx
  00241	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00246	83 c4 08	 add	 esp, 8
$LN396@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00249	6a 12		 push	 18			; 00000012H

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0024b	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T56[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00252	8d 4d d8	 lea	 ecx, DWORD PTR $T56[ebp]
  00255	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@HKKNCHKI@motionlistfilename@

; 4596 :         _My_data._Mysize = 0;

  0025a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T56[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00261	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T56[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00268	c6 45 d8 00	 mov	 BYTE PTR $T56[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0026c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 22   : 	TextFileLoader.GetTokenString("motionlistfilename", &m_strMotionListFileName);

  00271	8d 47 68	 lea	 eax, DWORD PTR [edi+104]
  00274	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00278	50		 push	 eax
  00279	8d 45 d8	 lea	 eax, DWORD PTR $T56[ebp]
  0027c	50		 push	 eax
  0027d	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00283	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00288	8b 55 ec	 mov	 edx, DWORD PTR $T56[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 22   : 	TextFileLoader.GetTokenString("motionlistfilename", &m_strMotionListFileName);

  0028b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0028f	83 fa 10	 cmp	 edx, 16			; 00000010H
  00292	72 2c		 jb	 SHORT $LN439@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00294	8b 4d d8	 mov	 ecx, DWORD PTR $T56[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00297	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00298	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0029a	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  002a0	72 14		 jb	 SHORT $LN449@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  002a2	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  002a5	83 c2 23	 add	 edx, 35			; 00000023H
  002a8	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  002aa	83 c0 fc	 add	 eax, -4			; fffffffcH
  002ad	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  002b0	0f 87 90 16 00
	00		 ja	 $LN2260@LoadRaceDa
$LN449@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  002b6	52		 push	 edx
  002b7	51		 push	 ecx
  002b8	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  002bd	83 c4 08	 add	 esp, 8
$LN439@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 24   : 	if (!m_strTreeFileName.empty())

  002c0	83 7f 48 00	 cmp	 DWORD PTR [edi+72], 0
  002c4	74 6f		 je	 SHORT $LN458@LoadRaceDa
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterBase\filename.h

; 224  : 		size_t nLength = str.length();

  002c6	8b 46 10	 mov	 eax, DWORD PTR [esi+16]

; 225  : 
; 226  : 		for (size_t i = 0; i<nLength; ++i)

  002c9	33 ff		 xor	 edi, edi
  002cb	89 85 b8 fe ff
	ff		 mov	 DWORD PTR _nLength$1$[ebp], eax
  002d1	85 c0		 test	 eax, eax
  002d3	74 60		 je	 SHORT $LN458@LoadRaceDa
$LL459@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2331 :         if (_Mysize <= _Off) {

  002d5	39 7e 10	 cmp	 DWORD PTR [esi+16], edi
  002d8	0f 86 72 16 00
	00		 jbe	 $LN2196@LoadRaceDa

; 2319 :         return _BUF_SIZE <= _Myres;

  002de	8b 46 14	 mov	 eax, DWORD PTR [esi+20]

; 2296 :         value_type* _Result = _Bx._Buf;

  002e1	8b ce		 mov	 ecx, esi

; 2297 :         if (_Large_string_engaged()) {

  002e3	83 f8 10	 cmp	 eax, 16			; 00000010H
  002e6	72 02		 jb	 SHORT $LN2229@LoadRaceDa

; 2298 :             _Result = _Unfancy(_Bx._Ptr);

  002e8	8b 0e		 mov	 ecx, DWORD PTR [esi]
$LN2229@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterBase\filename.h

; 228  : 			if (str.at(i) == '\\')

  002ea	80 3c 39 5c	 cmp	 BYTE PTR [ecx+edi], 92	; 0000005cH
  002ee	8b ce		 mov	 ecx, esi
  002f0	75 0d		 jne	 SHORT $LN460@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2297 :         if (_Large_string_engaged()) {

  002f2	83 f8 10	 cmp	 eax, 16			; 00000010H
  002f5	72 02		 jb	 SHORT $LN2226@LoadRaceDa

; 2298 :             _Result = _Unfancy(_Bx._Ptr);

  002f7	8b 0e		 mov	 ecx, DWORD PTR [esi]
$LN2226@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterBase\filename.h

; 229  : 				str.at(i) = '/';

  002f9	c6 04 39 2f	 mov	 BYTE PTR [ecx+edi], 47	; 0000002fH
  002fd	eb 2d		 jmp	 SHORT $LN457@LoadRaceDa
$LN460@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2297 :         if (_Large_string_engaged()) {

  002ff	83 f8 10	 cmp	 eax, 16			; 00000010H
  00302	72 02		 jb	 SHORT $LN2227@LoadRaceDa

; 2298 :             _Result = _Unfancy(_Bx._Ptr);

  00304	8b 0e		 mov	 ecx, DWORD PTR [esi]
$LN2227@LoadRaceDa:

; 2296 :         value_type* _Result = _Bx._Buf;

  00306	89 b5 bc fe ff
	ff		 mov	 DWORD PTR __Result$1$[ebp], esi

; 2297 :         if (_Large_string_engaged()) {

  0030c	72 08		 jb	 SHORT $LN2228@LoadRaceDa

; 2298 :             _Result = _Unfancy(_Bx._Ptr);

  0030e	8b 06		 mov	 eax, DWORD PTR [esi]
  00310	89 85 bc fe ff
	ff		 mov	 DWORD PTR __Result$1$[ebp], eax
$LN2228@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterBase\filename.h

; 231  : 				str.at(i) = (char)tolower(str.at(i));

  00316	0f be 04 39	 movsx	 eax, BYTE PTR [ecx+edi]
  0031a	50		 push	 eax
  0031b	e8 00 00 00 00	 call	 _tolower
  00320	8b 8d bc fe ff
	ff		 mov	 ecx, DWORD PTR __Result$1$[ebp]
  00326	83 c4 04	 add	 esp, 4
  00329	88 04 39	 mov	 BYTE PTR [ecx+edi], al
$LN457@LoadRaceDa:

; 225  : 
; 226  : 		for (size_t i = 0; i<nLength; ++i)

  0032c	47		 inc	 edi
  0032d	3b bd b8 fe ff
	ff		 cmp	 edi, DWORD PTR _nLength$1$[ebp]
  00333	72 a0		 jb	 SHORT $LL459@LoadRaceDa
$LN458@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00335	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0O@OGIHOCKK@smokefilename@+8
  0033a	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0O@OGIHOCKK@smokefilename@
  00342	89 45 e0	 mov	 DWORD PTR $T55[ebp+8], eax
  00345	a0 0c 00 00 00	 mov	 al, BYTE PTR ??_C@_0O@OGIHOCKK@smokefilename@+12

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0034a	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T55[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  00351	c7 45 e8 0d 00
	00 00		 mov	 DWORD PTR $T55[ebp+16], 13 ; 0000000dH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00358	66 0f d6 45 d8	 movq	 QWORD PTR $T55[ebp], xmm0
  0035d	88 45 e4	 mov	 BYTE PTR $T55[ebp+12], al

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00360	c6 45 e5 00	 mov	 BYTE PTR $T55[ebp+13], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 30   : 	if (TextFileLoader.GetTokenVector("smokefilename", &pSmokeTokenVector))

  00364	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _pSmokeTokenVector$[ebp]
  0036a	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  0036e	50		 push	 eax
  0036f	8d 45 d8	 lea	 eax, DWORD PTR $T55[ebp]
  00372	50		 push	 eax
  00373	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00379	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0037e	8b 55 ec	 mov	 edx, DWORD PTR $T55[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 30   : 	if (TextFileLoader.GetTokenVector("smokefilename", &pSmokeTokenVector))

  00381	8b f0		 mov	 esi, eax
  00383	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00387	83 fa 10	 cmp	 edx, 16			; 00000010H
  0038a	72 2c		 jb	 SHORT $LN592@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0038c	8b 4d d8	 mov	 ecx, DWORD PTR $T55[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0038f	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00390	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00392	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00398	72 14		 jb	 SHORT $LN602@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0039a	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0039d	83 c2 23	 add	 edx, 35			; 00000023H
  003a0	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  003a2	83 c0 fc	 add	 eax, -4			; fffffffcH
  003a5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  003a8	0f 87 9d 15 00
	00		 ja	 $LN2261@LoadRaceDa
$LN602@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  003ae	52		 push	 edx
  003af	51		 push	 ecx
  003b0	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  003b5	83 c4 08	 add	 esp, 8
$LN592@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 30   : 	if (TextFileLoader.GetTokenVector("smokefilename", &pSmokeTokenVector))

  003b8	85 f6		 test	 esi, esi
  003ba	0f 84 a1 01 00
	00		 je	 $LN3@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  003c0	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _pSmokeTokenVector$[ebp]
  003c6	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  003c9	2b 08		 sub	 ecx, DWORD PTR [eax]
  003cb	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  003d0	f7 e9		 imul	 ecx
  003d2	c1 fa 02	 sar	 edx, 2
  003d5	8b c2		 mov	 eax, edx
  003d7	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  003da	03 c2		 add	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 32   : 		if (pSmokeTokenVector->size()%2!=0)

  003dc	a8 01		 test	 al, 1
  003de	74 3b		 je	 SHORT $LN17@LoadRaceDa

; 33   : 		{
; 34   : 			TraceError("SmokeFileName ArgCount[%d]%2==0", pSmokeTokenVector->size());

  003e0	50		 push	 eax
  003e1	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@DLOGAHGG@SmokeFileName?5ArgCount?$FL?$CFd?$FN?$CF2?$DN?$DN0@
$LN2254@LoadRaceDa:
  003e6	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
$LN2255@LoadRaceDa:
  003eb	83 c4 08	 add	 esp, 8
$LN124@LoadRaceDa:
  003ee	33 f6		 xor	 esi, esi
$LN125@LoadRaceDa:

; 197  : 	}
; 198  : 
; 199  : 	return TRUE;

  003f0	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  003f6	e8 00 00 00 00	 call	 ??1CTextFileLoader@@UAE@XZ ; CTextFileLoader::~CTextFileLoader
  003fb	8b c6		 mov	 eax, esi

; 200  : }

  003fd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00400	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00407	59		 pop	 ecx
  00408	5f		 pop	 edi
  00409	5e		 pop	 esi
  0040a	5b		 pop	 ebx
  0040b	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0040e	33 cd		 xor	 ecx, ebp
  00410	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00415	8b e5		 mov	 esp, ebp
  00417	5d		 pop	 ebp
  00418	c2 04 00	 ret	 4
$LN17@LoadRaceDa:

; 35   : 			return FALSE;
; 36   : 		}
; 37   : 
; 38   : 		UINT uLineCount=pSmokeTokenVector->size()/2;

  0041b	d1 e8		 shr	 eax, 1
  0041d	89 85 a8 fe ff
	ff		 mov	 DWORD PTR _uLineCount$1$[ebp], eax

; 39   : 
; 40   : 		for (UINT uLine=0; uLine<uLineCount; ++uLine)

  00423	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _uLine$1$[ebp], 0
  0042d	0f 84 2e 01 00
	00		 je	 $LN3@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00433	33 ff		 xor	 edi, edi
  00435	33 f6		 xor	 esi, esi
  00437	89 bd b4 fe ff
	ff		 mov	 DWORD PTR tv9488[ebp], edi
  0043d	89 b5 c0 fe ff
	ff		 mov	 DWORD PTR tv9538[ebp], esi
$LL4@LoadRaceDa:

; 1584 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00443	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _pSmokeTokenVector$[ebp]
  00449	8b 10		 mov	 edx, DWORD PTR [eax]
  0044b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0044e	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00453	2b ca		 sub	 ecx, edx
  00455	89 95 b8 fe ff
	ff		 mov	 DWORD PTR tv9497[ebp], edx
  0045b	f7 e9		 imul	 ecx
  0045d	c1 fa 02	 sar	 edx, 2
  00460	8b c2		 mov	 eax, edx
  00462	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00465	03 c2		 add	 eax, edx
  00467	3b c7		 cmp	 eax, edi
  00469	0f 86 e6 14 00
	00		 jbe	 $LN2202@LoadRaceDa

; 1586 :         }
; 1587 : 
; 1588 :         return _My_data._Myfirst[_Pos];

  0046f	8b 85 b8 fe ff
	ff		 mov	 eax, DWORD PTR tv9497[ebp]
  00475	03 c6		 add	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  00477	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0047b	72 02		 jb	 SHORT $LN619@LoadRaceDa

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  0047d	8b 00		 mov	 eax, DWORD PTR [eax]
$LN619@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 42   : 			int eSmoke=atoi(pSmokeTokenVector->at(uLine*2+0).c_str());

  0047f	50		 push	 eax
  00480	e8 00 00 00 00	 call	 __atoi64
  00485	8b f8		 mov	 edi, eax
  00487	83 c4 04	 add	 esp, 4

; 43   : 			if (eSmoke<0 || eSmoke>=SMOKE_NUM)

  0048a	85 ff		 test	 edi, edi
  0048c	0f 88 c4 00 00
	00		 js	 $LN19@LoadRaceDa
  00492	83 ff 04	 cmp	 edi, 4
  00495	0f 8d bb 00 00
	00		 jge	 $LN19@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1584 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  0049b	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR _pSmokeTokenVector$[ebp]
  004a1	8b 01		 mov	 eax, DWORD PTR [ecx]
  004a3	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  004a6	2b c8		 sub	 ecx, eax
  004a8	89 85 b8 fe ff
	ff		 mov	 DWORD PTR tv9507[ebp], eax
  004ae	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  004b3	f7 e9		 imul	 ecx
  004b5	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR tv9488[ebp]
  004bb	c1 fa 02	 sar	 edx, 2
  004be	40		 inc	 eax
  004bf	8b ca		 mov	 ecx, edx
  004c1	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  004c4	03 ca		 add	 ecx, edx
  004c6	3b c8		 cmp	 ecx, eax
  004c8	0f 86 87 14 00
	00		 jbe	 $LN2202@LoadRaceDa

; 1586 :         }
; 1587 : 
; 1588 :         return _My_data._Myfirst[_Pos];

  004ce	8b 85 b8 fe ff
	ff		 mov	 eax, DWORD PTR tv9507[ebp]
  004d4	83 c0 18	 add	 eax, 24			; 00000018H
  004d7	03 f0		 add	 esi, eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 51   : 			DWORD& rdwCRCEft=m_adwSmokeEffectID[eSmoke];

  004d9	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  004df	83 c0 08	 add	 eax, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  004e2	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 51   : 			DWORD& rdwCRCEft=m_adwSmokeEffectID[eSmoke];

  004e6	8d 3c b8	 lea	 edi, DWORD PTR [eax+edi*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2305 :         const value_type* _Result = _Bx._Buf;

  004e9	8b c6		 mov	 eax, esi

; 2306 :         if (_Large_string_engaged()) {

  004eb	72 02		 jb	 SHORT $LN2230@LoadRaceDa

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  004ed	8b 06		 mov	 eax, DWORD PTR [esi]
$LN2230@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 52   : 			if (!CEffectManager::Instance().RegisterEffect2(c_rstrEffectFileName.c_str(), &rdwCRCEft))

  004ef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  004f5	6a 00		 push	 0
  004f7	57		 push	 edi
  004f8	50		 push	 eax
  004f9	e8 00 00 00 00	 call	 ?RegisterEffect2@CEffectManager@@QAEHPBDPAK_N@Z ; CEffectManager::RegisterEffect2
  004fe	85 c0		 test	 eax, eax
  00500	74 36		 je	 SHORT $LN2203@LoadRaceDa

; 39   : 
; 40   : 		for (UINT uLine=0; uLine<uLineCount; ++uLine)

  00502	8b bd bc fe ff
	ff		 mov	 edi, DWORD PTR _uLine$1$[ebp]
  00508	8b b5 c0 fe ff
	ff		 mov	 esi, DWORD PTR tv9538[ebp]
  0050e	47		 inc	 edi
  0050f	83 85 b4 fe ff
	ff 02		 add	 DWORD PTR tv9488[ebp], 2
  00516	83 c6 30	 add	 esi, 48			; 00000030H
  00519	89 bd bc fe ff
	ff		 mov	 DWORD PTR _uLine$1$[ebp], edi
  0051f	89 b5 c0 fe ff
	ff		 mov	 DWORD PTR tv9538[ebp], esi
  00525	3b bd a8 fe ff
	ff		 cmp	 edi, DWORD PTR _uLineCount$1$[ebp]
  0052b	73 34		 jae	 SHORT $LN3@LoadRaceDa
  0052d	8b bd b4 fe ff
	ff		 mov	 edi, DWORD PTR tv9488[ebp]
  00533	e9 0b ff ff ff	 jmp	 $LL4@LoadRaceDa
$LN2203@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00538	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2306 :         if (_Large_string_engaged()) {

  0053c	72 02		 jb	 SHORT $LN636@LoadRaceDa

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  0053e	8b 36		 mov	 esi, DWORD PTR [esi]
$LN636@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 54   : 				TraceError("CRaceData::RegisterEffect2(%s) ERROR", c_rstrEffectFileName.c_str());

  00540	56		 push	 esi
  00541	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@GEINCGMO@CRaceData?3?3RegisterEffect2?$CI?$CFs?$CJ?5@
  00546	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError

; 55   : 				rdwCRCEft=0;

  0054b	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0

; 56   : 				return false;

  00551	e9 95 fe ff ff	 jmp	 $LN2255@LoadRaceDa
$LN19@LoadRaceDa:

; 44   : 			{
; 45   : 				TraceError("SmokeFileName SmokeNum[%d] OUT OF RANGE", eSmoke);

  00556	57		 push	 edi
  00557	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@MHBPKAGN@SmokeFileName?5SmokeNum?$FL?$CFd?$FN?5OUT?5@
  0055c	e9 85 fe ff ff	 jmp	 $LN2254@LoadRaceDa
$LN3@LoadRaceDa:

; 57   : 			}
; 58   : 		}
; 59   : 	}
; 60   : 
; 61   : 	if (TextFileLoader.SetChildNode("shapedata"))

  00561	68 00 00 00 00	 push	 OFFSET ??_C@_09IOJGLPMI@shapedata@
  00566	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0056c	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  00571	85 c0		 test	 eax, eax
  00573	0f 84 b0 0b 00
	00		 je	 $LN1651@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00579	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _strPathName$24[ebp], 0

; 4596 :         _My_data._Mysize = 0;

  00583	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _strPathName$24[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0058d	c7 85 74 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR _strPathName$24[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00597	c6 85 60 ff ff
	ff 00		 mov	 BYTE PTR _strPathName$24[ebp], 0

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0059e	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_08PEIJGPHF@pathname@
  005a3	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_08PEIJGPHF@pathname@+4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 64   : 		DWORD dwShapeDataCount = 0;

  005a9	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _dwShapeDataCount$5[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  005b3	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T54[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  005ba	c7 45 e8 08 00
	00 00		 mov	 DWORD PTR $T54[ebp+16], 8

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  005c1	89 45 d8	 mov	 DWORD PTR $T54[ebp], eax
  005c4	89 4d dc	 mov	 DWORD PTR $T54[ebp+4], ecx

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  005c7	c6 45 e0 00	 mov	 BYTE PTR $T54[ebp+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 65   : 		if (TextFileLoader.GetTokenString("pathname", &strPathName) &&

  005cb	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _strPathName$24[ebp]
  005d1	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  005d5	50		 push	 eax
  005d6	8d 45 d8	 lea	 eax, DWORD PTR $T54[ebp]
  005d9	bb 01 00 00 00	 mov	 ebx, 1
  005de	50		 push	 eax
  005df	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  005e5	89 9d c0 fe ff
	ff		 mov	 DWORD PTR $T6[ebp], ebx
  005eb	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  005f0	85 c0		 test	 eax, eax
  005f2	74 64		 je	 SHORT $LN39@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  005f4	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0P@BDBLEP@shapedatacount@+8
  005f9	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0P@BDBLEP@shapedatacount@
  00601	89 45 b0	 mov	 DWORD PTR $T31[ebp+8], eax
  00604	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0P@BDBLEP@shapedatacount@+12

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0060a	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T31[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  00611	c7 45 b8 0e 00
	00 00		 mov	 DWORD PTR $T31[ebp+16], 14 ; 0000000eH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00618	66 0f d6 45 a8	 movq	 QWORD PTR $T31[ebp], xmm0
  0061d	66 89 45 b4	 mov	 WORD PTR $T31[ebp+12], ax

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00621	c6 45 b6 00	 mov	 BYTE PTR $T31[ebp+14], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 65   : 		if (TextFileLoader.GetTokenString("pathname", &strPathName) &&

  00625	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _dwShapeDataCount$5[ebp]
  0062b	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 9
  00632	50		 push	 eax
  00633	8d 45 a8	 lea	 eax, DWORD PTR $T31[ebp]
  00636	bb 03 00 00 00	 mov	 ebx, 3
  0063b	50		 push	 eax
  0063c	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00642	89 9d c0 fe ff
	ff		 mov	 DWORD PTR $T6[ebp], ebx
  00648	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
  0064d	c6 85 c7 fe ff
	ff 01		 mov	 BYTE PTR $T17[ebp], 1
  00654	85 c0		 test	 eax, eax
  00656	75 07		 jne	 SHORT $LN40@LoadRaceDa
$LN39@LoadRaceDa:
  00658	c6 85 c7 fe ff
	ff 00		 mov	 BYTE PTR $T17[ebp], 0
$LN40@LoadRaceDa:
  0065f	c7 45 fc 08 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 8
  00666	f6 c3 02	 test	 bl, 2
  00669	74 49		 je	 SHORT $LN802@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0066b	8b 55 bc	 mov	 edx, DWORD PTR $T31[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 65   : 		if (TextFileLoader.GetTokenString("pathname", &strPathName) &&

  0066e	83 e3 fd	 and	 ebx, -3			; fffffffdH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00671	83 fa 10	 cmp	 edx, 16			; 00000010H
  00674	72 2c		 jb	 SHORT $LN809@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00676	8b 4d a8	 mov	 ecx, DWORD PTR $T31[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00679	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0067a	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0067c	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00682	72 14		 jb	 SHORT $LN819@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00684	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00687	83 c2 23	 add	 edx, 35			; 00000023H
  0068a	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0068c	83 c0 fc	 add	 eax, -4			; fffffffcH
  0068f	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00692	0f 87 c2 12 00
	00		 ja	 $LN843@LoadRaceDa
$LN819@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00698	52		 push	 edx
  00699	51		 push	 ecx
  0069a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0069f	83 c4 08	 add	 esp, 8
$LN809@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  006a2	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T31[ebp+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  006a9	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T31[ebp+20], 15 ; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  006b0	c6 45 a8 00	 mov	 BYTE PTR $T31[ebp], 0
$LN802@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 65   : 		if (TextFileLoader.GetTokenString("pathname", &strPathName) &&

  006b4	c7 45 fc 07 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 7
  006bb	f6 c3 01	 test	 bl, 1
  006be	74 37		 je	 SHORT $LN836@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  006c0	8b 55 ec	 mov	 edx, DWORD PTR $T54[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 65   : 		if (TextFileLoader.GetTokenString("pathname", &strPathName) &&

  006c3	83 e3 fe	 and	 ebx, -2			; fffffffeH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  006c6	83 fa 10	 cmp	 edx, 16			; 00000010H
  006c9	72 2c		 jb	 SHORT $LN836@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  006cb	8b 4d d8	 mov	 ecx, DWORD PTR $T54[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  006ce	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  006cf	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  006d1	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  006d7	72 14		 jb	 SHORT $LN846@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  006d9	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  006dc	83 c2 23	 add	 edx, 35			; 00000023H
  006df	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  006e1	83 c0 fc	 add	 eax, -4			; fffffffcH
  006e4	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  006e7	0f 87 6d 12 00
	00		 ja	 $LN843@LoadRaceDa
$LN846@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  006ed	52		 push	 edx
  006ee	51		 push	 ecx
  006ef	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  006f4	83 c4 08	 add	 esp, 8
$LN836@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 65   : 		if (TextFileLoader.GetTokenString("pathname", &strPathName) &&

  006f7	80 bd c7 fe ff
	ff 00		 cmp	 BYTE PTR $T17[ebp], 0
  006fe	0f 84 dc 09 00
	00		 je	 $LN2232@LoadRaceDa

; 68   : 			for (DWORD i = 0; i < dwShapeDataCount; ++i)

  00704	33 c9		 xor	 ecx, ecx
  00706	89 8d b8 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], ecx
  0070c	39 8d bc fe ff
	ff		 cmp	 DWORD PTR _dwShapeDataCount$5[ebp], ecx
  00712	0f 86 c8 09 00
	00		 jbe	 $LN2232@LoadRaceDa
  00718	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL7@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00720	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_09IOJGLPMI@shapedata@
  00728	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_09IOJGLPMI@shapedata@+8

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0072d	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T53[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  00734	c7 45 e8 09 00
	00 00		 mov	 DWORD PTR $T53[ebp+16], 9

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0073b	66 0f d6 45 d8	 movq	 QWORD PTR $T53[ebp], xmm0
  00740	88 45 e0	 mov	 BYTE PTR $T53[ebp+8], al

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00743	c6 45 e1 00	 mov	 BYTE PTR $T53[ebp+9], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 70   : 				if (!TextFileLoader.SetChildNode("shapedata", i))

  00747	51		 push	 ecx
  00748	8d 45 d8	 lea	 eax, DWORD PTR $T53[ebp]
  0074b	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  0074f	50		 push	 eax
  00750	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00756	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; CTextFileLoader::SetChildNode
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0075b	8b 55 ec	 mov	 edx, DWORD PTR $T53[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 70   : 				if (!TextFileLoader.SetChildNode("shapedata", i))

  0075e	85 c0		 test	 eax, eax
  00760	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00764	0f 94 c0	 sete	 al
  00767	88 85 c7 fe ff
	ff		 mov	 BYTE PTR $T16[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0076d	83 fa 10	 cmp	 edx, 16			; 00000010H
  00770	72 32		 jb	 SHORT $LN935@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00772	8b 4d d8	 mov	 ecx, DWORD PTR $T53[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00775	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00776	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00778	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0077e	72 14		 jb	 SHORT $LN945@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00780	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00783	83 c2 23	 add	 edx, 35			; 00000023H
  00786	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00788	83 c0 fc	 add	 eax, -4			; fffffffcH
  0078b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0078e	0f 87 9e 11 00
	00		 ja	 $LN942@LoadRaceDa
$LN945@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00794	52		 push	 edx
  00795	51		 push	 ecx
  00796	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0079b	8a 85 c7 fe ff
	ff		 mov	 al, BYTE PTR $T16[ebp]
  007a1	83 c4 08	 add	 esp, 8
$LN935@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 70   : 				if (!TextFileLoader.SetChildNode("shapedata", i))

  007a4	84 c0		 test	 al, al
  007a6	0f 85 1b 09 00
	00		 jne	 $LN5@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  007ac	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0M@GCDLCIFI@specialpath@+8
  007b2	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0M@GCDLCIFI@specialpath@
  007ba	66 89 45 e0	 mov	 WORD PTR $T52[ebp+8], ax
  007be	a0 0a 00 00 00	 mov	 al, BYTE PTR ??_C@_0M@GCDLCIFI@specialpath@+10

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  007c3	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T52[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  007ca	c7 45 e8 0b 00
	00 00		 mov	 DWORD PTR $T52[ebp+16], 11 ; 0000000bH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  007d1	66 0f d6 45 d8	 movq	 QWORD PTR $T52[ebp], xmm0
  007d6	88 45 e2	 mov	 BYTE PTR $T52[ebp+10], al

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  007d9	c6 45 e3 00	 mov	 BYTE PTR $T52[ebp+11], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 77   : 				TextFileLoader.GetTokenString("specialpath", &strPathName);

  007dd	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _strPathName$24[ebp]
  007e3	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  007e7	50		 push	 eax
  007e8	8d 45 d8	 lea	 eax, DWORD PTR $T52[ebp]
  007eb	50		 push	 eax
  007ec	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  007f2	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  007f7	8b 55 ec	 mov	 edx, DWORD PTR $T52[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 77   : 				TextFileLoader.GetTokenString("specialpath", &strPathName);

  007fa	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  007fe	83 fa 10	 cmp	 edx, 16			; 00000010H
  00801	72 2c		 jb	 SHORT $LN1034@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00803	8b 4d d8	 mov	 ecx, DWORD PTR $T52[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00806	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00807	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00809	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0080f	72 14		 jb	 SHORT $LN1044@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00811	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00814	83 c2 23	 add	 edx, 35			; 00000023H
  00817	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00819	83 c0 fc	 add	 eax, -4			; fffffffcH
  0081c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0081f	0f 87 0d 11 00
	00		 ja	 $LN942@LoadRaceDa
$LN1044@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00825	52		 push	 edx
  00826	51		 push	 ecx
  00827	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0082c	83 c4 08	 add	 esp, 8
$LN1034@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0082f	6a 0a		 push	 10			; 0000000aH

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00831	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T51[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00838	8d 4d d8	 lea	 ecx, DWORD PTR $T51[ebp]
  0083b	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BLAJFEIP@shapeindex@

; 4596 :         _My_data._Mysize = 0;

  00840	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T51[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00847	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T51[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0084e	c6 45 d8 00	 mov	 BYTE PTR $T51[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00852	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 81   : 				if (!TextFileLoader.GetTokenDoubleWord("shapeindex", &dwShapeIndex))

  00857	8d 85 b4 fe ff
	ff		 lea	 eax, DWORD PTR _dwShapeIndex$3[ebp]
  0085d	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  00861	50		 push	 eax
  00862	8d 45 d8	 lea	 eax, DWORD PTR $T51[ebp]
  00865	50		 push	 eax
  00866	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  0086c	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00871	8b 55 ec	 mov	 edx, DWORD PTR $T51[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 81   : 				if (!TextFileLoader.GetTokenDoubleWord("shapeindex", &dwShapeIndex))

  00874	85 c0		 test	 eax, eax
  00876	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  0087a	0f 94 c0	 sete	 al
  0087d	88 85 c7 fe ff
	ff		 mov	 BYTE PTR $T15[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00883	83 fa 10	 cmp	 edx, 16			; 00000010H
  00886	72 32		 jb	 SHORT $LN1077@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00888	8b 4d d8	 mov	 ecx, DWORD PTR $T51[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0088b	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0088c	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0088e	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00894	72 14		 jb	 SHORT $LN1087@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00896	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00899	83 c2 23	 add	 edx, 35			; 00000023H
  0089c	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0089e	83 c0 fc	 add	 eax, -4			; fffffffcH
  008a1	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  008a4	0f 87 88 10 00
	00		 ja	 $LN942@LoadRaceDa
$LN1087@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  008aa	52		 push	 edx
  008ab	51		 push	 ecx
  008ac	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  008b1	8a 85 c7 fe ff
	ff		 mov	 al, BYTE PTR $T15[ebp]
  008b7	83 c4 08	 add	 esp, 8
$LN1077@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 81   : 				if (!TextFileLoader.GetTokenDoubleWord("shapeindex", &dwShapeIndex))

  008ba	84 c0		 test	 al, al
  008bc	0f 85 05 08 00
	00		 jne	 $LN5@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  008c2	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _strModel$30[ebp], 0

; 4596 :         _My_data._Mysize = 0;

  008c9	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _strModel$30[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  008d0	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR _strModel$30[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  008d7	88 45 a8	 mov	 BYTE PTR _strModel$30[ebp], al

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  008da	6a 05		 push	 5

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  008dc	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T50[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  008e3	8d 4d d8	 lea	 ecx, DWORD PTR $T50[ebp]
  008e6	68 00 00 00 00	 push	 OFFSET ??_C@_05NCCFOPHA@model@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 87   : 				std::string strModel;

  008eb	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4596 :         _My_data._Mysize = 0;

  008ef	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T50[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  008f6	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T50[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  008fd	88 45 d8	 mov	 BYTE PTR $T50[ebp], al

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00900	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 88   : 				if (TextFileLoader.GetTokenString("model", &strModel))

  00905	8d 45 a8	 lea	 eax, DWORD PTR _strModel$30[ebp]
  00908	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  0090c	50		 push	 eax
  0090d	8d 45 d8	 lea	 eax, DWORD PTR $T50[ebp]
  00910	50		 push	 eax
  00911	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00917	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0091c	8b 55 ec	 mov	 edx, DWORD PTR $T50[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 88   : 				if (TextFileLoader.GetTokenString("model", &strModel))

  0091f	8b f0		 mov	 esi, eax
  00921	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00925	83 fa 10	 cmp	 edx, 16			; 00000010H
  00928	72 2c		 jb	 SHORT $LN1133@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0092a	8b 4d d8	 mov	 ecx, DWORD PTR $T50[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0092d	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0092e	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00930	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00936	72 14		 jb	 SHORT $LN1143@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00938	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0093b	83 c2 23	 add	 edx, 35			; 00000023H
  0093e	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00940	83 c0 fc	 add	 eax, -4			; fffffffcH
  00943	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00946	0f 87 e6 0f 00
	00		 ja	 $LN942@LoadRaceDa
$LN1143@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0094c	52		 push	 edx
  0094d	51		 push	 ecx
  0094e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00953	83 c4 08	 add	 esp, 8
$LN1133@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 88   : 				if (TextFileLoader.GetTokenString("model", &strModel))

  00956	85 f6		 test	 esi, esi
  00958	74 4a		 je	 SHORT $LN25@LoadRaceDa

; 90   : 					SetShapeModel(dwShapeIndex, (strPathName + strModel).c_str());

  0095a	8d 45 a8	 lea	 eax, DWORD PTR _strModel$30[ebp]
  0095d	50		 push	 eax
  0095e	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _strPathName$24[ebp]
  00964	50		 push	 eax
  00965	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR $T21[ebp]
  0096b	50		 push	 eax
  0096c	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00971	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  00974	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 90   : 					SetShapeModel(dwShapeIndex, (strPathName + strModel).c_str());

  00978	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  0097c	72 02		 jb	 SHORT $LN1151@LoadRaceDa

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  0097e	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1151@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 90   : 					SetShapeModel(dwShapeIndex, (strPathName + strModel).c_str());

  00980	8b bd b0 fe ff
	ff		 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
  00986	8b cf		 mov	 ecx, edi
  00988	50		 push	 eax
  00989	ff b5 b4 fe ff
	ff		 push	 DWORD PTR _dwShapeIndex$3[ebp]
  0098f	e8 00 00 00 00	 call	 ?SetShapeModel@CRaceData@@QAEXIPBD@Z ; CRaceData::SetShapeModel
  00994	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T21[ebp]
  0099a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 91   : 				}

  0099f	e9 af 00 00 00	 jmp	 $LN26@LoadRaceDa
$LN25@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  009a4	6a 0b		 push	 11			; 0000000bH

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  009a6	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T49[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  009ad	8d 4d d8	 lea	 ecx, DWORD PTR $T49[ebp]
  009b0	68 00 00 00 00	 push	 OFFSET ??_C@_0M@NFFHMNPF@local_model@

; 4596 :         _My_data._Mysize = 0;

  009b5	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T49[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  009bc	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T49[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  009c3	c6 45 d8 00	 mov	 BYTE PTR $T49[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  009c7	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 94   : 					if (!TextFileLoader.GetTokenString("local_model", &strModel))

  009cc	8d 45 a8	 lea	 eax, DWORD PTR _strModel$30[ebp]
  009cf	c6 45 fc 10	 mov	 BYTE PTR __$EHRec$[ebp+8], 16 ; 00000010H
  009d3	50		 push	 eax
  009d4	8d 45 d8	 lea	 eax, DWORD PTR $T49[ebp]
  009d7	50		 push	 eax
  009d8	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  009de	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  009e3	8b 55 ec	 mov	 edx, DWORD PTR $T49[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 94   : 					if (!TextFileLoader.GetTokenString("local_model", &strModel))

  009e6	85 c0		 test	 eax, eax
  009e8	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  009ec	0f 94 c0	 sete	 al
  009ef	88 85 c7 fe ff
	ff		 mov	 BYTE PTR $T14[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  009f5	83 fa 10	 cmp	 edx, 16			; 00000010H
  009f8	72 32		 jb	 SHORT $LN1183@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  009fa	8b 4d d8	 mov	 ecx, DWORD PTR $T49[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  009fd	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  009fe	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00a00	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00a06	72 14		 jb	 SHORT $LN1193@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00a08	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00a0b	83 c2 23	 add	 edx, 35			; 00000023H
  00a0e	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00a10	83 c0 fc	 add	 eax, -4			; fffffffcH
  00a13	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00a16	0f 87 16 0f 00
	00		 ja	 $LN942@LoadRaceDa
$LN1193@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00a1c	52		 push	 edx
  00a1d	51		 push	 ecx
  00a1e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00a23	8a 85 c7 fe ff
	ff		 mov	 al, BYTE PTR $T14[ebp]
  00a29	83 c4 08	 add	 esp, 8
$LN1183@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 94   : 					if (!TextFileLoader.GetTokenString("local_model", &strModel))

  00a2c	84 c0		 test	 al, al
  00a2e	0f 85 5b 06 00
	00		 jne	 $LN2253@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  00a34	83 7d bc 10	 cmp	 DWORD PTR _strModel$30[ebp+20], 16 ; 00000010H
  00a38	8d 45 a8	 lea	 eax, DWORD PTR _strModel$30[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 97   : 					SetShapeModel(dwShapeIndex, strModel.c_str());

  00a3b	8b bd b0 fe ff
	ff		 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
  00a41	8b cf		 mov	 ecx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  00a43	0f 43 45 a8	 cmovae	 eax, DWORD PTR _strModel$30[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 97   : 					SetShapeModel(dwShapeIndex, strModel.c_str());

  00a47	50		 push	 eax
  00a48	ff b5 b4 fe ff
	ff		 push	 DWORD PTR _dwShapeIndex$3[ebp]
  00a4e	e8 00 00 00 00	 call	 ?SetShapeModel@CRaceData@@QAEXIPBD@Z ; CRaceData::SetShapeModel
$LN26@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00a53	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _strSourceSkin$26[ebp], 0

; 4596 :         _My_data._Mysize = 0;

  00a5d	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _strSourceSkin$26[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00a64	c7 45 8c 0f 00
	00 00		 mov	 DWORD PTR _strSourceSkin$26[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00a6b	c6 85 78 ff ff
	ff 00		 mov	 BYTE PTR _strSourceSkin$26[ebp], 0

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00a72	c7 45 90 00 00
	00 00		 mov	 DWORD PTR _strTargetSkin$28[ebp], 0

; 4596 :         _My_data._Mysize = 0;

  00a79	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _strTargetSkin$28[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00a80	c7 45 a4 0f 00
	00 00		 mov	 DWORD PTR _strTargetSkin$28[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00a87	c6 45 90 00	 mov	 BYTE PTR _strTargetSkin$28[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00a8b	6a 10		 push	 16			; 00000010H

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00a8d	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR $T42[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00a94	8d 4d c0	 lea	 ecx, DWORD PTR $T42[ebp]
  00a97	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@OAFGNDMP@local_sourceskin@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 104  : 				std::string strTargetSkin;

  00a9c	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4596 :         _My_data._Mysize = 0;

  00aa0	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T42[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00aa7	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T42[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00aae	c6 45 c0 00	 mov	 BYTE PTR $T42[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00ab2	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 110  : 				if (TextFileLoader.GetTokenString("local_sourceskin", &strSourceSkin) &&

  00ab7	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strSourceSkin$26[ebp]
  00abd	c6 45 fc 13	 mov	 BYTE PTR __$EHRec$[ebp+8], 19 ; 00000013H
  00ac1	50		 push	 eax
  00ac2	8d 45 c0	 lea	 eax, DWORD PTR $T42[ebp]
  00ac5	83 cb 04	 or	 ebx, 4
  00ac8	50		 push	 eax
  00ac9	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00acf	89 9d c0 fe ff
	ff		 mov	 DWORD PTR $T6[ebp], ebx
  00ad5	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00ada	85 c0		 test	 eax, eax
  00adc	74 56		 je	 SHORT $LN41@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00ade	6a 10		 push	 16			; 00000010H

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00ae0	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T48[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00ae7	8d 4d d8	 lea	 ecx, DWORD PTR $T48[ebp]
  00aea	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@CMMEEAHN@local_targetskin@

; 4596 :         _My_data._Mysize = 0;

  00aef	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T48[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00af6	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T48[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00afd	c6 45 d8 00	 mov	 BYTE PTR $T48[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00b01	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 110  : 				if (TextFileLoader.GetTokenString("local_sourceskin", &strSourceSkin) &&

  00b06	8d 45 90	 lea	 eax, DWORD PTR _strTargetSkin$28[ebp]
  00b09	c7 45 fc 14 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 20 ; 00000014H
  00b10	50		 push	 eax
  00b11	8d 45 d8	 lea	 eax, DWORD PTR $T48[ebp]
  00b14	83 cb 08	 or	 ebx, 8
  00b17	50		 push	 eax
  00b18	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00b1e	89 9d c0 fe ff
	ff		 mov	 DWORD PTR $T6[ebp], ebx
  00b24	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00b29	c6 85 c7 fe ff
	ff 01		 mov	 BYTE PTR $T13[ebp], 1
  00b30	85 c0		 test	 eax, eax
  00b32	75 07		 jne	 SHORT $LN42@LoadRaceDa
$LN41@LoadRaceDa:
  00b34	c6 85 c7 fe ff
	ff 00		 mov	 BYTE PTR $T13[ebp], 0
$LN42@LoadRaceDa:
  00b3b	c7 45 fc 13 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 19 ; 00000013H
  00b42	f6 c3 08	 test	 bl, 8
  00b45	74 49		 je	 SHORT $LN1295@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00b47	8b 55 ec	 mov	 edx, DWORD PTR $T48[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 110  : 				if (TextFileLoader.GetTokenString("local_sourceskin", &strSourceSkin) &&

  00b4a	83 e3 f7	 and	 ebx, -9			; fffffff7H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00b4d	83 fa 10	 cmp	 edx, 16			; 00000010H
  00b50	72 2c		 jb	 SHORT $LN1302@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00b52	8b 4d d8	 mov	 ecx, DWORD PTR $T48[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00b55	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00b56	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00b58	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00b5e	72 14		 jb	 SHORT $LN1312@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00b60	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00b63	83 c2 23	 add	 edx, 35			; 00000023H
  00b66	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00b68	83 c0 fc	 add	 eax, -4			; fffffffcH
  00b6b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00b6e	0f 87 be 0d 00
	00		 ja	 $LN942@LoadRaceDa
$LN1312@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00b74	52		 push	 edx
  00b75	51		 push	 ecx
  00b76	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00b7b	83 c4 08	 add	 esp, 8
$LN1302@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00b7e	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T48[ebp+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00b85	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T48[ebp+20], 15 ; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00b8c	c6 45 d8 00	 mov	 BYTE PTR $T48[ebp], 0
$LN1295@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 110  : 				if (TextFileLoader.GetTokenString("local_sourceskin", &strSourceSkin) &&

  00b90	c7 45 fc 12 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00b97	f6 c3 04	 test	 bl, 4
  00b9a	74 37		 je	 SHORT $LN1329@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00b9c	8b 55 d4	 mov	 edx, DWORD PTR $T42[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 110  : 				if (TextFileLoader.GetTokenString("local_sourceskin", &strSourceSkin) &&

  00b9f	83 e3 fb	 and	 ebx, -5			; fffffffbH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00ba2	83 fa 10	 cmp	 edx, 16			; 00000010H
  00ba5	72 2c		 jb	 SHORT $LN1329@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00ba7	8b 4d c0	 mov	 ecx, DWORD PTR $T42[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00baa	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00bab	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00bad	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00bb3	72 14		 jb	 SHORT $LN1339@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00bb5	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00bb8	83 c2 23	 add	 edx, 35			; 00000023H
  00bbb	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00bbd	83 c0 fc	 add	 eax, -4			; fffffffcH
  00bc0	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00bc3	0f 87 69 0d 00
	00		 ja	 $LN942@LoadRaceDa
$LN1339@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00bc9	52		 push	 edx
  00bca	51		 push	 ecx
  00bcb	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00bd0	83 c4 08	 add	 esp, 8
$LN1329@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 110  : 				if (TextFileLoader.GetTokenString("local_sourceskin", &strSourceSkin) &&

  00bd3	80 bd c7 fe ff
	ff 00		 cmp	 BYTE PTR $T13[ebp], 0
  00bda	74 2d		 je	 SHORT $LN28@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  00bdc	83 7d a4 10	 cmp	 DWORD PTR _strTargetSkin$28[ebp+20], 16 ; 00000010H
  00be0	8d 4d 90	 lea	 ecx, DWORD PTR _strTargetSkin$28[ebp]

; 2305 :         const value_type* _Result = _Bx._Buf;

  00be3	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strSourceSkin$26[ebp]

; 2306 :         if (_Large_string_engaged()) {

  00be9	0f 43 4d 90	 cmovae	 ecx, DWORD PTR _strTargetSkin$28[ebp]
  00bed	83 7d 8c 10	 cmp	 DWORD PTR _strSourceSkin$26[ebp+20], 16 ; 00000010H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 113  : 					AppendShapeSkin(dwShapeIndex, 0, strSourceSkin.c_str(), strTargetSkin.c_str());

  00bf1	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  00bf2	0f 43 85 78 ff
	ff ff		 cmovae	 eax, DWORD PTR _strSourceSkin$26[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 113  : 					AppendShapeSkin(dwShapeIndex, 0, strSourceSkin.c_str(), strTargetSkin.c_str());

  00bf9	8b cf		 mov	 ecx, edi
  00bfb	50		 push	 eax
  00bfc	6a 00		 push	 0
  00bfe	ff b5 b4 fe ff
	ff		 push	 DWORD PTR _dwShapeIndex$3[ebp]
  00c04	e8 00 00 00 00	 call	 ?AppendShapeSkin@CRaceData@@QAEXIIPBD0@Z ; CRaceData::AppendShapeSkin
$LN28@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00c09	6a 0a		 push	 10			; 0000000aH

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00c0b	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR $T41[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00c12	8d 4d c0	 lea	 ecx, DWORD PTR $T41[ebp]
  00c15	68 00 00 00 00	 push	 OFFSET ??_C@_0L@ILFPKBGB@sourceskin@

; 4596 :         _My_data._Mysize = 0;

  00c1a	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T41[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00c21	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T41[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00c28	c6 45 c0 00	 mov	 BYTE PTR $T41[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00c2c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 117  : 				if (TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  00c31	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strSourceSkin$26[ebp]
  00c37	c6 45 fc 15	 mov	 BYTE PTR __$EHRec$[ebp+8], 21 ; 00000015H
  00c3b	50		 push	 eax
  00c3c	8d 45 c0	 lea	 eax, DWORD PTR $T41[ebp]
  00c3f	83 cb 10	 or	 ebx, 16			; 00000010H
  00c42	50		 push	 eax
  00c43	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00c49	89 9d c0 fe ff
	ff		 mov	 DWORD PTR $T6[ebp], ebx
  00c4f	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00c54	85 c0		 test	 eax, eax
  00c56	74 56		 je	 SHORT $LN43@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00c58	6a 0a		 push	 10			; 0000000aH

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00c5a	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T47[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00c61	8d 4d d8	 lea	 ecx, DWORD PTR $T47[ebp]
  00c64	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EHMNDCND@targetskin@

; 4596 :         _My_data._Mysize = 0;

  00c69	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T47[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00c70	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T47[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00c77	c6 45 d8 00	 mov	 BYTE PTR $T47[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00c7b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 117  : 				if (TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  00c80	8d 45 90	 lea	 eax, DWORD PTR _strTargetSkin$28[ebp]
  00c83	c7 45 fc 16 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 22 ; 00000016H
  00c8a	50		 push	 eax
  00c8b	8d 45 d8	 lea	 eax, DWORD PTR $T47[ebp]
  00c8e	83 cb 20	 or	 ebx, 32			; 00000020H
  00c91	50		 push	 eax
  00c92	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00c98	89 9d c0 fe ff
	ff		 mov	 DWORD PTR $T6[ebp], ebx
  00c9e	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00ca3	c6 85 c7 fe ff
	ff 01		 mov	 BYTE PTR $T12[ebp], 1
  00caa	85 c0		 test	 eax, eax
  00cac	75 07		 jne	 SHORT $LN44@LoadRaceDa
$LN43@LoadRaceDa:
  00cae	c6 85 c7 fe ff
	ff 00		 mov	 BYTE PTR $T12[ebp], 0
$LN44@LoadRaceDa:
  00cb5	c7 45 fc 15 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 21 ; 00000015H
  00cbc	f6 c3 20	 test	 bl, 32			; 00000020H
  00cbf	74 49		 je	 SHORT $LN1395@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00cc1	8b 55 ec	 mov	 edx, DWORD PTR $T47[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 117  : 				if (TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  00cc4	83 e3 df	 and	 ebx, -33		; ffffffdfH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00cc7	83 fa 10	 cmp	 edx, 16			; 00000010H
  00cca	72 2c		 jb	 SHORT $LN1402@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00ccc	8b 4d d8	 mov	 ecx, DWORD PTR $T47[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00ccf	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00cd0	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00cd2	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00cd8	72 14		 jb	 SHORT $LN1412@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00cda	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00cdd	83 c2 23	 add	 edx, 35			; 00000023H
  00ce0	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00ce2	83 c0 fc	 add	 eax, -4			; fffffffcH
  00ce5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00ce8	0f 87 44 0c 00
	00		 ja	 $LN942@LoadRaceDa
$LN1412@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00cee	52		 push	 edx
  00cef	51		 push	 ecx
  00cf0	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00cf5	83 c4 08	 add	 esp, 8
$LN1402@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00cf8	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T47[ebp+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00cff	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T47[ebp+20], 15 ; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00d06	c6 45 d8 00	 mov	 BYTE PTR $T47[ebp], 0
$LN1395@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 117  : 				if (TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  00d0a	c7 45 fc 12 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00d11	f6 c3 10	 test	 bl, 16			; 00000010H
  00d14	74 37		 je	 SHORT $LN1429@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00d16	8b 55 d4	 mov	 edx, DWORD PTR $T41[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 117  : 				if (TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  00d19	83 e3 ef	 and	 ebx, -17		; ffffffefH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00d1c	83 fa 10	 cmp	 edx, 16			; 00000010H
  00d1f	72 2c		 jb	 SHORT $LN1429@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00d21	8b 4d c0	 mov	 ecx, DWORD PTR $T41[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00d24	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00d25	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00d27	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00d2d	72 14		 jb	 SHORT $LN1439@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00d2f	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00d32	83 c2 23	 add	 edx, 35			; 00000023H
  00d35	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00d37	83 c0 fc	 add	 eax, -4			; fffffffcH
  00d3a	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00d3d	0f 87 ef 0b 00
	00		 ja	 $LN942@LoadRaceDa
$LN1439@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00d43	52		 push	 edx
  00d44	51		 push	 ecx
  00d45	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00d4a	83 c4 08	 add	 esp, 8
$LN1429@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 117  : 				if (TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  00d4d	80 bd c7 fe ff
	ff 00		 cmp	 BYTE PTR $T12[ebp], 0
  00d54	74 73		 je	 SHORT $LN29@LoadRaceDa

; 120  : 					AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00d56	8d 45 90	 lea	 eax, DWORD PTR _strTargetSkin$28[ebp]
  00d59	50		 push	 eax
  00d5a	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _strPathName$24[ebp]
  00d60	50		 push	 eax
  00d61	8d 45 c0	 lea	 eax, DWORD PTR $T40[ebp]
  00d64	50		 push	 eax
  00d65	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00d6a	8b f0		 mov	 esi, eax
  00d6c	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strSourceSkin$26[ebp]
  00d72	c6 45 fc 17	 mov	 BYTE PTR __$EHRec$[ebp+8], 23 ; 00000017H
  00d76	50		 push	 eax
  00d77	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _strPathName$24[ebp]
  00d7d	50		 push	 eax
  00d7e	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR $T20[ebp]
  00d84	50		 push	 eax
  00d85	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00d8a	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  00d8d	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 120  : 					AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00d91	c6 45 fc 18	 mov	 BYTE PTR __$EHRec$[ebp+8], 24 ; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  00d95	72 02		 jb	 SHORT $LN1447@LoadRaceDa

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00d97	8b 36		 mov	 esi, DWORD PTR [esi]
$LN1447@LoadRaceDa:

; 2306 :         if (_Large_string_engaged()) {

  00d99	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00d9d	72 02		 jb	 SHORT $LN1454@LoadRaceDa

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00d9f	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1454@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 120  : 					AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00da1	56		 push	 esi
  00da2	50		 push	 eax
  00da3	6a 00		 push	 0
  00da5	ff b5 b4 fe ff
	ff		 push	 DWORD PTR _dwShapeIndex$3[ebp]
  00dab	8b cf		 mov	 ecx, edi
  00dad	e8 00 00 00 00	 call	 ?AppendShapeSkin@CRaceData@@QAEXIIPBD0@Z ; CRaceData::AppendShapeSkin
  00db2	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T20[ebp]
  00db8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00dbd	8d 4d c0	 lea	 ecx, DWORD PTR $T40[ebp]
  00dc0	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00dc4	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN29@LoadRaceDa:

; 121  : 				}
; 122  : #ifdef ENABLE_SKIN_EXTENDED
; 123  : 				for (DWORD i=2; i<=9; i++)

  00dc9	bf 02 00 00 00	 mov	 edi, 2
  00dce	66 90		 npad	 2
$LL10@LoadRaceDa:

; 124  : 				{
; 125  : 					_snprintf(__szSkin1, sizeof(__szSkin1), "sourceskin%u", i);

  00dd0	57		 push	 edi
  00dd1	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LBPJELHP@sourceskin?$CFu@
  00dd6	6a 0c		 push	 12			; 0000000cH
  00dd8	68 00 00 00 00	 push	 OFFSET ?__szSkin1@?BN@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA
  00ddd	e8 00 00 00 00	 call	 __snprintf

; 126  : 					_snprintf(__szSkin2, sizeof(__szSkin2), "targetskin%u", i);

  00de2	57		 push	 edi
  00de3	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OAMIJCJ@targetskin?$CFu@
  00de8	6a 0c		 push	 12			; 0000000cH
  00dea	68 00 00 00 00	 push	 OFFSET ?__szSkin2@?BN@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA
  00def	e8 00 00 00 00	 call	 __snprintf
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00df4	b9 00 00 00 00	 mov	 ecx, OFFSET ?__szSkin1@?BN@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00df9	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR $T39[ebp], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 126  : 					_snprintf(__szSkin2, sizeof(__szSkin2), "targetskin%u", i);

  00e00	83 c4 20	 add	 esp, 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4596 :         _My_data._Mysize = 0;

  00e03	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T39[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00e0a	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T39[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00e11	c6 45 c0 00	 mov	 BYTE PTR $T39[ebp], 0

; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00e15	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL2235@LoadRaceDa:
  00e18	8a 01		 mov	 al, BYTE PTR [ecx]
  00e1a	41		 inc	 ecx
  00e1b	84 c0		 test	 al, al
  00e1d	75 f9		 jne	 SHORT $LL2235@LoadRaceDa
  00e1f	2b ca		 sub	 ecx, edx

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00e21	51		 push	 ecx
  00e22	68 00 00 00 00	 push	 OFFSET ?__szSkin1@?BN@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA
  00e27	8d 4d c0	 lea	 ecx, DWORD PTR $T39[ebp]
  00e2a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 127  : 					if (TextFileLoader.GetTokenString(__szSkin1, &strSourceSkin) &&

  00e2f	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strSourceSkin$26[ebp]
  00e35	c6 45 fc 19	 mov	 BYTE PTR __$EHRec$[ebp+8], 25 ; 00000019H
  00e39	50		 push	 eax
  00e3a	8d 45 c0	 lea	 eax, DWORD PTR $T39[ebp]
  00e3d	83 cb 40	 or	 ebx, 64			; 00000040H
  00e40	50		 push	 eax
  00e41	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00e47	89 9d c0 fe ff
	ff		 mov	 DWORD PTR $T6[ebp], ebx
  00e4d	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00e52	85 c0		 test	 eax, eax
  00e54	74 69		 je	 SHORT $LN45@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00e56	b9 00 00 00 00	 mov	 ecx, OFFSET ?__szSkin2@?BN@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00e5b	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T46[ebp], 0

; 4596 :         _My_data._Mysize = 0;

  00e62	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T46[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00e69	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T46[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00e70	c6 45 d8 00	 mov	 BYTE PTR $T46[ebp], 0

; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00e74	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL2236@LoadRaceDa:
  00e77	8a 01		 mov	 al, BYTE PTR [ecx]
  00e79	41		 inc	 ecx
  00e7a	84 c0		 test	 al, al
  00e7c	75 f9		 jne	 SHORT $LL2236@LoadRaceDa
  00e7e	2b ca		 sub	 ecx, edx

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00e80	51		 push	 ecx
  00e81	68 00 00 00 00	 push	 OFFSET ?__szSkin2@?BN@??LoadRaceData@CRaceData@@QAEHPBD@Z@4PADA
  00e86	8d 4d d8	 lea	 ecx, DWORD PTR $T46[ebp]
  00e89	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 127  : 					if (TextFileLoader.GetTokenString(__szSkin1, &strSourceSkin) &&

  00e8e	8d 45 90	 lea	 eax, DWORD PTR _strTargetSkin$28[ebp]
  00e91	c7 45 fc 1a 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 26 ; 0000001aH
  00e98	50		 push	 eax
  00e99	8d 45 d8	 lea	 eax, DWORD PTR $T46[ebp]
  00e9c	81 cb 80 00 00
	00		 or	 ebx, 128		; 00000080H
  00ea2	50		 push	 eax
  00ea3	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00ea9	89 9d c0 fe ff
	ff		 mov	 DWORD PTR $T6[ebp], ebx
  00eaf	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  00eb4	c6 85 c7 fe ff
	ff 01		 mov	 BYTE PTR $T11[ebp], 1
  00ebb	85 c0		 test	 eax, eax
  00ebd	75 07		 jne	 SHORT $LN46@LoadRaceDa
$LN45@LoadRaceDa:
  00ebf	c6 85 c7 fe ff
	ff 00		 mov	 BYTE PTR $T11[ebp], 0
$LN46@LoadRaceDa:
  00ec6	c7 45 fc 19 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 25 ; 00000019H
  00ecd	84 db		 test	 bl, bl
  00ecf	79 4c		 jns	 SHORT $LN1495@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00ed1	8b 55 ec	 mov	 edx, DWORD PTR $T46[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 127  : 					if (TextFileLoader.GetTokenString(__szSkin1, &strSourceSkin) &&

  00ed4	81 e3 7f ff ff
	ff		 and	 ebx, -129		; ffffff7fH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00eda	83 fa 10	 cmp	 edx, 16			; 00000010H
  00edd	72 2c		 jb	 SHORT $LN1502@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00edf	8b 4d d8	 mov	 ecx, DWORD PTR $T46[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00ee2	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00ee3	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00ee5	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00eeb	72 14		 jb	 SHORT $LN1512@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00eed	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00ef0	83 c2 23	 add	 edx, 35			; 00000023H
  00ef3	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00ef5	83 c0 fc	 add	 eax, -4			; fffffffcH
  00ef8	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00efb	0f 87 31 0a 00
	00		 ja	 $LN942@LoadRaceDa
$LN1512@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00f01	52		 push	 edx
  00f02	51		 push	 ecx
  00f03	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00f08	83 c4 08	 add	 esp, 8
$LN1502@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00f0b	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T46[ebp+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00f12	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T46[ebp+20], 15 ; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00f19	c6 45 d8 00	 mov	 BYTE PTR $T46[ebp], 0
$LN1495@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 127  : 					if (TextFileLoader.GetTokenString(__szSkin1, &strSourceSkin) &&

  00f1d	c7 45 fc 12 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00f24	f6 c3 40	 test	 bl, 64			; 00000040H
  00f27	74 37		 je	 SHORT $LN1529@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00f29	8b 55 d4	 mov	 edx, DWORD PTR $T39[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 127  : 					if (TextFileLoader.GetTokenString(__szSkin1, &strSourceSkin) &&

  00f2c	83 e3 bf	 and	 ebx, -65		; ffffffbfH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00f2f	83 fa 10	 cmp	 edx, 16			; 00000010H
  00f32	72 2c		 jb	 SHORT $LN1529@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00f34	8b 4d c0	 mov	 ecx, DWORD PTR $T39[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00f37	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00f38	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00f3a	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00f40	72 14		 jb	 SHORT $LN1539@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00f42	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00f45	83 c2 23	 add	 edx, 35			; 00000023H
  00f48	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00f4a	83 c0 fc	 add	 eax, -4			; fffffffcH
  00f4d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00f50	0f 87 dc 09 00
	00		 ja	 $LN942@LoadRaceDa
$LN1539@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00f56	52		 push	 edx
  00f57	51		 push	 ecx
  00f58	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00f5d	83 c4 08	 add	 esp, 8
$LN1529@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 127  : 					if (TextFileLoader.GetTokenString(__szSkin1, &strSourceSkin) &&

  00f60	80 bd c7 fe ff
	ff 00		 cmp	 BYTE PTR $T11[ebp], 0
  00f67	74 77		 je	 SHORT $LN8@LoadRaceDa

; 130  : 						AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00f69	8d 45 90	 lea	 eax, DWORD PTR _strTargetSkin$28[ebp]
  00f6c	50		 push	 eax
  00f6d	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _strPathName$24[ebp]
  00f73	50		 push	 eax
  00f74	8d 45 c0	 lea	 eax, DWORD PTR $T38[ebp]
  00f77	50		 push	 eax
  00f78	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00f7d	8b f0		 mov	 esi, eax
  00f7f	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strSourceSkin$26[ebp]
  00f85	c6 45 fc 1b	 mov	 BYTE PTR __$EHRec$[ebp+8], 27 ; 0000001bH
  00f89	50		 push	 eax
  00f8a	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _strPathName$24[ebp]
  00f90	50		 push	 eax
  00f91	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR $T19[ebp]
  00f97	50		 push	 eax
  00f98	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00f9d	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  00fa0	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 130  : 						AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00fa4	c6 45 fc 1c	 mov	 BYTE PTR __$EHRec$[ebp+8], 28 ; 0000001cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  00fa8	72 02		 jb	 SHORT $LN1547@LoadRaceDa

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00faa	8b 36		 mov	 esi, DWORD PTR [esi]
$LN1547@LoadRaceDa:

; 2306 :         if (_Large_string_engaged()) {

  00fac	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00fb0	72 02		 jb	 SHORT $LN1554@LoadRaceDa

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00fb2	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1554@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 130  : 						AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  00fb4	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00fba	56		 push	 esi
  00fbb	50		 push	 eax
  00fbc	6a 00		 push	 0
  00fbe	ff b5 b4 fe ff
	ff		 push	 DWORD PTR _dwShapeIndex$3[ebp]
  00fc4	e8 00 00 00 00	 call	 ?AppendShapeSkin@CRaceData@@QAEXIIPBD0@Z ; CRaceData::AppendShapeSkin
  00fc9	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T19[ebp]
  00fcf	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00fd4	8d 4d c0	 lea	 ecx, DWORD PTR $T38[ebp]
  00fd7	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00fdb	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@LoadRaceDa:

; 121  : 				}
; 122  : #ifdef ENABLE_SKIN_EXTENDED
; 123  : 				for (DWORD i=2; i<=9; i++)

  00fe0	47		 inc	 edi
  00fe1	83 ff 09	 cmp	 edi, 9
  00fe4	0f 86 e6 fd ff
	ff		 jbe	 $LL10@LoadRaceDa

; 131  : 					}
; 132  : 				}
; 133  : #else
; 134  : 				if (TextFileLoader.GetTokenString("sourceskin2", &strSourceSkin) &&
; 135  : 					TextFileLoader.GetTokenString("targetskin2", &strTargetSkin))
; 136  : 				{
; 137  : 					AppendShapeSkin(dwShapeIndex, 0, (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());
; 138  : 				}
; 139  : #endif
; 140  : 				TextFileLoader.SetParentNode();

  00fea	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00ff0	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00ff5	8b 55 a4	 mov	 edx, DWORD PTR _strTargetSkin$28[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 141  : 			}

  00ff8	c6 45 fc 11	 mov	 BYTE PTR __$EHRec$[ebp+8], 17 ; 00000011H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00ffc	83 fa 10	 cmp	 edx, 16			; 00000010H
  00fff	72 2c		 jb	 SHORT $LN1570@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01001	8b 4d 90	 mov	 ecx, DWORD PTR _strTargetSkin$28[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  01004	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01005	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01007	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0100d	72 14		 jb	 SHORT $LN1580@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0100f	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  01012	83 c2 23	 add	 edx, 35			; 00000023H
  01015	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01017	83 c0 fc	 add	 eax, -4			; fffffffcH
  0101a	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0101d	0f 87 0f 09 00
	00		 ja	 $LN942@LoadRaceDa
$LN1580@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  01023	52		 push	 edx
  01024	51		 push	 ecx
  01025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0102a	83 c4 08	 add	 esp, 8
$LN1570@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0102d	8b 55 8c	 mov	 edx, DWORD PTR _strSourceSkin$26[ebp+20]

; 4633 :             _Mypair._Myval2._Mysize = 0;

  01030	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _strTargetSkin$28[ebp+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  01037	c7 45 a4 0f 00
	00 00		 mov	 DWORD PTR _strTargetSkin$28[ebp+20], 15 ; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0103e	c6 45 90 00	 mov	 BYTE PTR _strTargetSkin$28[ebp], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 141  : 			}

  01042	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  01046	83 fa 10	 cmp	 edx, 16			; 00000010H
  01049	72 2f		 jb	 SHORT $LN1597@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0104b	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _strSourceSkin$26[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  01051	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01052	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01054	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0105a	72 14		 jb	 SHORT $LN1607@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0105c	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0105f	83 c2 23	 add	 edx, 35			; 00000023H
  01062	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01064	83 c0 fc	 add	 eax, -4			; fffffffcH
  01067	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0106a	0f 87 c2 08 00
	00		 ja	 $LN942@LoadRaceDa
$LN1607@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  01070	52		 push	 edx
  01071	51		 push	 ecx
  01072	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01077	83 c4 08	 add	 esp, 8
$LN1597@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  0107a	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _strSourceSkin$26[ebp+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  01081	c7 45 8c 0f 00
	00 00		 mov	 DWORD PTR _strSourceSkin$26[ebp+20], 15 ; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  01088	c6 85 78 ff ff
	ff 00		 mov	 BYTE PTR _strSourceSkin$26[ebp], 0
$LN2253@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 68   : 			for (DWORD i = 0; i < dwShapeDataCount; ++i)

  0108f	8b 55 bc	 mov	 edx, DWORD PTR _strModel$30[ebp+20]
  01092	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  01096	83 fa 10	 cmp	 edx, 16			; 00000010H
  01099	72 2c		 jb	 SHORT $LN5@LoadRaceDa
  0109b	8b 4d a8	 mov	 ecx, DWORD PTR _strModel$30[ebp]
  0109e	42		 inc	 edx
  0109f	8b c1		 mov	 eax, ecx
  010a1	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  010a7	72 14		 jb	 SHORT $LN1634@LoadRaceDa
  010a9	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  010ac	83 c2 23	 add	 edx, 35			; 00000023H
  010af	2b c1		 sub	 eax, ecx
  010b1	83 c0 fc	 add	 eax, -4			; fffffffcH
  010b4	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  010b7	0f 87 75 08 00
	00		 ja	 $LN942@LoadRaceDa
$LN1634@LoadRaceDa:
  010bd	52		 push	 edx
  010be	51		 push	 ecx
  010bf	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  010c4	83 c4 08	 add	 esp, 8
$LN5@LoadRaceDa:
  010c7	8b 8d b8 fe ff
	ff		 mov	 ecx, DWORD PTR _i$1$[ebp]
  010cd	41		 inc	 ecx
  010ce	89 8d b8 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], ecx
  010d4	3b 8d bc fe ff
	ff		 cmp	 ecx, DWORD PTR _dwShapeDataCount$5[ebp]
  010da	0f 82 40 f6 ff
	ff		 jb	 $LL7@LoadRaceDa
$LN2232@LoadRaceDa:

; 142  : 		}
; 143  : 
; 144  : 		TextFileLoader.SetParentNode();

  010e0	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  010e6	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  010eb	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR _strPathName$24[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 145  : 	}

  010f1	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  010f5	83 fa 10	 cmp	 edx, 16			; 00000010H
  010f8	72 2f		 jb	 SHORT $LN1651@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  010fa	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _strPathName$24[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  01100	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01101	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01103	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  01109	72 14		 jb	 SHORT $LN1661@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0110b	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0110e	83 c2 23	 add	 edx, 35			; 00000023H
  01111	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01113	83 c0 fc	 add	 eax, -4			; fffffffcH
  01116	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01119	0f 87 40 08 00
	00		 ja	 $LN2262@LoadRaceDa
$LN1661@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0111f	52		 push	 edx
  01120	51		 push	 ecx
  01121	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01126	83 c4 08	 add	 esp, 8
$LN1651@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 147  : 	if (TextFileLoader.SetChildNode("hairdata"))

  01129	68 00 00 00 00	 push	 OFFSET ??_C@_08HKPOBGLF@hairdata@
  0112e	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  01134	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  01139	85 c0		 test	 eax, eax
  0113b	0f 84 a5 07 00
	00		 je	 $LN2176@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  01141	c7 45 90 00 00
	00 00		 mov	 DWORD PTR _strPathName$27[ebp], 0

; 4596 :         _My_data._Mysize = 0;

  01148	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _strPathName$27[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0114f	c7 45 a4 0f 00
	00 00		 mov	 DWORD PTR _strPathName$27[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  01156	c6 45 90 00	 mov	 BYTE PTR _strPathName$27[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0115a	6a 08		 push	 8

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0115c	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR $T37[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  01163	8d 4d c0	 lea	 ecx, DWORD PTR $T37[ebp]
  01166	68 00 00 00 00	 push	 OFFSET ??_C@_08PEIJGPHF@pathname@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 149  : 		std::string strPathName;

  0116b	c6 45 fc 1d	 mov	 BYTE PTR __$EHRec$[ebp+8], 29 ; 0000001dH

; 150  : 		DWORD dwHairDataCount = 0;

  0116f	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _dwHairDataCount$4[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4596 :         _My_data._Mysize = 0;

  01179	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T37[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  01180	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T37[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  01187	c6 45 c0 00	 mov	 BYTE PTR $T37[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0118b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 151  : 		if (TextFileLoader.GetTokenString("pathname", &strPathName) &&

  01190	8d 45 90	 lea	 eax, DWORD PTR _strPathName$27[ebp]
  01193	c6 45 fc 1e	 mov	 BYTE PTR __$EHRec$[ebp+8], 30 ; 0000001eH
  01197	50		 push	 eax
  01198	8d 45 c0	 lea	 eax, DWORD PTR $T37[ebp]
  0119b	81 cb 00 01 00
	00		 or	 ebx, 256		; 00000100H
  011a1	50		 push	 eax
  011a2	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  011a8	89 9d c0 fe ff
	ff		 mov	 DWORD PTR $T6[ebp], ebx
  011ae	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  011b3	85 c0		 test	 eax, eax
  011b5	74 5c		 je	 SHORT $LN47@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  011b7	6a 0d		 push	 13			; 0000000dH

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  011b9	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T45[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  011c0	8d 4d d8	 lea	 ecx, DWORD PTR $T45[ebp]
  011c3	68 00 00 00 00	 push	 OFFSET ??_C@_0O@HCGNHJP@hairdatacount@

; 4596 :         _My_data._Mysize = 0;

  011c8	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T45[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  011cf	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T45[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  011d6	c6 45 d8 00	 mov	 BYTE PTR $T45[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  011da	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 151  : 		if (TextFileLoader.GetTokenString("pathname", &strPathName) &&

  011df	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _dwHairDataCount$4[ebp]
  011e5	c7 45 fc 1f 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 31 ; 0000001fH
  011ec	50		 push	 eax
  011ed	8d 45 d8	 lea	 eax, DWORD PTR $T45[ebp]
  011f0	81 cb 00 02 00
	00		 or	 ebx, 512		; 00000200H
  011f6	50		 push	 eax
  011f7	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  011fd	89 9d c0 fe ff
	ff		 mov	 DWORD PTR $T6[ebp], ebx
  01203	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
  01208	c6 85 c7 fe ff
	ff 01		 mov	 BYTE PTR $T10[ebp], 1
  0120f	85 c0		 test	 eax, eax
  01211	75 07		 jne	 SHORT $LN48@LoadRaceDa
$LN47@LoadRaceDa:
  01213	c6 85 c7 fe ff
	ff 00		 mov	 BYTE PTR $T10[ebp], 0
$LN48@LoadRaceDa:
  0121a	c7 45 fc 1e 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 30 ; 0000001eH
  01221	f7 c3 00 02 00
	00		 test	 ebx, 512		; 00000200H
  01227	74 4c		 je	 SHORT $LN1716@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  01229	8b 55 ec	 mov	 edx, DWORD PTR $T45[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 151  : 		if (TextFileLoader.GetTokenString("pathname", &strPathName) &&

  0122c	81 e3 ff fd ff
	ff		 and	 ebx, -513		; fffffdffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  01232	83 fa 10	 cmp	 edx, 16			; 00000010H
  01235	72 2c		 jb	 SHORT $LN1723@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01237	8b 4d d8	 mov	 ecx, DWORD PTR $T45[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0123a	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0123b	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0123d	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  01243	72 14		 jb	 SHORT $LN1733@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  01245	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  01248	83 c2 23	 add	 edx, 35			; 00000023H
  0124b	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0124d	83 c0 fc	 add	 eax, -4			; fffffffcH
  01250	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01253	0f 87 0b 07 00
	00		 ja	 $LN1757@LoadRaceDa
$LN1733@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  01259	52		 push	 edx
  0125a	51		 push	 ecx
  0125b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01260	83 c4 08	 add	 esp, 8
$LN1723@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  01263	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T45[ebp+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0126a	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T45[ebp+20], 15 ; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  01271	c6 45 d8 00	 mov	 BYTE PTR $T45[ebp], 0
$LN1716@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 151  : 		if (TextFileLoader.GetTokenString("pathname", &strPathName) &&

  01275	c7 45 fc 1d 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 29 ; 0000001dH
  0127c	f7 c3 00 01 00
	00		 test	 ebx, 256		; 00000100H
  01282	74 3a		 je	 SHORT $LN1750@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  01284	8b 55 d4	 mov	 edx, DWORD PTR $T37[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 151  : 		if (TextFileLoader.GetTokenString("pathname", &strPathName) &&

  01287	81 e3 ff fe ff
	ff		 and	 ebx, -257		; fffffeffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0128d	83 fa 10	 cmp	 edx, 16			; 00000010H
  01290	72 2c		 jb	 SHORT $LN1750@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01292	8b 4d c0	 mov	 ecx, DWORD PTR $T37[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  01295	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01296	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01298	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0129e	72 14		 jb	 SHORT $LN1760@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  012a0	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  012a3	83 c2 23	 add	 edx, 35			; 00000023H
  012a6	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  012a8	83 c0 fc	 add	 eax, -4			; fffffffcH
  012ab	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  012ae	0f 87 b0 06 00
	00		 ja	 $LN1757@LoadRaceDa
$LN1760@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  012b4	52		 push	 edx
  012b5	51		 push	 ecx
  012b6	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  012bb	83 c4 08	 add	 esp, 8
$LN1750@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 151  : 		if (TextFileLoader.GetTokenString("pathname", &strPathName) &&

  012be	80 bd c7 fe ff
	ff 00		 cmp	 BYTE PTR $T10[ebp], 0
  012c5	0f 84 d8 05 00
	00		 je	 $LN2233@LoadRaceDa

; 155  : 			for (DWORD i = 0; i < dwHairDataCount; ++i)

  012cb	33 f6		 xor	 esi, esi
  012cd	89 b5 b8 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], esi
  012d3	39 b5 bc fe ff
	ff		 cmp	 DWORD PTR _dwHairDataCount$4[ebp], esi
  012d9	0f 86 c4 05 00
	00		 jbe	 $LN2233@LoadRaceDa
  012df	90		 npad	 1
$LL13@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  012e0	6a 08		 push	 8

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  012e2	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR $T36[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  012e9	8d 4d c0	 lea	 ecx, DWORD PTR $T36[ebp]
  012ec	68 00 00 00 00	 push	 OFFSET ??_C@_08HKPOBGLF@hairdata@

; 4596 :         _My_data._Mysize = 0;

  012f1	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T36[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  012f8	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T36[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  012ff	c6 45 c0 00	 mov	 BYTE PTR $T36[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  01303	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 157  : 				if (!TextFileLoader.SetChildNode("hairdata", i))

  01308	56		 push	 esi
  01309	8d 45 c0	 lea	 eax, DWORD PTR $T36[ebp]
  0130c	c6 45 fc 20	 mov	 BYTE PTR __$EHRec$[ebp+8], 32 ; 00000020H
  01310	50		 push	 eax
  01311	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  01317	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; CTextFileLoader::SetChildNode
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0131c	8b 55 d4	 mov	 edx, DWORD PTR $T36[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 157  : 				if (!TextFileLoader.SetChildNode("hairdata", i))

  0131f	85 c0		 test	 eax, eax
  01321	c6 45 fc 1d	 mov	 BYTE PTR __$EHRec$[ebp+8], 29 ; 0000001dH
  01325	0f 94 c0	 sete	 al
  01328	88 85 c7 fe ff
	ff		 mov	 BYTE PTR $T9[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0132e	83 fa 10	 cmp	 edx, 16			; 00000010H
  01331	72 32		 jb	 SHORT $LN1793@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01333	8b 4d c0	 mov	 ecx, DWORD PTR $T36[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  01336	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01337	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01339	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0133f	72 14		 jb	 SHORT $LN1803@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  01341	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  01344	83 c2 23	 add	 edx, 35			; 00000023H
  01347	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01349	83 c0 fc	 add	 eax, -4			; fffffffcH
  0134c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0134f	0f 87 dd 05 00
	00		 ja	 $LN942@LoadRaceDa
$LN1803@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  01355	52		 push	 edx
  01356	51		 push	 ecx
  01357	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0135c	8a 85 c7 fe ff
	ff		 mov	 al, BYTE PTR $T9[ebp]
  01362	83 c4 08	 add	 esp, 8
$LN1793@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 157  : 				if (!TextFileLoader.SetChildNode("hairdata", i))

  01365	84 c0		 test	 al, al
  01367	0f 85 23 05 00
	00		 jne	 $LN11@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0136d	6a 0b		 push	 11			; 0000000bH

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0136f	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR $T35[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  01376	8d 4d c0	 lea	 ecx, DWORD PTR $T35[ebp]
  01379	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GCDLCIFI@specialpath@

; 4596 :         _My_data._Mysize = 0;

  0137e	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T35[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  01385	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T35[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0138c	88 45 c0	 mov	 BYTE PTR $T35[ebp], al

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0138f	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 164  : 				TextFileLoader.GetTokenString("specialpath", &strPathName);

  01394	8d 45 90	 lea	 eax, DWORD PTR _strPathName$27[ebp]
  01397	c6 45 fc 21	 mov	 BYTE PTR __$EHRec$[ebp+8], 33 ; 00000021H
  0139b	50		 push	 eax
  0139c	8d 45 c0	 lea	 eax, DWORD PTR $T35[ebp]
  0139f	50		 push	 eax
  013a0	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  013a6	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  013ab	8b 55 d4	 mov	 edx, DWORD PTR $T35[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 164  : 				TextFileLoader.GetTokenString("specialpath", &strPathName);

  013ae	c6 45 fc 1d	 mov	 BYTE PTR __$EHRec$[ebp+8], 29 ; 0000001dH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  013b2	83 fa 10	 cmp	 edx, 16			; 00000010H
  013b5	72 2c		 jb	 SHORT $LN1836@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  013b7	8b 4d c0	 mov	 ecx, DWORD PTR $T35[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  013ba	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  013bb	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  013bd	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  013c3	72 14		 jb	 SHORT $LN1846@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  013c5	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  013c8	83 c2 23	 add	 edx, 35			; 00000023H
  013cb	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  013cd	83 c0 fc	 add	 eax, -4			; fffffffcH
  013d0	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  013d3	0f 87 59 05 00
	00		 ja	 $LN942@LoadRaceDa
$LN1846@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  013d9	52		 push	 edx
  013da	51		 push	 ecx
  013db	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  013e0	83 c4 08	 add	 esp, 8
$LN1836@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  013e3	6a 09		 push	 9

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  013e5	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR $T34[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  013ec	8d 4d c0	 lea	 ecx, DWORD PTR $T34[ebp]
  013ef	68 00 00 00 00	 push	 OFFSET ??_C@_09DFEJDBKH@hairindex@

; 4596 :         _My_data._Mysize = 0;

  013f4	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T34[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  013fb	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T34[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  01402	c6 45 c0 00	 mov	 BYTE PTR $T34[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  01406	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 168  : 				if (!TextFileLoader.GetTokenDoubleWord("hairindex", &dwShapeIndex))

  0140b	8d 85 a8 fe ff
	ff		 lea	 eax, DWORD PTR _dwShapeIndex$2[ebp]
  01411	c6 45 fc 22	 mov	 BYTE PTR __$EHRec$[ebp+8], 34 ; 00000022H
  01415	50		 push	 eax
  01416	8d 45 c0	 lea	 eax, DWORD PTR $T34[ebp]
  01419	50		 push	 eax
  0141a	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  01420	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  01425	8b 55 d4	 mov	 edx, DWORD PTR $T34[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 168  : 				if (!TextFileLoader.GetTokenDoubleWord("hairindex", &dwShapeIndex))

  01428	85 c0		 test	 eax, eax
  0142a	c6 45 fc 1d	 mov	 BYTE PTR __$EHRec$[ebp+8], 29 ; 0000001dH
  0142e	0f 94 c0	 sete	 al
  01431	88 85 c7 fe ff
	ff		 mov	 BYTE PTR $T8[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  01437	83 fa 10	 cmp	 edx, 16			; 00000010H
  0143a	72 32		 jb	 SHORT $LN1879@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0143c	8b 4d c0	 mov	 ecx, DWORD PTR $T34[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0143f	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01440	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01442	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  01448	72 14		 jb	 SHORT $LN1889@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0144a	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0144d	83 c2 23	 add	 edx, 35			; 00000023H
  01450	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01452	83 c0 fc	 add	 eax, -4			; fffffffcH
  01455	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01458	0f 87 d4 04 00
	00		 ja	 $LN942@LoadRaceDa
$LN1889@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0145e	52		 push	 edx
  0145f	51		 push	 ecx
  01460	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01465	8a 85 c7 fe ff
	ff		 mov	 al, BYTE PTR $T8[ebp]
  0146b	83 c4 08	 add	 esp, 8
$LN1879@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 168  : 				if (!TextFileLoader.GetTokenDoubleWord("hairindex", &dwShapeIndex))

  0146e	84 c0		 test	 al, al
  01470	0f 85 1a 04 00
	00		 jne	 $LN11@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  01476	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _strModel$18[ebp], 0

; 4596 :         _My_data._Mysize = 0;

  01480	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _strModel$18[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0148a	c7 85 5c ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR _strModel$18[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  01494	88 85 48 ff ff
	ff		 mov	 BYTE PTR _strModel$18[ebp], al

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0149a	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _strSourceSkin$25[ebp], 0

; 4596 :         _My_data._Mysize = 0;

  014a4	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _strSourceSkin$25[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  014ab	c7 45 8c 0f 00
	00 00		 mov	 DWORD PTR _strSourceSkin$25[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  014b2	88 85 78 ff ff
	ff		 mov	 BYTE PTR _strSourceSkin$25[ebp], al

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  014b8	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _strTargetSkin$29[ebp], 0

; 4596 :         _My_data._Mysize = 0;

  014bf	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _strTargetSkin$29[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  014c6	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR _strTargetSkin$29[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  014cd	88 45 a8	 mov	 BYTE PTR _strTargetSkin$29[ebp], al

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  014d0	6a 05		 push	 5

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  014d2	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR $T33[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  014d9	8d 4d c0	 lea	 ecx, DWORD PTR $T33[ebp]
  014dc	68 00 00 00 00	 push	 OFFSET ??_C@_05NCCFOPHA@model@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 175  : 				std::string strTargetSkin;

  014e1	c6 45 fc 25	 mov	 BYTE PTR __$EHRec$[ebp+8], 37 ; 00000025H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4596 :         _My_data._Mysize = 0;

  014e5	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T33[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  014ec	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T33[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  014f3	88 45 c0	 mov	 BYTE PTR $T33[ebp], al

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  014f6	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 177  : 					TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  014fb	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR _strModel$18[ebp]
  01501	c6 45 fc 26	 mov	 BYTE PTR __$EHRec$[ebp+8], 38 ; 00000026H
  01505	50		 push	 eax
  01506	8d 45 c0	 lea	 eax, DWORD PTR $T33[ebp]
  01509	81 cb 00 04 00
	00		 or	 ebx, 1024		; 00000400H
  0150f	50		 push	 eax
  01510	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  01516	89 9d c0 fe ff
	ff		 mov	 DWORD PTR $T6[ebp], ebx
  0151c	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  01521	85 c0		 test	 eax, eax
  01523	0f 84 c0 00 00
	00		 je	 $LN49@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  01529	6a 0a		 push	 10			; 0000000aH

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0152b	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T23[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  01535	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR $T23[ebp]
  0153b	68 00 00 00 00	 push	 OFFSET ??_C@_0L@ILFPKBGB@sourceskin@

; 4596 :         _My_data._Mysize = 0;

  01540	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T23[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0154a	c7 85 74 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T23[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  01554	c6 85 60 ff ff
	ff 00		 mov	 BYTE PTR $T23[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0155b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 177  : 					TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  01560	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strSourceSkin$25[ebp]
  01566	c7 45 fc 27 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 39 ; 00000027H
  0156d	50		 push	 eax
  0156e	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR $T23[ebp]
  01574	81 cb 00 08 00
	00		 or	 ebx, 2048		; 00000800H
  0157a	50		 push	 eax
  0157b	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  01581	89 9d c0 fe ff
	ff		 mov	 DWORD PTR $T6[ebp], ebx
  01587	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  0158c	85 c0		 test	 eax, eax
  0158e	74 59		 je	 SHORT $LN49@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  01590	6a 0a		 push	 10			; 0000000aH

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  01592	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T44[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  01599	8d 4d d8	 lea	 ecx, DWORD PTR $T44[ebp]
  0159c	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EHMNDCND@targetskin@

; 4596 :         _My_data._Mysize = 0;

  015a1	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T44[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  015a8	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T44[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  015af	c6 45 d8 00	 mov	 BYTE PTR $T44[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  015b3	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 177  : 					TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  015b8	8d 45 a8	 lea	 eax, DWORD PTR _strTargetSkin$29[ebp]
  015bb	c7 45 fc 28 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 40 ; 00000028H
  015c2	50		 push	 eax
  015c3	8d 45 d8	 lea	 eax, DWORD PTR $T44[ebp]
  015c6	81 cb 00 10 00
	00		 or	 ebx, 4096		; 00001000H
  015cc	50		 push	 eax
  015cd	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  015d3	89 9d c0 fe ff
	ff		 mov	 DWORD PTR $T6[ebp], ebx
  015d9	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
  015de	c6 85 c7 fe ff
	ff 01		 mov	 BYTE PTR $T7[ebp], 1
  015e5	85 c0		 test	 eax, eax
  015e7	75 07		 jne	 SHORT $LN50@LoadRaceDa
$LN49@LoadRaceDa:
  015e9	c6 85 c7 fe ff
	ff 00		 mov	 BYTE PTR $T7[ebp], 0
$LN50@LoadRaceDa:
  015f0	c7 45 fc 27 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 39 ; 00000027H
  015f7	f7 c3 00 10 00
	00		 test	 ebx, 4096		; 00001000H
  015fd	74 4c		 je	 SHORT $LN1986@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  015ff	8b 55 ec	 mov	 edx, DWORD PTR $T44[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 177  : 					TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  01602	81 e3 ff ef ff
	ff		 and	 ebx, -4097		; ffffefffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  01608	83 fa 10	 cmp	 edx, 16			; 00000010H
  0160b	72 2c		 jb	 SHORT $LN1993@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0160d	8b 4d d8	 mov	 ecx, DWORD PTR $T44[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  01610	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01611	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01613	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  01619	72 14		 jb	 SHORT $LN2003@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0161b	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0161e	83 c2 23	 add	 edx, 35			; 00000023H
  01621	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01623	83 c0 fc	 add	 eax, -4			; fffffffcH
  01626	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01629	0f 87 03 03 00
	00		 ja	 $LN942@LoadRaceDa
$LN2003@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0162f	52		 push	 edx
  01630	51		 push	 ecx
  01631	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01636	83 c4 08	 add	 esp, 8
$LN1993@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  01639	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T44[ebp+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  01640	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T44[ebp+20], 15 ; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  01647	c6 45 d8 00	 mov	 BYTE PTR $T44[ebp], 0
$LN1986@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 177  : 					TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  0164b	c7 45 fc 26 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 38 ; 00000026H
  01652	f7 c3 00 08 00
	00		 test	 ebx, 2048		; 00000800H
  01658	74 5b		 je	 SHORT $LN2013@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0165a	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR $T23[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 177  : 					TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  01660	81 e3 ff f7 ff
	ff		 and	 ebx, -2049		; fffff7ffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  01666	83 fa 10	 cmp	 edx, 16			; 00000010H
  01669	72 2f		 jb	 SHORT $LN2020@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0166b	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR $T23[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  01671	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01672	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01674	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0167a	72 14		 jb	 SHORT $LN2030@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0167c	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0167f	83 c2 23	 add	 edx, 35			; 00000023H
  01682	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01684	83 c0 fc	 add	 eax, -4			; fffffffcH
  01687	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0168a	0f 87 a2 02 00
	00		 ja	 $LN942@LoadRaceDa
$LN2030@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  01690	52		 push	 edx
  01691	51		 push	 ecx
  01692	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01697	83 c4 08	 add	 esp, 8
$LN2020@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  0169a	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T23[ebp+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  016a4	c7 85 74 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR $T23[ebp+20], 15 ; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  016ae	c6 85 60 ff ff
	ff 00		 mov	 BYTE PTR $T23[ebp], 0
$LN2013@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 177  : 					TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  016b5	c7 45 fc 25 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 37 ; 00000025H
  016bc	f7 c3 00 04 00
	00		 test	 ebx, 1024		; 00000400H
  016c2	74 3a		 je	 SHORT $LN2047@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  016c4	8b 55 d4	 mov	 edx, DWORD PTR $T33[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 177  : 					TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  016c7	81 e3 ff fb ff
	ff		 and	 ebx, -1025		; fffffbffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  016cd	83 fa 10	 cmp	 edx, 16			; 00000010H
  016d0	72 2c		 jb	 SHORT $LN2047@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  016d2	8b 4d c0	 mov	 ecx, DWORD PTR $T33[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  016d5	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  016d6	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  016d8	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  016de	72 14		 jb	 SHORT $LN2057@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  016e0	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  016e3	83 c2 23	 add	 edx, 35			; 00000023H
  016e6	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  016e8	83 c0 fc	 add	 eax, -4			; fffffffcH
  016eb	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  016ee	0f 87 3e 02 00
	00		 ja	 $LN942@LoadRaceDa
$LN2057@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  016f4	52		 push	 edx
  016f5	51		 push	 ecx
  016f6	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  016fb	83 c4 08	 add	 esp, 8
$LN2047@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 177  : 					TextFileLoader.GetTokenString("sourceskin", &strSourceSkin) &&

  016fe	80 bd c7 fe ff
	ff 00		 cmp	 BYTE PTR $T7[ebp], 0
  01705	0f 84 a2 00 00
	00		 je	 $LN35@LoadRaceDa

; 180  : 					SetHairSkin(dwShapeIndex, 0, (strPathName + strModel).c_str(), (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  0170b	8d 45 a8	 lea	 eax, DWORD PTR _strTargetSkin$29[ebp]
  0170e	50		 push	 eax
  0170f	8d 45 90	 lea	 eax, DWORD PTR _strPathName$27[ebp]
  01712	50		 push	 eax
  01713	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR $T22[ebp]
  01719	50		 push	 eax
  0171a	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0171f	8b f8		 mov	 edi, eax
  01721	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _strSourceSkin$25[ebp]
  01727	c6 45 fc 29	 mov	 BYTE PTR __$EHRec$[ebp+8], 41 ; 00000029H
  0172b	50		 push	 eax
  0172c	8d 45 90	 lea	 eax, DWORD PTR _strPathName$27[ebp]
  0172f	50		 push	 eax
  01730	8d 45 d8	 lea	 eax, DWORD PTR $T43[ebp]
  01733	50		 push	 eax
  01734	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  01739	8b f0		 mov	 esi, eax
  0173b	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR _strModel$18[ebp]
  01741	c6 45 fc 2a	 mov	 BYTE PTR __$EHRec$[ebp+8], 42 ; 0000002aH
  01745	50		 push	 eax
  01746	8d 45 90	 lea	 eax, DWORD PTR _strPathName$27[ebp]
  01749	50		 push	 eax
  0174a	8d 45 c0	 lea	 eax, DWORD PTR $T32[ebp]
  0174d	50		 push	 eax
  0174e	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  01753	83 c4 24	 add	 esp, 36			; 00000024H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  01756	83 7f 14 10	 cmp	 DWORD PTR [edi+20], 16	; 00000010H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 180  : 					SetHairSkin(dwShapeIndex, 0, (strPathName + strModel).c_str(), (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  0175a	c6 45 fc 2b	 mov	 BYTE PTR __$EHRec$[ebp+8], 43 ; 0000002bH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  0175e	72 02		 jb	 SHORT $LN2065@LoadRaceDa

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  01760	8b 3f		 mov	 edi, DWORD PTR [edi]
$LN2065@LoadRaceDa:

; 2306 :         if (_Large_string_engaged()) {

  01762	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  01766	72 02		 jb	 SHORT $LN2072@LoadRaceDa

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  01768	8b 36		 mov	 esi, DWORD PTR [esi]
$LN2072@LoadRaceDa:

; 2306 :         if (_Large_string_engaged()) {

  0176a	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0176e	72 02		 jb	 SHORT $LN2079@LoadRaceDa

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  01770	8b 00		 mov	 eax, DWORD PTR [eax]
$LN2079@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 180  : 					SetHairSkin(dwShapeIndex, 0, (strPathName + strModel).c_str(), (strPathName + strSourceSkin).c_str(), (strPathName + strTargetSkin).c_str());

  01772	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  01778	57		 push	 edi
  01779	56		 push	 esi
  0177a	50		 push	 eax
  0177b	6a 00		 push	 0
  0177d	ff b5 a8 fe ff
	ff		 push	 DWORD PTR _dwShapeIndex$2[ebp]
  01783	e8 00 00 00 00	 call	 ?SetHairSkin@CRaceData@@QAEXIIPBD00@Z ; CRaceData::SetHairSkin
  01788	8d 4d c0	 lea	 ecx, DWORD PTR $T32[ebp]
  0178b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  01790	8d 4d d8	 lea	 ecx, DWORD PTR $T43[ebp]
  01793	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  01798	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR $T22[ebp]
  0179e	c6 45 fc 25	 mov	 BYTE PTR __$EHRec$[ebp+8], 37 ; 00000025H
  017a2	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  017a7	8b b5 b8 fe ff
	ff		 mov	 esi, DWORD PTR _i$1$[ebp]
$LN35@LoadRaceDa:

; 181  : 				}
; 182  : 
; 183  : 				TextFileLoader.SetParentNode();

  017ad	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  017b3	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  017b8	8b 55 bc	 mov	 edx, DWORD PTR _strTargetSkin$29[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 184  : 			}

  017bb	c6 45 fc 24	 mov	 BYTE PTR __$EHRec$[ebp+8], 36 ; 00000024H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  017bf	83 fa 10	 cmp	 edx, 16			; 00000010H
  017c2	72 2c		 jb	 SHORT $LN2095@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  017c4	8b 4d a8	 mov	 ecx, DWORD PTR _strTargetSkin$29[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  017c7	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  017c8	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  017ca	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  017d0	72 14		 jb	 SHORT $LN2105@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  017d2	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  017d5	83 c2 23	 add	 edx, 35			; 00000023H
  017d8	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  017da	83 c0 fc	 add	 eax, -4			; fffffffcH
  017dd	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  017e0	0f 87 4c 01 00
	00		 ja	 $LN942@LoadRaceDa
$LN2105@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  017e6	52		 push	 edx
  017e7	51		 push	 ecx
  017e8	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  017ed	83 c4 08	 add	 esp, 8
$LN2095@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  017f0	8b 55 8c	 mov	 edx, DWORD PTR _strSourceSkin$25[ebp+20]

; 4633 :             _Mypair._Myval2._Mysize = 0;

  017f3	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _strTargetSkin$29[ebp+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  017fa	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR _strTargetSkin$29[ebp+20], 15 ; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  01801	c6 45 a8 00	 mov	 BYTE PTR _strTargetSkin$29[ebp], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 184  : 			}

  01805	c6 45 fc 23	 mov	 BYTE PTR __$EHRec$[ebp+8], 35 ; 00000023H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  01809	83 fa 10	 cmp	 edx, 16			; 00000010H
  0180c	72 2f		 jb	 SHORT $LN2122@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0180e	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _strSourceSkin$25[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  01814	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01815	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01817	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0181d	72 14		 jb	 SHORT $LN2132@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0181f	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  01822	83 c2 23	 add	 edx, 35			; 00000023H
  01825	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01827	83 c0 fc	 add	 eax, -4			; fffffffcH
  0182a	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0182d	0f 87 ff 00 00
	00		 ja	 $LN942@LoadRaceDa
$LN2132@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  01833	52		 push	 edx
  01834	51		 push	 ecx
  01835	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0183a	83 c4 08	 add	 esp, 8
$LN2122@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0183d	8b 95 5c ff ff
	ff		 mov	 edx, DWORD PTR _strModel$18[ebp+20]

; 4633 :             _Mypair._Myval2._Mysize = 0;

  01843	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _strSourceSkin$25[ebp+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0184a	c7 45 8c 0f 00
	00 00		 mov	 DWORD PTR _strSourceSkin$25[ebp+20], 15 ; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  01851	c6 85 78 ff ff
	ff 00		 mov	 BYTE PTR _strSourceSkin$25[ebp], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 184  : 			}

  01858	c6 45 fc 1d	 mov	 BYTE PTR __$EHRec$[ebp+8], 29 ; 0000001dH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0185c	83 fa 10	 cmp	 edx, 16			; 00000010H
  0185f	72 2f		 jb	 SHORT $LN11@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01861	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _strModel$18[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  01867	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01868	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0186a	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  01870	72 14		 jb	 SHORT $LN2159@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  01872	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  01875	83 c2 23	 add	 edx, 35			; 00000023H
  01878	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0187a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0187d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01880	0f 87 ac 00 00
	00		 ja	 $LN942@LoadRaceDa
$LN2159@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  01886	52		 push	 edx
  01887	51		 push	 ecx
  01888	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0188d	83 c4 08	 add	 esp, 8
$LN11@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 155  : 			for (DWORD i = 0; i < dwHairDataCount; ++i)

  01890	46		 inc	 esi
  01891	89 b5 b8 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], esi
  01897	3b b5 bc fe ff
	ff		 cmp	 esi, DWORD PTR _dwHairDataCount$4[ebp]
  0189d	0f 82 3d fa ff
	ff		 jb	 $LL13@LoadRaceDa
$LN2233@LoadRaceDa:

; 185  : 		}
; 186  : 
; 187  : 		TextFileLoader.SetParentNode();

  018a3	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  018a9	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  018ae	8b 55 a4	 mov	 edx, DWORD PTR _strPathName$27[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 188  : 	}

  018b1	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  018b5	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  018b8	72 2c		 jb	 SHORT $LN2176@LoadRaceDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  018ba	8b 4d 90	 mov	 ecx, DWORD PTR _strPathName$27[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  018bd	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  018be	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  018c0	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  018c6	72 14		 jb	 SHORT $LN2186@LoadRaceDa

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  018c8	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  018cb	83 c2 23	 add	 edx, 35			; 00000023H
  018ce	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  018d0	83 c0 fc	 add	 eax, -4			; fffffffcH
  018d3	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  018d6	0f 87 8d 00 00
	00		 ja	 $LN2263@LoadRaceDa
$LN2186@LoadRaceDa:

; 264  :         ::operator delete(_Ptr, _Bytes);

  018dc	52		 push	 edx
  018dd	51		 push	 ecx
  018de	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  018e3	83 c4 08	 add	 esp, 8
$LN2176@LoadRaceDa:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp

; 191  : 	if (TextFileLoader.SetChildNode("attachingdata"))

  018e6	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OPEMPJIC@attachingdata@
  018eb	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  018f1	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  018f6	85 c0		 test	 eax, eax
  018f8	74 2e		 je	 SHORT $LN36@LoadRaceDa

; 192  : 	{
; 193  : 		if (!NRaceData::LoadAttachingData(TextFileLoader, &m_AttachingDataVector))

  018fa	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  01900	05 d0 00 00 00	 add	 eax, 208		; 000000d0H
  01905	50		 push	 eax
  01906	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR _TextFileLoader$[ebp]
  0190c	50		 push	 eax
  0190d	e8 00 00 00 00	 call	 ?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z ; NRaceData::LoadAttachingData
  01912	83 c4 08	 add	 esp, 8
  01915	85 c0		 test	 eax, eax
  01917	0f 84 d1 ea ff
	ff		 je	 $LN124@LoadRaceDa

; 194  : 			return FALSE;
; 195  : 
; 196  : 		TextFileLoader.SetParentNode();

  0191d	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  01923	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
$LN36@LoadRaceDa:

; 197  : 	}
; 198  : 
; 199  : 	return TRUE;

  01928	be 01 00 00 00	 mov	 esi, 1
  0192d	e9 be ea ff ff	 jmp	 $LN125@LoadRaceDa
$LN942@LoadRaceDa:

; 200  : }

  01932	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN2257@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01937	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN2258@LoadRaceDa:
  0193c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN2259@LoadRaceDa:
  01941	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN2260@LoadRaceDa:
  01946	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN2261@LoadRaceDa:
  0194b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN2196@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2332 :             _Xran();

  01950	e8 00 00 00 00	 call	 ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
$LN2202@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1585 :             _Xrange();

  01955	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN843@LoadRaceDa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0195a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN2262@LoadRaceDa:
  0195f	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1757@LoadRaceDa:
  01964	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN2263@LoadRaceDa:
  01969	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN2249@LoadRaceDa:
  0196e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$0:
  00000	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _TextFileLoader$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CTextFileLoader@@UAE@XZ ; CTextFileLoader::~CTextFileLoader
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$1:
  0000b	8d 4d d8	 lea	 ecx, DWORD PTR $T60[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$2:
  00013	8d 4d d8	 lea	 ecx, DWORD PTR $T59[ebp]
  00016	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$3:
  0001b	8d 4d d8	 lea	 ecx, DWORD PTR $T58[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$4:
  00023	8d 4d d8	 lea	 ecx, DWORD PTR $T57[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$5:
  0002b	8d 4d d8	 lea	 ecx, DWORD PTR $T56[ebp]
  0002e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$6:
  00033	8d 4d d8	 lea	 ecx, DWORD PTR $T55[ebp]
  00036	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$7:
  0003b	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR _strPathName$24[ebp]
  00041	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$8:
  00046	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  0004c	83 e0 01	 and	 eax, 1
  0004f	0f 84 0f 00 00
	00		 je	 $LN60@LoadRaceDa
  00055	83 a5 c0 fe ff
	ff fe		 and	 DWORD PTR $T6[ebp], -2	; fffffffeH
  0005c	8d 4d d8	 lea	 ecx, DWORD PTR $T54[ebp]
  0005f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN60@LoadRaceDa:
  00064	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$9:
  00065	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  0006b	83 e0 02	 and	 eax, 2
  0006e	0f 84 0f 00 00
	00		 je	 $LN62@LoadRaceDa
  00074	83 a5 c0 fe ff
	ff fd		 and	 DWORD PTR $T6[ebp], -3	; fffffffdH
  0007b	8d 4d a8	 lea	 ecx, DWORD PTR $T31[ebp]
  0007e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN62@LoadRaceDa:
  00083	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$10:
  00084	8d 4d d8	 lea	 ecx, DWORD PTR $T53[ebp]
  00087	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$11:
  0008c	8d 4d d8	 lea	 ecx, DWORD PTR $T52[ebp]
  0008f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$12:
  00094	8d 4d d8	 lea	 ecx, DWORD PTR $T51[ebp]
  00097	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$13:
  0009c	8d 4d a8	 lea	 ecx, DWORD PTR _strModel$30[ebp]
  0009f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$14:
  000a4	8d 4d d8	 lea	 ecx, DWORD PTR $T50[ebp]
  000a7	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$15:
  000ac	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T21[ebp]
  000b2	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$16:
  000b7	8d 4d d8	 lea	 ecx, DWORD PTR $T49[ebp]
  000ba	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$17:
  000bf	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _strSourceSkin$26[ebp]
  000c5	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$18:
  000ca	8d 4d 90	 lea	 ecx, DWORD PTR _strTargetSkin$28[ebp]
  000cd	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$19:
  000d2	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  000d8	83 e0 04	 and	 eax, 4
  000db	0f 84 0f 00 00
	00		 je	 $LN75@LoadRaceDa
  000e1	83 a5 c0 fe ff
	ff fb		 and	 DWORD PTR $T6[ebp], -5	; fffffffbH
  000e8	8d 4d c0	 lea	 ecx, DWORD PTR $T42[ebp]
  000eb	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN75@LoadRaceDa:
  000f0	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$20:
  000f1	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  000f7	83 e0 08	 and	 eax, 8
  000fa	0f 84 0f 00 00
	00		 je	 $LN77@LoadRaceDa
  00100	83 a5 c0 fe ff
	ff f7		 and	 DWORD PTR $T6[ebp], -9	; fffffff7H
  00107	8d 4d d8	 lea	 ecx, DWORD PTR $T48[ebp]
  0010a	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN77@LoadRaceDa:
  0010f	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$21:
  00110	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  00116	83 e0 10	 and	 eax, 16			; 00000010H
  00119	0f 84 0f 00 00
	00		 je	 $LN81@LoadRaceDa
  0011f	83 a5 c0 fe ff
	ff ef		 and	 DWORD PTR $T6[ebp], -17	; ffffffefH
  00126	8d 4d c0	 lea	 ecx, DWORD PTR $T41[ebp]
  00129	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN81@LoadRaceDa:
  0012e	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$22:
  0012f	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  00135	83 e0 20	 and	 eax, 32			; 00000020H
  00138	0f 84 0f 00 00
	00		 je	 $LN83@LoadRaceDa
  0013e	83 a5 c0 fe ff
	ff df		 and	 DWORD PTR $T6[ebp], -33	; ffffffdfH
  00145	8d 4d d8	 lea	 ecx, DWORD PTR $T47[ebp]
  00148	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN83@LoadRaceDa:
  0014d	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$23:
  0014e	8d 4d c0	 lea	 ecx, DWORD PTR $T40[ebp]
  00151	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$24:
  00156	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T20[ebp]
  0015c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$25:
  00161	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  00167	83 e0 40	 and	 eax, 64			; 00000040H
  0016a	0f 84 0f 00 00
	00		 je	 $LN89@LoadRaceDa
  00170	83 a5 c0 fe ff
	ff bf		 and	 DWORD PTR $T6[ebp], -65	; ffffffbfH
  00177	8d 4d c0	 lea	 ecx, DWORD PTR $T39[ebp]
  0017a	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN89@LoadRaceDa:
  0017f	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$26:
  00180	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  00186	25 80 00 00 00	 and	 eax, 128		; 00000080H
  0018b	0f 84 12 00 00
	00		 je	 $LN91@LoadRaceDa
  00191	81 a5 c0 fe ff
	ff 7f ff ff ff	 and	 DWORD PTR $T6[ebp], -129 ; ffffff7fH
  0019b	8d 4d d8	 lea	 ecx, DWORD PTR $T46[ebp]
  0019e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN91@LoadRaceDa:
  001a3	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$27:
  001a4	8d 4d c0	 lea	 ecx, DWORD PTR $T38[ebp]
  001a7	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$28:
  001ac	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR $T19[ebp]
  001b2	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$29:
  001b7	8d 4d 90	 lea	 ecx, DWORD PTR _strPathName$27[ebp]
  001ba	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$30:
  001bf	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  001c5	25 00 01 00 00	 and	 eax, 256		; 00000100H
  001ca	0f 84 12 00 00
	00		 je	 $LN98@LoadRaceDa
  001d0	81 a5 c0 fe ff
	ff ff fe ff ff	 and	 DWORD PTR $T6[ebp], -257 ; fffffeffH
  001da	8d 4d c0	 lea	 ecx, DWORD PTR $T37[ebp]
  001dd	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN98@LoadRaceDa:
  001e2	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$31:
  001e3	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  001e9	25 00 02 00 00	 and	 eax, 512		; 00000200H
  001ee	0f 84 12 00 00
	00		 je	 $LN100@LoadRaceDa
  001f4	81 a5 c0 fe ff
	ff ff fd ff ff	 and	 DWORD PTR $T6[ebp], -513 ; fffffdffH
  001fe	8d 4d d8	 lea	 ecx, DWORD PTR $T45[ebp]
  00201	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN100@LoadRaceDa:
  00206	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$32:
  00207	8d 4d c0	 lea	 ecx, DWORD PTR $T36[ebp]
  0020a	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$33:
  0020f	8d 4d c0	 lea	 ecx, DWORD PTR $T35[ebp]
  00212	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$34:
  00217	8d 4d c0	 lea	 ecx, DWORD PTR $T34[ebp]
  0021a	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$35:
  0021f	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR _strModel$18[ebp]
  00225	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$36:
  0022a	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _strSourceSkin$25[ebp]
  00230	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$37:
  00235	8d 4d a8	 lea	 ecx, DWORD PTR _strTargetSkin$29[ebp]
  00238	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$38:
  0023d	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  00243	25 00 04 00 00	 and	 eax, 1024		; 00000400H
  00248	0f 84 12 00 00
	00		 je	 $LN110@LoadRaceDa
  0024e	81 a5 c0 fe ff
	ff ff fb ff ff	 and	 DWORD PTR $T6[ebp], -1025 ; fffffbffH
  00258	8d 4d c0	 lea	 ecx, DWORD PTR $T33[ebp]
  0025b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN110@LoadRaceDa:
  00260	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$39:
  00261	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  00267	25 00 08 00 00	 and	 eax, 2048		; 00000800H
  0026c	0f 84 15 00 00
	00		 je	 $LN112@LoadRaceDa
  00272	81 a5 c0 fe ff
	ff ff f7 ff ff	 and	 DWORD PTR $T6[ebp], -2049 ; fffff7ffH
  0027c	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR $T23[ebp]
  00282	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN112@LoadRaceDa:
  00287	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$40:
  00288	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  0028e	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00293	0f 84 12 00 00
	00		 je	 $LN114@LoadRaceDa
  00299	81 a5 c0 fe ff
	ff ff ef ff ff	 and	 DWORD PTR $T6[ebp], -4097 ; ffffefffH
  002a3	8d 4d d8	 lea	 ecx, DWORD PTR $T44[ebp]
  002a6	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN114@LoadRaceDa:
  002ab	c3		 ret	 0
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$41:
  002ac	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR $T22[ebp]
  002b2	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$42:
  002b7	8d 4d d8	 lea	 ecx, DWORD PTR $T43[ebp]
  002ba	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadRaceData@CRaceData@@QAEHPBD@Z$43:
  002bf	8d 4d c0	 lea	 ecx, DWORD PTR $T32[ebp]
  002c2	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002c7	cc		 int	 3
  002c8	cc		 int	 3
  002c9	cc		 int	 3
  002ca	cc		 int	 3
  002cb	cc		 int	 3
__ehhandler$?LoadRaceData@CRaceData@@QAEHPBD@Z:
  002cc	90		 npad	 1
  002cd	90		 npad	 1
  002ce	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  002d2	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  002d5	8b 8a a4 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-348]
  002db	33 c8		 xor	 ecx, eax
  002dd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002e2	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  002e5	33 c8		 xor	 ecx, eax
  002e7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002ec	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadRaceData@CRaceData@@QAEHPBD@Z
  002f1	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadRaceData@CRaceData@@QAEHPBD@Z ENDP			; CRaceData::LoadRaceData
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 134  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 135  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 137  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 85   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 138  :         _Throw_bad_array_new_length(); // add overflow
; 139  :     }
; 140  : 
; 141  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 85   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 145  : 
; 146  : #ifdef _DEBUG
; 147  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 148  : #endif // _DEBUG
; 149  :     return _Ptr;
; 150  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange, COMDAT

; 1778 :         _Xout_of_range("invalid vector subscript");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
  00005	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN3@Xrange:
  0000a	cc		 int	 3
?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
_TEXT	SEGMENT
__Right_size$1$ = -8					; size = 4
__New_size$1$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left_size$1$ = 12					; size = 4
__Left$ = 12						; size = 4
__Ptr$1$ = 16						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4686 :     const basic_string<_Elem, _Traits, _Alloc>& _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx

; 4687 :     const auto _Left_size  = _Left.size();
; 4688 :     const auto _Right_size = _Right.size();

  00007	8b 5d 10	 mov	 ebx, DWORD PTR __Right$[ebp]

; 4689 :     if (_Left.max_size() - _Left_size < _Right_size) {

  0000a	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  0000f	56		 push	 esi
  00010	57		 push	 edi
  00011	8b 7d 0c	 mov	 edi, DWORD PTR __Left$[ebp]
  00014	8b 73 10	 mov	 esi, DWORD PTR [ebx+16]
  00017	89 75 f8	 mov	 DWORD PTR __Right_size$1$[ebp], esi
  0001a	8b 57 10	 mov	 edx, DWORD PTR [edi+16]
  0001d	2b c2		 sub	 eax, edx
  0001f	89 55 0c	 mov	 DWORD PTR __Left_size$1$[ebp], edx
  00022	3b c6		 cmp	 eax, esi
  00024	0f 82 d7 00 00
	00		 jb	 $LN55@operator

; 2319 :         return _BUF_SIZE <= _Myres;

  0002a	83 7f 14 10	 cmp	 DWORD PTR [edi+20], 16	; 00000010H

; 2306 :         if (_Large_string_engaged()) {

  0002e	72 02		 jb	 SHORT $LN9@operator

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00030	8b 3f		 mov	 edi, DWORD PTR [edi]
$LN9@operator:

; 2319 :         return _BUF_SIZE <= _Myres;

  00032	83 7b 14 10	 cmp	 DWORD PTR [ebx+20], 16	; 00000010H

; 2306 :         if (_Large_string_engaged()) {

  00036	72 02		 jb	 SHORT $LN16@operator

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00038	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$LN16@operator:

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0003a	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]

; 2635 :         const auto _New_size    = static_cast<size_type>(_Left_size + _Right_size);

  0003d	8d 04 16	 lea	 eax, DWORD PTR [esi+edx]
  00040	89 45 fc	 mov	 DWORD PTR __New_size$1$[ebp], eax

; 2636 :         size_type _New_capacity = _BUF_SIZE - 1;

  00043	be 0f 00 00 00	 mov	 esi, 15			; 0000000fH

; 2637 :         auto& _My_data          = _Mypair._Myval2;
; 2638 :         _Elem* _Ptr             = _My_data._Bx._Buf;

  00048	8b c1		 mov	 eax, ecx
  0004a	89 45 10	 mov	 DWORD PTR __Ptr$1$[ebp], eax

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0004d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 2355 :     size_type _Mysize = 0; // current length of string

  00053	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  0005a	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 2638 :         _Elem* _Ptr             = _My_data._Bx._Buf;

  00061	39 75 fc	 cmp	 DWORD PTR __New_size$1$[ebp], esi

; 2639 :         auto&& _Alproxy         = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2640 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data); // throws
; 2641 : 
; 2642 : #ifdef __cpp_lib_constexpr_string
; 2643 :         const bool _Activate_large_mode = _New_capacity < _New_size || _STD is_constant_evaluated();
; 2644 : #else // ^^^ __cpp_lib_constexpr_string / !__cpp_lib_constexpr_string vvv
; 2645 :         const bool _Activate_large_mode = _New_capacity < _New_size;
; 2646 : #endif // __cpp_lib_constexpr_string
; 2647 : 
; 2648 :         if (_Activate_large_mode) {

  00064	76 61		 jbe	 SHORT $LN21@operator

; 4488 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00066	8b 75 fc	 mov	 esi, DWORD PTR __New_size$1$[ebp]
  00069	83 ce 0f	 or	 esi, 15			; 0000000fH
  0006c	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH

; 4489 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00072	76 18		 jbe	 SHORT $LN34@operator

; 4490 :             return _Max;

  00074	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00079	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00084	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00087	83 c4 04	 add	 esp, 4
  0008a	eb 36		 jmp	 SHORT $LN53@operator
$LN34@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  0008c	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  00091	3b f0		 cmp	 esi, eax
  00093	0f 42 f0	 cmovb	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2652 :             const pointer _Fancyptr         = _Getal().allocate(_New_capacity + 1); // throws

  00096	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00099	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0009e	72 0e		 jb	 SHORT $LN42@operator

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000a0	50		 push	 eax
  000a1	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000a6	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000a9	83 c4 04	 add	 esp, 4
  000ac	eb 14		 jmp	 SHORT $LN53@operator
$LN42@operator:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  000ae	85 c0		 test	 eax, eax
  000b0	74 0e		 je	 SHORT $LN43@operator

; 85   :         return ::operator new(_Bytes);

  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 244  :         return _Traits::_Allocate(_Bytes);

  000b8	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]

; 85   :         return ::operator new(_Bytes);

  000bb	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  000be	eb 02		 jmp	 SHORT $LN53@operator
$LN43@operator:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  000c0	33 c0		 xor	 eax, eax
$LN53@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2654 :             _Construct_in_place(_My_data._Bx._Ptr, _Fancyptr);

  000c2	89 45 10	 mov	 DWORD PTR __Ptr$1$[ebp], eax
  000c5	89 01		 mov	 DWORD PTR [ecx], eax
$LN21@operator:

; 2655 :         }
; 2656 : 
; 2657 : #ifdef __cpp_lib_constexpr_string
; 2658 :         if (_STD is_constant_evaluated()) { // Begin the lifetimes of the objects before copying to avoid UB
; 2659 :             _Traits::assign(_Ptr, _New_capacity + 1, _Elem());
; 2660 :         }
; 2661 : #endif // __cpp_lib_constexpr_string
; 2662 : 
; 2663 :         _My_data._Mysize = _New_size;

  000c7	8b 55 fc	 mov	 edx, DWORD PTR __New_size$1$[ebp]
  000ca	89 51 10	 mov	 DWORD PTR [ecx+16], edx

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000cd	8b 55 0c	 mov	 edx, DWORD PTR __Left_size$1$[ebp]
  000d0	52		 push	 edx
  000d1	57		 push	 edi
  000d2	50		 push	 eax

; 2664 :         _My_data._Myres  = _New_capacity;

  000d3	89 71 14	 mov	 DWORD PTR [ecx+20], esi

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000d6	e8 00 00 00 00	 call	 _memcpy
  000db	ff 75 f8	 push	 DWORD PTR __Right_size$1$[ebp]

; 2666 :         _Traits::copy(_Ptr + static_cast<ptrdiff_t>(_Left_size), _Right_ptr, _Right_size);

  000de	8b 4d 0c	 mov	 ecx, DWORD PTR __Left_size$1$[ebp]
  000e1	8b 75 10	 mov	 esi, DWORD PTR __Ptr$1$[ebp]
  000e4	03 ce		 add	 ecx, esi

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000e6	53		 push	 ebx
  000e7	51		 push	 ecx
  000e8	e8 00 00 00 00	 call	 _memcpy

; 2667 :         _Traits::assign(_Ptr[_New_size], _Elem());

  000ed	8b 45 fc	 mov	 eax, DWORD PTR __New_size$1$[ebp]

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000f0	83 c4 18	 add	 esp, 24			; 00000018H

; 4691 :     }
; 4692 : 
; 4693 :     return {_String_constructor_concat_tag{}, _Left, _Left.c_str(), _Left_size, _Right.c_str(), _Right_size};

  000f3	5f		 pop	 edi

; 2667 :         _Traits::assign(_Ptr[_New_size], _Elem());

  000f4	c6 04 06 00	 mov	 BYTE PTR [esi+eax], 0

; 4691 :     }
; 4692 : 
; 4693 :     return {_String_constructor_concat_tag{}, _Left, _Left.c_str(), _Left_size, _Right.c_str(), _Right_size};

  000f8	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000fb	5e		 pop	 esi
  000fc	5b		 pop	 ebx

; 4694 : }

  000fd	8b e5		 mov	 esp, ebp
  000ff	5d		 pop	 ebp
  00100	c3		 ret	 0
$LN55@operator:

; 4690 :         _Xlen_string();

  00101	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN52@operator:
  00106	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Old$1$ = -4						; size = 4
__Ptr$ = 8						; size = 4
$T1 = 12						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 3244 :         _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 3245 :         // assign [_Ptr, _Ptr + _Count)
; 3246 :         if (_Count <= _Mypair._Myval2._Myres) {

  00005	8b 5d 0c	 mov	 ebx, DWORD PTR __Count$[ebp]
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	57		 push	 edi
  0000c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000f	89 4d fc	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00012	3b d9		 cmp	 ebx, ecx
  00014	77 28		 ja	 SHORT $LN2@assign

; 2296 :         value_type* _Result = _Bx._Buf;

  00016	8b fe		 mov	 edi, esi

; 2319 :         return _BUF_SIZE <= _Myres;

  00018	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2297 :         if (_Large_string_engaged()) {

  0001b	72 02		 jb	 SHORT $LN5@assign

; 2298 :             _Result = _Unfancy(_Bx._Ptr);

  0001d	8b 3e		 mov	 edi, DWORD PTR [esi]
$LN5@assign:

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0001f	53		 push	 ebx
  00020	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 3247 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 3248 :             _Mypair._Myval2._Mysize = _Count;

  00023	89 5e 10	 mov	 DWORD PTR [esi+16], ebx

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00026	57		 push	 edi
  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3249 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 04 1f 00	 mov	 BYTE PTR [edi+ebx], 0

; 3259 :             },
; 3260 :             _Ptr);
; 3261 :     }

  00033	8b c6		 mov	 eax, esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@assign:

; 4508 :         if (_New_size > max_size()) {

  0003e	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH
  00044	0f 87 d4 00 00
	00		 ja	 $LN60@assign

; 4488 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0004a	8b fb		 mov	 edi, ebx
  0004c	83 cf 0f	 or	 edi, 15			; 0000000fH
  0004f	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4489 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00055	76 15		 jbe	 SHORT $LN19@assign

; 4490 :             return _Max;

  00057	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  0005c	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00067	83 c4 04	 add	 esp, 4
  0006a	eb 52		 jmp	 SHORT $LN58@assign
$LN19@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4493 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0006c	8b d1		 mov	 edx, ecx
  0006e	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00073	d1 ea		 shr	 edx, 1
  00075	2b c2		 sub	 eax, edx
  00077	3b c8		 cmp	 ecx, eax
  00079	76 15		 jbe	 SHORT $LN20@assign

; 4494 :             return _Max;

  0007b	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00080	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0008b	83 c4 04	 add	 esp, 4
  0008e	eb 2e		 jmp	 SHORT $LN58@assign
$LN20@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4497 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00090	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00093	3b f8		 cmp	 edi, eax
  00095	0f 42 f8	 cmovb	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4515 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00098	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0009b	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  000a0	72 0b		 jb	 SHORT $LN27@assign

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000a8	83 c4 04	 add	 esp, 4
  000ab	eb 11		 jmp	 SHORT $LN58@assign
$LN27@assign:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  000ad	85 c0		 test	 eax, eax
  000af	74 0b		 je	 SHORT $LN28@assign

; 85   :         return ::operator new(_Bytes);

  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000b7	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  000ba	eb 02		 jmp	 SHORT $LN58@assign
$LN28@assign:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  000bc	33 c0		 xor	 eax, eax
$LN58@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000be	53		 push	 ebx
  000bf	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4523 :         _Mypair._Myval2._Mysize = _New_size;

  000c2	89 45 0c	 mov	 DWORD PTR $T1[ebp], eax

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000c5	50		 push	 eax

; 4523 :         _Mypair._Myval2._Mysize = _New_size;

  000c6	89 5e 10	 mov	 DWORD PTR [esi+16], ebx

; 4524 :         _Mypair._Myval2._Myres  = _New_capacity;

  000c9	89 7e 14	 mov	 DWORD PTR [esi+20], edi

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000cc	e8 00 00 00 00	 call	 _memcpy

; 3258 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000d1	8b 7d 0c	 mov	 edi, DWORD PTR $T1[ebp]

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000d4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4526 :         if (_BUF_SIZE <= _Old_capacity) {

  000d7	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 3258 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000da	c6 04 1f 00	 mov	 BYTE PTR [edi+ebx], 0

; 4526 :         if (_BUF_SIZE <= _Old_capacity) {

  000de	83 f8 10	 cmp	 eax, 16			; 00000010H
  000e1	72 29		 jb	 SHORT $LN13@assign

; 4527 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000e3	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e6	8b 06		 mov	 eax, DWORD PTR [esi]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000e8	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000ee	72 12		 jb	 SHORT $LN50@assign

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f0	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f3	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f6	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000f8	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fb	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000fe	77 19		 ja	 SHORT $LN47@assign

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00100	8b c2		 mov	 eax, edx
$LN50@assign:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00102	51		 push	 ecx
  00103	50		 push	 eax
  00104	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00109	83 c4 08	 add	 esp, 8
$LN13@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3254 :         return _Reallocate_for(

  0010c	89 3e		 mov	 DWORD PTR [esi], edi

; 3259 :             },
; 3260 :             _Ptr);
; 3261 :     }

  0010e	8b c6		 mov	 eax, esi
  00110	5f		 pop	 edi
  00111	5e		 pop	 esi
  00112	5b		 pop	 ebx
  00113	8b e5		 mov	 esp, ebp
  00115	5d		 pop	 ebp
  00116	c2 08 00	 ret	 8
$LN47@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00119	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN60@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4509 :             _Xlen_string(); // result too long

  0011e	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN56@assign:
  00123	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 3002 :     _CONSTEXPR20_CONTAINER ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2319 :         return _BUF_SIZE <= _Myres;

  00003	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00006	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 27		 jb	 SHORT $LN12@basic_stri
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000d	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0000e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00014	72 12		 jb	 SHORT $LN22@basic_stri

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00016	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00019	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0001e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00021	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00024	77 1f		 ja	 SHORT $LN19@basic_stri

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00026	8b c2		 mov	 eax, edx
$LN22@basic_stri:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00028	51		 push	 ecx
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	83 c4 08	 add	 esp, 8
$LN12@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00032	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00039	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00040	c6 06 00	 mov	 BYTE PTR [esi], 0
  00043	5e		 pop	 esi

; 3010 :     }

  00044	c3		 ret	 0
$LN19@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00045	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN27@basic_stri:
  0004a	cc		 int	 3
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Xran, COMDAT

; 2337 :         _Xout_of_range("invalid string position");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
  00005	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN3@Xran:
  0000a	cc		 int	 3
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2374 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT __snprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__snprintf PROC						; COMDAT

; 1947 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1392 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 10	 push	 DWORD PTR __Format$[ebp]
  0000c	ff 75 0c	 push	 DWORD PTR __BufferCount$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00012	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	ff 70 04	 push	 DWORD PTR [eax+4]
  0001c	83 c9 01	 or	 ecx, 1
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1393 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1394 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1395 : 
; 1396 :         return _Result < 0 ? -1 : _Result;

  00025	83 c9 ff	 or	 ecx, -1
  00028	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002b	85 c0		 test	 eax, eax
  0002d	0f 48 c1	 cmovs	 eax, ecx

; 1948 :         int _Result;
; 1949 :         va_list _ArgList;
; 1950 :         __crt_va_start(_ArgList, _Format);
; 1951 :         _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);
; 1952 :         __crt_va_end(_ArgList);
; 1953 :         return _Result;
; 1954 :     }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
__snprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceDataFile.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
