; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30137.0 

	TITLE	C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\Distribute\GameType.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_fGameFPS@@3MA				; g_fGameFPS
PUBLIC	??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPool@USCollisionData@NRaceData@@@@6B@ ; CDynamicPool<NRaceData::SCollisionData>::`vftable'
PUBLIC	??_G?$CDynamicPool@USCollisionData@NRaceData@@@@UAEPAXI@Z ; CDynamicPool<NRaceData::SCollisionData>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPool@USAttachingEffectData@NRaceData@@@@6B@ ; CDynamicPool<NRaceData::SAttachingEffectData>::`vftable'
PUBLIC	??_G?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAEPAXI@Z ; CDynamicPool<NRaceData::SAttachingEffectData>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPool@USAttachingObjectData@NRaceData@@@@6B@ ; CDynamicPool<NRaceData::SAttachingObjectData>::`vftable'
PUBLIC	??_G?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAEPAXI@Z ; CDynamicPool<NRaceData::SAttachingObjectData>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPool@USCollisionData@NRaceData@@@@6B@ ; CDynamicPool<NRaceData::SCollisionData>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@USCollisionData@NRaceData@@@@@8 ; CDynamicPool<NRaceData::SCollisionData> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@USCollisionData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SCollisionData>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@USCollisionData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SCollisionData>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@USCollisionData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SCollisionData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPool@USAttachingEffectData@NRaceData@@@@6B@ ; CDynamicPool<NRaceData::SAttachingEffectData>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@USAttachingEffectData@NRaceData@@@@@8 ; CDynamicPool<NRaceData::SAttachingEffectData> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SAttachingEffectData>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SAttachingEffectData>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SAttachingEffectData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPool@USAttachingObjectData@NRaceData@@@@6B@ ; CDynamicPool<NRaceData::SAttachingObjectData>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@USAttachingObjectData@NRaceData@@@@@8 ; CDynamicPool<NRaceData::SAttachingObjectData> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SAttachingObjectData>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SAttachingObjectData>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SAttachingObjectData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPool@USCollisionData@NRaceData@@@@UAEPAXI@Z:PROC ; CDynamicPool<NRaceData::SCollisionData>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAEPAXI@Z:PROC ; CDynamicPool<NRaceData::SAttachingEffectData>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAEPAXI@Z:PROC ; CDynamicPool<NRaceData::SAttachingObjectData>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vector deleting destructor'
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDe'
	DB	'corator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDec'
	DB	'orator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpd'
	DB	'ateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@N'
	DB	'EffectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEff'
	DB	'ectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffe'
	DB	'ctUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecora'
	DB	'tor@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDeco'
	DB	'rator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@USAttachingObjectData@NRaceData@@@@@8 ; CDynamicPool<NRaceData::SAttachingObjectData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SAttachingObjectData>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8 DD 00H ; CDynamicPool<NRaceData::SAttachingObjectData>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@USAttachingObjectData@NRaceData@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPool@USAttachingObjectData@NRaceData@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<NRaceData::SAttachingObjectData> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@USAttachingObjectData@NRaceData@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPool@USAttachingObjectData@NRaceData@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@USAttachingObjectData@NRaceData@@@@6B@ DD 00H ; CDynamicPool<NRaceData::SAttachingObjectData>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@USAttachingObjectData@NRaceData@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@USAttachingObjectData@NRaceData@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@USAttachingEffectData@NRaceData@@@@@8 ; CDynamicPool<NRaceData::SAttachingEffectData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SAttachingEffectData>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8 DD 00H ; CDynamicPool<NRaceData::SAttachingEffectData>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@USAttachingEffectData@NRaceData@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPool@USAttachingEffectData@NRaceData@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<NRaceData::SAttachingEffectData> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@USAttachingEffectData@NRaceData@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPool@USAttachingEffectData@NRaceData@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@USAttachingEffectData@NRaceData@@@@6B@ DD 00H ; CDynamicPool<NRaceData::SAttachingEffectData>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@USAttachingEffectData@NRaceData@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@USAttachingEffectData@NRaceData@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@USCollisionData@NRaceData@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@USCollisionData@NRaceData@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@USCollisionData@NRaceData@@@@@8 ; CDynamicPool<NRaceData::SCollisionData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@USCollisionData@NRaceData@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@USCollisionData@NRaceData@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@USCollisionData@NRaceData@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@USCollisionData@NRaceData@@@@8 ; CDynamicPool<NRaceData::SCollisionData>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@USCollisionData@NRaceData@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@USCollisionData@NRaceData@@@@8 DD 00H ; CDynamicPool<NRaceData::SCollisionData>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@USCollisionData@NRaceData@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@USCollisionData@NRaceData@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPool@USCollisionData@NRaceData@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<NRaceData::SCollisionData> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@USCollisionData@NRaceData@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPool@USCollisionData@NRaceData@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@USCollisionData@NRaceData@@@@6B@ DD 00H ; CDynamicPool<NRaceData::SCollisionData>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@USCollisionData@NRaceData@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@USCollisionData@NRaceData@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPool@USAttachingObjectData@NRaceData@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@USAttachingObjectData@NRaceData@@@@6B@ DD FLAT:??_R4?$CDynamicPool@USAttachingObjectData@NRaceData@@@@6B@ ; CDynamicPool<NRaceData::SAttachingObjectData>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPool@USAttachingEffectData@NRaceData@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@USAttachingEffectData@NRaceData@@@@6B@ DD FLAT:??_R4?$CDynamicPool@USAttachingEffectData@NRaceData@@@@6B@ ; CDynamicPool<NRaceData::SAttachingEffectData>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAEPAXI@Z
CONST	ENDS
CONST	SEGMENT
?piecewise_construct@std@@3Upiecewise_construct_t@1@B	ORG $+1 ; std::piecewise_construct
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
;	COMDAT ??_7?$CDynamicPool@USCollisionData@NRaceData@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@USCollisionData@NRaceData@@@@6B@ DD FLAT:??_R4?$CDynamicPool@USCollisionData@NRaceData@@@@6B@ ; CDynamicPool<NRaceData::SCollisionData>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@USCollisionData@NRaceData@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
_DATA	SEGMENT
?g_fGameFPS@@3MA DD 042700000r			; 60	; g_fGameFPS
_DATA	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?_Throw_tree_length_error@std@@YAXXZ		; std::_Throw_tree_length_error
PUBLIC	?_Getal@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Getal
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Insert_node
PUBLIC	?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z ; NRaceData::SHitData::Load
PUBLIC	??0SHitData@NRaceData@@QAE@XZ			; NRaceData::SHitData::SHitData
PUBLIC	??1SHitData@NRaceData@@QAE@XZ			; NRaceData::SHitData::~SHitData
PUBLIC	??0SHitData@NRaceData@@QAE@ABU01@@Z		; NRaceData::SHitData::SHitData
PUBLIC	?deallocate@?$allocator@USHitData@NRaceData@@@std@@QAEXQAUSHitData@NRaceData@@I@Z ; std::allocator<NRaceData::SHitData>::deallocate
PUBLIC	?_Umove@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEPAUSHitData@NRaceData@@PAU34@00@Z ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Umove
PUBLIC	?_Destroy@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEXPAUSHitData@NRaceData@@0@Z ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Destroy
PUBLIC	?_Xlength@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Xlength
PUBLIC	??1?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@QAE@XZ ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::~vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >
PUBLIC	?_Ufill@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@AAEPAVCSphereCollisionInstance@@PAV3@IU_Value_init_tag@2@@Z ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::_Ufill
PUBLIC	?_Xlength@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@CAXXZ ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::_Xlength
PUBLIC	??1SCollisionData@NRaceData@@UAE@XZ		; NRaceData::SCollisionData::~SCollisionData
PUBLIC	??_GSCollisionData@NRaceData@@UAEPAXI@Z		; NRaceData::SCollisionData::`scalar deleting destructor'
PUBLIC	??1SAttachingEffectData@NRaceData@@UAE@XZ	; NRaceData::SAttachingEffectData::~SAttachingEffectData
PUBLIC	??_GSAttachingEffectData@NRaceData@@UAEPAXI@Z	; NRaceData::SAttachingEffectData::`scalar deleting destructor'
PUBLIC	??1SAttachingObjectData@NRaceData@@UAE@XZ	; NRaceData::SAttachingObjectData::~SAttachingObjectData
PUBLIC	??_GSAttachingObjectData@NRaceData@@UAEPAXI@Z	; NRaceData::SAttachingObjectData::`scalar deleting destructor'
PUBLIC	?DestroySystem@NRaceData@@YAXXZ			; NRaceData::DestroySystem
PUBLIC	?SaveAttackData@NRaceData@@YAXPAU_iobuf@@HABUSAttackData@1@@Z ; NRaceData::SaveAttackData
PUBLIC	?SaveMotionAttackData@NRaceData@@YAXPAU_iobuf@@HABUSMotionAttackData@1@@Z ; NRaceData::SaveMotionAttackData
PUBLIC	?SaveCollisionData@NRaceData@@YAXPAU_iobuf@@HABUSCollisionData@1@@Z ; NRaceData::SaveCollisionData
PUBLIC	?SaveEffectData@NRaceData@@YAXPAU_iobuf@@HABUSAttachingEffectData@1@@Z ; NRaceData::SaveEffectData
PUBLIC	?SaveObjectData@NRaceData@@YAXPAU_iobuf@@HABUSAttachingObjectData@1@@Z ; NRaceData::SaveObjectData
PUBLIC	?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z ; NRaceData::LoadAttackData
PUBLIC	?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z ; NRaceData::LoadMotionAttackData
PUBLIC	?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z ; NRaceData::LoadCollisionData
PUBLIC	?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z ; NRaceData::LoadEffectData
PUBLIC	?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z ; NRaceData::LoadObjectData
PUBLIC	?SaveAttachingData@NRaceData@@YAXPAU_iobuf@@HABV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z ; NRaceData::SaveAttachingData
PUBLIC	?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z ; NRaceData::LoadAttachingData
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??1?$CDynamicPool@USCollisionData@NRaceData@@@@UAE@XZ ; CDynamicPool<NRaceData::SCollisionData>::~CDynamicPool<NRaceData::SCollisionData>
PUBLIC	?Delete@?$CDynamicPool@USCollisionData@NRaceData@@@@KAXPAUSCollisionData@NRaceData@@@Z ; CDynamicPool<NRaceData::SCollisionData>::Delete
PUBLIC	?_Xlength@?$vector@PAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SCollisionData *,std::allocator<NRaceData::SCollisionData *> >::_Xlength
PUBLIC	??1?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAE@XZ ; CDynamicPool<NRaceData::SAttachingEffectData>::~CDynamicPool<NRaceData::SAttachingEffectData>
PUBLIC	?Delete@?$CDynamicPool@USAttachingEffectData@NRaceData@@@@KAXPAUSAttachingEffectData@NRaceData@@@Z ; CDynamicPool<NRaceData::SAttachingEffectData>::Delete
PUBLIC	?_Xlength@?$vector@PAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SAttachingEffectData *,std::allocator<NRaceData::SAttachingEffectData *> >::_Xlength
PUBLIC	??1?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAE@XZ ; CDynamicPool<NRaceData::SAttachingObjectData>::~CDynamicPool<NRaceData::SAttachingObjectData>
PUBLIC	?Delete@?$CDynamicPool@USAttachingObjectData@NRaceData@@@@KAXPAUSAttachingObjectData@NRaceData@@@Z ; CDynamicPool<NRaceData::SAttachingObjectData>::Delete
PUBLIC	?_Xlength@?$vector@PAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SAttachingObjectData *,std::allocator<NRaceData::SAttachingObjectData *> >::_Xlength
PUBLIC	?_Ufill@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@AAEPAUSAttachingData@NRaceData@@PAU34@IU_Value_init_tag@2@@Z ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Ufill
PUBLIC	?_Xlength@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Xlength
PUBLIC	?_Xrange@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Xrange
PUBLIC	??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
PUBLIC	??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z ; std::_Default_allocator_traits<std::allocator<NRaceData::SHitData> >::construct<NRaceData::SHitData,NRaceData::SHitData>
PUBLIC	??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Emplace_reallocate<NRaceData::SHitData>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
PUBLIC	??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
PUBLIC	??$_Destroy_range@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAXPAUSAttachingData@NRaceData@@QAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SAttachingData> >
PUBLIC	??$_Emplace_reallocate@ABQAUSAttachingObjectData@NRaceData@@@?$vector@PAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@QAEPAPAUSAttachingObjectData@NRaceData@@QAPAU23@ABQAU23@@Z ; std::vector<NRaceData::SAttachingObjectData *,std::allocator<NRaceData::SAttachingObjectData *> >::_Emplace_reallocate<NRaceData::SAttachingObjectData * const &>
PUBLIC	??$_Emplace_reallocate@ABQAUSAttachingEffectData@NRaceData@@@?$vector@PAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@QAEPAPAUSAttachingEffectData@NRaceData@@QAPAU23@ABQAU23@@Z ; std::vector<NRaceData::SAttachingEffectData *,std::allocator<NRaceData::SAttachingEffectData *> >::_Emplace_reallocate<NRaceData::SAttachingEffectData * const &>
PUBLIC	??$_Emplace_reallocate@ABQAUSCollisionData@NRaceData@@@?$vector@PAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@QAEPAPAUSCollisionData@NRaceData@@QAPAU23@ABQAU23@@Z ; std::vector<NRaceData::SCollisionData *,std::allocator<NRaceData::SCollisionData *> >::_Emplace_reallocate<NRaceData::SCollisionData * const &>
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
PUBLIC	??$_Copy_memmove@PAPAUSAttachingObjectData@NRaceData@@PAPAU12@@std@@YAPAPAUSAttachingObjectData@NRaceData@@PAPAU12@00@Z ; std::_Copy_memmove<NRaceData::SAttachingObjectData * *,NRaceData::SAttachingObjectData * *>
PUBLIC	??$_Copy_memmove@PAPAUSAttachingEffectData@NRaceData@@PAPAU12@@std@@YAPAPAUSAttachingEffectData@NRaceData@@PAPAU12@00@Z ; std::_Copy_memmove<NRaceData::SAttachingEffectData * *,NRaceData::SAttachingEffectData * *>
PUBLIC	??$_Copy_memmove@PAPAUSCollisionData@NRaceData@@PAPAU12@@std@@YAPAPAUSCollisionData@NRaceData@@PAPAU12@00@Z ; std::_Copy_memmove<NRaceData::SCollisionData * *,NRaceData::SCollisionData * *>
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<NRaceData::SHitData> >::~_Uninitialized_backout_al<std::allocator<NRaceData::SHitData> >
PUBLIC	??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@2@@std@@QAE@XZ ; std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > > >::~_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > > >
PUBLIC	??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z ; std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_nodes<std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_tag>
PUBLIC	??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0BB@GCADKGJO@map?1set?5too?5long@		; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_7CBaseCollisionInstance@@6B@			; CBaseCollisionInstance::`vftable'
PUBLIC	??_7CSphereCollisionInstance@@6B@		; CSphereCollisionInstance::`vftable'
PUBLIC	??_7SCollisionData@NRaceData@@6B@		; NRaceData::SCollisionData::`vftable'
PUBLIC	??_7SAttachingEffectData@NRaceData@@6B@		; NRaceData::SAttachingEffectData::`vftable'
PUBLIC	??_7SAttachingObjectData@NRaceData@@6B@		; NRaceData::SAttachingObjectData::`vftable'
PUBLIC	?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A ; NRaceData::g_CollisionDataPool
PUBLIC	?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A ; NRaceData::g_EffectDataPool
PUBLIC	?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A ; NRaceData::g_ObjectDataPool
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SCollisionData@NRaceData@@6B@		; NRaceData::SCollisionData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSCollisionData@NRaceData@@@8		; NRaceData::SCollisionData `RTTI Type Descriptor'
PUBLIC	??_R3SCollisionData@NRaceData@@8		; NRaceData::SCollisionData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SCollisionData@NRaceData@@8		; NRaceData::SCollisionData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SCollisionData@NRaceData@@8	; NRaceData::SCollisionData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SAttachingEffectData@NRaceData@@6B@	; NRaceData::SAttachingEffectData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSAttachingEffectData@NRaceData@@@8	; NRaceData::SAttachingEffectData `RTTI Type Descriptor'
PUBLIC	??_R3SAttachingEffectData@NRaceData@@8		; NRaceData::SAttachingEffectData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SAttachingEffectData@NRaceData@@8		; NRaceData::SAttachingEffectData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SAttachingEffectData@NRaceData@@8	; NRaceData::SAttachingEffectData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SAttachingObjectData@NRaceData@@6B@	; NRaceData::SAttachingObjectData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSAttachingObjectData@NRaceData@@@8	; NRaceData::SAttachingObjectData `RTTI Type Descriptor'
PUBLIC	??_R3SAttachingObjectData@NRaceData@@8		; NRaceData::SAttachingObjectData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SAttachingObjectData@NRaceData@@8		; NRaceData::SAttachingObjectData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SAttachingObjectData@NRaceData@@8	; NRaceData::SAttachingObjectData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
PUBLIC	?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
PUBLIC	??_C@_0L@MFPNOHLP@attacktype@			; `string'
PUBLIC	??_C@_0M@IEMCNBIB@hittingtype@			; `string'
PUBLIC	??_C@_0M@HEIDABDC@stiffentime@			; `string'
PUBLIC	??_C@_0O@GBJCIDNL@invisibletime@		; `string'
PUBLIC	??_C@_0O@KAKKEPBE@externalforce@		; `string'
PUBLIC	??_C@_0O@PCIAOIBK@hitlimitcount@		; `string'
PUBLIC	??_C@_0BD@CPENFGPA@attackingstarttime@		; `string'
PUBLIC	??_C@_0BB@KAKEFPLI@attackingendtime@		; `string'
PUBLIC	??_C@_0O@MMIDKEHG@attackingbone@		; `string'
PUBLIC	??_C@_0N@MMFFHHOI@weaponlength@			; `string'
PUBLIC	??_C@_0M@IHNFHPGN@hitposition@			; `string'
PUBLIC	??_C@_0L@FECBOPBF@motiontype@			; `string'
PUBLIC	??_C@_0O@EAOJEAGN@attackingtype@		; `string'
PUBLIC	??_C@_0N@JENLJGO@hitdatacount@			; `string'
PUBLIC	??_C@_0O@LCILGBGA@collisiontype@		; `string'
PUBLIC	??_C@_0BA@PACKMKGG@spheredatacount@		; `string'
PUBLIC	??_C@_0L@JJLJPGHA@spheredata@			; `string'
PUBLIC	??_C@_06KGHINEPG@radius@			; `string'
PUBLIC	??_C@_08OAGMDKAF@position@			; `string'
PUBLIC	??_C@_0BL@NLAHNABK@EffectScriptName?5?5?5?5?5?$CC?$CFs?$CC?6@ ; `string'
PUBLIC	??_C@_0BP@CFDDPJAK@EffectPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BP@HKKPGBPJ@EffectRotation?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BL@DJLPHPIA@ObjectScriptName?5?5?5?5?5?$CC?$CFs?$CC?6@ ; `string'
PUBLIC	??_C@_0BB@OKGDPHII@effectscriptname@		; `string'
PUBLIC	??_C@_0P@PMGDNJPL@effectposition@		; `string'
PUBLIC	??_C@_0P@PLGBENJO@effectrotation@		; `string'
PUBLIC	??_C@_0BB@EJILMNLC@objectscriptname@		; `string'
PUBLIC	??_C@_0BJ@EGAIMMNM@AttackType?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BJ@LOMGAMME@HittingType?5?5?5?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BJ@PMKNADAG@StiffenTime?5?5?5?5?5?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BJ@PMIBIGHB@InvisibleTime?5?5?5?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BJ@LGCKNMAM@ExternalForce?5?5?5?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BJ@CEBPFMIJ@HitLimitCount?5?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_C@_0BJ@MBAEAEOJ@MotionType?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BJ@HFLBJKFP@HitDataCount?5?5?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BD@OJFCEOOP@Group?5HitData?$CF02d?6@	; `string'
PUBLIC	??_C@_02KCPFEJNG@?$HL?6@			; `string'
PUBLIC	??_C@_0BJ@PBKKALID@AttackingStartTime?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BJ@GFEFBFDJ@AttackingEndTime?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BL@OMPHLDJB@AttackingBone?5?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@ ; `string'
PUBLIC	??_C@_0BJ@DPGEFILL@WeaponLength?5?5?5?5?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BC@FOOKPLLP@List?5HitPosition?6@		; `string'
PUBLIC	??_C@_0BG@DHJNNNIC@?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?6@ ; `string'
PUBLIC	??_C@_02KGHIDFGE@?$HN?6@			; `string'
PUBLIC	??_C@_0BJ@DIEJPDEB@CollisionType?5?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BJ@LLPIPOLN@SphereDataCount?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BG@KEPKCEAC@Group?5SphereData?$CF02d?6@	; `string'
PUBLIC	??_C@_0BF@CAOAGEDL@Radius?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BL@DHPAPBDL@Position?5?5?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BN@MFLPMEFJ@AttachingDataCount?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BJ@DLPFDMOE@Group?5AttachingData?$CF02d?6@ ; `string'
PUBLIC	??_C@_0BJ@IOEHDAIG@AttachingDataType?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BJ@CHCKAAIO@isAttaching?5?5?5?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BJ@HNFALFHA@AttachingModelIndex?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BL@PLABIPOF@AttachingBoneName?5?5?5?5?$CC?$CFs?$CC?6@ ; `string'
PUBLIC	??_C@_0BD@FANHLGEG@attachingdatacount@		; `string'
PUBLIC	??_C@_0O@OPEMPJIC@attachingdata@		; `string'
PUBLIC	??_C@_0BC@MHCCJHKE@attachingdatatype@		; `string'
PUBLIC	??_C@_0M@MJFJJMOM@isattaching@			; `string'
PUBLIC	??_C@_0BE@HAHPJOBE@attachingmodelindex@		; `string'
PUBLIC	??_C@_0BC@FCIOLNPK@attachingbonename@		; `string'
PUBLIC	??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@	; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CBaseCollisionInstance@@6B@		; CBaseCollisionInstance::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBaseCollisionInstance@@@8		; CBaseCollisionInstance `RTTI Type Descriptor'
PUBLIC	??_R3CBaseCollisionInstance@@8			; CBaseCollisionInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseCollisionInstance@@8			; CBaseCollisionInstance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBaseCollisionInstance@@8		; CBaseCollisionInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CSphereCollisionInstance@@6B@		; CSphereCollisionInstance::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSphereCollisionInstance@@@8		; CSphereCollisionInstance `RTTI Type Descriptor'
PUBLIC	??_R3CSphereCollisionInstance@@8		; CSphereCollisionInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSphereCollisionInstance@@8		; CSphereCollisionInstance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSphereCollisionInstance@@8	; CSphereCollisionInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_atof:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ:PROC		; PrintfTabs
EXTRN	?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z:PROC ; CTextFileLoader::SetChildNode
EXTRN	?SetChildNode@CTextFileLoader@@QAEHK@Z:PROC	; CTextFileLoader::SetChildNode
EXTRN	?SetParentNode@CTextFileLoader@@QAEHXZ:PROC	; CTextFileLoader::SetParentNode
EXTRN	?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z:PROC ; CTextFileLoader::GetTokenVector
EXTRN	?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z:PROC ; CTextFileLoader::GetTokenInteger
EXTRN	?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z:PROC ; CTextFileLoader::GetTokenDoubleWord
EXTRN	?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z:PROC ; CTextFileLoader::GetTokenFloat
EXTRN	?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z:PROC ; CTextFileLoader::GetTokenPosition
EXTRN	?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z:PROC ; CTextFileLoader::GetTokenString
EXTRN	?GetAttribute@CSphereCollisionInstance@@QAEAAUSSphereData@@XZ:PROC ; CSphereCollisionInstance::GetAttribute
EXTRN	?GetAttribute@CSphereCollisionInstance@@QBEABUSSphereData@@XZ:PROC ; CSphereCollisionInstance::GetAttribute
EXTRN	?Render@CSphereCollisionInstance@@UAEXW4_D3DFILLMODE@@@Z:PROC ; CSphereCollisionInstance::Render
EXTRN	?OnDestroy@CSphereCollisionInstance@@MAEXXZ:PROC ; CSphereCollisionInstance::OnDestroy
EXTRN	?OnMovementCollisionDynamicSphere@CSphereCollisionInstance@@MBE_NABUCDynamicSphereInstance@@@Z:PROC ; CSphereCollisionInstance::OnMovementCollisionDynamicSphere
EXTRN	?OnCollisionDynamicSphere@CSphereCollisionInstance@@MBE_NABUCDynamicSphereInstance@@@Z:PROC ; CSphereCollisionInstance::OnCollisionDynamicSphere
EXTRN	?OnGetCollisionMovementAdjust@CSphereCollisionInstance@@MBE?AUD3DXVECTOR3@@ABUCDynamicSphereInstance@@@Z:PROC ; CSphereCollisionInstance::OnGetCollisionMovementAdjust
EXTRN	??_ESCollisionData@NRaceData@@UAEPAXI@Z:PROC	; NRaceData::SCollisionData::`vector deleting destructor'
EXTRN	??_ESAttachingEffectData@NRaceData@@UAEPAXI@Z:PROC ; NRaceData::SAttachingEffectData::`vector deleting destructor'
EXTRN	??_ESAttachingObjectData@NRaceData@@UAEPAXI@Z:PROC ; NRaceData::SAttachingObjectData::`vector deleting destructor'
EXTRN	?RegisterEffect@CEffectManager@@QAEHPBD_N1@Z:PROC ; CEffectManager::RegisterEffect
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A DD 01H DUP (?) ; CSingleton<CEffectManager>::ms_singleton
_BSS	ENDS
CRT$XCU	SEGMENT
?g_CollisionDataPool$initializer$@NRaceData@@3P6AXXZA DD FLAT:??__Eg_CollisionDataPool@NRaceData@@YAXXZ ; NRaceData::g_CollisionDataPool$initializer$
CRT$XCU	ENDS
;	COMDAT ??_R1A@?0A@EA@CSphereCollisionInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSphereCollisionInstance@@8 DD FLAT:??_R0?AVCSphereCollisionInstance@@@8 ; CSphereCollisionInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSphereCollisionInstance@@8
rdata$r	ENDS
;	COMDAT ??_R2CSphereCollisionInstance@@8
rdata$r	SEGMENT
??_R2CSphereCollisionInstance@@8 DD FLAT:??_R1A@?0A@EA@CSphereCollisionInstance@@8 ; CSphereCollisionInstance::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseCollisionInstance@@8
rdata$r	ENDS
;	COMDAT ??_R3CSphereCollisionInstance@@8
rdata$r	SEGMENT
??_R3CSphereCollisionInstance@@8 DD 00H			; CSphereCollisionInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CSphereCollisionInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSphereCollisionInstance@@@8
data$rs	SEGMENT
??_R0?AVCSphereCollisionInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CSphereCollisionInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSphereCollisionInstance@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CSphereCollisionInstance@@6B@
rdata$r	SEGMENT
??_R4CSphereCollisionInstance@@6B@ DD 00H		; CSphereCollisionInstance::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSphereCollisionInstance@@@8
	DD	FLAT:??_R3CSphereCollisionInstance@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseCollisionInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseCollisionInstance@@8 DD FLAT:??_R0?AVCBaseCollisionInstance@@@8 ; CBaseCollisionInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseCollisionInstance@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseCollisionInstance@@8
rdata$r	SEGMENT
??_R2CBaseCollisionInstance@@8 DD FLAT:??_R1A@?0A@EA@CBaseCollisionInstance@@8 ; CBaseCollisionInstance::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CBaseCollisionInstance@@8
rdata$r	SEGMENT
??_R3CBaseCollisionInstance@@8 DD 00H			; CBaseCollisionInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CBaseCollisionInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseCollisionInstance@@@8
data$rs	SEGMENT
??_R0?AVCBaseCollisionInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CBaseCollisionInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBaseCollisionInstance@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CBaseCollisionInstance@@6B@
rdata$r	SEGMENT
??_R4CBaseCollisionInstance@@6B@ DD 00H			; CBaseCollisionInstance::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBaseCollisionInstance@@@8
	DD	FLAT:??_R3CBaseCollisionInstance@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
CONST	SEGMENT
??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@ DB 'invalid vector subscri'
	DB	'pt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FCIOLNPK@attachingbonename@
CONST	SEGMENT
??_C@_0BC@FCIOLNPK@attachingbonename@ DB 'attachingbonename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HAHPJOBE@attachingmodelindex@
CONST	SEGMENT
??_C@_0BE@HAHPJOBE@attachingmodelindex@ DB 'attachingmodelindex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MJFJJMOM@isattaching@
CONST	SEGMENT
??_C@_0M@MJFJJMOM@isattaching@ DB 'isattaching', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MHCCJHKE@attachingdatatype@
CONST	SEGMENT
??_C@_0BC@MHCCJHKE@attachingdatatype@ DB 'attachingdatatype', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OPEMPJIC@attachingdata@
CONST	SEGMENT
??_C@_0O@OPEMPJIC@attachingdata@ DB 'attachingdata', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FANHLGEG@attachingdatacount@
CONST	SEGMENT
??_C@_0BD@FANHLGEG@attachingdatacount@ DB 'attachingdatacount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PLABIPOF@AttachingBoneName?5?5?5?5?$CC?$CFs?$CC?6@
CONST	SEGMENT
??_C@_0BL@PLABIPOF@AttachingBoneName?5?5?5?5?$CC?$CFs?$CC?6@ DB 'Attachin'
	DB	'gBoneName    "%s"', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HNFALFHA@AttachingModelIndex?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@HNFALFHA@AttachingModelIndex?5?5?$CFd?6@ DB 'AttachingModelInde'
	DB	'x  %d', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CHCKAAIO@isAttaching?5?5?5?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@CHCKAAIO@isAttaching?5?5?5?5?5?5?5?5?5?5?$CFd?6@ DB 'isAttachin'
	DB	'g          %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@IOEHDAIG@AttachingDataType?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@IOEHDAIG@AttachingDataType?5?5?5?5?$CFd?6@ DB 'AttachingDataTyp'
	DB	'e    %d', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DLPFDMOE@Group?5AttachingData?$CF02d?6@
CONST	SEGMENT
??_C@_0BJ@DLPFDMOE@Group?5AttachingData?$CF02d?6@ DB 'Group AttachingData'
	DB	'%02d', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MFLPMEFJ@AttachingDataCount?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BN@MFLPMEFJ@AttachingDataCount?5?5?5?5?5?5?5?$CFd?6@ DB 'Attaching'
	DB	'DataCount       %d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DHPAPBDL@Position?5?5?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@
CONST	SEGMENT
??_C@_0BL@DHPAPBDL@Position?5?5?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@ DB 'P'
	DB	'osition         %f %f %f', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CAOAGEDL@Radius?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BF@CAOAGEDL@Radius?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@ DB 'Radius       '
	DB	'    %f', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KEPKCEAC@Group?5SphereData?$CF02d?6@
CONST	SEGMENT
??_C@_0BG@KEPKCEAC@Group?5SphereData?$CF02d?6@ DB 'Group SphereData%02d', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LLPIPOLN@SphereDataCount?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@LLPIPOLN@SphereDataCount?5?5?5?5?5?5?$CFd?6@ DB 'SphereDataCoun'
	DB	't      %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DIEJPDEB@CollisionType?5?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@DIEJPDEB@CollisionType?5?5?5?5?5?5?5?5?$CFd?6@ DB 'CollisionTyp'
	DB	'e        %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KGHIDFGE@?$HN?6@
CONST	SEGMENT
??_C@_02KGHIDFGE@?$HN?6@ DB '}', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DHJNNNIC@?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?6@
CONST	SEGMENT
??_C@_0BG@DHJNNNIC@?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?6@ DB '%'
	DB	'f %f %f %f %f %f %f', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FOOKPLLP@List?5HitPosition?6@
CONST	SEGMENT
??_C@_0BC@FOOKPLLP@List?5HitPosition?6@ DB 'List HitPosition', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DPGEFILL@WeaponLength?5?5?5?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BJ@DPGEFILL@WeaponLength?5?5?5?5?5?5?5?5?5?$CFf?6@ DB 'WeaponLengt'
	DB	'h         %f', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OMPHLDJB@AttackingBone?5?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@
CONST	SEGMENT
??_C@_0BL@OMPHLDJB@AttackingBone?5?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@ DB 'Atta'
	DB	'ckingBone        "%s"', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GFEFBFDJ@AttackingEndTime?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BJ@GFEFBFDJ@AttackingEndTime?5?5?5?5?5?$CFf?6@ DB 'AttackingEndTim'
	DB	'e     %f', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PBKKALID@AttackingStartTime?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BJ@PBKKALID@AttackingStartTime?5?5?5?$CFf?6@ DB 'AttackingStartTim'
	DB	'e   %f', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02KCPFEJNG@?$HL?6@
CONST	SEGMENT
??_C@_02KCPFEJNG@?$HL?6@ DB '{', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OJFCEOOP@Group?5HitData?$CF02d?6@
CONST	SEGMENT
??_C@_0BD@OJFCEOOP@Group?5HitData?$CF02d?6@ DB 'Group HitData%02d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HFLBJKFP@HitDataCount?5?5?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@HFLBJKFP@HitDataCount?5?5?5?5?5?5?5?5?5?$CFd?6@ DB 'HitDataCoun'
	DB	't         %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MBAEAEOJ@MotionType?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@MBAEAEOJ@MotionType?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@ DB 'MotionTyp'
	DB	'e           %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CEBPFMIJ@HitLimitCount?5?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@CEBPFMIJ@HitLimitCount?5?5?5?5?5?5?5?5?$CFd?6@ DB 'HitLimitCoun'
	DB	't        %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LGCKNMAM@ExternalForce?5?5?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BJ@LGCKNMAM@ExternalForce?5?5?5?5?5?5?5?5?$CFf?6@ DB 'ExternalForc'
	DB	'e        %f', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PMIBIGHB@InvisibleTime?5?5?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BJ@PMIBIGHB@InvisibleTime?5?5?5?5?5?5?5?5?$CFf?6@ DB 'InvisibleTim'
	DB	'e        %f', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PMKNADAG@StiffenTime?5?5?5?5?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BJ@PMKNADAG@StiffenTime?5?5?5?5?5?5?5?5?5?5?$CFf?6@ DB 'StiffenTim'
	DB	'e          %f', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LOMGAMME@HittingType?5?5?5?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@LOMGAMME@HittingType?5?5?5?5?5?5?5?5?5?5?$CFd?6@ DB 'HittingTyp'
	DB	'e          %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EGAIMMNM@AttackType?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@EGAIMMNM@AttackType?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@ DB 'AttackTyp'
	DB	'e           %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EJILMNLC@objectscriptname@
CONST	SEGMENT
??_C@_0BB@EJILMNLC@objectscriptname@ DB 'objectscriptname', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PLGBENJO@effectrotation@
CONST	SEGMENT
??_C@_0P@PLGBENJO@effectrotation@ DB 'effectrotation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PMGDNJPL@effectposition@
CONST	SEGMENT
??_C@_0P@PMGDNJPL@effectposition@ DB 'effectposition', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OKGDPHII@effectscriptname@
CONST	SEGMENT
??_C@_0BB@OKGDPHII@effectscriptname@ DB 'effectscriptname', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DJLPHPIA@ObjectScriptName?5?5?5?5?5?$CC?$CFs?$CC?6@
CONST	SEGMENT
??_C@_0BL@DJLPHPIA@ObjectScriptName?5?5?5?5?5?$CC?$CFs?$CC?6@ DB 'ObjectS'
	DB	'criptName     "%s"', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@HKKPGBPJ@EffectRotation?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@
CONST	SEGMENT
??_C@_0BP@HKKPGBPJ@EffectRotation?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@ DB 'E'
	DB	'ffectRotation       %f %f %f', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@CFDDPJAK@EffectPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@
CONST	SEGMENT
??_C@_0BP@CFDDPJAK@EffectPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@ DB 'E'
	DB	'ffectPosition       %f %f %f', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NLAHNABK@EffectScriptName?5?5?5?5?5?$CC?$CFs?$CC?6@
CONST	SEGMENT
??_C@_0BL@NLAHNABK@EffectScriptName?5?5?5?5?5?$CC?$CFs?$CC?6@ DB 'EffectS'
	DB	'criptName     "%s"', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OAGMDKAF@position@
CONST	SEGMENT
??_C@_08OAGMDKAF@position@ DB 'position', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KGHINEPG@radius@
CONST	SEGMENT
??_C@_06KGHINEPG@radius@ DB 'radius', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JJLJPGHA@spheredata@
CONST	SEGMENT
??_C@_0L@JJLJPGHA@spheredata@ DB 'spheredata', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PACKMKGG@spheredatacount@
CONST	SEGMENT
??_C@_0BA@PACKMKGG@spheredatacount@ DB 'spheredatacount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LCILGBGA@collisiontype@
CONST	SEGMENT
??_C@_0O@LCILGBGA@collisiontype@ DB 'collisiontype', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JENLJGO@hitdatacount@
CONST	SEGMENT
??_C@_0N@JENLJGO@hitdatacount@ DB 'hitdatacount', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EAOJEAGN@attackingtype@
CONST	SEGMENT
??_C@_0O@EAOJEAGN@attackingtype@ DB 'attackingtype', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FECBOPBF@motiontype@
CONST	SEGMENT
??_C@_0L@FECBOPBF@motiontype@ DB 'motiontype', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IHNFHPGN@hitposition@
CONST	SEGMENT
??_C@_0M@IHNFHPGN@hitposition@ DB 'hitposition', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MMFFHHOI@weaponlength@
CONST	SEGMENT
??_C@_0N@MMFFHHOI@weaponlength@ DB 'weaponlength', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MMIDKEHG@attackingbone@
CONST	SEGMENT
??_C@_0O@MMIDKEHG@attackingbone@ DB 'attackingbone', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KAKEFPLI@attackingendtime@
CONST	SEGMENT
??_C@_0BB@KAKEFPLI@attackingendtime@ DB 'attackingendtime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CPENFGPA@attackingstarttime@
CONST	SEGMENT
??_C@_0BD@CPENFGPA@attackingstarttime@ DB 'attackingstarttime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PCIAOIBK@hitlimitcount@
CONST	SEGMENT
??_C@_0O@PCIAOIBK@hitlimitcount@ DB 'hitlimitcount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KAKKEPBE@externalforce@
CONST	SEGMENT
??_C@_0O@KAKKEPBE@externalforce@ DB 'externalforce', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GBJCIDNL@invisibletime@
CONST	SEGMENT
??_C@_0O@GBJCIDNL@invisibletime@ DB 'invisibletime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HEIDABDC@stiffentime@
CONST	SEGMENT
??_C@_0M@HEIDABDC@stiffentime@ DB 'stiffentime', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IEMCNBIB@hittingtype@
CONST	SEGMENT
??_C@_0M@IEMCNBIB@hittingtype@ DB 'hittingtype', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MFPNOHLP@attacktype@
CONST	SEGMENT
??_C@_0L@MFPNOHLP@attacktype@ DB 'attacktype', 00H	; `string'
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@SAttachingObjectData@NRaceData@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SAttachingObjectData@NRaceData@@8 DD FLAT:??_R0?AUSAttachingObjectData@NRaceData@@@8 ; NRaceData::SAttachingObjectData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SAttachingObjectData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R2SAttachingObjectData@NRaceData@@8
rdata$r	SEGMENT
??_R2SAttachingObjectData@NRaceData@@8 DD FLAT:??_R1A@?0A@EA@SAttachingObjectData@NRaceData@@8 ; NRaceData::SAttachingObjectData::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SAttachingObjectData@NRaceData@@8
rdata$r	SEGMENT
??_R3SAttachingObjectData@NRaceData@@8 DD 00H		; NRaceData::SAttachingObjectData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SAttachingObjectData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSAttachingObjectData@NRaceData@@@8
data$rs	SEGMENT
??_R0?AUSAttachingObjectData@NRaceData@@@8 DD FLAT:??_7type_info@@6B@ ; NRaceData::SAttachingObjectData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSAttachingObjectData@NRaceData@@', 00H
data$rs	ENDS
;	COMDAT ??_R4SAttachingObjectData@NRaceData@@6B@
rdata$r	SEGMENT
??_R4SAttachingObjectData@NRaceData@@6B@ DD 00H		; NRaceData::SAttachingObjectData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSAttachingObjectData@NRaceData@@@8
	DD	FLAT:??_R3SAttachingObjectData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SAttachingEffectData@NRaceData@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SAttachingEffectData@NRaceData@@8 DD FLAT:??_R0?AUSAttachingEffectData@NRaceData@@@8 ; NRaceData::SAttachingEffectData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SAttachingEffectData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R2SAttachingEffectData@NRaceData@@8
rdata$r	SEGMENT
??_R2SAttachingEffectData@NRaceData@@8 DD FLAT:??_R1A@?0A@EA@SAttachingEffectData@NRaceData@@8 ; NRaceData::SAttachingEffectData::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SAttachingEffectData@NRaceData@@8
rdata$r	SEGMENT
??_R3SAttachingEffectData@NRaceData@@8 DD 00H		; NRaceData::SAttachingEffectData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SAttachingEffectData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSAttachingEffectData@NRaceData@@@8
data$rs	SEGMENT
??_R0?AUSAttachingEffectData@NRaceData@@@8 DD FLAT:??_7type_info@@6B@ ; NRaceData::SAttachingEffectData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSAttachingEffectData@NRaceData@@', 00H
data$rs	ENDS
;	COMDAT ??_R4SAttachingEffectData@NRaceData@@6B@
rdata$r	SEGMENT
??_R4SAttachingEffectData@NRaceData@@6B@ DD 00H		; NRaceData::SAttachingEffectData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSAttachingEffectData@NRaceData@@@8
	DD	FLAT:??_R3SAttachingEffectData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SCollisionData@NRaceData@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SCollisionData@NRaceData@@8 DD FLAT:??_R0?AUSCollisionData@NRaceData@@@8 ; NRaceData::SCollisionData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SCollisionData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R2SCollisionData@NRaceData@@8
rdata$r	SEGMENT
??_R2SCollisionData@NRaceData@@8 DD FLAT:??_R1A@?0A@EA@SCollisionData@NRaceData@@8 ; NRaceData::SCollisionData::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SCollisionData@NRaceData@@8
rdata$r	SEGMENT
??_R3SCollisionData@NRaceData@@8 DD 00H			; NRaceData::SCollisionData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SCollisionData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSCollisionData@NRaceData@@@8
data$rs	SEGMENT
??_R0?AUSCollisionData@NRaceData@@@8 DD FLAT:??_7type_info@@6B@ ; NRaceData::SCollisionData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSCollisionData@NRaceData@@', 00H
data$rs	ENDS
;	COMDAT ??_R4SCollisionData@NRaceData@@6B@
rdata$r	SEGMENT
??_R4SCollisionData@NRaceData@@6B@ DD 00H		; NRaceData::SCollisionData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSCollisionData@NRaceData@@@8
	DD	FLAT:??_R3SCollisionData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
_DATA	SEGMENT
?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A DD FLAT:??_7?$CDynamicPool@USCollisionData@NRaceData@@@@6B@ ; NRaceData::g_CollisionDataPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A DD FLAT:??_7?$CDynamicPool@USAttachingEffectData@NRaceData@@@@6B@ ; NRaceData::g_EffectDataPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A DD FLAT:??_7?$CDynamicPool@USAttachingObjectData@NRaceData@@@@6B@ ; NRaceData::g_ObjectDataPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7SAttachingObjectData@NRaceData@@6B@
CONST	SEGMENT
??_7SAttachingObjectData@NRaceData@@6B@ DD FLAT:??_R4SAttachingObjectData@NRaceData@@6B@ ; NRaceData::SAttachingObjectData::`vftable'
	DD	FLAT:??_ESAttachingObjectData@NRaceData@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7SAttachingEffectData@NRaceData@@6B@
CONST	SEGMENT
??_7SAttachingEffectData@NRaceData@@6B@ DD FLAT:??_R4SAttachingEffectData@NRaceData@@6B@ ; NRaceData::SAttachingEffectData::`vftable'
	DD	FLAT:??_ESAttachingEffectData@NRaceData@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7SCollisionData@NRaceData@@6B@
CONST	SEGMENT
??_7SCollisionData@NRaceData@@6B@ DD FLAT:??_R4SCollisionData@NRaceData@@6B@ ; NRaceData::SCollisionData::`vftable'
	DD	FLAT:??_ESCollisionData@NRaceData@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CSphereCollisionInstance@@6B@
CONST	SEGMENT
??_7CSphereCollisionInstance@@6B@ DD FLAT:??_R4CSphereCollisionInstance@@6B@ ; CSphereCollisionInstance::`vftable'
	DD	FLAT:?Render@CSphereCollisionInstance@@UAEXW4_D3DFILLMODE@@@Z
	DD	FLAT:?OnGetCollisionMovementAdjust@CSphereCollisionInstance@@MBE?AUD3DXVECTOR3@@ABUCDynamicSphereInstance@@@Z
	DD	FLAT:?OnMovementCollisionDynamicSphere@CSphereCollisionInstance@@MBE_NABUCDynamicSphereInstance@@@Z
	DD	FLAT:?OnCollisionDynamicSphere@CSphereCollisionInstance@@MBE_NABUCDynamicSphereInstance@@@Z
	DD	FLAT:?OnDestroy@CSphereCollisionInstance@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7CBaseCollisionInstance@@6B@
CONST	SEGMENT
??_7CBaseCollisionInstance@@6B@ DD FLAT:??_R4CBaseCollisionInstance@@6B@ ; CBaseCollisionInstance::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
CONST	SEGMENT
??_C@_0BB@GCADKGJO@map?1set?5too?5long@ DB 'map/set too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@AAU?$pair@$$CBMUCDynamicSphereInstance@@@2@@?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU01@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@AAU?$pair@$$CBMUCDynamicSphereInstance@@@2@@?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU01@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@@Z$0
__ehfuncinfo$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@AAU?$pair@$$CBMUCDynamicSphereInstance@@@2@@?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU01@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@AAU?$pair@$$CBMUCDynamicSphereInstance@@@2@@?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU01@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Buynode@AAU?$pair@$$CBMUCDynamicSphereInstance@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Buynode@AAU?$pair@$$CBMUCDynamicSphereInstance@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@@Z$0
__ehfuncinfo$??$_Buynode@AAU?$pair@$$CBMUCDynamicSphereInstance@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Buynode@AAU?$pair@$$CBMUCDynamicSphereInstance@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Copy_or_move@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@U?$integral_constant@_N$0A@@2@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@U_Copy_tag@01@U?$integral_constant@_N$0A@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Copy_or_move@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@U?$integral_constant@_N$0A@@2@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@U_Copy_tag@01@U?$integral_constant@_N$0A@@1@@Z$0
__ehfuncinfo$??$_Copy_or_move@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@U?$integral_constant@_N$0A@@2@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@U_Copy_tag@01@U?$integral_constant@_N$0A@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Copy_or_move@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@U?$integral_constant@_N$0A@@2@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@AAU?$pair@$$CBMUCDynamicSphereInstance@@@1@U_Copy_tag@01@U?$integral_constant@_N$0A@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z$0
__tryblocktable$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z$3
__unwindtable$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z$2
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@QAE@ABV01@$$QAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@QAE@ABV01@$$QAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@QAE@ABV01@$$QAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@QAE@ABV01@$$QAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_copy@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z$0
__ehfuncinfo$??$_Uninitialized_copy@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Uninitialized_copy@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_move@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_move@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z$0
__ehfuncinfo$??$_Uninitialized_move@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Uninitialized_move@PAUSHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@YAPAUSHitData@NRaceData@@QAU12@0PAU12@AAV?$allocator@USHitData@NRaceData@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABM@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABM@1@$$QAV?$tuple@$$V@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABM@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABM@1@$$QAV?$tuple@$$V@1@@Z$1
__ehfuncinfo$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABM@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABM@1@$$QAV?$tuple@$$V@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABUpiecewise_construct_t@std@@V?$tuple@ABM@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@ABUpiecewise_construct_t@1@$$QAV?$tuple@ABM@1@$$QAV?$tuple@$$V@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Try_emplace@ABM$$V@?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@_N@1@ABM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Try_emplace@ABM$$V@?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@_N@1@ABM@Z$2
__ehfuncinfo$??$_Try_emplace@ABM$$V@?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@_N@1@ABM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Try_emplace@ABM$$V@?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@AAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@_N@1@ABM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z$0
__tryblocktable$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z$3
__unwindtable$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z$0
__ehfuncinfo$??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z$0
__ehfuncinfo$?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z$2
__ehfuncinfo$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z$14
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Umove_if_noexcept@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEXPAUSHitData@NRaceData@@00@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Umove_if_noexcept@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEXPAUSHitData@NRaceData@@00@Z$0
__ehfuncinfo$?_Umove_if_noexcept@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEXPAUSHitData@NRaceData@@00@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Umove_if_noexcept@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEXPAUSHitData@NRaceData@@00@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Umove_if_noexcept1@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEXPAUSHitData@NRaceData@@00U?$integral_constant@_N$0A@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Umove_if_noexcept1@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEXPAUSHitData@NRaceData@@00U?$integral_constant@_N$0A@@2@@Z$0
__ehfuncinfo$?_Umove_if_noexcept1@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEXPAUSHitData@NRaceData@@00U?$integral_constant@_N$0A@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Umove_if_noexcept1@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEXPAUSHitData@NRaceData@@00U?$integral_constant@_N$0A@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Umove@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEPAUSHitData@NRaceData@@PAU34@00@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Umove@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEPAUSHitData@NRaceData@@PAU34@00@Z$0
__ehfuncinfo$?_Umove@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEPAUSHitData@NRaceData@@PAU34@00@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Umove@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEPAUSHitData@NRaceData@@PAU34@00@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SHitData@NRaceData@@QAE@$$QAU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SHitData@NRaceData@@QAE@$$QAU01@@Z$0
__ehfuncinfo$??0SHitData@NRaceData@@QAE@$$QAU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SHitData@NRaceData@@QAE@$$QAU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SHitData@NRaceData@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SHitData@NRaceData@@QAE@ABU01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0SHitData@NRaceData@@QAE@ABU01@@Z$5
__ehfuncinfo$??0SHitData@NRaceData@@QAE@ABU01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0SHitData@NRaceData@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SHitData@NRaceData@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SHitData@NRaceData@@QAE@XZ$0
__ehfuncinfo$??0SHitData@NRaceData@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SHitData@NRaceData@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$22
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??A?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@QAEAAUCDynamicSphereInstance@@ABM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??A?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@QAEAAUCDynamicSphereInstance@@ABM@Z$2
__ehfuncinfo$??A?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@QAEAAUCDynamicSphereInstance@@ABM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??A?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@QAEAAUCDynamicSphereInstance@@ABM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@QAE@ABV01@@Z$1
__ehfuncinfo$??0?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$map@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
?g_EffectDataPool$initializer$@NRaceData@@3P6AXXZA DD FLAT:??__Eg_EffectDataPool@NRaceData@@YAXXZ ; NRaceData::g_EffectDataPool$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?g_ObjectDataPool$initializer$@NRaceData@@3P6AXXZA DD FLAT:??__Eg_ObjectDataPool@NRaceData@@YAXXZ ; NRaceData::g_ObjectDataPool$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >, COMDAT
; _this$ = ecx

; 738  :     void _Erase_tree_and_orphan(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 739  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 740  :             _Erase_tree_and_orphan(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 616  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 617  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00023	6a 30		 push	 48			; 00000030H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 739  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 741  :             auto _To_delete = _STD exchange(_Rootnode, _Rootnode->_Left);
; 742  :             _Orphan_ptr(_To_delete);
; 743  :             _Alnode::value_type::_Freenode(_Al, _To_delete);
; 744  :         }
; 745  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z
_TEXT	SEGMENT
__Newnode$2 = -32					; size = 8
_this$ = -24						; size = 4
__Myhead$1$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Rootnode$ = 8						; size = 4
__Newroot$ = 12						; size = 4
__Wherenode$ = 12					; size = 4
__Movefl$ = 16						; size = 1
??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z PROC ; std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_nodes<std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_tag>, COMDAT
; _this$ = ecx

; 1659 :     _Nodeptr _Copy_nodes(_Nodeptr _Rootnode, _Nodeptr _Wherenode, _Moveit _Movefl) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b f9		 mov	 edi, ecx
  0002d	89 7d e8	 mov	 DWORD PTR _this$[ebp], edi

; 1660 :         // copy entire subtree, recursively
; 1661 :         const auto _Scary = _Get_scary();
; 1662 :         _Nodeptr _Newroot = _Scary->_Myhead; // point at nil node
; 1663 : 
; 1664 :         if (!_Rootnode->_Isnil) { // copy or move a node, then any subtrees

  00030	8b 45 08	 mov	 eax, DWORD PTR __Rootnode$[ebp]
  00033	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00035	89 4d ec	 mov	 DWORD PTR __Myhead$1$[ebp], ecx
  00038	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0003c	0f 85 84 00 00
	00		 jne	 $LN8@Copy_nodes
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1012 :     _CONSTEXPR20_DYNALLOC explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00042	89 7d e0	 mov	 DWORD PTR __Newnode$2[ebp], edi

; 85   :         return ::operator new(_Bytes);

  00045	6a 30		 push	 48			; 00000030H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 362  :         _Alloc_construct_ptr<_Alloc> _Newnode(_Al);

  00047	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1019 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  0004e	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR __Newnode$2[ebp+4], 0

; 85   :         return ::operator new(_Bytes);

  00055	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  0005a	8b 4d 08	 mov	 ecx, DWORD PTR __Rootnode$[ebp]

; 244  :         return _Traits::_Allocate(_Bytes);

  0005d	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 365  :         _Construct_in_place(_Newnode._Ptr->_Left, _Myhead);

  0005f	8b 55 ec	 mov	 edx, DWORD PTR __Myhead$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 85   :         return ::operator new(_Bytes);

  00062	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 1667 :             _Pnode->_Parent = _Wherenode;

  00065	8b 45 0c	 mov	 eax, DWORD PTR __Wherenode$[ebp]

; 1669 :             if (_Newroot->_Isnil) {
; 1670 :                 _Newroot = _Pnode; // memorize new root
; 1671 :             }
; 1672 : 
; 1673 :             _TRY_BEGIN

  00068	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  0006f	0f 10 41 10	 movups	 xmm0, XMMWORD PTR [ecx+16]
  00073	0f 11 46 10	 movups	 XMMWORD PTR [esi+16], xmm0
  00077	0f 10 41 20	 movups	 xmm0, XMMWORD PTR [ecx+32]
  0007b	0f 11 46 20	 movups	 XMMWORD PTR [esi+32], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 365  :         _Construct_in_place(_Newnode._Ptr->_Left, _Myhead);

  0007f	89 16		 mov	 DWORD PTR [esi], edx

; 366  :         _Construct_in_place(_Newnode._Ptr->_Parent, _Myhead);
; 367  :         _Construct_in_place(_Newnode._Ptr->_Right, _Myhead);

  00081	89 56 08	 mov	 DWORD PTR [esi+8], edx

; 368  :         _Newnode._Ptr->_Color = _Red;

  00084	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0

; 1667 :             _Pnode->_Parent = _Wherenode;

  0008a	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1668 :             _Pnode->_Color  = _Rootnode->_Color;

  0008d	8a 41 0c	 mov	 al, BYTE PTR [ecx+12]
  00090	88 46 0c	 mov	 BYTE PTR [esi+12], al

; 1674 :             _Pnode->_Left  = _Copy_nodes(_Rootnode->_Left, _Pnode, _Movefl);

  00093	ff 75 10	 push	 DWORD PTR __Movefl$[ebp]
  00096	80 7a 0d 00	 cmp	 BYTE PTR [edx+13], 0
  0009a	56		 push	 esi
  0009b	ff 31		 push	 DWORD PTR [ecx]
  0009d	0f 45 d6	 cmovne	 edx, esi
  000a0	8b cf		 mov	 ecx, edi
  000a2	89 55 ec	 mov	 DWORD PTR __Myhead$1$[ebp], edx
  000a5	89 55 0c	 mov	 DWORD PTR __Newroot$[ebp], edx
  000a8	e8 00 00 00 00	 call	 ??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z ; std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_nodes<std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_tag>
  000ad	89 06		 mov	 DWORD PTR [esi], eax

; 1675 :             _Pnode->_Right = _Copy_nodes(_Rootnode->_Right, _Pnode, _Movefl);

  000af	8b cf		 mov	 ecx, edi
  000b1	ff 75 10	 push	 DWORD PTR __Movefl$[ebp]
  000b4	8b 45 08	 mov	 eax, DWORD PTR __Rootnode$[ebp]
  000b7	56		 push	 esi
  000b8	ff 70 08	 push	 DWORD PTR [eax+8]
  000bb	e8 00 00 00 00	 call	 ??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z ; std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_nodes<std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_tag>
  000c0	8b 4d ec	 mov	 ecx, DWORD PTR __Myhead$1$[ebp]
  000c3	89 46 08	 mov	 DWORD PTR [esi+8], eax
$LN8@Copy_nodes:

; 1679 :             _CATCH_END
; 1680 :         }
; 1681 : 
; 1682 :         return _Newroot; // return newly constructed tree

  000c6	8b c1		 mov	 eax, ecx

; 1683 :     }

  000c8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000cb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d2	59		 pop	 ecx
  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
  000d5	5b		 pop	 ebx
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 0c 00	 ret	 12			; 0000000cH
__catch$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z$0:

; 1676 :             _CATCH_ALL
; 1677 :             _Scary->_Erase_tree_and_orphan(_Getal(), _Newroot); // subtree copy failed, bail out

  000dc	ff 75 0c	 push	 DWORD PTR __Newroot$[ebp]
  000df	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e2	e8 00 00 00 00	 call	 ?_Getal@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Getal
  000e7	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	50		 push	 eax
  000eb	e8 00 00 00 00	 call	 ??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >

; 1678 :             _RERAISE;

  000f0	6a 00		 push	 0
  000f2	6a 00		 push	 0
  000f4	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN67@Copy_nodes:
  000f9	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z$2:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR __Newnode$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z ENDP ; std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_nodes<std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_tag>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > > >::~_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > > >, COMDAT
; _this$ = ecx

; 781  :         if (_Mycont) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 09		 je	 SHORT $LN2@Tree_head_

; 782  :             _Mycont->_Erase_head(_Al);

  00007	ff 31		 push	 DWORD PTR [ecx]
  00009	8b c8		 mov	 ecx, eax
  0000b	e8 00 00 00 00	 call	 ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
$LN2@Tree_head_:

; 783  :         }
; 784  :     }

  00010	c3		 ret	 0
??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > > >::~_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Uninitialized_backout_al@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<NRaceData::SHitData> >::~_Uninitialized_backout_al<std::allocator<NRaceData::SHitData> >, COMDAT
; _this$ = ecx

; 1625 :     _CONSTEXPR20_DYNALLOC ~_Uninitialized_backout_al() {

  00000	56		 push	 esi

; 1626 :         _Destroy_range(_First, _Last, _Al);

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]
  00003	57		 push	 edi
  00004	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]

; 949  :         for (; _First != _Last; ++_First) {

  00007	3b f7		 cmp	 esi, edi
  00009	74 13		 je	 SHORT $LN5@Uninitiali
  0000b	0f 1f 44 00 00	 npad	 5
$LL6@Uninitiali:
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ??1SHitData@NRaceData@@QAE@XZ
  00017	83 c6 2c	 add	 esi, 44			; 0000002cH
  0001a	3b f7		 cmp	 esi, edi
  0001c	75 f2		 jne	 SHORT $LL6@Uninitiali
$LN5@Uninitiali:
  0001e	5f		 pop	 edi

; 1627 :     }

  0001f	5e		 pop	 esi
  00020	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<NRaceData::SHitData> >::~_Uninitialized_backout_al<std::allocator<NRaceData::SHitData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAUSCollisionData@NRaceData@@PAPAU12@@std@@YAPAPAUSCollisionData@NRaceData@@PAPAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAUSCollisionData@NRaceData@@PAPAU12@@std@@YAPAPAUSCollisionData@NRaceData@@PAPAU12@00@Z PROC ; std::_Copy_memmove<NRaceData::SCollisionData * *,NRaceData::SCollisionData * *>, COMDAT

; 4159 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4160 :     auto _FirstPtr              = _To_address(_First);
; 4161 :     auto _LastPtr               = _To_address(_Last);
; 4162 :     auto _DestPtr               = _To_address(_Dest);
; 4163 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4164 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4165 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4166 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4167 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4168 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4169 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4170 :     } else {
; 4171 :         return _Dest + (_LastPtr - _FirstPtr);
; 4172 :     }
; 4173 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAUSCollisionData@NRaceData@@PAPAU12@@std@@YAPAPAUSCollisionData@NRaceData@@PAPAU12@00@Z ENDP ; std::_Copy_memmove<NRaceData::SCollisionData * *,NRaceData::SCollisionData * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAUSAttachingEffectData@NRaceData@@PAPAU12@@std@@YAPAPAUSAttachingEffectData@NRaceData@@PAPAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAUSAttachingEffectData@NRaceData@@PAPAU12@@std@@YAPAPAUSAttachingEffectData@NRaceData@@PAPAU12@00@Z PROC ; std::_Copy_memmove<NRaceData::SAttachingEffectData * *,NRaceData::SAttachingEffectData * *>, COMDAT

; 4159 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4160 :     auto _FirstPtr              = _To_address(_First);
; 4161 :     auto _LastPtr               = _To_address(_Last);
; 4162 :     auto _DestPtr               = _To_address(_Dest);
; 4163 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4164 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4165 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4166 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4167 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4168 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4169 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4170 :     } else {
; 4171 :         return _Dest + (_LastPtr - _FirstPtr);
; 4172 :     }
; 4173 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAUSAttachingEffectData@NRaceData@@PAPAU12@@std@@YAPAPAUSAttachingEffectData@NRaceData@@PAPAU12@00@Z ENDP ; std::_Copy_memmove<NRaceData::SAttachingEffectData * *,NRaceData::SAttachingEffectData * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAUSAttachingObjectData@NRaceData@@PAPAU12@@std@@YAPAPAUSAttachingObjectData@NRaceData@@PAPAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAUSAttachingObjectData@NRaceData@@PAPAU12@@std@@YAPAPAUSAttachingObjectData@NRaceData@@PAPAU12@00@Z PROC ; std::_Copy_memmove<NRaceData::SAttachingObjectData * *,NRaceData::SAttachingObjectData * *>, COMDAT

; 4159 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4160 :     auto _FirstPtr              = _To_address(_First);
; 4161 :     auto _LastPtr               = _To_address(_Last);
; 4162 :     auto _DestPtr               = _To_address(_Dest);
; 4163 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4164 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4165 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4166 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4167 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4168 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4169 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4170 :     } else {
; 4171 :         return _Dest + (_LastPtr - _FirstPtr);
; 4172 :     }
; 4173 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAUSAttachingObjectData@NRaceData@@PAPAU12@@std@@YAPAPAUSAttachingObjectData@NRaceData@@PAPAU12@00@Z ENDP ; std::_Copy_memmove<NRaceData::SAttachingObjectData * *,NRaceData::SAttachingObjectData * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >, COMDAT
; _this$ = ecx

; 1024 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN8@Alloc_cons

; 264  :         ::operator delete(_Ptr, _Bytes);

  00007	6a 30		 push	 48			; 00000030H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000f	83 c4 08	 add	 esp, 8
$LN8@Alloc_cons:

; 1025 :             _Al.deallocate(_Ptr, 1);
; 1026 :         }
; 1027 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
__Oldsize$1$ = -8					; size = 4
$T2 = -4						; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1229 :     _CONSTEXPR20_CONTAINER void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 1230 :         if (_Newsize > max_size()) {

  00006	81 7d 08 cc cc
	cc 0c		 cmp	 DWORD PTR __Newsize$[ebp], 214748364 ; 0cccccccH
  0000d	53		 push	 ebx
  0000e	56		 push	 esi
  0000f	57		 push	 edi
  00010	8b d9		 mov	 ebx, ecx
  00012	0f 87 4d 01 00
	00		 ja	 $LN79@Resize_rea

; 1232 :         }
; 1233 : 
; 1234 :         auto& _My_data    = _Mypair._Myval2;
; 1235 :         pointer& _Myfirst = _My_data._Myfirst;
; 1236 :         pointer& _Mylast  = _My_data._Mylast;
; 1237 : 
; 1238 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0001b	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00020	2b 0b		 sub	 ecx, DWORD PTR [ebx]
  00022	f7 e9		 imul	 ecx

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00024	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00027	2b 0b		 sub	 ecx, DWORD PTR [ebx]

; 1232 :         }
; 1233 : 
; 1234 :         auto& _My_data    = _Mypair._Myval2;
; 1235 :         pointer& _Myfirst = _My_data._Myfirst;
; 1236 :         pointer& _Mylast  = _My_data._Mylast;
; 1237 : 
; 1238 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00029	c1 fa 03	 sar	 edx, 3
  0002c	8b c2		 mov	 eax, edx

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0002e	8b 75 08	 mov	 esi, DWORD PTR __Newsize$[ebp]

; 1232 :         }
; 1233 : 
; 1234 :         auto& _My_data    = _Mypair._Myval2;
; 1235 :         pointer& _Myfirst = _My_data._Myfirst;
; 1236 :         pointer& _Mylast  = _My_data._Mylast;
; 1237 : 
; 1238 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00031	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00034	03 c2		 add	 eax, edx
  00036	89 45 f8	 mov	 DWORD PTR __Oldsize$1$[ebp], eax

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00039	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0003e	f7 e9		 imul	 ecx

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00040	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00045	c1 fa 03	 sar	 edx, 3
  00048	8b ca		 mov	 ecx, edx
  0004a	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0004d	03 ca		 add	 ecx, edx

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0004f	8b d1		 mov	 edx, ecx
  00051	d1 ea		 shr	 edx, 1
  00053	2b c2		 sub	 eax, edx
  00055	3b c8		 cmp	 ecx, eax
  00057	76 12		 jbe	 SHORT $LN10@Resize_rea

; 1689 :             return _Max; // geometric growth would overflow

  00059	bf f0 ff ff ff	 mov	 edi, -16		; fffffff0H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0005e	57		 push	 edi
  0005f	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00064	83 c4 04	 add	 esp, 4
  00067	8b c8		 mov	 ecx, eax
  00069	eb 47		 jmp	 SHORT $LN77@Resize_rea
$LN10@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0006b	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1693 : 
; 1694 :         if (_Geometric < _Newsize) {

  0006e	3b c6		 cmp	 eax, esi
  00070	73 1d		 jae	 SHORT $LN11@Resize_rea

; 1695 :             return _Newsize; // geometric growth would be insufficient

  00072	8b c6		 mov	 eax, esi
$LN74@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 69   :     return _Count * _Ty_size;

  00074	8d 3c 80	 lea	 edi, DWORD PTR [eax+eax*4]
  00077	c1 e7 02	 shl	 edi, 2

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007a	81 ff 00 10 00
	00		 cmp	 edi, 4096		; 00001000H
  00080	72 1a		 jb	 SHORT $LN22@Resize_rea

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00082	57		 push	 edi
  00083	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00088	83 c4 04	 add	 esp, 4
  0008b	8b c8		 mov	 ecx, eax
  0008d	eb 23		 jmp	 SHORT $LN77@Resize_rea
$LN11@Resize_rea:

; 64   :         if (_Count > _Max_possible) {

  0008f	3d cc cc cc 0c	 cmp	 eax, 214748364		; 0cccccccH
  00094	0f 87 d0 00 00
	00		 ja	 $LN80@Resize_rea
  0009a	eb d8		 jmp	 SHORT $LN74@Resize_rea
$LN22@Resize_rea:

; 243  :     if (_Bytes != 0) {

  0009c	85 ff		 test	 edi, edi
  0009e	74 10		 je	 SHORT $LN23@Resize_rea

; 85   :         return ::operator new(_Bytes);

  000a0	57		 push	 edi
  000a1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000a6	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  000a9	89 45 fc	 mov	 DWORD PTR $T2[ebp], eax
  000ac	8b c8		 mov	 ecx, eax
  000ae	eb 05		 jmp	 SHORT $LN21@Resize_rea
$LN23@Resize_rea:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  000b0	33 c9		 xor	 ecx, ecx
$LN77@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1246 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  000b2	89 4d fc	 mov	 DWORD PTR $T2[ebp], ecx
$LN21@Resize_rea:
  000b5	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  000b8	8b 55 f8	 mov	 edx, DWORD PTR __Oldsize$1$[ebp]
  000bb	2b f2		 sub	 esi, edx
  000bd	0f b6 00	 movzx	 eax, BYTE PTR [eax]
  000c0	50		 push	 eax
  000c1	8d 04 92	 lea	 eax, DWORD PTR [edx+edx*4]
  000c4	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  000c7	8b cb		 mov	 ecx, ebx
  000c9	56		 push	 esi
  000ca	50		 push	 eax
  000cb	e8 00 00 00 00	 call	 ?_Ufill@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@AAEPAVCSphereCollisionInstance@@PAV3@IU_Value_init_tag@2@@Z ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::_Ufill

; 1247 :         _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  000d0	8b 33		 mov	 esi, DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1718 :     const auto _ULast = _Get_unwrapped(_Last);

  000d2	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]

; 1620 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  000d5	8b 45 fc	 mov	 eax, DWORD PTR $T2[ebp]

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  000d8	3b f2		 cmp	 esi, edx
  000da	74 20		 je	 SHORT $LN34@Resize_rea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1246 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  000dc	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  000df	90		 npad	 1
$LL35@Resize_rea:
  000e0	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CSphereCollisionInstance@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1632 :         ++_Last;

  000e6	8d 40 14	 lea	 eax, DWORD PTR [eax+20]
  000e9	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  000ec	83 c6 14	 add	 esi, 20			; 00000014H
  000ef	8d 49 14	 lea	 ecx, DWORD PTR [ecx+20]
  000f2	0f 11 40 f0	 movups	 XMMWORD PTR [eax-16], xmm0
  000f6	3b f2		 cmp	 esi, edx
  000f8	75 e6		 jne	 SHORT $LL35@Resize_rea
  000fa	8b 33		 mov	 esi, DWORD PTR [ebx]
$LN34@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000fc	85 f6		 test	 esi, esi
  000fe	74 40		 je	 SHORT $LN56@Resize_rea

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00100	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00103	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00108	2b ce		 sub	 ecx, esi
  0010a	f7 e9		 imul	 ecx
  0010c	c1 fa 03	 sar	 edx, 3
  0010f	8b c2		 mov	 eax, edx
  00111	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00114	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00116	8d 0c 80	 lea	 ecx, DWORD PTR [eax+eax*4]
  00119	c1 e1 02	 shl	 ecx, 2

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0011c	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00122	72 12		 jb	 SHORT $LN66@Resize_rea

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00124	8b 56 fc	 mov	 edx, DWORD PTR [esi-4]
  00127	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0012a	2b f2		 sub	 esi, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0012c	8d 46 fc	 lea	 eax, DWORD PTR [esi-4]
  0012f	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00132	77 2c		 ja	 SHORT $LN63@Resize_rea

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00134	8b f2		 mov	 esi, edx
$LN66@Resize_rea:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00136	51		 push	 ecx
  00137	56		 push	 esi
  00138	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0013d	83 c4 08	 add	 esp, 8
$LN56@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1750 :         _Myfirst = _Newvec;

  00140	8b 4d fc	 mov	 ecx, DWORD PTR $T2[ebp]

; 1751 :         _Mylast  = _Newvec + _Newsize;

  00143	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00146	89 0b		 mov	 DWORD PTR [ebx], ecx
  00148	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  0014b	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  0014e	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00151	8d 04 0f	 lea	 eax, DWORD PTR [edi+ecx]
  00154	5f		 pop	 edi
  00155	5e		 pop	 esi
  00156	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  00159	5b		 pop	 ebx

; 1255 :     }

  0015a	8b e5		 mov	 esp, ebp
  0015c	5d		 pop	 ebp
  0015d	c2 08 00	 ret	 8
$LN63@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00160	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN79@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1231 :             _Xlength();

  00165	e8 00 00 00 00	 call	 ?_Xlength@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@CAXXZ ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::_Xlength
$LN80@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  0016a	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN76@Resize_rea:
  0016f	cc		 int	 3
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_this$1$ = -16						; size = 4
__ULast$1$ = -12					; size = 4
__Oldsize$1$ = -12					; size = 4
tv1091 = -8						; size = 4
$T2 = -4						; size = 4
__Newsize$ = 8						; size = 4
__Backout$1$sroa$341$1$ = 12				; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1229 :     _CONSTEXPR20_CONTAINER void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx

; 1230 :         if (_Newsize > max_size()) {

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Newsize$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b f9		 mov	 edi, ecx
  0000e	89 7d f0	 mov	 DWORD PTR _this$1$[ebp], edi
  00011	81 fb 55 55 55
	05		 cmp	 ebx, 89478485		; 05555555H
  00017	0f 87 e1 01 00
	00		 ja	 $LN107@Resize_rea

; 1232 :         }
; 1233 : 
; 1234 :         auto& _My_data    = _Mypair._Myval2;
; 1235 :         pointer& _Myfirst = _My_data._Myfirst;
; 1236 :         pointer& _Mylast  = _My_data._Mylast;
; 1237 : 
; 1238 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0001d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00020	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00025	2b 0f		 sub	 ecx, DWORD PTR [edi]
  00027	f7 e9		 imul	 ecx

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00029	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0002c	2b 0f		 sub	 ecx, DWORD PTR [edi]

; 1232 :         }
; 1233 : 
; 1234 :         auto& _My_data    = _Mypair._Myval2;
; 1235 :         pointer& _Myfirst = _My_data._Myfirst;
; 1236 :         pointer& _Mylast  = _My_data._Mylast;
; 1237 : 
; 1238 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0002e	c1 fa 03	 sar	 edx, 3
  00031	8b c2		 mov	 eax, edx
  00033	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00036	03 c2		 add	 eax, edx
  00038	89 45 f4	 mov	 DWORD PTR __Oldsize$1$[ebp], eax

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0003b	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00040	f7 e9		 imul	 ecx

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00042	b8 55 55 55 05	 mov	 eax, 89478485		; 05555555H

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00047	c1 fa 03	 sar	 edx, 3
  0004a	8b ca		 mov	 ecx, edx
  0004c	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0004f	03 ca		 add	 ecx, edx

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00051	8b d1		 mov	 edx, ecx
  00053	d1 ea		 shr	 edx, 1
  00055	2b c2		 sub	 eax, edx
  00057	3b c8		 cmp	 ecx, eax
  00059	76 15		 jbe	 SHORT $LN10@Resize_rea

; 1689 :             return _Max; // geometric growth would overflow

  0005b	bb f0 ff ff ff	 mov	 ebx, -16		; fffffff0H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00060	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1689 :             return _Max; // geometric growth would overflow

  00061	89 5d f8	 mov	 DWORD PTR tv1091[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00064	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00069	83 c4 04	 add	 esp, 4
  0006c	8b f0		 mov	 esi, eax
  0006e	eb 4a		 jmp	 SHORT $LN105@Resize_rea
$LN10@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00070	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1693 : 
; 1694 :         if (_Geometric < _Newsize) {

  00073	3b c3		 cmp	 eax, ebx
  00075	73 20		 jae	 SHORT $LN11@Resize_rea

; 1695 :             return _Newsize; // geometric growth would be insufficient

  00077	8b c3		 mov	 eax, ebx
$LN102@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 69   :     return _Count * _Ty_size;

  00079	8d 1c 40	 lea	 ebx, DWORD PTR [eax+eax*2]
  0007c	c1 e3 04	 shl	 ebx, 4
  0007f	89 5d f8	 mov	 DWORD PTR tv1091[ebp], ebx

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00082	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  00088	72 1a		 jb	 SHORT $LN22@Resize_rea

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0008a	53		 push	 ebx
  0008b	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00090	83 c4 04	 add	 esp, 4
  00093	8b f0		 mov	 esi, eax
  00095	eb 23		 jmp	 SHORT $LN105@Resize_rea
$LN11@Resize_rea:

; 64   :         if (_Count > _Max_possible) {

  00097	3d 55 55 55 05	 cmp	 eax, 89478485		; 05555555H
  0009c	0f 87 61 01 00
	00		 ja	 $LN108@Resize_rea
  000a2	eb d5		 jmp	 SHORT $LN102@Resize_rea
$LN22@Resize_rea:

; 243  :     if (_Bytes != 0) {

  000a4	85 db		 test	 ebx, ebx
  000a6	74 10		 je	 SHORT $LN23@Resize_rea

; 85   :         return ::operator new(_Bytes);

  000a8	53		 push	 ebx
  000a9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000ae	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  000b1	89 45 fc	 mov	 DWORD PTR $T2[ebp], eax
  000b4	8b f0		 mov	 esi, eax
  000b6	eb 05		 jmp	 SHORT $LN21@Resize_rea
$LN23@Resize_rea:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  000b8	33 f6		 xor	 esi, esi
$LN105@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1246 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  000ba	89 75 fc	 mov	 DWORD PTR $T2[ebp], esi
$LN21@Resize_rea:
  000bd	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  000c0	8b 4d f4	 mov	 ecx, DWORD PTR __Oldsize$1$[ebp]
  000c3	0f b6 00	 movzx	 eax, BYTE PTR [eax]
  000c6	50		 push	 eax
  000c7	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  000ca	2b c1		 sub	 eax, ecx
  000cc	50		 push	 eax
  000cd	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  000d0	8b cf		 mov	 ecx, edi
  000d2	c1 e0 04	 shl	 eax, 4
  000d5	03 c6		 add	 eax, esi
  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 ?_Ufill@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@AAEPAUSAttachingData@NRaceData@@PAU34@IU_Value_init_tag@2@@Z ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Ufill
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1718 :     const auto _ULast = _Get_unwrapped(_Last);

  000dd	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]

; 1620 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  000e0	8b c6		 mov	 eax, esi

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000e2	8b 37		 mov	 esi, DWORD PTR [edi]

; 1718 :     const auto _ULast = _Get_unwrapped(_Last);

  000e4	89 4d f4	 mov	 DWORD PTR __ULast$1$[ebp], ecx

; 1620 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  000e7	89 45 0c	 mov	 DWORD PTR __Backout$1$sroa$341$1$[ebp], eax

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  000ea	3b f1		 cmp	 esi, ecx
  000ec	0f 84 85 00 00
	00		 je	 $LN34@Resize_rea
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1246 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  000f2	8b 55 fc	 mov	 edx, DWORD PTR $T2[ebp]
  000f5	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  000f8	8b 5d f4	 mov	 ebx, DWORD PTR __ULast$1$[ebp]
  000fb	83 c2 20	 add	 edx, 32			; 00000020H
  000fe	8b f8		 mov	 edi, eax
$LL35@Resize_rea:
  00100	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1632 :         ++_Last;

  00102	8d 52 30	 lea	 edx, DWORD PTR [edx+48]
  00105	89 07		 mov	 DWORD PTR [edi], eax

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  00107	8d 49 30	 lea	 ecx, DWORD PTR [ecx+48]
  0010a	8b 41 b4	 mov	 eax, DWORD PTR [ecx-76]
  0010d	83 c6 30	 add	 esi, 48			; 00000030H
  00110	89 42 b4	 mov	 DWORD PTR [edx-76], eax

; 1632 :         ++_Last;

  00113	83 c7 30	 add	 edi, 48			; 00000030H
  00116	8b 41 b8	 mov	 eax, DWORD PTR [ecx-72]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00119	c7 42 bc 00 00
	00 00		 mov	 DWORD PTR [edx-68], 0

; 2355 :     size_type _Mysize = 0; // current length of string

  00120	c7 42 cc 00 00
	00 00		 mov	 DWORD PTR [edx-52], 0

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  00127	c7 42 d0 00 00
	00 00		 mov	 DWORD PTR [edx-48], 0
  0012e	89 42 b8	 mov	 DWORD PTR [edx-72], eax

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00131	0f 10 41 bc	 movups	 xmm0, XMMWORD PTR [ecx-68]
  00135	0f 11 42 bc	 movups	 XMMWORD PTR [edx-68], xmm0
  00139	f3 0f 7e 41 cc	 movq	 xmm0, QWORD PTR [ecx-52]
  0013e	66 0f d6 42 cc	 movq	 QWORD PTR [edx-52], xmm0

; 4596 :         _My_data._Mysize = 0;

  00143	c7 41 cc 00 00
	00 00		 mov	 DWORD PTR [ecx-52], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0014a	c7 41 d0 0f 00
	00 00		 mov	 DWORD PTR [ecx-48], 15	; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00151	c6 41 bc 00	 mov	 BYTE PTR [ecx-68], 0
  00155	8b 41 d4	 mov	 eax, DWORD PTR [ecx-44]
  00158	89 42 d4	 mov	 DWORD PTR [edx-44], eax
  0015b	8b 41 d8	 mov	 eax, DWORD PTR [ecx-40]
  0015e	89 42 d8	 mov	 DWORD PTR [edx-40], eax
  00161	8b 41 dc	 mov	 eax, DWORD PTR [ecx-36]
  00164	89 42 dc	 mov	 DWORD PTR [edx-36], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  00167	3b f3		 cmp	 esi, ebx
  00169	75 95		 jne	 SHORT $LL35@Resize_rea
  0016b	8b 5d f8	 mov	 ebx, DWORD PTR tv1091[ebp]
  0016e	89 7d 0c	 mov	 DWORD PTR __Backout$1$sroa$341$1$[ebp], edi
  00171	8b 7d f0	 mov	 edi, DWORD PTR _this$1$[ebp]
  00174	8b 45 0c	 mov	 eax, DWORD PTR __Backout$1$sroa$341$1$[ebp]
$LN34@Resize_rea:

; 1626 :         _Destroy_range(_First, _Last, _Al);

  00177	57		 push	 edi
  00178	50		 push	 eax
  00179	50		 push	 eax
  0017a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAXPAUSAttachingData@NRaceData@@QAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SAttachingData> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  0017f	8b 0f		 mov	 ecx, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1626 :         _Destroy_range(_First, _Last, _Al);

  00181	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  00184	85 c9		 test	 ecx, ecx
  00186	74 4f		 je	 SHORT $LN84@Resize_rea

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  00188	57		 push	 edi
  00189	ff 77 04	 push	 DWORD PTR [edi+4]
  0018c	51		 push	 ecx
  0018d	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAXPAUSAttachingData@NRaceData@@QAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SAttachingData> >

; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00192	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00195	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0019a	8b 37		 mov	 esi, DWORD PTR [edi]

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  0019c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0019f	2b ce		 sub	 ecx, esi
  001a1	f7 e9		 imul	 ecx
  001a3	c1 fa 03	 sar	 edx, 3
  001a6	8b c2		 mov	 eax, edx
  001a8	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001ab	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001ad	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  001b0	c1 e1 04	 shl	 ecx, 4

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  001b3	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  001b9	72 12		 jb	 SHORT $LN94@Resize_rea

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  001bb	8b 56 fc	 mov	 edx, DWORD PTR [esi-4]
  001be	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  001c1	2b f2		 sub	 esi, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001c3	8d 46 fc	 lea	 eax, DWORD PTR [esi-4]
  001c6	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  001c9	77 2e		 ja	 SHORT $LN91@Resize_rea

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  001cb	8b f2		 mov	 esi, edx
$LN94@Resize_rea:

; 264  :         ::operator delete(_Ptr, _Bytes);

  001cd	51		 push	 ecx
  001ce	56		 push	 esi
  001cf	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  001d4	83 c4 08	 add	 esp, 8
$LN84@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1751 :         _Mylast  = _Newvec + _Newsize;

  001d7	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  001da	8b 4d fc	 mov	 ecx, DWORD PTR $T2[ebp]
  001dd	89 0f		 mov	 DWORD PTR [edi], ecx
  001df	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  001e2	c1 e0 04	 shl	 eax, 4
  001e5	03 c1		 add	 eax, ecx
  001e7	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  001ea	8d 04 0b	 lea	 eax, DWORD PTR [ebx+ecx]
  001ed	89 47 08	 mov	 DWORD PTR [edi+8], eax
  001f0	5f		 pop	 edi
  001f1	5e		 pop	 esi
  001f2	5b		 pop	 ebx

; 1255 :     }

  001f3	8b e5		 mov	 esp, ebp
  001f5	5d		 pop	 ebp
  001f6	c2 08 00	 ret	 8
$LN91@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001f9	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN107@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1231 :             _Xlength();

  001fe	e8 00 00 00 00	 call	 ?_Xlength@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Xlength
$LN108@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00203	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN104@Resize_rea:
  00208	cc		 int	 3
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAUSCollisionData@NRaceData@@@?$vector@PAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@QAEPAPAUSCollisionData@NRaceData@@QAPAU23@ABQAU23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv641 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAUSCollisionData@NRaceData@@@?$vector@PAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@QAEPAPAUSCollisionData@NRaceData@@QAPAU23@ABQAU23@@Z PROC ; std::vector<NRaceData::SCollisionData *,std::allocator<NRaceData::SCollisionData *> >::_Emplace_reallocate<NRaceData::SCollisionData * const &>, COMDAT
; _this$ = ecx

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b c1		 sub	 eax, ecx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001b	2b c1		 sub	 eax, ecx
  0001d	c1 f8 02	 sar	 eax, 2

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 06 01 00
	00		 je	 $LN96@Emplace_re

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b d1		 sub	 edx, ecx

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 fa 02	 sar	 edx, 2

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b ca		 mov	 ecx, edx
  00040	d1 e9		 shr	 ecx, 1
  00042	2b c1		 sub	 eax, ecx
  00044	3b d0		 cmp	 edx, eax
  00046	76 12		 jbe	 SHORT $LN12@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow

  00048	bb fc ff ff ff	 mov	 ebx, -4			; fffffffcH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004d	53		 push	 ebx
  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 41		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  0005d	8b df		 mov	 ebx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 d8	 cmovae	 ebx, eax
  00064	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0006a	0f 87 c6 00 00
	00		 ja	 $LN97@Emplace_re

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00070	c1 e3 02	 shl	 ebx, 2

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00073	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  00079	72 0d		 jb	 SHORT $LN24@Emplace_re

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007b	53		 push	 ebx
  0007c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00081	83 c4 04	 add	 esp, 4
  00084	8b f8		 mov	 edi, eax
  00086	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00088	85 db		 test	 ebx, ebx
  0008a	74 0d		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  0008c	53		 push	 ebx
  0008d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00092	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  00095	8b f8		 mov	 edi, eax
  00097	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  00099	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0009b	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  0009e	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	89 4d fc	 mov	 DWORD PTR tv641[ebp], ecx
  000a7	8b 00		 mov	 eax, DWORD PTR [eax]
  000a9	89 01		 mov	 DWORD PTR [ecx], eax

; 790  :         _Constructed_first = _Newvec + _Whereoff;
; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000ab	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ae	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b1	8b 16		 mov	 edx, DWORD PTR [esi]
  000b3	3b c1		 cmp	 eax, ecx
  000b5	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000b7	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 794  :         } else { // provide basic guarantee

  000b9	eb 17		 jmp	 SHORT $LN60@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bb	57		 push	 edi
  000bc	50		 push	 eax
  000bd	52		 push	 edx
  000be	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAUSCollisionData@NRaceData@@PAPAU12@@std@@YAPAPAUSCollisionData@NRaceData@@PAPAU12@00@Z ; std::_Copy_memmove<NRaceData::SCollisionData * *,NRaceData::SCollisionData * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000c3	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c9	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000cc	83 c0 04	 add	 eax, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000cf	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN60@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d2	50		 push	 eax
  000d3	51		 push	 ecx
  000d4	52		 push	 edx
  000d5	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAUSCollisionData@NRaceData@@PAPAU12@@std@@YAPAPAUSCollisionData@NRaceData@@PAPAU12@00@Z ; std::_Copy_memmove<NRaceData::SCollisionData * *,NRaceData::SCollisionData * *>

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000da	8b 06		 mov	 eax, DWORD PTR [esi]

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000dc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000df	85 c0		 test	 eax, eax
  000e1	74 2c		 je	 SHORT $LN78@Emplace_re

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e3	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000e6	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e8	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000eb	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f1	72 12		 jb	 SHORT $LN88@Emplace_re

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f3	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f6	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fb	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fe	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00101	77 29		 ja	 SHORT $LN85@Emplace_re

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00103	8b c2		 mov	 eax, edx
$LN88@Emplace_re:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00105	51		 push	 ecx
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0010c	83 c4 08	 add	 esp, 8
$LN78@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0010f	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00112	89 3e		 mov	 DWORD PTR [esi], edi
  00114	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00117	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0011a	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  0011d	8d 0c 3b	 lea	 ecx, DWORD PTR [ebx+edi]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00120	5f		 pop	 edi

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00121	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 807  :     }

  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
$LN85@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0012c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 778  :             _Xlength();

  00131	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SCollisionData *,std::allocator<NRaceData::SCollisionData *> >::_Xlength
$LN97@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00136	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN94@Emplace_re:
  0013b	cc		 int	 3
??$_Emplace_reallocate@ABQAUSCollisionData@NRaceData@@@?$vector@PAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@QAEPAPAUSCollisionData@NRaceData@@QAPAU23@ABQAU23@@Z ENDP ; std::vector<NRaceData::SCollisionData *,std::allocator<NRaceData::SCollisionData *> >::_Emplace_reallocate<NRaceData::SCollisionData * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAUSAttachingEffectData@NRaceData@@@?$vector@PAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@QAEPAPAUSAttachingEffectData@NRaceData@@QAPAU23@ABQAU23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv641 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAUSAttachingEffectData@NRaceData@@@?$vector@PAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@QAEPAPAUSAttachingEffectData@NRaceData@@QAPAU23@ABQAU23@@Z PROC ; std::vector<NRaceData::SAttachingEffectData *,std::allocator<NRaceData::SAttachingEffectData *> >::_Emplace_reallocate<NRaceData::SAttachingEffectData * const &>, COMDAT
; _this$ = ecx

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b c1		 sub	 eax, ecx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001b	2b c1		 sub	 eax, ecx
  0001d	c1 f8 02	 sar	 eax, 2

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 06 01 00
	00		 je	 $LN96@Emplace_re

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b d1		 sub	 edx, ecx

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 fa 02	 sar	 edx, 2

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b ca		 mov	 ecx, edx
  00040	d1 e9		 shr	 ecx, 1
  00042	2b c1		 sub	 eax, ecx
  00044	3b d0		 cmp	 edx, eax
  00046	76 12		 jbe	 SHORT $LN12@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow

  00048	bb fc ff ff ff	 mov	 ebx, -4			; fffffffcH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004d	53		 push	 ebx
  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 41		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  0005d	8b df		 mov	 ebx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 d8	 cmovae	 ebx, eax
  00064	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0006a	0f 87 c6 00 00
	00		 ja	 $LN97@Emplace_re

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00070	c1 e3 02	 shl	 ebx, 2

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00073	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  00079	72 0d		 jb	 SHORT $LN24@Emplace_re

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007b	53		 push	 ebx
  0007c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00081	83 c4 04	 add	 esp, 4
  00084	8b f8		 mov	 edi, eax
  00086	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00088	85 db		 test	 ebx, ebx
  0008a	74 0d		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  0008c	53		 push	 ebx
  0008d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00092	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  00095	8b f8		 mov	 edi, eax
  00097	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  00099	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0009b	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  0009e	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	89 4d fc	 mov	 DWORD PTR tv641[ebp], ecx
  000a7	8b 00		 mov	 eax, DWORD PTR [eax]
  000a9	89 01		 mov	 DWORD PTR [ecx], eax

; 790  :         _Constructed_first = _Newvec + _Whereoff;
; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000ab	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ae	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b1	8b 16		 mov	 edx, DWORD PTR [esi]
  000b3	3b c1		 cmp	 eax, ecx
  000b5	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000b7	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 794  :         } else { // provide basic guarantee

  000b9	eb 17		 jmp	 SHORT $LN60@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bb	57		 push	 edi
  000bc	50		 push	 eax
  000bd	52		 push	 edx
  000be	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAUSAttachingEffectData@NRaceData@@PAPAU12@@std@@YAPAPAUSAttachingEffectData@NRaceData@@PAPAU12@00@Z ; std::_Copy_memmove<NRaceData::SAttachingEffectData * *,NRaceData::SAttachingEffectData * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000c3	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c9	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000cc	83 c0 04	 add	 eax, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000cf	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN60@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d2	50		 push	 eax
  000d3	51		 push	 ecx
  000d4	52		 push	 edx
  000d5	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAUSAttachingEffectData@NRaceData@@PAPAU12@@std@@YAPAPAUSAttachingEffectData@NRaceData@@PAPAU12@00@Z ; std::_Copy_memmove<NRaceData::SAttachingEffectData * *,NRaceData::SAttachingEffectData * *>

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000da	8b 06		 mov	 eax, DWORD PTR [esi]

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000dc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000df	85 c0		 test	 eax, eax
  000e1	74 2c		 je	 SHORT $LN78@Emplace_re

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e3	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000e6	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e8	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000eb	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f1	72 12		 jb	 SHORT $LN88@Emplace_re

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f3	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f6	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fb	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fe	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00101	77 29		 ja	 SHORT $LN85@Emplace_re

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00103	8b c2		 mov	 eax, edx
$LN88@Emplace_re:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00105	51		 push	 ecx
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0010c	83 c4 08	 add	 esp, 8
$LN78@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0010f	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00112	89 3e		 mov	 DWORD PTR [esi], edi
  00114	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00117	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0011a	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  0011d	8d 0c 3b	 lea	 ecx, DWORD PTR [ebx+edi]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00120	5f		 pop	 edi

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00121	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 807  :     }

  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
$LN85@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0012c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 778  :             _Xlength();

  00131	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SAttachingEffectData *,std::allocator<NRaceData::SAttachingEffectData *> >::_Xlength
$LN97@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00136	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN94@Emplace_re:
  0013b	cc		 int	 3
??$_Emplace_reallocate@ABQAUSAttachingEffectData@NRaceData@@@?$vector@PAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@QAEPAPAUSAttachingEffectData@NRaceData@@QAPAU23@ABQAU23@@Z ENDP ; std::vector<NRaceData::SAttachingEffectData *,std::allocator<NRaceData::SAttachingEffectData *> >::_Emplace_reallocate<NRaceData::SAttachingEffectData * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAUSAttachingObjectData@NRaceData@@@?$vector@PAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@QAEPAPAUSAttachingObjectData@NRaceData@@QAPAU23@ABQAU23@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
tv641 = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAUSAttachingObjectData@NRaceData@@@?$vector@PAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@QAEPAPAUSAttachingObjectData@NRaceData@@QAPAU23@ABQAU23@@Z PROC ; std::vector<NRaceData::SAttachingObjectData *,std::allocator<NRaceData::SAttachingObjectData *> >::_Emplace_reallocate<NRaceData::SAttachingObjectData * const &>, COMDAT
; _this$ = ecx

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	2b c1		 sub	 eax, ecx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001b	2b c1		 sub	 eax, ecx
  0001d	c1 f8 02	 sar	 eax, 2

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 06 01 00
	00		 je	 $LN96@Emplace_re

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 56 08	 mov	 edx, DWORD PTR [esi+8]

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b d1		 sub	 edx, ecx

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 fa 02	 sar	 edx, 2

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b ca		 mov	 ecx, edx
  00040	d1 e9		 shr	 ecx, 1
  00042	2b c1		 sub	 eax, ecx
  00044	3b d0		 cmp	 edx, eax
  00046	76 12		 jbe	 SHORT $LN12@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow

  00048	bb fc ff ff ff	 mov	 ebx, -4			; fffffffcH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0004d	53		 push	 ebx
  0004e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00053	83 c4 04	 add	 esp, 4
  00056	8b f8		 mov	 edi, eax
  00058	eb 41		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005a	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  0005d	8b df		 mov	 ebx, edi
  0005f	3b c7		 cmp	 eax, edi
  00061	0f 43 d8	 cmovae	 ebx, eax
  00064	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0006a	0f 87 c6 00 00
	00		 ja	 $LN97@Emplace_re

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00070	c1 e3 02	 shl	 ebx, 2

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00073	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  00079	72 0d		 jb	 SHORT $LN24@Emplace_re

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0007b	53		 push	 ebx
  0007c	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00081	83 c4 04	 add	 esp, 4
  00084	8b f8		 mov	 edi, eax
  00086	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00088	85 db		 test	 ebx, ebx
  0008a	74 0d		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  0008c	53		 push	 ebx
  0008d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00092	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  00095	8b f8		 mov	 edi, eax
  00097	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  00099	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0009b	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  0009e	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a1	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000a4	89 4d fc	 mov	 DWORD PTR tv641[ebp], ecx
  000a7	8b 00		 mov	 eax, DWORD PTR [eax]
  000a9	89 01		 mov	 DWORD PTR [ecx], eax

; 790  :         _Constructed_first = _Newvec + _Whereoff;
; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000ab	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000ae	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b1	8b 16		 mov	 edx, DWORD PTR [esi]
  000b3	3b c1		 cmp	 eax, ecx
  000b5	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000b7	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 794  :         } else { // provide basic guarantee

  000b9	eb 17		 jmp	 SHORT $LN60@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bb	57		 push	 edi
  000bc	50		 push	 eax
  000bd	52		 push	 edx
  000be	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAUSAttachingObjectData@NRaceData@@PAPAU12@@std@@YAPAPAUSAttachingObjectData@NRaceData@@PAPAU12@00@Z ; std::_Copy_memmove<NRaceData::SAttachingObjectData * *,NRaceData::SAttachingObjectData * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000c3	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c9	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000cc	83 c0 04	 add	 eax, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000cf	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
$LN60@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d2	50		 push	 eax
  000d3	51		 push	 ecx
  000d4	52		 push	 edx
  000d5	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAUSAttachingObjectData@NRaceData@@PAPAU12@@std@@YAPAPAUSAttachingObjectData@NRaceData@@PAPAU12@00@Z ; std::_Copy_memmove<NRaceData::SAttachingObjectData * *,NRaceData::SAttachingObjectData * *>

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000da	8b 06		 mov	 eax, DWORD PTR [esi]

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000dc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000df	85 c0		 test	 eax, eax
  000e1	74 2c		 je	 SHORT $LN78@Emplace_re

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e3	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000e6	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e8	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000eb	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f1	72 12		 jb	 SHORT $LN88@Emplace_re

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f3	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f6	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000fb	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fe	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00101	77 29		 ja	 SHORT $LN85@Emplace_re

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00103	8b c2		 mov	 eax, edx
$LN88@Emplace_re:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00105	51		 push	 ecx
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0010c	83 c4 08	 add	 esp, 8
$LN78@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0010f	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  00112	89 3e		 mov	 DWORD PTR [esi], edi
  00114	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00117	8b 45 fc	 mov	 eax, DWORD PTR tv641[ebp]

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0011a	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  0011d	8d 0c 3b	 lea	 ecx, DWORD PTR [ebx+edi]

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00120	5f		 pop	 edi

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00121	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 807  :     }

  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 08 00	 ret	 8
$LN85@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0012c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN96@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 778  :             _Xlength();

  00131	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SAttachingObjectData *,std::allocator<NRaceData::SAttachingObjectData *> >::_Xlength
$LN97@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00136	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN94@Emplace_re:
  0013b	cc		 int	 3
??$_Emplace_reallocate@ABQAUSAttachingObjectData@NRaceData@@@?$vector@PAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@QAEPAPAUSAttachingObjectData@NRaceData@@QAPAU23@ABQAU23@@Z ENDP ; std::vector<NRaceData::SAttachingObjectData *,std::allocator<NRaceData::SAttachingObjectData *> >::_Emplace_reallocate<NRaceData::SAttachingObjectData * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAXPAUSAttachingData@NRaceData@@QAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAXPAUSAttachingData@NRaceData@@QAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NRaceData::SAttachingData> >, COMDAT

; 945  :     _Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 949  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 4d		 je	 SHORT $LN49@Destroy_ra
  0000f	83 c6 20	 add	 esi, 32			; 00000020H
$LL4@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00014	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00017	72 28		 jb	 SHORT $LN26@Destroy_ra
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00019	8b 46 ec	 mov	 eax, DWORD PTR [esi-20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0001c	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001d	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00023	72 12		 jb	 SHORT $LN36@Destroy_ra

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00025	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00028	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0002b	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0002d	83 c0 fc	 add	 eax, -4			; fffffffcH
  00030	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00033	77 2b		 ja	 SHORT $LN33@Destroy_ra

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00035	8b c2		 mov	 eax, edx
$LN36@Destroy_ra:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00037	51		 push	 ecx
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003e	83 c4 08	 add	 esp, 8
$LN26@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00041	c7 46 fc 00 00
	00 00		 mov	 DWORD PTR [esi-4], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00048	c7 06 0f 00 00
	00		 mov	 DWORD PTR [esi], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004e	c6 46 ec 00	 mov	 BYTE PTR [esi-20], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00052	83 c6 30	 add	 esi, 48			; 00000030H
  00055	8d 46 e0	 lea	 eax, DWORD PTR [esi-32]
  00058	3b c7		 cmp	 eax, edi
  0005a	75 b6		 jne	 SHORT $LL4@Destroy_ra
$LN49@Destroy_ra:
  0005c	5f		 pop	 edi

; 950  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 951  :         }
; 952  :     }
; 953  : }

  0005d	5e		 pop	 esi
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
$LN33@Destroy_ra:

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00060	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN50@Destroy_ra:
  00065	cc		 int	 3
??$_Destroy_range@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAXPAUSAttachingData@NRaceData@@QAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NRaceData::SAttachingData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >, COMDAT
; _this$ = ecx

; 756  :     void _Erase_head(_Alnode& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx

; 757  :         this->_Orphan_all();
; 758  :         _Erase_tree(_Al, _Myhead->_Parent);

  00007	8b 07		 mov	 eax, DWORD PTR [edi]
  00009	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 749  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0000c	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00010	75 27		 jne	 SHORT $LN5@Erase_head
  00012	53		 push	 ebx
  00013	8b 5d 08	 mov	 ebx, DWORD PTR __Al$[ebp]
$LL4@Erase_head:

; 750  :             _Erase_tree(_Al, _Rootnode->_Right);

  00016	ff 76 08	 push	 DWORD PTR [esi+8]
  00019	8b cf		 mov	 ecx, edi
  0001b	53		 push	 ebx
  0001c	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 616  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00021	8b c6		 mov	 eax, esi

; 617  :     _Val         = static_cast<_Other&&>(_New_val);

  00023	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00025	6a 30		 push	 48			; 00000030H
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002d	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 749  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00030	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00034	74 e0		 je	 SHORT $LL4@Erase_head
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00036	8b 07		 mov	 eax, DWORD PTR [edi]
  00038	5b		 pop	 ebx
$LN5@Erase_head:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00039	6a 30		 push	 48			; 00000030H
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00041	83 c4 08	 add	 esp, 8
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 760  :     }

  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >, COMDAT
; _this$ = ecx

; 748  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 749  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 750  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 616  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 617  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00023	6a 30		 push	 48			; 00000030H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 749  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 751  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 752  :         }
; 753  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z
_TEXT	SEGMENT
__Backout$2 = -68					; size = 12
__Al$ = -56						; size = 4
__Newvec$ = -52						; size = 4
_this$ = -48						; size = 4
__Constructed_last$ = -44				; size = 4
__Newsize$1$ = -40					; size = 4
tv581 = -36						; size = 4
__Whereoff$1$ = -36					; size = 4
__Constructed_first$ = -32				; size = 4
__Newvec$1$ = -28					; size = 4
__Newcapacity$ = -24					; size = 4
__Newcapacity$1$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Last$1$ = 8						; size = 4
__Whereptr$ = 8						; size = 4
__ULast$1$ = 12						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z PROC ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Emplace_reallocate<NRaceData::SHitData>, COMDAT
; _this$ = ecx

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b d9		 mov	 ebx, ecx
  0002d	89 5d d0	 mov	 DWORD PTR _this$[ebp], ebx

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00030	8b 33		 mov	 esi, DWORD PTR [ebx]
  00032	b8 e9 a2 8b 2e	 mov	 eax, 780903145		; 2e8ba2e9H
  00037	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  0003a	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0003d	2b d6		 sub	 edx, esi
  0003f	f7 ea		 imul	 edx
  00041	2b ce		 sub	 ecx, esi
  00043	89 5d c8	 mov	 DWORD PTR __Al$[ebp], ebx
  00046	c1 fa 03	 sar	 edx, 3
  00049	8b c2		 mov	 eax, edx
  0004b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0004e	03 c2		 add	 eax, edx
  00050	89 45 dc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax
  00053	b8 e9 a2 8b 2e	 mov	 eax, 780903145		; 2e8ba2e9H
  00058	f7 e9		 imul	 ecx
  0005a	c1 fa 03	 sar	 edx, 3
  0005d	8b c2		 mov	 eax, edx
  0005f	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00062	03 c2		 add	 eax, edx

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00064	3d 5d 74 d1 05	 cmp	 eax, 97612893		; 05d1745dH
  00069	0f 84 cf 01 00
	00		 je	 $LN112@Emplace_re

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0006f	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00072	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00075	2b ce		 sub	 ecx, esi

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00077	89 7d d8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0007a	b8 e9 a2 8b 2e	 mov	 eax, 780903145		; 2e8ba2e9H
  0007f	f7 e9		 imul	 ecx

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00081	b8 5d 74 d1 05	 mov	 eax, 97612893		; 05d1745dH

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00086	c1 fa 03	 sar	 edx, 3
  00089	8b ca		 mov	 ecx, edx
  0008b	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0008e	03 ca		 add	 ecx, edx

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00090	8b d1		 mov	 edx, ecx
  00092	d1 ea		 shr	 edx, 1
  00094	2b c2		 sub	 eax, edx
  00096	3b c8		 cmp	 ecx, eax
  00098	76 1d		 jbe	 SHORT $LN12@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow

  0009a	b8 5d 74 d1 05	 mov	 eax, 97612893		; 05d1745dH
  0009f	89 45 ec	 mov	 DWORD PTR __Newcapacity$1$[ebp], eax
  000a2	89 45 e8	 mov	 DWORD PTR __Newcapacity$[ebp], eax
  000a5	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000aa	50		 push	 eax
  000ab	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000b0	83 c4 04	 add	 esp, 4
  000b3	8b f8		 mov	 edi, eax
  000b5	eb 4c		 jmp	 SHORT $LN109@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  000b7	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  000ba	8b f7		 mov	 esi, edi
  000bc	3b c7		 cmp	 eax, edi
  000be	0f 43 f0	 cmovae	 esi, eax
  000c1	89 75 ec	 mov	 DWORD PTR __Newcapacity$1$[ebp], esi
  000c4	81 fe 5d 74 d1
	05		 cmp	 esi, 97612893		; 05d1745dH
  000ca	0f 87 73 01 00
	00		 ja	 $LN113@Emplace_re

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  000d0	6b c6 2c	 imul	 eax, esi, 44
  000d3	89 75 e8	 mov	 DWORD PTR __Newcapacity$[ebp], esi

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000d6	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  000db	72 0d		 jb	 SHORT $LN24@Emplace_re

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000dd	50		 push	 eax
  000de	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000e3	83 c4 04	 add	 esp, 4
  000e6	8b f8		 mov	 edi, eax
  000e8	eb 19		 jmp	 SHORT $LN109@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  000ea	85 c0		 test	 eax, eax
  000ec	74 0d		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  000ee	50		 push	 eax
  000ef	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000f4	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  000f7	8b f8		 mov	 edi, eax
  000f9	eb 02		 jmp	 SHORT $LN110@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  000fb	33 ff		 xor	 edi, edi
$LN110@Emplace_re:

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000fd	89 75 e8	 mov	 DWORD PTR __Newcapacity$[ebp], esi
  00100	89 75 ec	 mov	 DWORD PTR __Newcapacity$1$[ebp], esi
$LN109@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 785  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  00103	6b 75 dc 2c	 imul	 esi, DWORD PTR __Whereoff$1$[ebp], 44

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00107	ff 75 0c	 push	 DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 839  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0010a	89 7d e4	 mov	 DWORD PTR __Newvec$1$[ebp], edi
  0010d	89 7d cc	 mov	 DWORD PTR __Newvec$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 788  :         _TRY_BEGIN

  00110	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00117	03 f7		 add	 esi, edi

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00119	56		 push	 esi
  0011a	53		 push	 ebx
  0011b	89 75 dc	 mov	 DWORD PTR tv581[ebp], esi
  0011e	8d 46 2c	 lea	 eax, DWORD PTR [esi+44]
  00121	89 45 d4	 mov	 DWORD PTR __Constructed_last$[ebp], eax
  00124	89 45 e0	 mov	 DWORD PTR __Constructed_first$[ebp], eax
  00127	e8 00 00 00 00	 call	 ??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z ; std::_Default_allocator_traits<std::allocator<NRaceData::SHitData> >::construct<NRaceData::SHitData,NRaceData::SHitData>

; 790  :         _Constructed_first = _Newvec + _Whereoff;
; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  0012c	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0012f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00132	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
  00135	89 75 e0	 mov	 DWORD PTR __Constructed_first$[ebp], esi
  00138	8b 33		 mov	 esi, DWORD PTR [ebx]
  0013a	89 45 0c	 mov	 DWORD PTR __ULast$1$[ebp], eax
  0013d	3b c8		 cmp	 ecx, eax
  0013f	75 29		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1620 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00141	89 7d bc	 mov	 DWORD PTR __Backout$2[ebp], edi
  00144	89 7d c0	 mov	 DWORD PTR __Backout$2[ebp+4], edi
  00147	89 5d c4	 mov	 DWORD PTR __Backout$2[ebp+8], ebx

; 1669 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  0014a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  0014e	66 90		 npad	 2
$LL37@Emplace_re:

; 1670 :     for (; _UFirst != _ULast; ++_UFirst) {

  00150	3b f0		 cmp	 esi, eax
  00152	74 39		 je	 SHORT $LN106@Emplace_re

; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  00154	56		 push	 esi
  00155	8b cf		 mov	 ecx, edi
  00157	e8 00 00 00 00	 call	 ??0SHitData@NRaceData@@QAE@ABU01@@Z

; 1670 :     for (; _UFirst != _ULast; ++_UFirst) {

  0015c	8b 45 0c	 mov	 eax, DWORD PTR __ULast$1$[ebp]

; 1632 :         ++_Last;

  0015f	83 c7 2c	 add	 edi, 44			; 0000002cH
  00162	89 7d c0	 mov	 DWORD PTR __Backout$2[ebp+4], edi

; 1670 :     for (; _UFirst != _ULast; ++_UFirst) {

  00165	83 c6 2c	 add	 esi, 44			; 0000002cH
  00168	eb e6		 jmp	 SHORT $LL37@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 795  :             _Umove(_Myfirst, _Whereptr, _Newvec);

  0016a	57		 push	 edi
  0016b	51		 push	 ecx
  0016c	56		 push	 esi
  0016d	8b cb		 mov	 ecx, ebx
  0016f	e8 00 00 00 00	 call	 ?_Umove@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEPAUSHitData@NRaceData@@PAU34@00@Z ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Umove

; 796  :             _Constructed_first = _Newvec;
; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  00174	8b 45 dc	 mov	 eax, DWORD PTR tv581[ebp]
  00177	8b cb		 mov	 ecx, ebx
  00179	83 c0 2c	 add	 eax, 44			; 0000002cH
  0017c	89 7d e0	 mov	 DWORD PTR __Constructed_first$[ebp], edi
  0017f	50		 push	 eax
  00180	ff 73 04	 push	 DWORD PTR [ebx+4]
  00183	ff 75 08	 push	 DWORD PTR __Whereptr$[ebp]
  00186	e8 00 00 00 00	 call	 ?_Umove@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEPAUSHitData@NRaceData@@PAU34@00@Z ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Umove
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1670 :     for (; _UFirst != _ULast; ++_UFirst) {

  0018b	eb 03		 jmp	 SHORT $LN5@Emplace_re
$LN106@Emplace_re:
  0018d	8b 7d e4	 mov	 edi, DWORD PTR __Newvec$1$[ebp]
$LN5@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  00190	8b 33		 mov	 esi, DWORD PTR [ebx]
  00192	85 f6		 test	 esi, esi
  00194	74 58		 je	 SHORT $LN79@Emplace_re

; 1746 :             _Destroy(_Myfirst, _Mylast);

  00196	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00199	89 45 08	 mov	 DWORD PTR __Last$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  0019c	3b f0		 cmp	 esi, eax
  0019e	74 11		 je	 SHORT $LN67@Emplace_re
$LL68@Emplace_re:
  001a0	8b ce		 mov	 ecx, esi
  001a2	e8 00 00 00 00	 call	 ??1SHitData@NRaceData@@QAE@XZ
  001a7	83 c6 2c	 add	 esi, 44			; 0000002cH
  001aa	3b 75 08	 cmp	 esi, DWORD PTR __Last$1$[ebp]
  001ad	75 f1		 jne	 SHORT $LL68@Emplace_re
  001af	8b 33		 mov	 esi, DWORD PTR [ebx]
$LN67@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  001b1	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  001b4	b8 e9 a2 8b 2e	 mov	 eax, 780903145		; 2e8ba2e9H
  001b9	2b ce		 sub	 ecx, esi
  001bb	f7 e9		 imul	 ecx
  001bd	c1 fa 03	 sar	 edx, 3
  001c0	8b c2		 mov	 eax, edx
  001c2	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001c5	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001c7	6b c8 2c	 imul	 ecx, eax, 44

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  001ca	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  001d0	72 12		 jb	 SHORT $LN89@Emplace_re

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  001d2	8b 56 fc	 mov	 edx, DWORD PTR [esi-4]
  001d5	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  001d8	2b f2		 sub	 esi, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001da	8d 46 fc	 lea	 eax, DWORD PTR [esi-4]
  001dd	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  001e0	77 66		 ja	 SHORT $LN86@Emplace_re

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  001e2	8b f2		 mov	 esi, edx
$LN89@Emplace_re:

; 264  :         ::operator delete(_Ptr, _Bytes);

  001e4	51		 push	 ecx
  001e5	56		 push	 esi
  001e6	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  001eb	83 c4 08	 add	 esp, 8
$LN79@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1751 :         _Mylast  = _Newvec + _Newsize;

  001ee	6b 4d d8 2c	 imul	 ecx, DWORD PTR __Newsize$1$[ebp], 44

; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 806  :         return _Newvec + _Whereoff;

  001f2	8b 45 dc	 mov	 eax, DWORD PTR tv581[ebp]

; 1750 :         _Myfirst = _Newvec;

  001f5	89 3b		 mov	 DWORD PTR [ebx], edi

; 1751 :         _Mylast  = _Newvec + _Newsize;

  001f7	03 cf		 add	 ecx, edi
  001f9	89 4b 04	 mov	 DWORD PTR [ebx+4], ecx

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  001fc	6b 4d ec 2c	 imul	 ecx, DWORD PTR __Newcapacity$1$[ebp], 44
  00200	03 cf		 add	 ecx, edi
  00202	89 4b 08	 mov	 DWORD PTR [ebx+8], ecx

; 807  :     }

  00205	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00208	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0020f	59		 pop	 ecx
  00210	5f		 pop	 edi
  00211	5e		 pop	 esi
  00212	5b		 pop	 ebx
  00213	8b e5		 mov	 esp, ebp
  00215	5d		 pop	 ebp
  00216	c2 08 00	 ret	 8
__catch$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z$0:

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);

  00219	ff 75 d4	 push	 DWORD PTR __Constructed_last$[ebp]
  0021c	8b 4d d0	 mov	 ecx, DWORD PTR _this$[ebp]
  0021f	ff 75 e0	 push	 DWORD PTR __Constructed_first$[ebp]
  00222	e8 00 00 00 00	 call	 ?_Destroy@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEXPAUSHitData@NRaceData@@0@Z ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Destroy

; 801  :         _Al.deallocate(_Newvec, _Newcapacity);

  00227	ff 75 e8	 push	 DWORD PTR __Newcapacity$[ebp]
  0022a	8b 4d c8	 mov	 ecx, DWORD PTR __Al$[ebp]
  0022d	ff 75 cc	 push	 DWORD PTR __Newvec$[ebp]
  00230	e8 00 00 00 00	 call	 ?deallocate@?$allocator@USHitData@NRaceData@@@std@@QAEXQAUSHitData@NRaceData@@I@Z ; std::allocator<NRaceData::SHitData>::deallocate

; 802  :         _RERAISE;

  00235	6a 00		 push	 0
  00237	6a 00		 push	 0
  00239	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN112@Emplace_re:

; 778  :             _Xlength();

  0023e	e8 00 00 00 00	 call	 ?_Xlength@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Xlength
$LN113@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00243	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN86@Emplace_re:

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00248	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN108@Emplace_re:
  0024d	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z$2:
  00000	8d 4d bc	 lea	 ecx, DWORD PTR __Backout$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<NRaceData::SHitData> >::~_Uninitialized_backout_al<std::allocator<NRaceData::SHitData> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z ENDP ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Emplace_reallocate<NRaceData::SHitData>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
$T2 = 12						; size = 4
__Ptr$ = 12						; size = 4
_this$ = 16						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<NRaceData::SHitData> >::construct<NRaceData::SHitData,NRaceData::SHitData>, COMDAT

; 707  :     static _CONSTEXPR20_DYNALLOC void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 708  : #ifdef __cpp_lib_constexpr_dynamic_alloc
; 709  :         if (_STD is_constant_evaluated()) {
; 710  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 711  :         } else
; 712  : #endif // __cpp_lib_constexpr_dynamic_alloc
; 713  :         {
; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  00024	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00027	8b 7d 10	 mov	 edi, DWORD PTR _<_Args_0>$[ebp]
  0002a	89 4d 0c	 mov	 DWORD PTR $T2[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0002d	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00034	8b 07		 mov	 eax, DWORD PTR [edi]
  00036	89 01		 mov	 DWORD PTR [ecx], eax
  00038	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0003b	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0003e	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00041	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 2355 :     size_type _Mysize = 0; // current length of string

  00044	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  0004b	c7 41 20 00 00
	00 00		 mov	 DWORD PTR [ecx+32], 0

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00052	0f 10 47 0c	 movups	 xmm0, XMMWORD PTR [edi+12]
  00056	0f 11 41 0c	 movups	 XMMWORD PTR [ecx+12], xmm0
  0005a	f3 0f 7e 47 1c	 movq	 xmm0, QWORD PTR [edi+28]
  0005f	66 0f d6 41 1c	 movq	 QWORD PTR [ecx+28], xmm0

; 4596 :         _My_data._Mysize = 0;

  00064	c7 47 1c 00 00
	00 00		 mov	 DWORD PTR [edi+28], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0006b	c7 47 20 0f 00
	00 00		 mov	 DWORD PTR [edi+32], 15	; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00072	c6 47 0c 00	 mov	 BYTE PTR [edi+12], 0
  00076	8d 71 24	 lea	 esi, DWORD PTR [ecx+36]
  00079	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 85   :         return ::operator new(_Bytes);

  00080	6a 30		 push	 48			; 00000030H
  00082	89 75 10	 mov	 DWORD PTR _this$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 441  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  00085	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0008b	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 85   :         return ::operator new(_Bytes);

  00092	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00097	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 350  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  0009a	89 00		 mov	 DWORD PTR [eax], eax

; 351  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  0009c	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 352  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  0009f	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 353  :         _Pnode->_Color = _Black;

  000a2	66 c7 40 0c 01
	01		 mov	 WORD PTR [eax+12], 257	; 00000101H

; 1925 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  000a8	89 06		 mov	 DWORD PTR [esi], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 105  :     _Left    = _STD move(_Right);

  000aa	8b 4f 24	 mov	 ecx, DWORD PTR [edi+36]
  000ad	89 0e		 mov	 DWORD PTR [esi], ecx

; 106  :     _Right   = _STD move(_Tmp);

  000af	89 47 24	 mov	 DWORD PTR [edi+36], eax

; 104  :     _Ty _Tmp = _STD move(_Left);

  000b2	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]

; 105  :     _Left    = _STD move(_Right);

  000b5	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  000b8	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 106  :     _Right   = _STD move(_Tmp);

  000bb	89 4f 28	 mov	 DWORD PTR [edi+40], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 716  :     }

  000be	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c8	59		 pop	 ecx
  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z$0:
  00000	8b 4d 0c	 mov	 ecx, DWORD PTR $T2[ebp]
  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
__ehhandler$??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z:
  00010	90		 npad	 1
  00011	90		 npad	 1
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<NRaceData::SHitData> >::construct<NRaceData::SHitData,NRaceData::SHitData>
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xrange@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xrange@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@CAXXZ PROC ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Xrange, COMDAT

; 1778 :         _Xout_of_range("invalid vector subscript");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
  00005	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN3@Xrange:
  0000a	cc		 int	 3
?_Xrange@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@CAXXZ ENDP ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Xrange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@CAXXZ PROC ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@CAXXZ ENDP ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Ufill@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@AAEPAUSAttachingData@NRaceData@@PAU34@IU_Value_init_tag@2@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Count$ = 12						; size = 4
___formal$ = 16						; size = 1
?_Ufill@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@AAEPAUSAttachingData@NRaceData@@PAU34@IU_Value_init_tag@2@@Z PROC ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Ufill, COMDAT
; _this$ = ecx

; 1646 :     _CONSTEXPR20_CONTAINER pointer _Ufill(pointer _Dest, const size_type _Count, _Value_init_tag) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1648 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1620 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00007	8b 75 08	 mov	 esi, DWORD PTR __Dest$[ebp]

; 1830 :     for (; 0 < _Count; --_Count) {

  0000a	85 c0		 test	 eax, eax
  0000c	74 4c		 je	 SHORT $LN5@Ufill

; 1620 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  0000e	8d 56 20	 lea	 edx, DWORD PTR [esi+32]
$LL6@Ufill:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h

; 173  : 			: dwType(0)

  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1632 :         ++_Last;

  00017	8d 52 30	 lea	 edx, DWORD PTR [edx+48]
  0001a	83 c6 30	 add	 esi, 48			; 00000030H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h

; 174  : 			, isAttaching(false)

  0001d	c7 42 b4 00 00
	00 00		 mov	 DWORD PTR [edx-76], 0

; 175  : 			, dwAttachingModelIndex(0)

  00024	c7 42 b8 00 00
	00 00		 mov	 DWORD PTR [edx-72], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0002b	c7 42 bc 00 00
	00 00		 mov	 DWORD PTR [edx-68], 0

; 4596 :         _My_data._Mysize = 0;

  00032	c7 42 cc 00 00
	00 00		 mov	 DWORD PTR [edx-52], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00039	c7 42 d0 0f 00
	00 00		 mov	 DWORD PTR [edx-48], 15	; 0000000fH
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h

; 176  : 			, pCollisionData(NULL)

  00040	c7 42 d4 00 00
	00 00		 mov	 DWORD PTR [edx-44], 0

; 177  : 			, pEffectData(NULL)

  00047	c7 42 d8 00 00
	00 00		 mov	 DWORD PTR [edx-40], 0

; 178  : 			, pObjectData(NULL)

  0004e	c7 42 dc 00 00
	00 00		 mov	 DWORD PTR [edx-36], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1830 :     for (; 0 < _Count; --_Count) {

  00055	83 e8 01	 sub	 eax, 1
  00058	75 b7		 jne	 SHORT $LL6@Ufill
$LN5@Ufill:

; 1626 :         _Destroy_range(_First, _Last, _Al);

  0005a	51		 push	 ecx
  0005b	56		 push	 esi
  0005c	56		 push	 esi
  0005d	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAXPAUSAttachingData@NRaceData@@QAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SAttachingData> >
  00062	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1648 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00065	8b c6		 mov	 eax, esi
  00067	5e		 pop	 esi

; 1649 :     }

  00068	5d		 pop	 ebp
  00069	c2 0c 00	 ret	 12			; 0000000cH
?_Ufill@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@AAEPAUSAttachingData@NRaceData@@PAU34@IU_Value_init_tag@2@@Z ENDP ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Ufill
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fg_ObjectDataPool@NRaceData@@YAXXZ
text$yd	SEGMENT
??__Fg_ObjectDataPool@NRaceData@@YAXXZ PROC		; NRaceData::`dynamic atexit destructor for 'g_ObjectDataPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A ; NRaceData::g_ObjectDataPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAE@XZ ; CDynamicPool<NRaceData::SAttachingObjectData>::~CDynamicPool<NRaceData::SAttachingObjectData>
??__Fg_ObjectDataPool@NRaceData@@YAXXZ ENDP		; NRaceData::`dynamic atexit destructor for 'g_ObjectDataPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
;	COMDAT ??__Eg_ObjectDataPool@NRaceData@@YAXXZ
text$di	SEGMENT
??__Eg_ObjectDataPool@NRaceData@@YAXXZ PROC		; NRaceData::`dynamic initializer for 'g_ObjectDataPool'', COMDAT

; 9    : CDynamicPool<NRaceData::TAttachingObjectData>	NRaceData::g_ObjectDataPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__Fg_ObjectDataPool@NRaceData@@YAXXZ ; NRaceData::`dynamic atexit destructor for 'g_ObjectDataPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__Eg_ObjectDataPool@NRaceData@@YAXXZ ENDP		; NRaceData::`dynamic initializer for 'g_ObjectDataPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAEPAXI@Z PROC ; CDynamicPool<NRaceData::SAttachingObjectData>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAE@XZ ; CDynamicPool<NRaceData::SAttachingObjectData>::~CDynamicPool<NRaceData::SAttachingObjectData>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAEPAXI@Z ENDP ; CDynamicPool<NRaceData::SAttachingObjectData>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@CAXXZ PROC ; std::vector<NRaceData::SAttachingObjectData *,std::allocator<NRaceData::SAttachingObjectData *> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@CAXXZ ENDP ; std::vector<NRaceData::SAttachingObjectData *,std::allocator<NRaceData::SAttachingObjectData *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@USAttachingObjectData@NRaceData@@@@KAXPAUSAttachingObjectData@NRaceData@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@USAttachingObjectData@NRaceData@@@@KAXPAUSAttachingObjectData@NRaceData@@@Z PROC ; CDynamicPool<NRaceData::SAttachingObjectData>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@USAttachingObjectData@NRaceData@@@@KAXPAUSAttachingObjectData@NRaceData@@@Z ENDP ; CDynamicPool<NRaceData::SAttachingObjectData>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAE@XZ PROC ; CDynamicPool<NRaceData::SAttachingObjectData>::~CDynamicPool<NRaceData::SAttachingObjectData>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@USAttachingObjectData@NRaceData@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0000c	85 c0		 test	 eax, eax
  0000e	74 41		 je	 SHORT $LN6@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00013	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00018	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001e	72 12		 jb	 SHORT $LN22@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00020	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00023	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00026	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00028	83 c0 fc	 add	 eax, -4			; fffffffcH
  0002b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002e	77 6b		 ja	 SHORT $LN44@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00030	8b c2		 mov	 eax, edx
$LN22@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00032	51		 push	 ecx
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  00039	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00040	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00043	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1769 :             _Myend   = nullptr;

  0004a	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00051	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00054	85 c0		 test	 eax, eax
  00056	74 41		 je	 SHORT $LN31@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00058	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0005b	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0005d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00060	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00066	72 12		 jb	 SHORT $LN47@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00068	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0006b	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0006e	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00070	83 c0 fc	 add	 eax, -4			; fffffffcH
  00073	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00076	77 23		 ja	 SHORT $LN44@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00078	8b c2		 mov	 eax, edx
$LN47@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0007a	51		 push	 ecx
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  00081	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00088	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  0008b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1769 :             _Myend   = nullptr;

  00092	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN31@CDynamicPo:
  00099	5e		 pop	 esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 26   : 		}

  0009a	c3		 ret	 0
$LN44@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0009b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN52@CDynamicPo:
  000a0	cc		 int	 3
??1?$CDynamicPool@USAttachingObjectData@NRaceData@@@@UAE@XZ ENDP ; CDynamicPool<NRaceData::SAttachingObjectData>::~CDynamicPool<NRaceData::SAttachingObjectData>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fg_EffectDataPool@NRaceData@@YAXXZ
text$yd	SEGMENT
??__Fg_EffectDataPool@NRaceData@@YAXXZ PROC		; NRaceData::`dynamic atexit destructor for 'g_EffectDataPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A ; NRaceData::g_EffectDataPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAE@XZ ; CDynamicPool<NRaceData::SAttachingEffectData>::~CDynamicPool<NRaceData::SAttachingEffectData>
??__Fg_EffectDataPool@NRaceData@@YAXXZ ENDP		; NRaceData::`dynamic atexit destructor for 'g_EffectDataPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
;	COMDAT ??__Eg_EffectDataPool@NRaceData@@YAXXZ
text$di	SEGMENT
??__Eg_EffectDataPool@NRaceData@@YAXXZ PROC		; NRaceData::`dynamic initializer for 'g_EffectDataPool'', COMDAT

; 8    : CDynamicPool<NRaceData::TAttachingEffectData>	NRaceData::g_EffectDataPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__Fg_EffectDataPool@NRaceData@@YAXXZ ; NRaceData::`dynamic atexit destructor for 'g_EffectDataPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__Eg_EffectDataPool@NRaceData@@YAXXZ ENDP		; NRaceData::`dynamic initializer for 'g_EffectDataPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAEPAXI@Z PROC ; CDynamicPool<NRaceData::SAttachingEffectData>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAE@XZ ; CDynamicPool<NRaceData::SAttachingEffectData>::~CDynamicPool<NRaceData::SAttachingEffectData>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAEPAXI@Z ENDP ; CDynamicPool<NRaceData::SAttachingEffectData>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@CAXXZ PROC ; std::vector<NRaceData::SAttachingEffectData *,std::allocator<NRaceData::SAttachingEffectData *> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@CAXXZ ENDP ; std::vector<NRaceData::SAttachingEffectData *,std::allocator<NRaceData::SAttachingEffectData *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@USAttachingEffectData@NRaceData@@@@KAXPAUSAttachingEffectData@NRaceData@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@USAttachingEffectData@NRaceData@@@@KAXPAUSAttachingEffectData@NRaceData@@@Z PROC ; CDynamicPool<NRaceData::SAttachingEffectData>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@USAttachingEffectData@NRaceData@@@@KAXPAUSAttachingEffectData@NRaceData@@@Z ENDP ; CDynamicPool<NRaceData::SAttachingEffectData>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAE@XZ PROC ; CDynamicPool<NRaceData::SAttachingEffectData>::~CDynamicPool<NRaceData::SAttachingEffectData>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@USAttachingEffectData@NRaceData@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0000c	85 c0		 test	 eax, eax
  0000e	74 41		 je	 SHORT $LN6@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00013	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00018	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001e	72 12		 jb	 SHORT $LN22@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00020	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00023	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00026	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00028	83 c0 fc	 add	 eax, -4			; fffffffcH
  0002b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002e	77 6b		 ja	 SHORT $LN44@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00030	8b c2		 mov	 eax, edx
$LN22@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00032	51		 push	 ecx
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  00039	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00040	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00043	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1769 :             _Myend   = nullptr;

  0004a	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00051	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00054	85 c0		 test	 eax, eax
  00056	74 41		 je	 SHORT $LN31@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00058	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0005b	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0005d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00060	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00066	72 12		 jb	 SHORT $LN47@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00068	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0006b	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0006e	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00070	83 c0 fc	 add	 eax, -4			; fffffffcH
  00073	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00076	77 23		 ja	 SHORT $LN44@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00078	8b c2		 mov	 eax, edx
$LN47@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0007a	51		 push	 ecx
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  00081	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00088	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  0008b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1769 :             _Myend   = nullptr;

  00092	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN31@CDynamicPo:
  00099	5e		 pop	 esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 26   : 		}

  0009a	c3		 ret	 0
$LN44@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0009b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN52@CDynamicPo:
  000a0	cc		 int	 3
??1?$CDynamicPool@USAttachingEffectData@NRaceData@@@@UAE@XZ ENDP ; CDynamicPool<NRaceData::SAttachingEffectData>::~CDynamicPool<NRaceData::SAttachingEffectData>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fg_CollisionDataPool@NRaceData@@YAXXZ
text$yd	SEGMENT
??__Fg_CollisionDataPool@NRaceData@@YAXXZ PROC		; NRaceData::`dynamic atexit destructor for 'g_CollisionDataPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A ; NRaceData::g_CollisionDataPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@USCollisionData@NRaceData@@@@UAE@XZ ; CDynamicPool<NRaceData::SCollisionData>::~CDynamicPool<NRaceData::SCollisionData>
??__Fg_CollisionDataPool@NRaceData@@YAXXZ ENDP		; NRaceData::`dynamic atexit destructor for 'g_CollisionDataPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
;	COMDAT ??__Eg_CollisionDataPool@NRaceData@@YAXXZ
text$di	SEGMENT
??__Eg_CollisionDataPool@NRaceData@@YAXXZ PROC		; NRaceData::`dynamic initializer for 'g_CollisionDataPool'', COMDAT

; 7    : CDynamicPool<NRaceData::TCollisionData>			NRaceData::g_CollisionDataPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__Fg_CollisionDataPool@NRaceData@@YAXXZ ; NRaceData::`dynamic atexit destructor for 'g_CollisionDataPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__Eg_CollisionDataPool@NRaceData@@YAXXZ ENDP		; NRaceData::`dynamic initializer for 'g_CollisionDataPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@USCollisionData@NRaceData@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@USCollisionData@NRaceData@@@@UAEPAXI@Z PROC ; CDynamicPool<NRaceData::SCollisionData>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@USCollisionData@NRaceData@@@@UAE@XZ ; CDynamicPool<NRaceData::SCollisionData>::~CDynamicPool<NRaceData::SCollisionData>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@USCollisionData@NRaceData@@@@UAEPAXI@Z ENDP ; CDynamicPool<NRaceData::SCollisionData>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@CAXXZ PROC ; std::vector<NRaceData::SCollisionData *,std::allocator<NRaceData::SCollisionData *> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@CAXXZ ENDP ; std::vector<NRaceData::SCollisionData *,std::allocator<NRaceData::SCollisionData *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@USCollisionData@NRaceData@@@@KAXPAUSCollisionData@NRaceData@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@USCollisionData@NRaceData@@@@KAXPAUSCollisionData@NRaceData@@@Z PROC ; CDynamicPool<NRaceData::SCollisionData>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@USCollisionData@NRaceData@@@@KAXPAUSCollisionData@NRaceData@@@Z ENDP ; CDynamicPool<NRaceData::SCollisionData>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@USCollisionData@NRaceData@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@USCollisionData@NRaceData@@@@UAE@XZ PROC ; CDynamicPool<NRaceData::SCollisionData>::~CDynamicPool<NRaceData::SCollisionData>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@USCollisionData@NRaceData@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0000c	85 c0		 test	 eax, eax
  0000e	74 41		 je	 SHORT $LN6@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00013	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00018	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001e	72 12		 jb	 SHORT $LN22@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00020	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00023	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00026	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00028	83 c0 fc	 add	 eax, -4			; fffffffcH
  0002b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002e	77 6b		 ja	 SHORT $LN44@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00030	8b c2		 mov	 eax, edx
$LN22@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00032	51		 push	 ecx
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  00039	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00040	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00043	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1769 :             _Myend   = nullptr;

  0004a	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00051	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00054	85 c0		 test	 eax, eax
  00056	74 41		 je	 SHORT $LN31@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00058	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0005b	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0005d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00060	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00066	72 12		 jb	 SHORT $LN47@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00068	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0006b	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0006e	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00070	83 c0 fc	 add	 eax, -4			; fffffffcH
  00073	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00076	77 23		 ja	 SHORT $LN44@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00078	8b c2		 mov	 eax, edx
$LN47@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0007a	51		 push	 ecx
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  00081	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00088	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  0008b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1769 :             _Myend   = nullptr;

  00092	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN31@CDynamicPo:
  00099	5e		 pop	 esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 26   : 		}

  0009a	c3		 ret	 0
$LN44@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0009b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN52@CDynamicPo:
  000a0	cc		 int	 3
??1?$CDynamicPool@USCollisionData@NRaceData@@@@UAE@XZ ENDP ; CDynamicPool<NRaceData::SCollisionData>::~CDynamicPool<NRaceData::SCollisionData>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 134  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 135  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 137  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 85   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 138  :         _Throw_bad_array_new_length(); // add overflow
; 139  :     }
; 140  : 
; 141  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 85   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 145  : 
; 146  : #ifdef _DEBUG
; 147  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 148  : #endif // _DEBUG
; 149  :     return _Ptr;
; 150  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
;	COMDAT ?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z
_TEXT	SEGMENT
_i$1$ = -64						; size = 4
tv2164 = -60						; size = 4
$T2 = -60						; size = 1
_dwDataCount$ = -56					; size = 4
_rTextFileLoader$GSCopy$1$ = -52			; size = 4
_pAttachingDataVector$GSCopy$1$ = -48			; size = 4
$T3 = -44						; size = 4
_pkNewData$4 = -44					; size = 4
$T5 = -44						; size = 4
_pkNewData$6 = -44					; size = 4
$T7 = -44						; size = 4
_pkNewData$8 = -44					; size = 4
$T9 = -40						; size = 24
$T10 = -40						; size = 24
$T11 = -40						; size = 24
$T12 = -40						; size = 24
$T13 = -40						; size = 24
$T14 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
_pAttachingDataVector$ = 12				; size = 4
?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z PROC ; NRaceData::LoadAttachingData, COMDAT

; 316  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b 75 08	 mov	 esi, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2521 :         assign(_Ptr);

  0002e	8d 4d d8	 lea	 ecx, DWORD PTR $T14[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 316  : {

  00031	8b 7d 0c	 mov	 edi, DWORD PTR _pAttachingDataVector$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00034	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T14[ebp], 0

; 2521 :         assign(_Ptr);

  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FANHLGEG@attachingdatacount@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 316  : {

  00040	89 75 cc	 mov	 DWORD PTR _rTextFileLoader$GSCopy$1$[ebp], esi
  00043	89 7d d0	 mov	 DWORD PTR _pAttachingDataVector$GSCopy$1$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4596 :         _My_data._Mysize = 0;

  00046	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T14[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0004d	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T14[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00054	c6 45 d8 00	 mov	 BYTE PTR $T14[ebp], 0

; 2521 :         assign(_Ptr);

  00058	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 318  : 	if (!rTextFileLoader.GetTokenDoubleWord("attachingdatacount", &dwDataCount))

  0005d	8d 45 c8	 lea	 eax, DWORD PTR _dwDataCount$[ebp]
  00060	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00067	50		 push	 eax
  00068	8d 45 d8	 lea	 eax, DWORD PTR $T14[ebp]
  0006b	8b ce		 mov	 ecx, esi
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00073	8b 55 ec	 mov	 edx, DWORD PTR $T14[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 318  : 	if (!rTextFileLoader.GetTokenDoubleWord("attachingdatacount", &dwDataCount))

  00076	85 c0		 test	 eax, eax
  00078	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007f	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00082	83 fa 10	 cmp	 edx, 16			; 00000010H
  00085	72 2c		 jb	 SHORT $LN50@LoadAttach
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00087	8b 4d d8	 mov	 ecx, DWORD PTR $T14[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0008a	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0008b	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0008d	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00093	72 14		 jb	 SHORT $LN60@LoadAttach

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00095	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00098	83 c2 23	 add	 edx, 35			; 00000023H
  0009b	2b c1		 sub	 eax, ecx

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0009d	83 c0 fc	 add	 eax, -4			; fffffffcH
  000a0	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a3	0f 87 a9 05 00
	00		 ja	 $LN113@LoadAttach
$LN60@LoadAttach:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a9	52		 push	 edx
  000aa	51		 push	 ecx
  000ab	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000b0	83 c4 08	 add	 esp, 8
$LN50@LoadAttach:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 318  : 	if (!rTextFileLoader.GetTokenDoubleWord("attachingdatacount", &dwDataCount))

  000b3	84 db		 test	 bl, bl
  000b5	0f 85 79 05 00
	00		 jne	 $LN381@LoadAttach
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  000bb	57		 push	 edi
  000bc	ff 77 04	 push	 DWORD PTR [edi+4]
  000bf	ff 37		 push	 DWORD PTR [edi]
  000c1	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@YAXPAUSAttachingData@NRaceData@@QAU12@AAV?$allocator@USAttachingData@NRaceData@@@0@@Z ; std::_Destroy_range<std::allocator<NRaceData::SAttachingData> >

; 1456 :         _Mylast = _Myfirst;

  000c6	8b 45 d0	 mov	 eax, DWORD PTR _pAttachingDataVector$GSCopy$1$[ebp]

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  000c9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1272 :         if (_Newsize > _Oldsize) { // append

  000cc	8b 75 c8	 mov	 esi, DWORD PTR _dwDataCount$[ebp]

; 1456 :         _Mylast = _Myfirst;

  000cf	8b 38		 mov	 edi, DWORD PTR [eax]
  000d1	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 1272 :         if (_Newsize > _Oldsize) { // append

  000d4	85 f6		 test	 esi, esi
  000d6	74 43		 je	 SHORT $LN74@LoadAttach

; 1273 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  000d8	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000db	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  000e0	2b cf		 sub	 ecx, edi
  000e2	f7 e9		 imul	 ecx
  000e4	c1 fa 03	 sar	 edx, 3
  000e7	8b c2		 mov	 eax, edx
  000e9	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000ec	03 c2		 add	 eax, edx

; 1274 :             if (_Newsize > _Oldcapacity) { // reallocate

  000ee	3b f0		 cmp	 esi, eax
  000f0	76 12		 jbe	 SHORT $LN75@LoadAttach

; 1275 :                 _Resize_reallocate(_Newsize, _Val);

  000f2	8b 4d d0	 mov	 ecx, DWORD PTR _pAttachingDataVector$GSCopy$1$[ebp]
  000f5	8d 45 c4	 lea	 eax, DWORD PTR $T2[ebp]
  000f8	50		 push	 eax
  000f9	56		 push	 esi
  000fa	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Resize_reallocate<std::_Value_init_tag>

; 1276 :                 return;

  000ff	8b 45 d0	 mov	 eax, DWORD PTR _pAttachingDataVector$GSCopy$1$[ebp]
  00102	eb 14		 jmp	 SHORT $LN388@LoadAttach
$LN75@LoadAttach:

; 1277 :             }
; 1278 : 
; 1279 :             const pointer _Oldlast = _Mylast;
; 1280 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  00104	ff 75 c4	 push	 DWORD PTR $T2[ebp]
  00107	56		 push	 esi
  00108	57		 push	 edi
  00109	8b 7d d0	 mov	 edi, DWORD PTR _pAttachingDataVector$GSCopy$1$[ebp]
  0010c	8b cf		 mov	 ecx, edi
  0010e	e8 00 00 00 00	 call	 ?_Ufill@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@AAEPAUSAttachingData@NRaceData@@PAU34@IU_Value_init_tag@2@@Z ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Ufill
  00113	89 47 04	 mov	 DWORD PTR [edi+4], eax
  00116	8b c7		 mov	 eax, edi
$LN388@LoadAttach:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 324  : 	for (DWORD i = 0; i < dwDataCount; ++i)

  00118	8b 75 c8	 mov	 esi, DWORD PTR _dwDataCount$[ebp]
$LN74@LoadAttach:
  0011b	33 db		 xor	 ebx, ebx
  0011d	89 5d c0	 mov	 DWORD PTR _i$1$[ebp], ebx
  00120	85 f6		 test	 esi, esi
  00122	0f 84 05 05 00
	00		 je	 $LN3@LoadAttach
  00128	33 ff		 xor	 edi, edi
  0012a	89 7d c4	 mov	 DWORD PTR tv2164[ebp], edi
  0012d	0f 1f 00	 npad	 3
$LL4@LoadAttach:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1584 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00130	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00133	8b 30		 mov	 esi, DWORD PTR [eax]
  00135	2b ce		 sub	 ecx, esi
  00137	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0013c	f7 e9		 imul	 ecx
  0013e	c1 fa 03	 sar	 edx, 3
  00141	8b c2		 mov	 eax, edx
  00143	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00146	03 c2		 add	 eax, edx
  00148	3b c3		 cmp	 eax, ebx
  0014a	0f 86 07 05 00
	00		 jbe	 $LN373@LoadAttach
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00150	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T13[ebp], 0

; 2521 :         assign(_Ptr);

  00157	8d 4d d8	 lea	 ecx, DWORD PTR $T13[ebp]
  0015a	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OPEMPJIC@attachingdata@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1588 :         return _My_data._Myfirst[_Pos];

  0015f	03 fe		 add	 edi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4596 :         _My_data._Mysize = 0;

  00161	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T13[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00168	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T13[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0016f	c6 45 d8 00	 mov	 BYTE PTR $T13[ebp], 0

; 2521 :         assign(_Ptr);

  00173	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 327  : 		if (!rTextFileLoader.SetChildNode("attachingdata", i))

  00178	8b 75 cc	 mov	 esi, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  0017b	8d 45 d8	 lea	 eax, DWORD PTR $T13[ebp]
  0017e	53		 push	 ebx
  0017f	50		 push	 eax
  00180	8b ce		 mov	 ecx, esi
  00182	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00189	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; CTextFileLoader::SetChildNode
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0018e	8b 55 ec	 mov	 edx, DWORD PTR $T13[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 327  : 		if (!rTextFileLoader.SetChildNode("attachingdata", i))

  00191	85 c0		 test	 eax, eax
  00193	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0019a	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0019d	83 fa 10	 cmp	 edx, 16			; 00000010H
  001a0	72 2c		 jb	 SHORT $LN106@LoadAttach
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001a2	8b 4d d8	 mov	 ecx, DWORD PTR $T13[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001a5	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001a6	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  001a8	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  001ae	72 14		 jb	 SHORT $LN116@LoadAttach

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  001b0	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  001b3	83 c2 23	 add	 edx, 35			; 00000023H
  001b6	2b c1		 sub	 eax, ecx

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001b8	83 c0 fc	 add	 eax, -4			; fffffffcH
  001bb	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  001be	0f 87 8e 04 00
	00		 ja	 $LN113@LoadAttach
$LN116@LoadAttach:

; 264  :         ::operator delete(_Ptr, _Bytes);

  001c4	52		 push	 edx
  001c5	51		 push	 ecx
  001c6	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  001cb	83 c4 08	 add	 esp, 8
$LN106@LoadAttach:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 327  : 		if (!rTextFileLoader.SetChildNode("attachingdata", i))

  001ce	84 db		 test	 bl, bl
  001d0	0f 85 5e 04 00
	00		 jne	 $LN381@LoadAttach
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  001d6	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T12[ebp], 0

; 2521 :         assign(_Ptr);

  001dd	8d 4d d8	 lea	 ecx, DWORD PTR $T12[ebp]
  001e0	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MHCCJHKE@attachingdatatype@

; 4596 :         _My_data._Mysize = 0;

  001e5	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T12[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  001ec	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T12[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  001f3	88 5d d8	 mov	 BYTE PTR $T12[ebp], bl

; 2521 :         assign(_Ptr);

  001f6	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 330  : 		if (!rTextFileLoader.GetTokenDoubleWord("attachingdatatype", &rAttachingData.dwType))

  001fb	57		 push	 edi
  001fc	8d 45 d8	 lea	 eax, DWORD PTR $T12[ebp]
  001ff	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00206	50		 push	 eax
  00207	8b ce		 mov	 ecx, esi
  00209	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0020e	8b 55 ec	 mov	 edx, DWORD PTR $T12[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 330  : 		if (!rTextFileLoader.GetTokenDoubleWord("attachingdatatype", &rAttachingData.dwType))

  00211	85 c0		 test	 eax, eax
  00213	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0021a	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0021d	83 fa 10	 cmp	 edx, 16			; 00000010H
  00220	72 2c		 jb	 SHORT $LN145@LoadAttach
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00222	8b 4d d8	 mov	 ecx, DWORD PTR $T12[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00225	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00226	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00228	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0022e	72 14		 jb	 SHORT $LN155@LoadAttach

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00230	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00233	83 c2 23	 add	 edx, 35			; 00000023H
  00236	2b c1		 sub	 eax, ecx

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00238	83 c0 fc	 add	 eax, -4			; fffffffcH
  0023b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0023e	0f 87 0e 04 00
	00		 ja	 $LN113@LoadAttach
$LN155@LoadAttach:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00244	52		 push	 edx
  00245	51		 push	 ecx
  00246	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0024b	83 c4 08	 add	 esp, 8
$LN145@LoadAttach:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 330  : 		if (!rTextFileLoader.GetTokenDoubleWord("attachingdatatype", &rAttachingData.dwType))

  0024e	84 db		 test	 bl, bl
  00250	0f 85 de 03 00
	00		 jne	 $LN381@LoadAttach
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00256	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T11[ebp], 0

; 2521 :         assign(_Ptr);

  0025d	8d 4d d8	 lea	 ecx, DWORD PTR $T11[ebp]
  00260	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MJFJJMOM@isattaching@

; 4596 :         _My_data._Mysize = 0;

  00265	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T11[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0026c	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T11[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00273	88 5d d8	 mov	 BYTE PTR $T11[ebp], bl

; 2521 :         assign(_Ptr);

  00276	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 333  : 		if (!rTextFileLoader.GetTokenInteger("isattaching", &rAttachingData.isAttaching))

  0027b	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  0027e	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  00285	50		 push	 eax
  00286	8d 45 d8	 lea	 eax, DWORD PTR $T11[ebp]
  00289	8b ce		 mov	 ecx, esi
  0028b	50		 push	 eax
  0028c	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00291	8b 55 ec	 mov	 edx, DWORD PTR $T11[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 333  : 		if (!rTextFileLoader.GetTokenInteger("isattaching", &rAttachingData.isAttaching))

  00294	85 c0		 test	 eax, eax
  00296	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0029d	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  002a0	83 fa 10	 cmp	 edx, 16			; 00000010H
  002a3	72 2c		 jb	 SHORT $LN184@LoadAttach
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002a5	8b 4d d8	 mov	 ecx, DWORD PTR $T11[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  002a8	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002a9	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  002ab	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  002b1	72 14		 jb	 SHORT $LN194@LoadAttach

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  002b3	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  002b6	83 c2 23	 add	 edx, 35			; 00000023H
  002b9	2b c1		 sub	 eax, ecx

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  002bb	83 c0 fc	 add	 eax, -4			; fffffffcH
  002be	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  002c1	0f 87 8b 03 00
	00		 ja	 $LN113@LoadAttach
$LN194@LoadAttach:

; 264  :         ::operator delete(_Ptr, _Bytes);

  002c7	52		 push	 edx
  002c8	51		 push	 ecx
  002c9	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  002ce	83 c4 08	 add	 esp, 8
$LN184@LoadAttach:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 333  : 		if (!rTextFileLoader.GetTokenInteger("isattaching", &rAttachingData.isAttaching))

  002d1	84 db		 test	 bl, bl
  002d3	0f 85 5b 03 00
	00		 jne	 $LN381@LoadAttach
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  002d9	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T10[ebp], 0

; 2521 :         assign(_Ptr);

  002e0	8d 4d d8	 lea	 ecx, DWORD PTR $T10[ebp]
  002e3	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@HAHPJOBE@attachingmodelindex@

; 4596 :         _My_data._Mysize = 0;

  002e8	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T10[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  002ef	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T10[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  002f6	88 5d d8	 mov	 BYTE PTR $T10[ebp], bl

; 2521 :         assign(_Ptr);

  002f9	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 335  : 		if (!rTextFileLoader.GetTokenDoubleWord("attachingmodelindex", &rAttachingData.dwAttachingModelIndex))

  002fe	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  00301	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  00308	50		 push	 eax
  00309	8d 45 d8	 lea	 eax, DWORD PTR $T10[ebp]
  0030c	8b ce		 mov	 ecx, esi
  0030e	50		 push	 eax
  0030f	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00314	8b 55 ec	 mov	 edx, DWORD PTR $T10[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 335  : 		if (!rTextFileLoader.GetTokenDoubleWord("attachingmodelindex", &rAttachingData.dwAttachingModelIndex))

  00317	85 c0		 test	 eax, eax
  00319	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00320	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00323	83 fa 10	 cmp	 edx, 16			; 00000010H
  00326	72 2c		 jb	 SHORT $LN223@LoadAttach
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00328	8b 4d d8	 mov	 ecx, DWORD PTR $T10[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0032b	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0032c	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0032e	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00334	72 14		 jb	 SHORT $LN233@LoadAttach

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00336	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00339	83 c2 23	 add	 edx, 35			; 00000023H
  0033c	2b c1		 sub	 eax, ecx

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0033e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00341	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00344	0f 87 08 03 00
	00		 ja	 $LN113@LoadAttach
$LN233@LoadAttach:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0034a	52		 push	 edx
  0034b	51		 push	 ecx
  0034c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00351	83 c4 08	 add	 esp, 8
$LN223@LoadAttach:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 335  : 		if (!rTextFileLoader.GetTokenDoubleWord("attachingmodelindex", &rAttachingData.dwAttachingModelIndex))

  00354	84 db		 test	 bl, bl
  00356	0f 85 d8 02 00
	00		 jne	 $LN381@LoadAttach
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0035c	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T9[ebp], 0

; 2521 :         assign(_Ptr);

  00363	8d 4d d8	 lea	 ecx, DWORD PTR $T9[ebp]
  00366	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@FCIOLNPK@attachingbonename@

; 4596 :         _My_data._Mysize = 0;

  0036b	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T9[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00372	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T9[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00379	88 5d d8	 mov	 BYTE PTR $T9[ebp], bl

; 2521 :         assign(_Ptr);

  0037c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 337  : 		if (!rTextFileLoader.GetTokenString("attachingbonename", &rAttachingData.strAttachingBoneName))

  00381	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  00384	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
  0038b	50		 push	 eax
  0038c	8d 45 d8	 lea	 eax, DWORD PTR $T9[ebp]
  0038f	8b ce		 mov	 ecx, esi
  00391	50		 push	 eax
  00392	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00397	8b 55 ec	 mov	 edx, DWORD PTR $T9[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 337  : 		if (!rTextFileLoader.GetTokenString("attachingbonename", &rAttachingData.strAttachingBoneName))

  0039a	85 c0		 test	 eax, eax
  0039c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  003a3	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  003a6	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  003a9	72 2c		 jb	 SHORT $LN262@LoadAttach
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  003ab	8b 4d d8	 mov	 ecx, DWORD PTR $T9[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  003ae	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  003af	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  003b1	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  003b7	72 14		 jb	 SHORT $LN272@LoadAttach

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  003b9	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  003bc	83 c2 23	 add	 edx, 35			; 00000023H
  003bf	2b c1		 sub	 eax, ecx

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  003c1	83 c0 fc	 add	 eax, -4			; fffffffcH
  003c4	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  003c7	0f 87 85 02 00
	00		 ja	 $LN113@LoadAttach
$LN272@LoadAttach:

; 264  :         ::operator delete(_Ptr, _Bytes);

  003cd	52		 push	 edx
  003ce	51		 push	 ecx
  003cf	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  003d4	83 c4 08	 add	 esp, 8
$LN262@LoadAttach:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 337  : 		if (!rTextFileLoader.GetTokenString("attachingbonename", &rAttachingData.strAttachingBoneName))

  003d7	84 db		 test	 bl, bl
  003d9	0f 85 55 02 00
	00		 jne	 $LN381@LoadAttach

; 338  : 			return false;
; 339  : 
; 340  : 		switch (rAttachingData.dwType)

  003df	8b 07		 mov	 eax, DWORD PTR [edi]
  003e1	83 e8 01	 sub	 eax, 1
  003e4	0f 84 89 01 00
	00		 je	 $LN13@LoadAttach
  003ea	83 e8 01	 sub	 eax, 1
  003ed	0f 84 c4 00 00
	00		 je	 $LN15@LoadAttach
  003f3	83 e8 01	 sub	 eax, 1
  003f6	0f 85 0d 02 00
	00		 jne	 $LN14@LoadAttach
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1544 :         return _My_data._Myfirst == _My_data._Mylast;

  003fc	a1 14 00 00 00	 mov	 eax, DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+20
  00401	39 05 10 00 00
	00		 cmp	 DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+16, eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  00407	0f 85 8d 00 00
	00		 jne	 $LN339@LoadAttach

; 65   : 				T* pkNewData=new T;

  0040d	6a 1c		 push	 28			; 0000001cH
  0040f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00414	8b f0		 mov	 esi, eax
  00416	83 c4 04	 add	 esp, 4
  00419	89 75 d4	 mov	 DWORD PTR $T3[ebp], esi
  0041c	85 f6		 test	 esi, esi
  0041e	74 20		 je	 SHORT $LN341@LoadAttach
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h

; 137  : 		SAttachingObjectData() {}

  00420	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SAttachingObjectData@NRaceData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00426	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 4596 :         _My_data._Mysize = 0;

  0042d	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00434	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0043b	88 5e 04	 mov	 BYTE PTR [esi+4], bl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  0043e	eb 02		 jmp	 SHORT $LN342@LoadAttach
$LN341@LoadAttach:
  00440	33 f6		 xor	 esi, esi
$LN342@LoadAttach:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00442	a1 08 00 00 00	 mov	 eax, DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  00447	89 75 d4	 mov	 DWORD PTR _pkNewData$4[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0044a	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+12
  00450	74 21		 je	 SHORT $LN364@LoadAttach

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00452	89 30		 mov	 DWORD PTR [eax], esi

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  00454	83 05 08 00 00
	00 04		 add	 DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+8, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  0045b	ff 05 20 00 00
	00		 inc	 DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+32
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 353  : 				rAttachingData.pObjectData = g_ObjectDataPool.Alloc();

  00461	89 77 2c	 mov	 DWORD PTR [edi+44], esi

; 354  : 				if (!NRaceData::LoadObjectData(rTextFileLoader, rAttachingData.pObjectData))

  00464	56		 push	 esi
  00465	8b 75 cc	 mov	 esi, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  00468	56		 push	 esi
  00469	e8 00 00 00 00	 call	 ?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z ; NRaceData::LoadObjectData
  0046e	e9 8f 01 00 00	 jmp	 $LN390@LoadAttach
$LN364@LoadAttach:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00473	8d 4d d4	 lea	 ecx, DWORD PTR _pkNewData$4[ebp]
  00476	51		 push	 ecx
  00477	50		 push	 eax
  00478	b9 04 00 00 00	 mov	 ecx, OFFSET ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+4
  0047d	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAUSAttachingObjectData@NRaceData@@@?$vector@PAUSAttachingObjectData@NRaceData@@V?$allocator@PAUSAttachingObjectData@NRaceData@@@std@@@std@@QAEPAPAUSAttachingObjectData@NRaceData@@QAPAU23@ABQAU23@@Z ; std::vector<NRaceData::SAttachingObjectData *,std::allocator<NRaceData::SAttachingObjectData *> >::_Emplace_reallocate<NRaceData::SAttachingObjectData * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  00482	ff 05 20 00 00
	00		 inc	 DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+32
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 353  : 				rAttachingData.pObjectData = g_ObjectDataPool.Alloc();

  00488	89 77 2c	 mov	 DWORD PTR [edi+44], esi

; 354  : 				if (!NRaceData::LoadObjectData(rTextFileLoader, rAttachingData.pObjectData))

  0048b	56		 push	 esi
  0048c	8b 75 cc	 mov	 esi, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  0048f	56		 push	 esi
  00490	e8 00 00 00 00	 call	 ?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z ; NRaceData::LoadObjectData
  00495	e9 68 01 00 00	 jmp	 $LN390@LoadAttach
$LN339@LoadAttach:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  0049a	8b 70 fc	 mov	 esi, DWORD PTR [eax-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1624 :         return _My_data._Mylast[-1];

  0049d	83 c0 fc	 add	 eax, -4			; fffffffcH

; 1403 :         --_Mylast;

  004a0	a3 14 00 00 00	 mov	 DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+20, eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 353  : 				rAttachingData.pObjectData = g_ObjectDataPool.Alloc();

  004a5	89 77 2c	 mov	 DWORD PTR [edi+44], esi

; 354  : 				if (!NRaceData::LoadObjectData(rTextFileLoader, rAttachingData.pObjectData))

  004a8	56		 push	 esi
  004a9	8b 75 cc	 mov	 esi, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  004ac	56		 push	 esi
  004ad	e8 00 00 00 00	 call	 ?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z ; NRaceData::LoadObjectData
  004b2	e9 4b 01 00 00	 jmp	 $LN390@LoadAttach
$LN15@LoadAttach:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1544 :         return _My_data._Myfirst == _My_data._Mylast;

  004b7	a1 14 00 00 00	 mov	 eax, DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+20
  004bc	39 05 10 00 00
	00		 cmp	 DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+16, eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  004c2	0f 85 8e 00 00
	00		 jne	 $LN305@LoadAttach

; 65   : 				T* pkNewData=new T;

  004c8	6a 34		 push	 52			; 00000034H
  004ca	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  004cf	8b f0		 mov	 esi, eax
  004d1	83 c4 04	 add	 esp, 4
  004d4	89 75 d4	 mov	 DWORD PTR $T5[ebp], esi
  004d7	85 f6		 test	 esi, esi
  004d9	74 21		 je	 SHORT $LN307@LoadAttach
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h

; 129  : 		SAttachingEffectData() {}

  004db	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SAttachingEffectData@NRaceData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  004e1	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 4596 :         _My_data._Mysize = 0;

  004e8	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  004ef	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  004f6	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  004fa	eb 02		 jmp	 SHORT $LN308@LoadAttach
$LN307@LoadAttach:
  004fc	33 f6		 xor	 esi, esi
$LN308@LoadAttach:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  004fe	a1 08 00 00 00	 mov	 eax, DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  00503	89 75 d4	 mov	 DWORD PTR _pkNewData$6[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00506	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+12
  0050c	74 21		 je	 SHORT $LN330@LoadAttach

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0050e	89 30		 mov	 DWORD PTR [eax], esi

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  00510	83 05 08 00 00
	00 04		 add	 DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+8, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  00517	ff 05 20 00 00
	00		 inc	 DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+32
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 348  : 				rAttachingData.pEffectData = g_EffectDataPool.Alloc();

  0051d	89 77 28	 mov	 DWORD PTR [edi+40], esi

; 349  : 				if (!NRaceData::LoadEffectData(rTextFileLoader, rAttachingData.pEffectData))

  00520	56		 push	 esi
  00521	8b 75 cc	 mov	 esi, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  00524	56		 push	 esi
  00525	e8 00 00 00 00	 call	 ?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z ; NRaceData::LoadEffectData

; 350  : 					return false;
; 351  : 				break;

  0052a	e9 d3 00 00 00	 jmp	 $LN390@LoadAttach
$LN330@LoadAttach:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0052f	8d 4d d4	 lea	 ecx, DWORD PTR _pkNewData$6[ebp]
  00532	51		 push	 ecx
  00533	50		 push	 eax
  00534	b9 04 00 00 00	 mov	 ecx, OFFSET ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+4
  00539	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAUSAttachingEffectData@NRaceData@@@?$vector@PAUSAttachingEffectData@NRaceData@@V?$allocator@PAUSAttachingEffectData@NRaceData@@@std@@@std@@QAEPAPAUSAttachingEffectData@NRaceData@@QAPAU23@ABQAU23@@Z ; std::vector<NRaceData::SAttachingEffectData *,std::allocator<NRaceData::SAttachingEffectData *> >::_Emplace_reallocate<NRaceData::SAttachingEffectData * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  0053e	ff 05 20 00 00
	00		 inc	 DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+32
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 348  : 				rAttachingData.pEffectData = g_EffectDataPool.Alloc();

  00544	89 77 28	 mov	 DWORD PTR [edi+40], esi

; 349  : 				if (!NRaceData::LoadEffectData(rTextFileLoader, rAttachingData.pEffectData))

  00547	56		 push	 esi
  00548	8b 75 cc	 mov	 esi, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  0054b	56		 push	 esi
  0054c	e8 00 00 00 00	 call	 ?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z ; NRaceData::LoadEffectData

; 350  : 					return false;
; 351  : 				break;

  00551	e9 ac 00 00 00	 jmp	 $LN390@LoadAttach
$LN305@LoadAttach:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  00556	8b 70 fc	 mov	 esi, DWORD PTR [eax-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1624 :         return _My_data._Mylast[-1];

  00559	83 c0 fc	 add	 eax, -4			; fffffffcH

; 1403 :         --_Mylast;

  0055c	a3 14 00 00 00	 mov	 DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+20, eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 348  : 				rAttachingData.pEffectData = g_EffectDataPool.Alloc();

  00561	89 77 28	 mov	 DWORD PTR [edi+40], esi

; 349  : 				if (!NRaceData::LoadEffectData(rTextFileLoader, rAttachingData.pEffectData))

  00564	56		 push	 esi
  00565	8b 75 cc	 mov	 esi, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  00568	56		 push	 esi
  00569	e8 00 00 00 00	 call	 ?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z ; NRaceData::LoadEffectData

; 350  : 					return false;
; 351  : 				break;

  0056e	e9 8f 00 00 00	 jmp	 $LN390@LoadAttach
$LN13@LoadAttach:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1544 :         return _My_data._Myfirst == _My_data._Mylast;

  00573	a1 14 00 00 00	 mov	 eax, DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+20
  00578	39 05 10 00 00
	00		 cmp	 DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+16, eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  0057e	75 6a		 jne	 SHORT $LN278@LoadAttach

; 65   : 				T* pkNewData=new T;

  00580	6a 14		 push	 20			; 00000014H
  00582	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00587	8b f0		 mov	 esi, eax
  00589	83 c4 04	 add	 esp, 4
  0058c	89 75 d4	 mov	 DWORD PTR $T7[ebp], esi
  0058f	85 f6		 test	 esi, esi
  00591	74 1d		 je	 SHORT $LN280@LoadAttach
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h

; 119  : 		SCollisionData() {}

  00593	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SCollisionData@NRaceData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00599	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  005a0	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  005a7	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  005ae	eb 02		 jmp	 SHORT $LN281@LoadAttach
$LN280@LoadAttach:
  005b0	33 f6		 xor	 esi, esi
$LN281@LoadAttach:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  005b2	a1 08 00 00 00	 mov	 eax, DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  005b7	89 75 d4	 mov	 DWORD PTR _pkNewData$8[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  005ba	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+12
  005c0	74 11		 je	 SHORT $LN296@LoadAttach

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  005c2	89 30		 mov	 DWORD PTR [eax], esi

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  005c4	83 05 08 00 00
	00 04		 add	 DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+8, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  005cb	ff 05 20 00 00
	00		 inc	 DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+32

; 68   : 				return pkNewData;

  005d1	eb 22		 jmp	 SHORT $LN277@LoadAttach
$LN296@LoadAttach:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  005d3	8d 4d d4	 lea	 ecx, DWORD PTR _pkNewData$8[ebp]
  005d6	51		 push	 ecx
  005d7	50		 push	 eax
  005d8	b9 04 00 00 00	 mov	 ecx, OFFSET ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+4
  005dd	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAUSCollisionData@NRaceData@@@?$vector@PAUSCollisionData@NRaceData@@V?$allocator@PAUSCollisionData@NRaceData@@@std@@@std@@QAEPAPAUSCollisionData@NRaceData@@QAPAU23@ABQAU23@@Z ; std::vector<NRaceData::SCollisionData *,std::allocator<NRaceData::SCollisionData *> >::_Emplace_reallocate<NRaceData::SCollisionData * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  005e2	ff 05 20 00 00
	00		 inc	 DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+32

; 68   : 				return pkNewData;

  005e8	eb 0b		 jmp	 SHORT $LN277@LoadAttach
$LN278@LoadAttach:

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  005ea	8b 70 fc	 mov	 esi, DWORD PTR [eax-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1624 :         return _My_data._Mylast[-1];

  005ed	83 c0 fc	 add	 eax, -4			; fffffffcH

; 1403 :         --_Mylast;

  005f0	a3 14 00 00 00	 mov	 DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+20, eax
$LN277@LoadAttach:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 343  : 				rAttachingData.pCollisionData = g_CollisionDataPool.Alloc();

  005f5	89 77 24	 mov	 DWORD PTR [edi+36], esi

; 344  : 				if (!NRaceData::LoadCollisionData(rTextFileLoader, rAttachingData.pCollisionData))

  005f8	56		 push	 esi
  005f9	8b 75 cc	 mov	 esi, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  005fc	56		 push	 esi
  005fd	e8 00 00 00 00	 call	 ?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z ; NRaceData::LoadCollisionData
$LN390@LoadAttach:

; 355  : 					return false;
; 356  : 				break;
; 357  : 		}
; 358  : 
; 359  : 		rTextFileLoader.SetParentNode();

  00602	83 c4 08	 add	 esp, 8
  00605	85 c0		 test	 eax, eax
  00607	74 2b		 je	 SHORT $LN381@LoadAttach
$LN14@LoadAttach:
  00609	8b ce		 mov	 ecx, esi
  0060b	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
  00610	8b 5d c0	 mov	 ebx, DWORD PTR _i$1$[ebp]
  00613	8b 7d c4	 mov	 edi, DWORD PTR tv2164[ebp]
  00616	43		 inc	 ebx
  00617	83 c7 30	 add	 edi, 48			; 00000030H
  0061a	89 5d c0	 mov	 DWORD PTR _i$1$[ebp], ebx
  0061d	89 7d c4	 mov	 DWORD PTR tv2164[ebp], edi
  00620	3b 5d c8	 cmp	 ebx, DWORD PTR _dwDataCount$[ebp]
  00623	73 08		 jae	 SHORT $LN3@LoadAttach

; 324  : 	for (DWORD i = 0; i < dwDataCount; ++i)

  00625	8b 45 d0	 mov	 eax, DWORD PTR _pAttachingDataVector$GSCopy$1$[ebp]
  00628	e9 03 fb ff ff	 jmp	 $LL4@LoadAttach
$LN3@LoadAttach:

; 360  : 	}
; 361  : 	return TRUE;

  0062d	b8 01 00 00 00	 mov	 eax, 1
  00632	eb 02		 jmp	 SHORT $LN1@LoadAttach
$LN381@LoadAttach:

; 345  : 					return false;

  00634	33 c0		 xor	 eax, eax
$LN1@LoadAttach:

; 362  : }

  00636	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00639	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00640	59		 pop	 ecx
  00641	5f		 pop	 edi
  00642	5e		 pop	 esi
  00643	5b		 pop	 ebx
  00644	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00647	33 cd		 xor	 ecx, ebp
  00649	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0064e	8b e5		 mov	 esp, ebp
  00650	5d		 pop	 ebp
  00651	c3		 ret	 0
$LN113@LoadAttach:
  00652	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN373@LoadAttach:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1585 :             _Xrange();

  00657	e8 00 00 00 00	 call	 ?_Xrange@?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@CAXXZ ; std::vector<NRaceData::SAttachingData,std::allocator<NRaceData::SAttachingData> >::_Xrange
$LN387@LoadAttach:
  0065c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T14[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T13[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$2:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR $T12[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$3:
  00018	8d 4d d8	 lea	 ecx, DWORD PTR $T11[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$4:
  00020	8d 4d d8	 lea	 ecx, DWORD PTR $T10[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z$5:
  00028	8d 4d d8	 lea	 ecx, DWORD PTR $T9[ebp]
  0002b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00030	cc		 int	 3
  00031	cc		 int	 3
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
__ehhandler$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z:
  00035	90		 npad	 1
  00036	90		 npad	 1
  00037	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003e	8b 4a bc	 mov	 ecx, DWORD PTR [edx-68]
  00041	33 c8		 xor	 ecx, eax
  00043	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00048	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0004b	33 c8		 xor	 ecx, eax
  0004d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00052	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z
  00057	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadAttachingData@NRaceData@@YAHAAVCTextFileLoader@@PAV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z ENDP ; NRaceData::LoadAttachingData
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
;	COMDAT ?SaveAttachingData@NRaceData@@YAXPAU_iobuf@@HABV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z
_TEXT	SEGMENT
_dwAttachingDataCount$1$ = -16				; size = 4
tv288 = -12						; size = 4
tv286 = -8						; size = 4
_i$1$ = -4						; size = 4
_File$ = 8						; size = 4
_iTabCount$ = 12					; size = 4
_c_rAttachingDataVector$ = 16				; size = 4
?SaveAttachingData@NRaceData@@YAXPAU_iobuf@@HABV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z PROC ; NRaceData::SaveAttachingData, COMDAT

; 274  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00006	8b 45 10	 mov	 eax, DWORD PTR _c_rAttachingDataVector$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 274  : {

  00009	53		 push	 ebx

; 277  : 	PrintfTabs(File, iTabCount, "AttachingDataCount       %d\n", dwAttachingDataCount);

  0000a	8b 5d 0c	 mov	 ebx, DWORD PTR _iTabCount$[ebp]
  0000d	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0000e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00011	2b 08		 sub	 ecx, DWORD PTR [eax]
  00013	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 277  : 	PrintfTabs(File, iTabCount, "AttachingDataCount       %d\n", dwAttachingDataCount);

  00018	8b 75 08	 mov	 esi, DWORD PTR _File$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0001b	f7 e9		 imul	 ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 274  : {

  0001d	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0001e	c1 fa 03	 sar	 edx, 3
  00021	8b fa		 mov	 edi, edx
  00023	c1 ef 1f	 shr	 edi, 31			; 0000001fH
  00026	03 fa		 add	 edi, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 277  : 	PrintfTabs(File, iTabCount, "AttachingDataCount       %d\n", dwAttachingDataCount);

  00028	57		 push	 edi
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@MFLPMEFJ@AttachingDataCount?5?5?5?5?5?5?5?$CFd?6@
  0002e	53		 push	 ebx
  0002f	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00030	89 7d f0	 mov	 DWORD PTR _dwAttachingDataCount$1$[ebp], edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 277  : 	PrintfTabs(File, iTabCount, "AttachingDataCount       %d\n", dwAttachingDataCount);

  00033	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 278  : 	PrintfTabs(File, iTabCount, "\n");

  00038	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  0003d	53		 push	 ebx
  0003e	56		 push	 esi
  0003f	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 279  : 
; 280  : 	for (DWORD i = 0; i < dwAttachingDataCount; ++i)

  00044	33 c0		 xor	 eax, eax
  00046	83 c4 1c	 add	 esp, 28			; 0000001cH
  00049	89 45 fc	 mov	 DWORD PTR _i$1$[ebp], eax
  0004c	85 ff		 test	 edi, edi
  0004e	0f 84 17 01 00
	00		 je	 $LN3@SaveAttach
  00054	8d 57 ff	 lea	 edx, DWORD PTR [edi-1]
  00057	8b cb		 mov	 ecx, ebx
  00059	89 55 f4	 mov	 DWORD PTR tv288[ebp], edx
  0005c	33 d2		 xor	 edx, edx
  0005e	89 55 f8	 mov	 DWORD PTR tv286[ebp], edx
  00061	8d 59 01	 lea	 ebx, DWORD PTR [ecx+1]
$LL4@SaveAttach:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1579 :         return _My_data._Myfirst[_Pos];

  00064	8b 7d 10	 mov	 edi, DWORD PTR _c_rAttachingDataVector$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 284  : 		PrintfTabs(File, iTabCount, "Group AttachingData%02d\n", i);

  00067	50		 push	 eax
  00068	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DLPFDMOE@Group?5AttachingData?$CF02d?6@
  0006d	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1579 :         return _My_data._Myfirst[_Pos];

  0006e	8b 3f		 mov	 edi, DWORD PTR [edi]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 284  : 		PrintfTabs(File, iTabCount, "Group AttachingData%02d\n", i);

  00070	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1579 :         return _My_data._Myfirst[_Pos];

  00071	03 fa		 add	 edi, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 284  : 		PrintfTabs(File, iTabCount, "Group AttachingData%02d\n", i);

  00073	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 285  : 		PrintfTabs(File, iTabCount, "{\n", i);

  00078	ff 75 fc	 push	 DWORD PTR _i$1$[ebp]
  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_02KCPFEJNG@?$HL?6@
  00080	ff 75 0c	 push	 DWORD PTR _iTabCount$[ebp]
  00083	56		 push	 esi
  00084	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 286  : 
; 287  : 		PrintfTabs(File, iTabCount+1, "AttachingDataType    %d\n", c_rAttachingData.dwType);

  00089	ff 37		 push	 DWORD PTR [edi]
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@IOEHDAIG@AttachingDataType?5?5?5?5?$CFd?6@
  00090	53		 push	 ebx
  00091	56		 push	 esi
  00092	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 288  : 		PrintfTabs(File, iTabCount+1, "\n", i);

  00097	ff 75 fc	 push	 DWORD PTR _i$1$[ebp]
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  0009f	53		 push	 ebx
  000a0	56		 push	 esi
  000a1	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  000a6	83 c4 40	 add	 esp, 64			; 00000040H

; 289  : 
; 290  : 		PrintfTabs(File, iTabCount+1, "isAttaching          %d\n", c_rAttachingData.isAttaching);

  000a9	ff 77 04	 push	 DWORD PTR [edi+4]
  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@CHCKAAIO@isAttaching?5?5?5?5?5?5?5?5?5?5?$CFd?6@
  000b1	53		 push	 ebx
  000b2	56		 push	 esi
  000b3	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 291  : 		PrintfTabs(File, iTabCount+1, "AttachingModelIndex  %d\n", c_rAttachingData.dwAttachingModelIndex);

  000b8	ff 77 08	 push	 DWORD PTR [edi+8]
  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@HNFALFHA@AttachingModelIndex?5?5?$CFd?6@
  000c0	53		 push	 ebx
  000c1	56		 push	 esi
  000c2	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3922 :         return _Mypair._Myval2._Myptr();

  000c7	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 291  : 		PrintfTabs(File, iTabCount+1, "AttachingModelIndex  %d\n", c_rAttachingData.dwAttachingModelIndex);

  000ca	83 c4 20	 add	 esp, 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  000cd	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2306 :         if (_Large_string_engaged()) {

  000d1	72 02		 jb	 SHORT $LN19@SaveAttach

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  000d3	8b 00		 mov	 eax, DWORD PTR [eax]
$LN19@SaveAttach:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 292  : 		PrintfTabs(File, iTabCount+1, "AttachingBoneName    \"%s\"\n", c_rAttachingData.strAttachingBoneName.c_str());

  000d5	50		 push	 eax
  000d6	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@PLABIPOF@AttachingBoneName?5?5?5?5?$CC?$CFs?$CC?6@
  000db	53		 push	 ebx
  000dc	56		 push	 esi
  000dd	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 293  : 		PrintfTabs(File, iTabCount+1, "\n");

  000e2	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  000e7	53		 push	 ebx
  000e8	56		 push	 esi
  000e9	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 294  : 
; 295  : 		switch (c_rAttachingData.dwType)

  000ee	8b 07		 mov	 eax, DWORD PTR [edi]
  000f0	83 c4 1c	 add	 esp, 28			; 0000001cH
  000f3	83 e8 01	 sub	 eax, 1
  000f6	74 22		 je	 SHORT $LN7@SaveAttach
  000f8	83 e8 01	 sub	 eax, 1
  000fb	74 11		 je	 SHORT $LN8@SaveAttach
  000fd	83 e8 01	 sub	 eax, 1
  00100	75 25		 jne	 SHORT $LN5@SaveAttach

; 303  : 			case NRaceData::ATTACHING_DATA_TYPE_OBJECT:
; 304  : 				NRaceData::SaveObjectData(File, iTabCount+1, *c_rAttachingData.pObjectData);

  00102	ff 77 2c	 push	 DWORD PTR [edi+44]
  00105	53		 push	 ebx
  00106	56		 push	 esi
  00107	e8 00 00 00 00	 call	 ?SaveObjectData@NRaceData@@YAXPAU_iobuf@@HABUSAttachingObjectData@1@@Z ; NRaceData::SaveObjectData
  0010c	eb 16		 jmp	 SHORT $LN27@SaveAttach
$LN8@SaveAttach:

; 299  : 				break;
; 300  : 			case NRaceData::ATTACHING_DATA_TYPE_EFFECT:
; 301  : 				NRaceData::SaveEffectData(File, iTabCount+1, *c_rAttachingData.pEffectData);

  0010e	ff 77 28	 push	 DWORD PTR [edi+40]
  00111	53		 push	 ebx
  00112	56		 push	 esi
  00113	e8 00 00 00 00	 call	 ?SaveEffectData@NRaceData@@YAXPAU_iobuf@@HABUSAttachingEffectData@1@@Z ; NRaceData::SaveEffectData

; 302  : 				break;

  00118	eb 0a		 jmp	 SHORT $LN27@SaveAttach
$LN7@SaveAttach:

; 296  : 		{
; 297  : 			case NRaceData::ATTACHING_DATA_TYPE_COLLISION_DATA:
; 298  : 				NRaceData::SaveCollisionData(File, iTabCount+1, *c_rAttachingData.pCollisionData);

  0011a	ff 77 24	 push	 DWORD PTR [edi+36]
  0011d	53		 push	 ebx
  0011e	56		 push	 esi
  0011f	e8 00 00 00 00	 call	 ?SaveCollisionData@NRaceData@@YAXPAU_iobuf@@HABUSCollisionData@1@@Z ; NRaceData::SaveCollisionData
$LN27@SaveAttach:

; 305  : 				break;
; 306  : 		}
; 307  : 
; 308  : 		PrintfTabs(File, iTabCount, "}\n");

  00124	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@SaveAttach:
  00127	8b 7d 0c	 mov	 edi, DWORD PTR _iTabCount$[ebp]
  0012a	68 00 00 00 00	 push	 OFFSET ??_C@_02KGHIDFGE@?$HN?6@
  0012f	57		 push	 edi
  00130	56		 push	 esi
  00131	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 309  : 
; 310  : 		if (i != dwAttachingDataCount-1)

  00136	8b 45 fc	 mov	 eax, DWORD PTR _i$1$[ebp]
  00139	83 c4 0c	 add	 esp, 12			; 0000000cH
  0013c	3b 45 f4	 cmp	 eax, DWORD PTR tv288[ebp]
  0013f	74 12		 je	 SHORT $LN2@SaveAttach

; 311  : 			PrintfTabs(File, iTabCount, "\n");

  00141	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  00146	57		 push	 edi
  00147	56		 push	 esi
  00148	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  0014d	8b 45 fc	 mov	 eax, DWORD PTR _i$1$[ebp]
  00150	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@SaveAttach:

; 279  : 
; 280  : 	for (DWORD i = 0; i < dwAttachingDataCount; ++i)

  00153	8b 55 f8	 mov	 edx, DWORD PTR tv286[ebp]
  00156	40		 inc	 eax
  00157	83 c2 30	 add	 edx, 48			; 00000030H
  0015a	89 45 fc	 mov	 DWORD PTR _i$1$[ebp], eax
  0015d	8b cf		 mov	 ecx, edi
  0015f	89 55 f8	 mov	 DWORD PTR tv286[ebp], edx
  00162	3b 45 f0	 cmp	 eax, DWORD PTR _dwAttachingDataCount$1$[ebp]
  00165	0f 82 f9 fe ff
	ff		 jb	 $LL4@SaveAttach
$LN3@SaveAttach:
  0016b	5f		 pop	 edi

; 312  : 	}
; 313  : }

  0016c	5e		 pop	 esi
  0016d	5b		 pop	 ebx
  0016e	8b e5		 mov	 esp, ebp
  00170	5d		 pop	 ebp
  00171	c3		 ret	 0
?SaveAttachingData@NRaceData@@YAXPAU_iobuf@@HABV?$vector@USAttachingData@NRaceData@@V?$allocator@USAttachingData@NRaceData@@@std@@@std@@@Z ENDP ; NRaceData::SaveAttachingData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
;	COMDAT ?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z
_TEXT	SEGMENT
$T2 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
_pObjectData$ = 12					; size = 4
?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z PROC ; NRaceData::LoadObjectData, COMDAT

; 189  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b 7d 08	 mov	 edi, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2521 :         assign(_Ptr);

  0002e	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 189  : {

  00031	8b 75 0c	 mov	 esi, DWORD PTR _pObjectData$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00034	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 2521 :         assign(_Ptr);

  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@EJILMNLC@objectscriptname@

; 4596 :         _My_data._Mysize = 0;

  00040	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00047	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0004e	c6 45 d8 00	 mov	 BYTE PTR $T2[ebp], 0

; 2521 :         assign(_Ptr);

  00052	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 190  : 	if (!rTextFileLoader.GetTokenString("objectscriptname",&pObjectData->strFileName))

  00057	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00061	50		 push	 eax
  00062	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  00065	8b cf		 mov	 ecx, edi
  00067	50		 push	 eax
  00068	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  0006d	8b 55 ec	 mov	 edx, DWORD PTR $T2[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 190  : 	if (!rTextFileLoader.GetTokenString("objectscriptname",&pObjectData->strFileName))

  00070	85 c0		 test	 eax, eax
  00072	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00075	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00078	72 28		 jb	 SHORT $LN29@LoadObject
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	8b 4d d8	 mov	 ecx, DWORD PTR $T2[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0007d	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007e	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00080	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00086	72 10		 jb	 SHORT $LN39@LoadObject

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00088	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0008b	83 c2 23	 add	 edx, 35			; 00000023H
  0008e	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00090	83 c0 fc	 add	 eax, -4			; fffffffcH
  00093	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00096	77 2d		 ja	 SHORT $LN48@LoadObject
$LN39@LoadObject:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00098	52		 push	 edx
  00099	51		 push	 ecx
  0009a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0009f	83 c4 08	 add	 esp, 8
$LN29@LoadObject:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 190  : 	if (!rTextFileLoader.GetTokenString("objectscriptname",&pObjectData->strFileName))

  000a2	33 c0		 xor	 eax, eax
  000a4	84 db		 test	 bl, bl
  000a6	0f 94 c0	 sete	 al

; 194  : }

  000a9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ac	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b3	59		 pop	 ecx
  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
  000b6	5b		 pop	 ebx
  000b7	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ba	33 cd		 xor	 ecx, ebp
  000bc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c3		 ret	 0
$LN48@LoadObject:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c5	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN46@LoadObject:
  000ca	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadObjectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingObjectData@1@@Z ENDP ; NRaceData::LoadObjectData
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
;	COMDAT ?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z
_TEXT	SEGMENT
$T2 = -112						; size = 12
$T3 = -112						; size = 12
_rTextFileLoader$GSCopy$1$ = -100			; size = 4
_pEffectData$GSCopy$1$ = -96				; size = 4
tv767 = -89						; size = 1
tv765 = -89						; size = 1
tv763 = -89						; size = 1
$T4 = -88						; size = 24
tv772 = -64						; size = 16
$T5 = -64						; size = 24
$T6 = -64						; size = 24
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
_pEffectData$ = 12					; size = 4
?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z PROC ; NRaceData::LoadEffectData, COMDAT

; 165  : {

  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	6a ff		 push	 -1
  00018	68 00 00 00 00	 push	 __ehhandler$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z
  0001d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00023	50		 push	 eax
  00024	53		 push	 ebx
  00025	83 ec 68	 sub	 esp, 104		; 00000068H
  00028	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002d	33 c5		 xor	 eax, ebp
  0002f	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00032	56		 push	 esi
  00033	57		 push	 edi
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	8b 7b 08	 mov	 edi, DWORD PTR _rTextFileLoader$[ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2521 :         assign(_Ptr);

  00041	8d 4d c0	 lea	 ecx, DWORD PTR $T6[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 165  : {

  00044	8b 73 0c	 mov	 esi, DWORD PTR _pEffectData$[ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00047	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR $T6[ebp], 0

; 2521 :         assign(_Ptr);

  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@OKGDPHII@effectscriptname@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 165  : {

  00053	89 7d 9c	 mov	 DWORD PTR _rTextFileLoader$GSCopy$1$[ebp], edi
  00056	89 75 a0	 mov	 DWORD PTR _pEffectData$GSCopy$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4596 :         _My_data._Mysize = 0;

  00059	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T6[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00060	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00067	c6 45 c0 00	 mov	 BYTE PTR $T6[ebp], 0

; 2521 :         assign(_Ptr);

  0006b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 166  : 	if (!rTextFileLoader.GetTokenString("effectscriptname",&pEffectData->strFileName))

  00070	83 c6 04	 add	 esi, 4
  00073	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0007a	56		 push	 esi
  0007b	8d 45 c0	 lea	 eax, DWORD PTR $T6[ebp]
  0007e	8b cf		 mov	 ecx, edi
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00086	8b 55 d4	 mov	 edx, DWORD PTR $T6[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 166  : 	if (!rTextFileLoader.GetTokenString("effectscriptname",&pEffectData->strFileName))

  00089	85 c0		 test	 eax, eax
  0008b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00092	0f 94 c0	 sete	 al
  00095	88 45 a7	 mov	 BYTE PTR tv767[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00098	83 fa 10	 cmp	 edx, 16			; 00000010H
  0009b	72 2f		 jb	 SHORT $LN33@LoadEffect
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0009d	8b 4d c0	 mov	 ecx, DWORD PTR $T6[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000a0	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a1	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000a3	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  000a9	72 14		 jb	 SHORT $LN43@LoadEffect

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000ab	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  000ae	83 c2 23	 add	 edx, 35			; 00000023H
  000b1	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000b3	83 c0 fc	 add	 eax, -4			; fffffffcH
  000b6	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000b9	0f 87 af 01 00
	00		 ja	 $LN141@LoadEffect
$LN43@LoadEffect:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000bf	52		 push	 edx
  000c0	51		 push	 ecx
  000c1	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000c6	8a 45 a7	 mov	 al, BYTE PTR tv767[ebp]
  000c9	83 c4 08	 add	 esp, 8
$LN33@LoadEffect:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 166  : 	if (!rTextFileLoader.GetTokenString("effectscriptname",&pEffectData->strFileName))

  000cc	84 c0		 test	 al, al
  000ce	74 07		 je	 SHORT $LN2@LoadEffect

; 167  : 		return false;

  000d0	33 c0		 xor	 eax, eax
  000d2	e9 79 01 00 00	 jmp	 $LN1@LoadEffect
$LN2@LoadEffect:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  000d7	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR $T5[ebp], 0

; 2521 :         assign(_Ptr);

  000de	8d 4d c0	 lea	 ecx, DWORD PTR $T5[ebp]
  000e1	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PMGDNJPL@effectposition@

; 4596 :         _My_data._Mysize = 0;

  000e6	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  000ed	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000f4	c6 45 c0 00	 mov	 BYTE PTR $T5[ebp], 0

; 2521 :         assign(_Ptr);

  000f8	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 169  : 	if (!rTextFileLoader.GetTokenPosition("effectposition",&pEffectData->v3Position))

  000fd	8b 7d a0	 mov	 edi, DWORD PTR _pEffectData$GSCopy$1$[ebp]
  00100	8d 45 c0	 lea	 eax, DWORD PTR $T5[ebp]
  00103	8b 4d 9c	 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  00106	83 c7 1c	 add	 edi, 28			; 0000001cH
  00109	57		 push	 edi
  0010a	50		 push	 eax
  0010b	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00112	e8 00 00 00 00	 call	 ?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenPosition
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00117	8b 55 d4	 mov	 edx, DWORD PTR $T5[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 169  : 	if (!rTextFileLoader.GetTokenPosition("effectposition",&pEffectData->v3Position))

  0011a	85 c0		 test	 eax, eax
  0011c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00123	0f 94 c0	 sete	 al
  00126	88 45 a7	 mov	 BYTE PTR tv765[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00129	83 fa 10	 cmp	 edx, 16			; 00000010H
  0012c	72 2f		 jb	 SHORT $LN73@LoadEffect
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0012e	8b 4d c0	 mov	 ecx, DWORD PTR $T5[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00131	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00132	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00134	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0013a	72 14		 jb	 SHORT $LN83@LoadEffect

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0013c	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0013f	83 c2 23	 add	 edx, 35			; 00000023H
  00142	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00144	83 c0 fc	 add	 eax, -4			; fffffffcH
  00147	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0014a	0f 87 23 01 00
	00		 ja	 $LN142@LoadEffect
$LN83@LoadEffect:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00150	52		 push	 edx
  00151	51		 push	 ecx
  00152	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00157	8a 45 a7	 mov	 al, BYTE PTR tv765[ebp]
  0015a	83 c4 08	 add	 esp, 8
$LN73@LoadEffect:
  0015d	0f 57 c9	 xorps	 xmm1, xmm1
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 169  : 	if (!rTextFileLoader.GetTokenPosition("effectposition",&pEffectData->v3Position))

  00160	0f 29 4d c0	 movaps	 XMMWORD PTR tv772[ebp], xmm1
  00164	84 c0		 test	 al, al
  00166	74 17		 je	 SHORT $LN3@LoadEffect
  00168	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0016b	c7 45 98 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 171  : 		pEffectData->v3Position = D3DXVECTOR3(0.0f,0.0f,0.0f);

  00172	8b 45 98	 mov	 eax, DWORD PTR $T3[ebp+8]
  00175	0f 14 c1	 unpcklps xmm0, xmm1
  00178	66 0f d6 07	 movq	 QWORD PTR [edi], xmm0
  0017c	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN3@LoadEffect:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0017f	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR $T4[ebp], 0

; 2521 :         assign(_Ptr);

  00186	8d 4d a8	 lea	 ecx, DWORD PTR $T4[ebp]
  00189	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PLGBENJO@effectrotation@

; 4596 :         _My_data._Mysize = 0;

  0018e	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00195	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0019c	c6 45 a8 00	 mov	 BYTE PTR $T4[ebp], 0

; 2521 :         assign(_Ptr);

  001a0	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 174  : 	if (!rTextFileLoader.GetTokenPosition("effectrotation",&pEffectData->v3Rotation))

  001a5	8b 7d a0	 mov	 edi, DWORD PTR _pEffectData$GSCopy$1$[ebp]
  001a8	8d 45 a8	 lea	 eax, DWORD PTR $T4[ebp]
  001ab	8b 4d 9c	 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  001ae	83 c7 28	 add	 edi, 40			; 00000028H
  001b1	57		 push	 edi
  001b2	50		 push	 eax
  001b3	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  001ba	e8 00 00 00 00	 call	 ?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenPosition
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  001bf	8b 55 bc	 mov	 edx, DWORD PTR $T4[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 174  : 	if (!rTextFileLoader.GetTokenPosition("effectrotation",&pEffectData->v3Rotation))

  001c2	85 c0		 test	 eax, eax
  001c4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001cb	0f 94 c0	 sete	 al
  001ce	88 45 a7	 mov	 BYTE PTR tv763[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  001d1	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001d4	72 2f		 jb	 SHORT $LN114@LoadEffect
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001d6	8b 4d a8	 mov	 ecx, DWORD PTR $T4[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001d9	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001da	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  001dc	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  001e2	72 14		 jb	 SHORT $LN124@LoadEffect

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  001e4	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  001e7	83 c2 23	 add	 edx, 35			; 00000023H
  001ea	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001ec	83 c0 fc	 add	 eax, -4			; fffffffcH
  001ef	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  001f2	0f 87 80 00 00
	00		 ja	 $LN143@LoadEffect
$LN124@LoadEffect:

; 264  :         ::operator delete(_Ptr, _Bytes);

  001f8	52		 push	 edx
  001f9	51		 push	 ecx
  001fa	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  001ff	8a 45 a7	 mov	 al, BYTE PTR tv763[ebp]
  00202	83 c4 08	 add	 esp, 8
$LN114@LoadEffect:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00205	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0020c	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00213	c6 45 a8 00	 mov	 BYTE PTR $T4[ebp], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 174  : 	if (!rTextFileLoader.GetTokenPosition("effectrotation",&pEffectData->v3Rotation))

  00217	84 c0		 test	 al, al
  00219	74 18		 je	 SHORT $LN4@LoadEffect

; 177  : 		pEffectData->v3Rotation = D3DXVECTOR3(0.0f,0.0f,0.0f);

  0021b	0f 28 45 c0	 movaps	 xmm0, XMMWORD PTR tv772[ebp]
  0021f	0f 14 c0	 unpcklps xmm0, xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00222	c7 45 98 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 177  : 		pEffectData->v3Rotation = D3DXVECTOR3(0.0f,0.0f,0.0f);

  00229	8b 45 98	 mov	 eax, DWORD PTR $T2[ebp+8]
  0022c	66 0f d6 07	 movq	 QWORD PTR [edi], xmm0
  00230	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN4@LoadEffect:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00233	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2306 :         if (_Large_string_engaged()) {

  00237	72 02		 jb	 SHORT $LN134@LoadEffect

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00239	8b 36		 mov	 esi, DWORD PTR [esi]
$LN134@LoadEffect:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 182  : 	CEffectManager::Instance().RegisterEffect(pEffectData->strFileName.c_str());

  0023b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  00241	6a 00		 push	 0
  00243	6a 00		 push	 0
  00245	56		 push	 esi
  00246	e8 00 00 00 00	 call	 ?RegisterEffect@CEffectManager@@QAEHPBD_N1@Z ; CEffectManager::RegisterEffect

; 183  : 	/*) return false;*/
; 184  : 
; 185  : 	return true;

  0024b	b8 01 00 00 00	 mov	 eax, 1
$LN1@LoadEffect:

; 186  : }

  00250	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00253	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0025a	59		 pop	 ecx
  0025b	5f		 pop	 edi
  0025c	5e		 pop	 esi
  0025d	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00260	33 cd		 xor	 ecx, ebp
  00262	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00267	8b e5		 mov	 esp, ebp
  00269	5d		 pop	 ebp
  0026a	8b e3		 mov	 esp, ebx
  0026c	5b		 pop	 ebx
  0026d	c3		 ret	 0
$LN141@LoadEffect:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0026e	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN142@LoadEffect:
  00273	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN143@LoadEffect:
  00278	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN139@LoadEffect:
  0027d	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z$0:
  00000	8d 4d c0	 lea	 ecx, DWORD PTR $T6[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z$1:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR $T5[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z$2:
  00010	8d 4d a8	 lea	 ecx, DWORD PTR $T4[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
__ehhandler$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z:
  0001d	90		 npad	 1
  0001e	90		 npad	 1
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 4a 88	 mov	 ecx, DWORD PTR [edx-120]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00033	33 c8		 xor	 ecx, eax
  00035	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z
  0003f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadEffectData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttachingEffectData@1@@Z ENDP ; NRaceData::LoadEffectData
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
;	COMDAT ?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z
_TEXT	SEGMENT
_r$1$ = -80						; size = 4
$T2 = -80						; size = 1
_dwSphereDataCount$ = -76				; size = 4
__My_data$1$ = -72					; size = 4
tv1224 = -65						; size = 1
tv1223 = -65						; size = 1
tv1221 = -65						; size = 1
tv1220 = -65						; size = 1
tv1219 = -65						; size = 1
$T3 = -64						; size = 24
$T4 = -40						; size = 24
$T5 = -40						; size = 24
$T6 = -40						; size = 24
$T7 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
_pCollisionData$ = 12					; size = 4
?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z PROC ; NRaceData::LoadCollisionData, COMDAT

; 123  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b 5d 08	 mov	 ebx, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2521 :         assign(_Ptr);

  0002e	8d 4d d8	 lea	 ecx, DWORD PTR $T7[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 123  : {

  00031	8b 75 0c	 mov	 esi, DWORD PTR _pCollisionData$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00034	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T7[ebp], 0

; 2521 :         assign(_Ptr);

  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0O@LCILGBGA@collisiontype@

; 4596 :         _My_data._Mysize = 0;

  00040	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T7[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00047	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T7[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0004e	c6 45 d8 00	 mov	 BYTE PTR $T7[ebp], 0

; 2521 :         assign(_Ptr);

  00052	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 124  : 	if (!rTextFileLoader.GetTokenInteger("collisiontype", &pCollisionData->iCollisionType))

  00057	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00061	50		 push	 eax
  00062	8d 45 d8	 lea	 eax, DWORD PTR $T7[ebp]
  00065	8b cb		 mov	 ecx, ebx
  00067	50		 push	 eax
  00068	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0006d	8b 55 ec	 mov	 edx, DWORD PTR $T7[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 124  : 	if (!rTextFileLoader.GetTokenInteger("collisiontype", &pCollisionData->iCollisionType))

  00070	85 c0		 test	 eax, eax
  00072	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00079	0f 94 c0	 sete	 al
  0007c	88 45 bf	 mov	 BYTE PTR tv1224[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0007f	83 fa 10	 cmp	 edx, 16			; 00000010H
  00082	72 2f		 jb	 SHORT $LN40@LoadCollis
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00084	8b 4d d8	 mov	 ecx, DWORD PTR $T7[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00087	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00088	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0008a	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00090	72 14		 jb	 SHORT $LN50@LoadCollis

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00092	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00095	83 c2 23	 add	 edx, 35			; 00000023H
  00098	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0009a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0009d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a0	0f 87 ed 02 00
	00		 ja	 $LN135@LoadCollis
$LN50@LoadCollis:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a6	52		 push	 edx
  000a7	51		 push	 ecx
  000a8	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000ad	8a 45 bf	 mov	 al, BYTE PTR tv1224[ebp]
  000b0	83 c4 08	 add	 esp, 8
$LN40@LoadCollis:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 124  : 	if (!rTextFileLoader.GetTokenInteger("collisiontype", &pCollisionData->iCollisionType))

  000b3	84 c0		 test	 al, al
  000b5	0f 85 ba 02 00
	00		 jne	 $LN224@LoadCollis
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  000bb	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T6[ebp], 0

; 2521 :         assign(_Ptr);

  000c2	8d 4d d8	 lea	 ecx, DWORD PTR $T6[ebp]
  000c5	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@PACKMKGG@spheredatacount@

; 4596 :         _My_data._Mysize = 0;

  000ca	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T6[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  000d1	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000d8	88 45 d8	 mov	 BYTE PTR $T6[ebp], al

; 2521 :         assign(_Ptr);

  000db	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 128  : 	if (!rTextFileLoader.GetTokenDoubleWord("spheredatacount", &dwSphereDataCount))

  000e0	8d 45 b4	 lea	 eax, DWORD PTR _dwSphereDataCount$[ebp]
  000e3	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000ea	50		 push	 eax
  000eb	8d 45 d8	 lea	 eax, DWORD PTR $T6[ebp]
  000ee	8b cb		 mov	 ecx, ebx
  000f0	50		 push	 eax
  000f1	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000f6	8b 55 ec	 mov	 edx, DWORD PTR $T6[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 128  : 	if (!rTextFileLoader.GetTokenDoubleWord("spheredatacount", &dwSphereDataCount))

  000f9	85 c0		 test	 eax, eax
  000fb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00102	0f 94 c0	 sete	 al
  00105	88 45 bf	 mov	 BYTE PTR tv1223[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00108	83 fa 10	 cmp	 edx, 16			; 00000010H
  0010b	72 2f		 jb	 SHORT $LN80@LoadCollis
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0010d	8b 4d d8	 mov	 ecx, DWORD PTR $T6[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00110	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00111	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00113	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00119	72 14		 jb	 SHORT $LN90@LoadCollis

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0011b	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0011e	83 c2 23	 add	 edx, 35			; 00000023H
  00121	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00123	83 c0 fc	 add	 eax, -4			; fffffffcH
  00126	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00129	0f 87 69 02 00
	00		 ja	 $LN233@LoadCollis
$LN90@LoadCollis:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0012f	52		 push	 edx
  00130	51		 push	 ecx
  00131	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00136	8a 45 bf	 mov	 al, BYTE PTR tv1223[ebp]
  00139	83 c4 08	 add	 esp, 8
$LN80@LoadCollis:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 128  : 	if (!rTextFileLoader.GetTokenDoubleWord("spheredatacount", &dwSphereDataCount))

  0013c	84 c0		 test	 al, al
  0013e	0f 85 31 02 00
	00		 jne	 $LN224@LoadCollis
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1272 :         if (_Newsize > _Oldsize) { // append

  00144	8b 7d b4	 mov	 edi, DWORD PTR _dwSphereDataCount$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 131  : 	pCollisionData->SphereDataVector.clear();

  00147	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  0014a	8b 30		 mov	 esi, DWORD PTR [eax]
  0014c	89 45 b8	 mov	 DWORD PTR __My_data$1$[ebp], eax
  0014f	89 70 04	 mov	 DWORD PTR [eax+4], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1272 :         if (_Newsize > _Oldsize) { // append

  00152	85 ff		 test	 edi, edi
  00154	74 43		 je	 SHORT $LN99@LoadCollis

; 1273 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  00156	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00159	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0015e	2b ce		 sub	 ecx, esi
  00160	f7 e9		 imul	 ecx
  00162	c1 fa 03	 sar	 edx, 3
  00165	8b c2		 mov	 eax, edx
  00167	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0016a	03 c2		 add	 eax, edx

; 1274 :             if (_Newsize > _Oldcapacity) { // reallocate

  0016c	3b f8		 cmp	 edi, eax
  0016e	76 12		 jbe	 SHORT $LN100@LoadCollis

; 1275 :                 _Resize_reallocate(_Newsize, _Val);

  00170	8b 4d b8	 mov	 ecx, DWORD PTR __My_data$1$[ebp]
  00173	8d 45 b0	 lea	 eax, DWORD PTR $T2[ebp]
  00176	50		 push	 eax
  00177	57		 push	 edi
  00178	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::_Resize_reallocate<std::_Value_init_tag>

; 1276 :                 return;

  0017d	8b 45 b8	 mov	 eax, DWORD PTR __My_data$1$[ebp]
  00180	eb 14		 jmp	 SHORT $LN231@LoadCollis
$LN100@LoadCollis:

; 1277 :             }
; 1278 : 
; 1279 :             const pointer _Oldlast = _Mylast;
; 1280 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  00182	ff 75 b0	 push	 DWORD PTR $T2[ebp]
  00185	57		 push	 edi
  00186	56		 push	 esi
  00187	8b 75 b8	 mov	 esi, DWORD PTR __My_data$1$[ebp]
  0018a	8b ce		 mov	 ecx, esi
  0018c	e8 00 00 00 00	 call	 ?_Ufill@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@AAEPAVCSphereCollisionInstance@@PAV3@IU_Value_init_tag@2@@Z ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::_Ufill
  00191	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00194	8b c6		 mov	 eax, esi
$LN231@LoadCollis:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 133  : 	for (DWORD i = 0; i < dwSphereDataCount; ++i)

  00196	8b 7d b4	 mov	 edi, DWORD PTR _dwSphereDataCount$[ebp]
$LN99@LoadCollis:
  00199	33 f6		 xor	 esi, esi
  0019b	85 ff		 test	 edi, edi
  0019d	0f 84 cb 01 00
	00		 je	 $LN3@LoadCollis
  001a3	33 ff		 xor	 edi, edi
$LL4@LoadCollis:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  001a5	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a7	03 cf		 add	 ecx, edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 135  : 		TSphereData & r = pCollisionData->SphereDataVector[i].GetAttribute();

  001a9	e8 00 00 00 00	 call	 ?GetAttribute@CSphereCollisionInstance@@QAEAAUSSphereData@@XZ ; CSphereCollisionInstance::GetAttribute
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  001ae	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T5[ebp], 0

; 2521 :         assign(_Ptr);

  001b5	8d 4d d8	 lea	 ecx, DWORD PTR $T5[ebp]
  001b8	68 00 00 00 00	 push	 OFFSET ??_C@_0L@JJLJPGHA@spheredata@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 135  : 		TSphereData & r = pCollisionData->SphereDataVector[i].GetAttribute();

  001bd	89 45 b0	 mov	 DWORD PTR _r$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4596 :         _My_data._Mysize = 0;

  001c0	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  001c7	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  001ce	c6 45 d8 00	 mov	 BYTE PTR $T5[ebp], 0

; 2521 :         assign(_Ptr);

  001d2	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 137  : 		if (!rTextFileLoader.SetChildNode("spheredata", i))

  001d7	56		 push	 esi
  001d8	8d 45 d8	 lea	 eax, DWORD PTR $T5[ebp]
  001db	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  001e2	50		 push	 eax
  001e3	8b cb		 mov	 ecx, ebx
  001e5	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; CTextFileLoader::SetChildNode
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001ea	8b 55 ec	 mov	 edx, DWORD PTR $T5[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 137  : 		if (!rTextFileLoader.SetChildNode("spheredata", i))

  001ed	85 c0		 test	 eax, eax
  001ef	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001f6	0f 94 c0	 sete	 al
  001f9	88 45 bf	 mov	 BYTE PTR tv1221[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001fc	83 fa 10	 cmp	 edx, 16			; 00000010H
  001ff	72 2f		 jb	 SHORT $LN128@LoadCollis
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00201	8b 4d d8	 mov	 ecx, DWORD PTR $T5[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00204	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00205	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00207	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0020d	72 14		 jb	 SHORT $LN138@LoadCollis

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0020f	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00212	83 c2 23	 add	 edx, 35			; 00000023H
  00215	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00217	83 c0 fc	 add	 eax, -4			; fffffffcH
  0021a	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0021d	0f 87 70 01 00
	00		 ja	 $LN135@LoadCollis
$LN138@LoadCollis:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00223	52		 push	 edx
  00224	51		 push	 ecx
  00225	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0022a	8a 45 bf	 mov	 al, BYTE PTR tv1221[ebp]
  0022d	83 c4 08	 add	 esp, 8
$LN128@LoadCollis:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 137  : 		if (!rTextFileLoader.SetChildNode("spheredata", i))

  00230	84 c0		 test	 al, al
  00232	0f 85 3d 01 00
	00		 jne	 $LN224@LoadCollis
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00238	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T4[ebp], 0

; 2521 :         assign(_Ptr);

  0023f	8d 4d d8	 lea	 ecx, DWORD PTR $T4[ebp]
  00242	68 00 00 00 00	 push	 OFFSET ??_C@_06KGHINEPG@radius@

; 4596 :         _My_data._Mysize = 0;

  00247	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0024e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00255	88 45 d8	 mov	 BYTE PTR $T4[ebp], al

; 2521 :         assign(_Ptr);

  00258	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 140  : 		if (!rTextFileLoader.GetTokenFloat("radius", &r.fRadius))

  0025d	8b 45 b0	 mov	 eax, DWORD PTR _r$1$[ebp]
  00260	8b cb		 mov	 ecx, ebx
  00262	83 c0 0c	 add	 eax, 12			; 0000000cH
  00265	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  0026c	50		 push	 eax
  0026d	8d 45 d8	 lea	 eax, DWORD PTR $T4[ebp]
  00270	50		 push	 eax
  00271	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00276	8b 55 ec	 mov	 edx, DWORD PTR $T4[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 140  : 		if (!rTextFileLoader.GetTokenFloat("radius", &r.fRadius))

  00279	85 c0		 test	 eax, eax
  0027b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00282	0f 94 c0	 sete	 al
  00285	88 45 bf	 mov	 BYTE PTR tv1220[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00288	83 fa 10	 cmp	 edx, 16			; 00000010H
  0028b	72 2f		 jb	 SHORT $LN167@LoadCollis
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0028d	8b 4d d8	 mov	 ecx, DWORD PTR $T4[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00290	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00291	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00293	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00299	72 14		 jb	 SHORT $LN177@LoadCollis

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0029b	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0029e	83 c2 23	 add	 edx, 35			; 00000023H
  002a1	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  002a3	83 c0 fc	 add	 eax, -4			; fffffffcH
  002a6	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  002a9	0f 87 e4 00 00
	00		 ja	 $LN135@LoadCollis
$LN177@LoadCollis:

; 264  :         ::operator delete(_Ptr, _Bytes);

  002af	52		 push	 edx
  002b0	51		 push	 ecx
  002b1	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  002b6	8a 45 bf	 mov	 al, BYTE PTR tv1220[ebp]
  002b9	83 c4 08	 add	 esp, 8
$LN167@LoadCollis:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 140  : 		if (!rTextFileLoader.GetTokenFloat("radius", &r.fRadius))

  002bc	84 c0		 test	 al, al
  002be	0f 85 b1 00 00
	00		 jne	 $LN224@LoadCollis
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  002c4	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR $T3[ebp], 0

; 2521 :         assign(_Ptr);

  002cb	8d 4d c0	 lea	 ecx, DWORD PTR $T3[ebp]
  002ce	68 00 00 00 00	 push	 OFFSET ??_C@_08OAGMDKAF@position@

; 4596 :         _My_data._Mysize = 0;

  002d3	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  002da	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  002e1	88 45 c0	 mov	 BYTE PTR $T3[ebp], al

; 2521 :         assign(_Ptr);

  002e4	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 142  : 		if (!rTextFileLoader.GetTokenPosition("position", &r.v3Position))

  002e9	ff 75 b0	 push	 DWORD PTR _r$1$[ebp]
  002ec	8d 45 c0	 lea	 eax, DWORD PTR $T3[ebp]
  002ef	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  002f6	50		 push	 eax
  002f7	8b cb		 mov	 ecx, ebx
  002f9	e8 00 00 00 00	 call	 ?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenPosition
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  002fe	8b 55 d4	 mov	 edx, DWORD PTR $T3[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 142  : 		if (!rTextFileLoader.GetTokenPosition("position", &r.v3Position))

  00301	85 c0		 test	 eax, eax
  00303	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0030a	0f 94 c0	 sete	 al
  0030d	88 45 bf	 mov	 BYTE PTR tv1219[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00310	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00313	72 2b		 jb	 SHORT $LN206@LoadCollis
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00315	8b 4d c0	 mov	 ecx, DWORD PTR $T3[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00318	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00319	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0031b	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00321	72 10		 jb	 SHORT $LN216@LoadCollis

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00323	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00326	83 c2 23	 add	 edx, 35			; 00000023H
  00329	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0032b	83 c0 fc	 add	 eax, -4			; fffffffcH
  0032e	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00331	77 60		 ja	 SHORT $LN135@LoadCollis
$LN216@LoadCollis:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00333	52		 push	 edx
  00334	51		 push	 ecx
  00335	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0033a	8a 45 bf	 mov	 al, BYTE PTR tv1219[ebp]
  0033d	83 c4 08	 add	 esp, 8
$LN206@LoadCollis:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00340	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00347	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0034e	c6 45 c0 00	 mov	 BYTE PTR $T3[ebp], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 142  : 		if (!rTextFileLoader.GetTokenPosition("position", &r.v3Position))

  00352	84 c0		 test	 al, al
  00354	75 1f		 jne	 SHORT $LN224@LoadCollis

; 144  : 
; 145  : 		rTextFileLoader.SetParentNode();

  00356	8b cb		 mov	 ecx, ebx
  00358	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
  0035d	46		 inc	 esi
  0035e	83 c7 14	 add	 edi, 20			; 00000014H
  00361	3b 75 b4	 cmp	 esi, DWORD PTR _dwSphereDataCount$[ebp]
  00364	73 08		 jae	 SHORT $LN3@LoadCollis

; 133  : 	for (DWORD i = 0; i < dwSphereDataCount; ++i)

  00366	8b 45 b8	 mov	 eax, DWORD PTR __My_data$1$[ebp]
  00369	e9 37 fe ff ff	 jmp	 $LL4@LoadCollis
$LN3@LoadCollis:

; 146  : 	}
; 147  : 
; 148  : 	return true;

  0036e	b8 01 00 00 00	 mov	 eax, 1
  00373	eb 02		 jmp	 SHORT $LN1@LoadCollis
$LN224@LoadCollis:

; 143  : 			return false;

  00375	33 c0		 xor	 eax, eax
$LN1@LoadCollis:

; 149  : }

  00377	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0037a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00381	59		 pop	 ecx
  00382	5f		 pop	 edi
  00383	5e		 pop	 esi
  00384	5b		 pop	 ebx
  00385	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00388	33 cd		 xor	 ecx, ebp
  0038a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0038f	8b e5		 mov	 esp, ebp
  00391	5d		 pop	 ebp
  00392	c3		 ret	 0
$LN135@LoadCollis:
  00393	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN233@LoadCollis:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00398	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN230@LoadCollis:
  0039d	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T7[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T6[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z$2:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR $T5[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z$3:
  00018	8d 4d d8	 lea	 ecx, DWORD PTR $T4[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z$4:
  00020	8d 4d c0	 lea	 ecx, DWORD PTR $T3[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00028	cc		 int	 3
  00029	cc		 int	 3
  0002a	cc		 int	 3
  0002b	cc		 int	 3
  0002c	cc		 int	 3
__ehhandler$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z:
  0002d	90		 npad	 1
  0002e	90		 npad	 1
  0002f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00033	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00036	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00039	33 c8		 xor	 ecx, eax
  0003b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00040	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00043	33 c8		 xor	 ecx, eax
  00045	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z
  0004f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z ENDP ; NRaceData::LoadCollisionData
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
;	COMDAT ?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z
_TEXT	SEGMENT
_rTextFileLoader$GSCopy$1$ = -76			; size = 4
_dwHitDataCount$ = -72					; size = 4
_pData$GSCopy$1$ = -68					; size = 4
tv1419 = -61						; size = 1
tv1418 = -61						; size = 1
tv1416 = -61						; size = 1
$T2 = -60						; size = 44
$T3 = -60						; size = 44
$T4 = -40						; size = 24
$T5 = -40						; size = 24
$T6 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
_pData$ = 12						; size = 4
?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z PROC ; NRaceData::LoadMotionAttackData, COMDAT

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b 7d 0c	 mov	 edi, DWORD PTR _pData$[ebp]
  0002e	8b 5d 08	 mov	 ebx, DWORD PTR _rTextFileLoader$[ebp]

; 82   : 	if (!LoadAttackData(rTextFileLoader, pData))

  00031	57		 push	 edi
  00032	53		 push	 ebx
  00033	89 5d b4	 mov	 DWORD PTR _rTextFileLoader$GSCopy$1$[ebp], ebx
  00036	89 7d bc	 mov	 DWORD PTR _pData$GSCopy$1$[ebp], edi
  00039	e8 00 00 00 00	 call	 ?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z ; NRaceData::LoadAttackData
  0003e	83 c4 08	 add	 esp, 8
  00041	85 c0		 test	 eax, eax
  00043	0f 84 24 02 00
	00		 je	 $LN285@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00049	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T6[ebp], 0

; 2521 :         assign(_Ptr);

  00050	8d 4d d8	 lea	 ecx, DWORD PTR $T6[ebp]
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0L@FECBOPBF@motiontype@

; 4596 :         _My_data._Mysize = 0;

  00058	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T6[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0005f	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00066	c6 45 d8 00	 mov	 BYTE PTR $T6[ebp], 0

; 2521 :         assign(_Ptr);

  0006a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 87   : 	if (!rTextFileLoader.GetTokenInteger("motiontype", &pData->iMotionType))

  0006f	8d 77 18	 lea	 esi, DWORD PTR [edi+24]
  00072	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00079	56		 push	 esi
  0007a	8d 45 d8	 lea	 eax, DWORD PTR $T6[ebp]
  0007d	8b cb		 mov	 ecx, ebx
  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00085	8b 55 ec	 mov	 edx, DWORD PTR $T6[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 87   : 	if (!rTextFileLoader.GetTokenInteger("motiontype", &pData->iMotionType))

  00088	85 c0		 test	 eax, eax
  0008a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00091	0f 94 c0	 sete	 al
  00094	88 45 c3	 mov	 BYTE PTR tv1419[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00097	83 fa 10	 cmp	 edx, 16			; 00000010H
  0009a	72 2f		 jb	 SHORT $LN43@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0009c	8b 4d d8	 mov	 ecx, DWORD PTR $T6[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0009f	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a0	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000a2	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  000a8	72 14		 jb	 SHORT $LN53@LoadMotion

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000aa	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  000ad	83 c2 23	 add	 edx, 35			; 00000023H
  000b0	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000b2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000b5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000b8	0f 87 ea 02 00
	00		 ja	 $LN257@LoadMotion
$LN53@LoadMotion:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000be	52		 push	 edx
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000c5	8a 45 c3	 mov	 al, BYTE PTR tv1419[ebp]
  000c8	83 c4 08	 add	 esp, 8
$LN43@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 87   : 	if (!rTextFileLoader.GetTokenInteger("motiontype", &pData->iMotionType))

  000cb	84 c0		 test	 al, al
  000cd	0f 84 87 00 00
	00		 je	 $LN7@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  000d3	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T5[ebp], 0

; 2521 :         assign(_Ptr);

  000da	8d 4d d8	 lea	 ecx, DWORD PTR $T5[ebp]
  000dd	68 00 00 00 00	 push	 OFFSET ??_C@_0O@EAOJEAGN@attackingtype@

; 4596 :         _My_data._Mysize = 0;

  000e2	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  000e9	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000f0	c6 45 d8 00	 mov	 BYTE PTR $T5[ebp], 0

; 2521 :         assign(_Ptr);

  000f4	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 89   : 		if (!rTextFileLoader.GetTokenInteger("attackingtype", &pData->iMotionType))

  000f9	56		 push	 esi
  000fa	8d 45 d8	 lea	 eax, DWORD PTR $T5[ebp]
  000fd	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00104	50		 push	 eax
  00105	8b cb		 mov	 ecx, ebx
  00107	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0010c	8b 55 ec	 mov	 edx, DWORD PTR $T5[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 89   : 		if (!rTextFileLoader.GetTokenInteger("attackingtype", &pData->iMotionType))

  0010f	85 c0		 test	 eax, eax
  00111	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00118	0f 94 c0	 sete	 al
  0011b	88 45 c3	 mov	 BYTE PTR tv1418[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0011e	83 fa 10	 cmp	 edx, 16			; 00000010H
  00121	72 2f		 jb	 SHORT $LN83@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00123	8b 4d d8	 mov	 ecx, DWORD PTR $T5[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00126	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00127	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00129	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0012f	72 14		 jb	 SHORT $LN93@LoadMotion

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00131	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00134	83 c2 23	 add	 edx, 35			; 00000023H
  00137	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00139	83 c0 fc	 add	 eax, -4			; fffffffcH
  0013c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0013f	0f 87 68 02 00
	00		 ja	 $LN297@LoadMotion
$LN93@LoadMotion:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00145	52		 push	 edx
  00146	51		 push	 ecx
  00147	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0014c	8a 45 c3	 mov	 al, BYTE PTR tv1418[ebp]
  0014f	83 c4 08	 add	 esp, 8
$LN83@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 89   : 		if (!rTextFileLoader.GetTokenInteger("attackingtype", &pData->iMotionType))

  00152	84 c0		 test	 al, al
  00154	0f 85 13 01 00
	00		 jne	 $LN285@LoadMotion
$LN7@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1455 :         _Destroy(_Myfirst, _Mylast);

  0015a	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  0015d	8d 77 1c	 lea	 esi, DWORD PTR [edi+28]
  00160	8b 3e		 mov	 edi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00162	3b f8		 cmp	 edi, eax
  00164	74 15		 je	 SHORT $LN104@LoadMotion
  00166	8b d8		 mov	 ebx, eax
$LL105@LoadMotion:
  00168	8b cf		 mov	 ecx, edi
  0016a	e8 00 00 00 00	 call	 ??1SHitData@NRaceData@@QAE@XZ
  0016f	83 c7 2c	 add	 edi, 44			; 0000002cH
  00172	3b fb		 cmp	 edi, ebx
  00174	75 f2		 jne	 SHORT $LL105@LoadMotion
  00176	8b 3e		 mov	 edi, DWORD PTR [esi]
  00178	8b 5d b4	 mov	 ebx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
$LN104@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0017b	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T4[ebp], 0

; 2521 :         assign(_Ptr);

  00182	8d 4d d8	 lea	 ecx, DWORD PTR $T4[ebp]
  00185	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JENLJGO@hitdatacount@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1456 :         _Mylast = _Myfirst;

  0018a	89 7e 04	 mov	 DWORD PTR [esi+4], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4596 :         _My_data._Mysize = 0;

  0018d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00194	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0019b	c6 45 d8 00	 mov	 BYTE PTR $T4[ebp], 0

; 2521 :         assign(_Ptr);

  0019f	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 96   : 	if (!rTextFileLoader.GetTokenDoubleWord("hitdatacount", &dwHitDataCount))

  001a4	8d 45 b8	 lea	 eax, DWORD PTR _dwHitDataCount$[ebp]
  001a7	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  001ae	50		 push	 eax
  001af	8d 45 d8	 lea	 eax, DWORD PTR $T4[ebp]
  001b2	8b cb		 mov	 ecx, ebx
  001b4	50		 push	 eax
  001b5	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001ba	8b 55 ec	 mov	 edx, DWORD PTR $T4[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 96   : 	if (!rTextFileLoader.GetTokenDoubleWord("hitdatacount", &dwHitDataCount))

  001bd	85 c0		 test	 eax, eax
  001bf	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001c6	0f 94 c0	 sete	 al
  001c9	88 45 c3	 mov	 BYTE PTR tv1416[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001cc	83 fa 10	 cmp	 edx, 16			; 00000010H
  001cf	72 2f		 jb	 SHORT $LN136@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001d1	8b 4d d8	 mov	 ecx, DWORD PTR $T4[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001d4	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001d5	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  001d7	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  001dd	72 14		 jb	 SHORT $LN146@LoadMotion

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  001df	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  001e2	83 c2 23	 add	 edx, 35			; 00000023H
  001e5	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001e7	83 c0 fc	 add	 eax, -4			; fffffffcH
  001ea	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  001ed	0f 87 bf 01 00
	00		 ja	 $LN298@LoadMotion
$LN146@LoadMotion:

; 264  :         ::operator delete(_Ptr, _Bytes);

  001f3	52		 push	 edx
  001f4	51		 push	 ecx
  001f5	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  001fa	8a 45 c3	 mov	 al, BYTE PTR tv1416[ebp]
  001fd	83 c4 08	 add	 esp, 8
$LN136@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 96   : 	if (!rTextFileLoader.GetTokenDoubleWord("hitdatacount", &dwHitDataCount))

  00200	84 c0		 test	 al, al
  00202	0f 84 83 00 00
	00		 je	 $LN8@LoadMotion

; 98   : 		pData->HitDataContainer.push_back(SHitData());

  00208	6a 2c		 push	 44			; 0000002cH
  0020a	8d 45 c4	 lea	 eax, DWORD PTR $T3[ebp]
  0020d	6a 00		 push	 0
  0020f	50		 push	 eax
  00210	e8 00 00 00 00	 call	 _memset
  00215	83 c4 0c	 add	 esp, 12			; 0000000cH
  00218	8d 4d c4	 lea	 ecx, DWORD PTR $T3[ebp]
  0021b	e8 00 00 00 00	 call	 ??0SHitData@NRaceData@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00220	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00223	50		 push	 eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 98   : 		pData->HitDataContainer.push_back(SHitData());

  00224	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0022b	51		 push	 ecx
  0022c	3b 4e 08	 cmp	 ecx, DWORD PTR [esi+8]
  0022f	74 0f		 je	 SHORT $LN154@LoadMotion

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00231	56		 push	 esi
  00232	e8 00 00 00 00	 call	 ??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z ; std::_Default_allocator_traits<std::allocator<NRaceData::SHitData> >::construct<NRaceData::SHitData,NRaceData::SHitData>
  00237	83 c4 0c	 add	 esp, 12			; 0000000cH

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  0023a	83 46 04 2c	 add	 DWORD PTR [esi+4], 44	; 0000002cH

; 744  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0023e	eb 07		 jmp	 SHORT $LN153@LoadMotion
$LN154@LoadMotion:

; 745  :         }
; 746  : 
; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00240	8b ce		 mov	 ecx, esi
  00242	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Emplace_reallocate<NRaceData::SHitData>
$LN153@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 98   : 		pData->HitDataContainer.push_back(SHitData());

  00247	8d 4d c4	 lea	 ecx, DWORD PTR $T3[ebp]
  0024a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00251	e8 00 00 00 00	 call	 ??1SHitData@NRaceData@@QAE@XZ
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility

; 1660 :         : current(_STD move(_Right)) {}

  00256	8b 4d bc	 mov	 ecx, DWORD PTR _pData$GSCopy$1$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 100  : 		if (!rHitData.Load(rTextFileLoader))

  00259	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility

; 1660 :         : current(_STD move(_Right)) {}

  0025a	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 95   :         --_Ptr;

  0025d	8d 49 d4	 lea	 ecx, DWORD PTR [ecx-44]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 100  : 		if (!rHitData.Load(rTextFileLoader))

  00260	e8 00 00 00 00	 call	 ?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z ; NRaceData::SHitData::Load
  00265	84 c0		 test	 al, al
  00267	0f 85 31 01 00
	00		 jne	 $LN3@LoadMotion
$LN285@LoadMotion:

; 113  : 				return FALSE;

  0026d	33 c0		 xor	 eax, eax
$LN1@LoadMotion:

; 120  : }

  0026f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00272	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00279	59		 pop	 ecx
  0027a	5f		 pop	 edi
  0027b	5e		 pop	 esi
  0027c	5b		 pop	 ebx
  0027d	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00280	33 cd		 xor	 ecx, ebp
  00282	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00287	8b e5		 mov	 esp, ebp
  00289	5d		 pop	 ebp
  0028a	c3		 ret	 0
$LN8@LoadMotion:

; 101  : 			return FALSE;
; 102  : 	}
; 103  : 	else
; 104  : 	{
; 105  : 		for (DWORD i = 0; i < dwHitDataCount; ++i)

  0028b	33 ff		 xor	 edi, edi
  0028d	39 7d b8	 cmp	 DWORD PTR _dwHitDataCount$[ebp], edi
  00290	0f 86 08 01 00
	00		 jbe	 $LN3@LoadMotion
$LL4@LoadMotion:

; 106  : 		{
; 107  : 			if (!rTextFileLoader.SetChildNode(i))

  00296	57		 push	 edi
  00297	8b cb		 mov	 ecx, ebx
  00299	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHK@Z ; CTextFileLoader::SetChildNode
  0029e	85 c0		 test	 eax, eax
  002a0	74 cb		 je	 SHORT $LN285@LoadMotion

; 110  : 			pData->HitDataContainer.push_back(SHitData());

  002a2	6a 2c		 push	 44			; 0000002cH
  002a4	8d 45 c4	 lea	 eax, DWORD PTR $T2[ebp]
  002a7	6a 00		 push	 0
  002a9	50		 push	 eax
  002aa	e8 00 00 00 00	 call	 _memset
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  002af	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+12], 0

; 4596 :         _My_data._Mysize = 0;

  002b6	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+28], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  002bd	c7 45 e4 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+32], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  002c4	c6 45 d0 00	 mov	 BYTE PTR $T2[ebp+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 85   :         return ::operator new(_Bytes);

  002c8	6a 30		 push	 48			; 00000030H
  002ca	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 441  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  002d1	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+36], 0
  002d8	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+40], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 85   :         return ::operator new(_Bytes);

  002df	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  002e4	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 350  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  002e7	89 00		 mov	 DWORD PTR [eax], eax

; 351  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  002e9	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 352  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  002ec	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 353  :         _Pnode->_Color = _Black;

  002ef	66 c7 40 0c 01
	01		 mov	 WORD PTR [eax+12], 257	; 00000101H

; 1925 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  002f5	89 45 e8	 mov	 DWORD PTR $T2[ebp+36], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  002f8	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  002fb	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  002fe	51		 push	 ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 110  : 			pData->HitDataContainer.push_back(SHitData());

  002ff	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00306	50		 push	 eax
  00307	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0030a	74 0f		 je	 SHORT $LN226@LoadMotion

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0030c	56		 push	 esi
  0030d	e8 00 00 00 00	 call	 ??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z ; std::_Default_allocator_traits<std::allocator<NRaceData::SHitData> >::construct<NRaceData::SHitData,NRaceData::SHitData>
  00312	83 c4 0c	 add	 esp, 12			; 0000000cH

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  00315	83 46 04 2c	 add	 DWORD PTR [esi+4], 44	; 0000002cH

; 744  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00319	eb 07		 jmp	 SHORT $LN225@LoadMotion
$LN226@LoadMotion:

; 745  :         }
; 746  : 
; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0031b	8b ce		 mov	 ecx, esi
  0031d	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@USHitData@NRaceData@@@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAEPAUSHitData@NRaceData@@QAU23@$$QAU23@@Z ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Emplace_reallocate<NRaceData::SHitData>
$LN225@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 1094 :         _Scary->_Erase_head(_Getal());

  00322	8d 45 e8	 lea	 eax, DWORD PTR $T2[ebp+36]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 110  : 			pData->HitDataContainer.push_back(SHitData());

  00325	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 1094 :         _Scary->_Erase_head(_Getal());

  0032c	50		 push	 eax
  0032d	8b c8		 mov	 ecx, eax
  0032f	e8 00 00 00 00	 call	 ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00334	8b 55 e4	 mov	 edx, DWORD PTR $T2[ebp+32]
  00337	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0033a	72 28		 jb	 SHORT $LN250@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0033c	8b 4d d0	 mov	 ecx, DWORD PTR $T2[ebp+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0033f	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00340	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00342	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00348	72 10		 jb	 SHORT $LN260@LoadMotion

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0034a	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0034d	83 c2 23	 add	 edx, 35			; 00000023H
  00350	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00352	83 c0 fc	 add	 eax, -4			; fffffffcH
  00355	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00358	77 4e		 ja	 SHORT $LN257@LoadMotion
$LN260@LoadMotion:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0035a	52		 push	 edx
  0035b	51		 push	 ecx
  0035c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00361	83 c4 08	 add	 esp, 8
$LN250@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility

; 1660 :         : current(_STD move(_Right)) {}

  00364	8b 45 bc	 mov	 eax, DWORD PTR _pData$GSCopy$1$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 112  : 			if (!rHitData.Load(rTextFileLoader))

  00367	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00368	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+28], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0036f	c7 45 e4 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+32], 15 ; 0000000fH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility

; 1660 :         : current(_STD move(_Right)) {}

  00376	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00379	c6 45 d0 00	 mov	 BYTE PTR $T2[ebp+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 95   :         --_Ptr;

  0037d	8d 49 d4	 lea	 ecx, DWORD PTR [ecx-44]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 112  : 			if (!rHitData.Load(rTextFileLoader))

  00380	e8 00 00 00 00	 call	 ?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z ; NRaceData::SHitData::Load
  00385	84 c0		 test	 al, al
  00387	0f 84 e0 fe ff
	ff		 je	 $LN285@LoadMotion

; 114  : 
; 115  : 			rTextFileLoader.SetParentNode();

  0038d	8b cb		 mov	 ecx, ebx
  0038f	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
  00394	47		 inc	 edi
  00395	3b 7d b8	 cmp	 edi, DWORD PTR _dwHitDataCount$[ebp]
  00398	0f 82 f8 fe ff
	ff		 jb	 $LL4@LoadMotion
$LN3@LoadMotion:

; 116  : 		}
; 117  : 	}
; 118  : 
; 119  : 	return TRUE;

  0039e	b8 01 00 00 00	 mov	 eax, 1
  003a3	e9 c7 fe ff ff	 jmp	 $LN1@LoadMotion
$LN257@LoadMotion:

; 120  : }

  003a8	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN297@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  003ad	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN298@LoadMotion:
  003b2	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN295@LoadMotion:
  003b7	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T6[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T5[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z$2:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR $T4[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z$3:
  00018	8d 4d c4	 lea	 ecx, DWORD PTR $T3[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1SHitData@NRaceData@@QAE@XZ
__unwindfunclet$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z$14:
  00020	8d 4d d0	 lea	 ecx, DWORD PTR $T2[ebp+12]
  00023	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z$4:
  00028	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  0002b	e9 00 00 00 00	 jmp	 ??1SHitData@NRaceData@@QAE@XZ
  00030	cc		 int	 3
  00031	cc		 int	 3
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
__ehhandler$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z:
  00035	90		 npad	 1
  00036	90		 npad	 1
  00037	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003e	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00041	33 c8		 xor	 ecx, eax
  00043	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00048	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0004b	33 c8		 xor	 ecx, eax
  0004d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00052	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z
  00057	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z ENDP ; NRaceData::LoadMotionAttackData
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
;	COMDAT ?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z
_TEXT	SEGMENT
$T2 = -64						; size = 24
$T3 = -40						; size = 24
$T4 = -40						; size = 24
$T5 = -40						; size = 24
$T6 = -40						; size = 24
$T7 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
_pData$ = 12						; size = 4
?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z PROC ; NRaceData::LoadAttackData, COMDAT

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b 7d 08	 mov	 edi, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2521 :         assign(_Ptr);

  0002e	8d 4d d8	 lea	 ecx, DWORD PTR $T7[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 21   : {

  00031	8b 75 0c	 mov	 esi, DWORD PTR _pData$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00034	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T7[ebp], 0

; 2521 :         assign(_Ptr);

  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MFPNOHLP@attacktype@

; 4596 :         _My_data._Mysize = 0;

  00040	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T7[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00047	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T7[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0004e	c6 45 d8 00	 mov	 BYTE PTR $T7[ebp], 0

; 2521 :         assign(_Ptr);

  00052	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 22   : 	if (!rTextFileLoader.GetTokenInteger("attacktype", &pData->iAttackType))

  00057	56		 push	 esi
  00058	8d 45 d8	 lea	 eax, DWORD PTR $T7[ebp]
  0005b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00062	50		 push	 eax
  00063	8b cf		 mov	 ecx, edi
  00065	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0006a	8b 55 ec	 mov	 edx, DWORD PTR $T7[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 22   : 	if (!rTextFileLoader.GetTokenInteger("attacktype", &pData->iAttackType))

  0006d	85 c0		 test	 eax, eax
  0006f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00076	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00079	83 fa 10	 cmp	 edx, 16			; 00000010H
  0007c	72 2c		 jb	 SHORT $LN39@LoadAttack
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007e	8b 4d d8	 mov	 ecx, DWORD PTR $T7[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00081	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00082	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00084	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0008a	72 14		 jb	 SHORT $LN49@LoadAttack

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008c	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0008f	83 c2 23	 add	 edx, 35			; 00000023H
  00092	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00094	83 c0 fc	 add	 eax, -4			; fffffffcH
  00097	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009a	0f 87 c0 02 00
	00		 ja	 $LN254@LoadAttack
$LN49@LoadAttack:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	52		 push	 edx
  000a1	51		 push	 ecx
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000a7	83 c4 08	 add	 esp, 8
$LN39@LoadAttack:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 22   : 	if (!rTextFileLoader.GetTokenInteger("attacktype", &pData->iAttackType))

  000aa	84 db		 test	 bl, bl
  000ac	74 06		 je	 SHORT $LN2@LoadAttack

; 23   : 	{
; 24   : 		pData->iAttackType = ATTACK_TYPE_SPLASH;

  000ae	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN2@LoadAttack:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  000b4	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T6[ebp], 0

; 2521 :         assign(_Ptr);

  000bb	8d 4d d8	 lea	 ecx, DWORD PTR $T6[ebp]
  000be	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IEMCNBIB@hittingtype@

; 4596 :         _My_data._Mysize = 0;

  000c3	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T6[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  000ca	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000d1	c6 45 d8 00	 mov	 BYTE PTR $T6[ebp], 0

; 2521 :         assign(_Ptr);

  000d5	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 26   : 	if (!rTextFileLoader.GetTokenInteger("hittingtype", &pData->iHittingType))

  000da	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000dd	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000e4	50		 push	 eax
  000e5	8d 45 d8	 lea	 eax, DWORD PTR $T6[ebp]
  000e8	8b cf		 mov	 ecx, edi
  000ea	50		 push	 eax
  000eb	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000f0	8b 55 ec	 mov	 edx, DWORD PTR $T6[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 26   : 	if (!rTextFileLoader.GetTokenInteger("hittingtype", &pData->iHittingType))

  000f3	85 c0		 test	 eax, eax
  000f5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000fc	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000ff	83 fa 10	 cmp	 edx, 16			; 00000010H
  00102	72 2c		 jb	 SHORT $LN79@LoadAttack
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00104	8b 4d d8	 mov	 ecx, DWORD PTR $T6[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00107	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00108	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0010a	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00110	72 14		 jb	 SHORT $LN89@LoadAttack

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00112	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00115	83 c2 23	 add	 edx, 35			; 00000023H
  00118	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0011a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0011d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00120	0f 87 3f 02 00
	00		 ja	 $LN255@LoadAttack
$LN89@LoadAttack:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00126	52		 push	 edx
  00127	51		 push	 ecx
  00128	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0012d	83 c4 08	 add	 esp, 8
$LN79@LoadAttack:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 26   : 	if (!rTextFileLoader.GetTokenInteger("hittingtype", &pData->iHittingType))

  00130	84 db		 test	 bl, bl
  00132	0f 85 0a 02 00
	00		 jne	 $LN250@LoadAttack
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00138	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T5[ebp], 0

; 2521 :         assign(_Ptr);

  0013f	8d 4d d8	 lea	 ecx, DWORD PTR $T5[ebp]
  00142	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HEIDABDC@stiffentime@

; 4596 :         _My_data._Mysize = 0;

  00147	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0014e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00155	88 5d d8	 mov	 BYTE PTR $T5[ebp], bl

; 2521 :         assign(_Ptr);

  00158	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 28   : 	if (!rTextFileLoader.GetTokenFloat("stiffentime", &pData->fStiffenTime))

  0015d	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00160	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00167	50		 push	 eax
  00168	8d 45 d8	 lea	 eax, DWORD PTR $T5[ebp]
  0016b	8b cf		 mov	 ecx, edi
  0016d	50		 push	 eax
  0016e	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00173	8b 55 ec	 mov	 edx, DWORD PTR $T5[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 28   : 	if (!rTextFileLoader.GetTokenFloat("stiffentime", &pData->fStiffenTime))

  00176	85 c0		 test	 eax, eax
  00178	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0017f	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00182	83 fa 10	 cmp	 edx, 16			; 00000010H
  00185	72 2c		 jb	 SHORT $LN118@LoadAttack
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00187	8b 4d d8	 mov	 ecx, DWORD PTR $T5[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0018a	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0018b	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0018d	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00193	72 14		 jb	 SHORT $LN128@LoadAttack

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00195	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00198	83 c2 23	 add	 edx, 35			; 00000023H
  0019b	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0019d	83 c0 fc	 add	 eax, -4			; fffffffcH
  001a0	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  001a3	0f 87 c1 01 00
	00		 ja	 $LN256@LoadAttack
$LN128@LoadAttack:

; 264  :         ::operator delete(_Ptr, _Bytes);

  001a9	52		 push	 edx
  001aa	51		 push	 ecx
  001ab	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  001b0	83 c4 08	 add	 esp, 8
$LN118@LoadAttack:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 28   : 	if (!rTextFileLoader.GetTokenFloat("stiffentime", &pData->fStiffenTime))

  001b3	84 db		 test	 bl, bl
  001b5	0f 85 87 01 00
	00		 jne	 $LN250@LoadAttack
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  001bb	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T4[ebp], 0

; 2521 :         assign(_Ptr);

  001c2	8d 4d d8	 lea	 ecx, DWORD PTR $T4[ebp]
  001c5	68 00 00 00 00	 push	 OFFSET ??_C@_0O@GBJCIDNL@invisibletime@

; 4596 :         _My_data._Mysize = 0;

  001ca	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  001d1	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  001d8	88 5d d8	 mov	 BYTE PTR $T4[ebp], bl

; 2521 :         assign(_Ptr);

  001db	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 30   : 	if (!rTextFileLoader.GetTokenFloat("invisibletime", &pData->fInvisibleTime))

  001e0	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  001e3	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  001ea	50		 push	 eax
  001eb	8d 45 d8	 lea	 eax, DWORD PTR $T4[ebp]
  001ee	8b cf		 mov	 ecx, edi
  001f0	50		 push	 eax
  001f1	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001f6	8b 55 ec	 mov	 edx, DWORD PTR $T4[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 30   : 	if (!rTextFileLoader.GetTokenFloat("invisibletime", &pData->fInvisibleTime))

  001f9	85 c0		 test	 eax, eax
  001fb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00202	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00205	83 fa 10	 cmp	 edx, 16			; 00000010H
  00208	72 2c		 jb	 SHORT $LN157@LoadAttack
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0020a	8b 4d d8	 mov	 ecx, DWORD PTR $T4[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0020d	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0020e	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00210	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00216	72 14		 jb	 SHORT $LN167@LoadAttack

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00218	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0021b	83 c2 23	 add	 edx, 35			; 00000023H
  0021e	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00220	83 c0 fc	 add	 eax, -4			; fffffffcH
  00223	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00226	0f 87 43 01 00
	00		 ja	 $LN257@LoadAttack
$LN167@LoadAttack:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0022c	52		 push	 edx
  0022d	51		 push	 ecx
  0022e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00233	83 c4 08	 add	 esp, 8
$LN157@LoadAttack:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 30   : 	if (!rTextFileLoader.GetTokenFloat("invisibletime", &pData->fInvisibleTime))

  00236	84 db		 test	 bl, bl
  00238	0f 85 04 01 00
	00		 jne	 $LN250@LoadAttack
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0023e	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp], 0

; 2521 :         assign(_Ptr);

  00245	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00248	68 00 00 00 00	 push	 OFFSET ??_C@_0O@KAKKEPBE@externalforce@

; 4596 :         _My_data._Mysize = 0;

  0024d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00254	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0025b	88 5d d8	 mov	 BYTE PTR $T3[ebp], bl

; 2521 :         assign(_Ptr);

  0025e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 32   : 	if (!rTextFileLoader.GetTokenFloat("externalforce", &pData->fExternalForce))

  00263	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00266	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  0026d	50		 push	 eax
  0026e	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00271	8b cf		 mov	 ecx, edi
  00273	50		 push	 eax
  00274	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00279	8b 55 ec	 mov	 edx, DWORD PTR $T3[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 32   : 	if (!rTextFileLoader.GetTokenFloat("externalforce", &pData->fExternalForce))

  0027c	85 c0		 test	 eax, eax
  0027e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00285	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00288	83 fa 10	 cmp	 edx, 16			; 00000010H
  0028b	72 2c		 jb	 SHORT $LN196@LoadAttack
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0028d	8b 4d d8	 mov	 ecx, DWORD PTR $T3[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00290	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00291	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00293	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00299	72 14		 jb	 SHORT $LN206@LoadAttack

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0029b	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0029e	83 c2 23	 add	 edx, 35			; 00000023H
  002a1	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  002a3	83 c0 fc	 add	 eax, -4			; fffffffcH
  002a6	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  002a9	0f 87 c5 00 00
	00		 ja	 $LN258@LoadAttack
$LN206@LoadAttack:

; 264  :         ::operator delete(_Ptr, _Bytes);

  002af	52		 push	 edx
  002b0	51		 push	 ecx
  002b1	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  002b6	83 c4 08	 add	 esp, 8
$LN196@LoadAttack:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 32   : 	if (!rTextFileLoader.GetTokenFloat("externalforce", &pData->fExternalForce))

  002b9	84 db		 test	 bl, bl
  002bb	0f 85 81 00 00
	00		 jne	 $LN250@LoadAttack
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  002c1	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 2521 :         assign(_Ptr);

  002c8	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  002cb	68 00 00 00 00	 push	 OFFSET ??_C@_0O@PCIAOIBK@hitlimitcount@

; 4596 :         _My_data._Mysize = 0;

  002d0	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  002d7	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  002de	88 5d c0	 mov	 BYTE PTR $T2[ebp], bl

; 2521 :         assign(_Ptr);

  002e1	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 34   : 	if (!rTextFileLoader.GetTokenInteger("hitlimitcount", &pData->iHitLimitCount))

  002e6	83 c6 14	 add	 esi, 20			; 00000014H
  002e9	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
  002f0	56		 push	 esi
  002f1	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  002f4	8b cf		 mov	 ecx, edi
  002f6	50		 push	 eax
  002f7	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  002fc	8b 55 d4	 mov	 edx, DWORD PTR $T2[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 34   : 	if (!rTextFileLoader.GetTokenInteger("hitlimitcount", &pData->iHitLimitCount))

  002ff	85 c0		 test	 eax, eax
  00301	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00304	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00307	72 28		 jb	 SHORT $LN235@LoadAttack
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00309	8b 4d c0	 mov	 ecx, DWORD PTR $T2[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0030c	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0030d	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0030f	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00315	72 10		 jb	 SHORT $LN245@LoadAttack

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00317	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0031a	83 c2 23	 add	 edx, 35			; 00000023H
  0031d	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0031f	83 c0 fc	 add	 eax, -4			; fffffffcH
  00322	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00325	77 52		 ja	 SHORT $LN259@LoadAttack
$LN245@LoadAttack:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00327	52		 push	 edx
  00328	51		 push	 ecx
  00329	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0032e	83 c4 08	 add	 esp, 8
$LN235@LoadAttack:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 34   : 	if (!rTextFileLoader.GetTokenInteger("hitlimitcount", &pData->iHitLimitCount))

  00331	84 db		 test	 bl, bl
  00333	74 06		 je	 SHORT $LN7@LoadAttack

; 35   : 	{
; 36   : 		pData->iHitLimitCount = 0;

  00335	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN7@LoadAttack:

; 37   : 	}
; 38   : 
; 39   : 	return true;

  0033b	b8 01 00 00 00	 mov	 eax, 1
  00340	eb 02		 jmp	 SHORT $LN1@LoadAttack
$LN250@LoadAttack:

; 33   : 		return false;

  00342	33 c0		 xor	 eax, eax
$LN1@LoadAttack:

; 40   : }

  00344	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00347	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0034e	59		 pop	 ecx
  0034f	5f		 pop	 edi
  00350	5e		 pop	 esi
  00351	5b		 pop	 ebx
  00352	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00355	33 cd		 xor	 ecx, ebp
  00357	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0035c	8b e5		 mov	 esp, ebp
  0035e	5d		 pop	 ebp
  0035f	c3		 ret	 0
$LN254@LoadAttack:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00360	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN255@LoadAttack:
  00365	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN256@LoadAttack:
  0036a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN257@LoadAttack:
  0036f	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN258@LoadAttack:
  00374	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN259@LoadAttack:
  00379	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN252@LoadAttack:
  0037e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T7[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T6[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$2:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR $T5[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$3:
  00018	8d 4d d8	 lea	 ecx, DWORD PTR $T4[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$4:
  00020	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z$5:
  00028	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  0002b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00030	cc		 int	 3
  00031	cc		 int	 3
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
__ehhandler$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z:
  00035	90		 npad	 1
  00036	90		 npad	 1
  00037	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003e	8b 4a bc	 mov	 ecx, DWORD PTR [edx-68]
  00041	33 c8		 xor	 ecx, eax
  00043	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00048	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0004b	33 c8		 xor	 ecx, eax
  0004d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00052	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z
  00057	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z ENDP ; NRaceData::LoadAttackData
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
;	COMDAT ?SaveObjectData@NRaceData@@YAXPAU_iobuf@@HABUSAttachingObjectData@1@@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabCount$ = 12					; size = 4
_c_rObjectData$ = 16					; size = 4
?SaveObjectData@NRaceData@@YAXPAU_iobuf@@HABUSAttachingObjectData@1@@Z PROC ; NRaceData::SaveObjectData, COMDAT

; 160  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3922 :         return _Mypair._Myval2._Myptr();

  00003	8b 45 10	 mov	 eax, DWORD PTR _c_rObjectData$[ebp]
  00006	83 c0 04	 add	 eax, 4

; 2319 :         return _BUF_SIZE <= _Myres;

  00009	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2306 :         if (_Large_string_engaged()) {

  0000d	72 02		 jb	 SHORT $LN6@SaveObject

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  0000f	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@SaveObject:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 161  : 	PrintfTabs(File, iTabCount, "ObjectScriptName     \"%s\"\n", c_rObjectData.strFileName.c_str());

  00011	50		 push	 eax
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@DJLPHPIA@ObjectScriptName?5?5?5?5?5?$CC?$CFs?$CC?6@
  00017	ff 75 0c	 push	 DWORD PTR _iTabCount$[ebp]
  0001a	ff 75 08	 push	 DWORD PTR _File$[ebp]
  0001d	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00022	83 c4 10	 add	 esp, 16			; 00000010H

; 162  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?SaveObjectData@NRaceData@@YAXPAU_iobuf@@HABUSAttachingObjectData@1@@Z ENDP ; NRaceData::SaveObjectData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
;	COMDAT ?SaveEffectData@NRaceData@@YAXPAU_iobuf@@HABUSAttachingEffectData@1@@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabCount$ = 12					; size = 4
_c_rEffectData$ = 16					; size = 4
?SaveEffectData@NRaceData@@YAXPAU_iobuf@@HABUSAttachingEffectData@1@@Z PROC ; NRaceData::SaveEffectData, COMDAT

; 152  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3922 :         return _Mypair._Myval2._Myptr();

  00004	8b 5d 10	 mov	 ebx, DWORD PTR _c_rEffectData$[ebp]

; 2319 :         return _BUF_SIZE <= _Myres;

  00007	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H

; 3922 :         return _Mypair._Myval2._Myptr();

  0000b	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 152  : {

  0000e	56		 push	 esi
  0000f	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  00010	72 02		 jb	 SHORT $LN6@SaveEffect

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00012	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@SaveEffect:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 153  : 	PrintfTabs(File, iTabCount, "EffectScriptName     \"%s\"\n", c_rEffectData.strFileName.c_str());

  00014	8b 7d 0c	 mov	 edi, DWORD PTR _iTabCount$[ebp]
  00017	8b 75 08	 mov	 esi, DWORD PTR _File$[ebp]
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@NLAHNABK@EffectScriptName?5?5?5?5?5?$CC?$CFs?$CC?6@
  00020	57		 push	 edi
  00021	56		 push	 esi
  00022	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00027	f3 0f 10 43 24	 movss	 xmm0, DWORD PTR [ebx+36]

; 154  : 
; 155  : 	PrintfTabs(File, iTabCount, "EffectPosition       %f %f %f\n", c_rEffectData.v3Position.x, c_rEffectData.v3Position.y, c_rEffectData.v3Position.z);

  0002c	0f 5a c0	 cvtps2pd xmm0, xmm0
  0002f	f2 0f 11 44 24
	08		 movsd	 QWORD PTR [esp+8], xmm0
  00035	f3 0f 10 43 20	 movss	 xmm0, DWORD PTR [ebx+32]
  0003a	0f 5a c0	 cvtps2pd xmm0, xmm0
  0003d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00042	83 ec 08	 sub	 esp, 8
  00045	f3 0f 10 43 1c	 movss	 xmm0, DWORD PTR [ebx+28]
  0004a	0f 5a c0	 cvtps2pd xmm0, xmm0
  0004d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00052	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@CFDDPJAK@EffectPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@
  00057	57		 push	 edi
  00058	56		 push	 esi
  00059	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  0005e	f3 0f 10 43 30	 movss	 xmm0, DWORD PTR [ebx+48]

; 156  : 	PrintfTabs(File, iTabCount, "EffectRotation       %f %f %f\n", c_rEffectData.v3Rotation.x, c_rEffectData.v3Rotation.y, c_rEffectData.v3Rotation.z);

  00063	83 c4 0c	 add	 esp, 12			; 0000000cH
  00066	0f 5a c0	 cvtps2pd xmm0, xmm0
  00069	f2 0f 11 44 24
	10		 movsd	 QWORD PTR [esp+16], xmm0
  0006f	f3 0f 10 43 2c	 movss	 xmm0, DWORD PTR [ebx+44]
  00074	0f 5a c0	 cvtps2pd xmm0, xmm0
  00077	f2 0f 11 44 24
	08		 movsd	 QWORD PTR [esp+8], xmm0
  0007d	f3 0f 10 43 28	 movss	 xmm0, DWORD PTR [ebx+40]
  00082	0f 5a c0	 cvtps2pd xmm0, xmm0
  00085	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@HKKPGBPJ@EffectRotation?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@
  0008f	57		 push	 edi
  00090	56		 push	 esi
  00091	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00096	83 c4 24	 add	 esp, 36			; 00000024H
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	5b		 pop	 ebx

; 157  : }

  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
?SaveEffectData@NRaceData@@YAXPAU_iobuf@@HABUSAttachingEffectData@1@@Z ENDP ; NRaceData::SaveEffectData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
;	COMDAT ?SaveCollisionData@NRaceData@@YAXPAU_iobuf@@HABUSCollisionData@1@@Z
_TEXT	SEGMENT
tv250 = -8						; size = 4
_i$1$ = -4						; size = 4
_File$ = 8						; size = 4
_iTabCount$ = 12					; size = 4
_c_rCollisionData$ = 16					; size = 4
?SaveCollisionData@NRaceData@@YAXPAU_iobuf@@HABUSCollisionData@1@@Z PROC ; NRaceData::SaveCollisionData, COMDAT

; 243  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx

; 244  : 	PrintfTabs(File, iTabCount, "CollisionType        %d\n", c_rCollisionData.iCollisionType);

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR _iTabCount$[ebp]
  0000a	56		 push	 esi
  0000b	8b 75 10	 mov	 esi, DWORD PTR _c_rCollisionData$[ebp]
  0000e	57		 push	 edi
  0000f	8b 7d 08	 mov	 edi, DWORD PTR _File$[ebp]
  00012	ff 76 04	 push	 DWORD PTR [esi+4]
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DIEJPDEB@CollisionType?5?5?5?5?5?5?5?5?$CFd?6@
  0001a	53		 push	 ebx
  0001b	57		 push	 edi
  0001c	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 245  : 	PrintfTabs(File, iTabCount, "\n");

  00021	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  00026	53		 push	 ebx
  00027	57		 push	 edi
  00028	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0002d	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00030	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00035	2b 4e 08	 sub	 ecx, DWORD PTR [esi+8]
  00038	f7 e9		 imul	 ecx
  0003a	c1 fa 03	 sar	 edx, 3
  0003d	8b c2		 mov	 eax, edx
  0003f	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00042	03 c2		 add	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 249  : 	PrintfTabs(File, iTabCount, "SphereDataCount      %d\n", c_rSphereDataVector.size());

  00044	50		 push	 eax
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@LLPIPOLN@SphereDataCount?5?5?5?5?5?5?$CFd?6@
  0004a	53		 push	 ebx
  0004b	57		 push	 edi
  0004c	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00051	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00054	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00059	2b 4e 08	 sub	 ecx, DWORD PTR [esi+8]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 249  : 	PrintfTabs(File, iTabCount, "SphereDataCount      %d\n", c_rSphereDataVector.size());

  0005c	83 c4 2c	 add	 esp, 44			; 0000002cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0005f	f7 e9		 imul	 ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 251  : 	for (DWORD i = 0; i < c_rSphereDataVector.size(); ++i)

  00061	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$1$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00068	c1 fa 03	 sar	 edx, 3
  0006b	8b c2		 mov	 eax, edx
  0006d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00070	03 c2		 add	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 251  : 	for (DWORD i = 0; i < c_rSphereDataVector.size(); ++i)

  00072	0f 84 c2 00 00
	00		 je	 $LN3@SaveCollis
  00078	33 c0		 xor	 eax, eax
  0007a	89 45 f8	 mov	 DWORD PTR tv250[ebp], eax
  0007d	0f 1f 00	 npad	 3
$LL4@SaveCollis:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1579 :         return _My_data._Myfirst[_Pos];

  00080	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00083	03 c8		 add	 ecx, eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 253  : 		const TSphereData & c_rAttr = c_rSphereDataVector[i].GetAttribute();

  00085	e8 00 00 00 00	 call	 ?GetAttribute@CSphereCollisionInstance@@QBEABUSSphereData@@XZ ; CSphereCollisionInstance::GetAttribute

; 254  : 
; 255  : 		PrintfTabs(File, iTabCount, "Group SphereData%02d\n", i);

  0008a	ff 75 fc	 push	 DWORD PTR _i$1$[ebp]
  0008d	8b f0		 mov	 esi, eax
  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@KEPKCEAC@Group?5SphereData?$CF02d?6@
  00094	53		 push	 ebx
  00095	57		 push	 edi
  00096	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 256  : 
; 257  : 		PrintfTabs(File, iTabCount, "{\n");

  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_02KCPFEJNG@?$HL?6@
  000a0	53		 push	 ebx
  000a1	57		 push	 edi
  000a2	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  000a7	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]

; 258  : 
; 259  : 		PrintfTabs(File, iTabCount+1, "Radius           %f\n",

  000ac	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
  000af	0f 5a c0	 cvtps2pd xmm0, xmm0
  000b2	83 c4 14	 add	 esp, 20			; 00000014H
  000b5	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000ba	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@CAOAGEDL@Radius?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@
  000bf	50		 push	 eax
  000c0	57		 push	 edi
  000c1	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  000c6	f3 0f 10 46 08	 movss	 xmm0, DWORD PTR [esi+8]

; 260  : 						c_rAttr.fRadius);
; 261  : 
; 262  : 		PrintfTabs(File, iTabCount+1, "Position         %f %f %f\n",

  000cb	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
  000ce	0f 5a c0	 cvtps2pd xmm0, xmm0
  000d1	51		 push	 ecx
  000d2	f2 0f 11 44 24
	10		 movsd	 QWORD PTR [esp+16], xmm0
  000d8	f3 0f 10 46 04	 movss	 xmm0, DWORD PTR [esi+4]
  000dd	0f 5a c0	 cvtps2pd xmm0, xmm0
  000e0	f2 0f 11 44 24
	08		 movsd	 QWORD PTR [esp+8], xmm0
  000e6	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  000ea	0f 5a c0	 cvtps2pd xmm0, xmm0
  000ed	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@DHPAPBDL@Position?5?5?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@
  000f7	50		 push	 eax
  000f8	57		 push	 edi
  000f9	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 263  : 						c_rAttr.v3Position.x,
; 264  : 						c_rAttr.v3Position.y,
; 265  : 						c_rAttr.v3Position.z);
; 266  : 
; 267  : 		PrintfTabs(File, iTabCount, "}\n");

  000fe	68 00 00 00 00	 push	 OFFSET ??_C@_02KGHIDFGE@?$HN?6@
  00103	53		 push	 ebx
  00104	57		 push	 edi
  00105	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0010a	8b 75 10	 mov	 esi, DWORD PTR _c_rCollisionData$[ebp]
  0010d	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 251  : 	for (DWORD i = 0; i < c_rSphereDataVector.size(); ++i)

  00112	ff 45 fc	 inc	 DWORD PTR _i$1$[ebp]

; 263  : 						c_rAttr.v3Position.x,
; 264  : 						c_rAttr.v3Position.y,
; 265  : 						c_rAttr.v3Position.z);
; 266  : 
; 267  : 		PrintfTabs(File, iTabCount, "}\n");

  00115	83 c4 30	 add	 esp, 48			; 00000030H
  00118	83 45 f8 14	 add	 DWORD PTR tv250[ebp], 20 ; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0011c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0011f	2b 4e 08	 sub	 ecx, DWORD PTR [esi+8]
  00122	f7 e9		 imul	 ecx
  00124	c1 fa 03	 sar	 edx, 3
  00127	8b c2		 mov	 eax, edx
  00129	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0012c	03 c2		 add	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 251  : 	for (DWORD i = 0; i < c_rSphereDataVector.size(); ++i)

  0012e	39 45 fc	 cmp	 DWORD PTR _i$1$[ebp], eax
  00131	8b 45 f8	 mov	 eax, DWORD PTR tv250[ebp]
  00134	0f 82 46 ff ff
	ff		 jb	 $LL4@SaveCollis
$LN3@SaveCollis:
  0013a	5f		 pop	 edi

; 268  : 	}
; 269  : }

  0013b	5e		 pop	 esi
  0013c	5b		 pop	 ebx
  0013d	8b e5		 mov	 esp, ebp
  0013f	5d		 pop	 ebp
  00140	c3		 ret	 0
?SaveCollisionData@NRaceData@@YAXPAU_iobuf@@HABUSCollisionData@1@@Z ENDP ; NRaceData::SaveCollisionData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
;	COMDAT ?SaveMotionAttackData@NRaceData@@YAXPAU_iobuf@@HABUSMotionAttackData@1@@Z
_TEXT	SEGMENT
tv943 = -8						; size = 4
_dwHitDataNumber$1$ = -4				; size = 4
_File$ = 8						; size = 4
_iTabCount$ = 12					; size = 4
_c_rData$ = 16						; size = 4
?SaveMotionAttackData@NRaceData@@YAXPAU_iobuf@@HABUSMotionAttackData@1@@Z PROC ; NRaceData::SaveMotionAttackData, COMDAT

; 207  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx

; 208  : 	SaveAttackData(File, iTabCount, c_rData);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR _File$[ebp]
  0000a	56		 push	 esi
  0000b	8b 75 0c	 mov	 esi, DWORD PTR _iTabCount$[ebp]
  0000e	57		 push	 edi
  0000f	8b 7d 10	 mov	 edi, DWORD PTR _c_rData$[ebp]
  00012	57		 push	 edi
  00013	56		 push	 esi
  00014	53		 push	 ebx
  00015	e8 00 00 00 00	 call	 ?SaveAttackData@NRaceData@@YAXPAU_iobuf@@HABUSAttackData@1@@Z ; NRaceData::SaveAttackData

; 209  : 
; 210  : 	PrintfTabs(File, iTabCount, "\n");

  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  0001f	56		 push	 esi
  00020	53		 push	 ebx
  00021	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 211  : 	PrintfTabs(File, iTabCount, "MotionType           %d\n", c_rData.iMotionType);

  00026	ff 77 18	 push	 DWORD PTR [edi+24]
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@MBAEAEOJ@MotionType?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@
  0002e	56		 push	 esi
  0002f	53		 push	 ebx
  00030	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00035	8b 4f 20	 mov	 ecx, DWORD PTR [edi+32]
  00038	b8 e9 a2 8b 2e	 mov	 eax, 780903145		; 2e8ba2e9H
  0003d	2b 4f 1c	 sub	 ecx, DWORD PTR [edi+28]
  00040	f7 e9		 imul	 ecx
  00042	c1 fa 03	 sar	 edx, 3
  00045	8b c2		 mov	 eax, edx
  00047	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0004a	03 c2		 add	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 212  : 	PrintfTabs(File, iTabCount, "HitDataCount         %d\n", c_rData.HitDataContainer.size());

  0004c	50		 push	 eax
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@HFLBJKFP@HitDataCount?5?5?5?5?5?5?5?5?5?$CFd?6@
  00052	56		 push	 esi
  00053	53		 push	 ebx
  00054	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00059	8b 45 10	 mov	 eax, DWORD PTR _c_rData$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 214  : 	DWORD dwHitDataNumber = 0;

  0005c	33 c9		 xor	 ecx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0005e	8b 7f 1c	 mov	 edi, DWORD PTR [edi+28]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 212  : 	PrintfTabs(File, iTabCount, "HitDataCount         %d\n", c_rData.HitDataContainer.size());

  00061	83 c4 38	 add	 esp, 56			; 00000038H

; 214  : 	DWORD dwHitDataNumber = 0;

  00064	89 4d fc	 mov	 DWORD PTR _dwHitDataNumber$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00067	3b 78 20	 cmp	 edi, DWORD PTR [eax+32]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 216  : 	for (; itor != c_rData.HitDataContainer.end(); ++itor, ++dwHitDataNumber)

  0006a	0f 84 b5 01 00
	00		 je	 $LN3@SaveMotion
  00070	8b c6		 mov	 eax, esi
  00072	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
$LL4@SaveMotion:

; 217  : 	{
; 218  : 		const THitData & c_rHitData = *itor;
; 219  : 
; 220  : 		PrintfTabs(File, iTabCount, "Group HitData%02d\n", dwHitDataNumber);

  00075	51		 push	 ecx
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OJFCEOOP@Group?5HitData?$CF02d?6@
  0007b	50		 push	 eax
  0007c	53		 push	 ebx
  0007d	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 221  : 		PrintfTabs(File, iTabCount, "{\n");

  00082	68 00 00 00 00	 push	 OFFSET ??_C@_02KCPFEJNG@?$HL?6@
  00087	ff 75 0c	 push	 DWORD PTR _iTabCount$[ebp]
  0008a	53		 push	 ebx
  0008b	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00090	f3 0f 10 07	 movss	 xmm0, DWORD PTR [edi]

; 222  : 		PrintfTabs(File, iTabCount+1, "AttackingStartTime   %f\n", c_rHitData.fAttackStartTime);

  00094	83 c4 14	 add	 esp, 20			; 00000014H
  00097	0f 5a c0	 cvtps2pd xmm0, xmm0
  0009a	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@PBKKALID@AttackingStartTime?5?5?5?$CFf?6@
  000a4	56		 push	 esi
  000a5	53		 push	 ebx
  000a6	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  000ab	f3 0f 10 47 04	 movss	 xmm0, DWORD PTR [edi+4]

; 223  : 		PrintfTabs(File, iTabCount+1, "AttackingEndTime     %f\n", c_rHitData.fAttackEndTime);

  000b0	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b3	0f 5a c0	 cvtps2pd xmm0, xmm0
  000b6	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@GFEFBFDJ@AttackingEndTime?5?5?5?5?5?$CFf?6@
  000c0	56		 push	 esi
  000c1	53		 push	 ebx
  000c2	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  000c7	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2305 :         const value_type* _Result = _Bx._Buf;

  000ca	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]

; 2319 :         return _BUF_SIZE <= _Myres;

  000cd	83 7f 20 10	 cmp	 DWORD PTR [edi+32], 16	; 00000010H

; 2306 :         if (_Large_string_engaged()) {

  000d1	72 02		 jb	 SHORT $LN28@SaveMotion

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  000d3	8b 00		 mov	 eax, DWORD PTR [eax]
$LN28@SaveMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 225  : 		PrintfTabs(File, iTabCount+1, "AttackingBone        \"%s\"\n", c_rHitData.strBoneName.c_str());

  000d5	50		 push	 eax
  000d6	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@OMPHLDJB@AttackingBone?5?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@
  000db	56		 push	 esi
  000dc	53		 push	 ebx
  000dd	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  000e2	f3 0f 10 47 08	 movss	 xmm0, DWORD PTR [edi+8]

; 226  : 		PrintfTabs(File, iTabCount+1, "WeaponLength         %f\n", c_rHitData.fWeaponLength);

  000e7	83 c4 08	 add	 esp, 8
  000ea	0f 5a c0	 cvtps2pd xmm0, xmm0
  000ed	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DPGEFILL@WeaponLength?5?5?5?5?5?5?5?5?5?$CFf?6@
  000f7	56		 push	 esi
  000f8	53		 push	 ebx
  000f9	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 227  : 		PrintfTabs(File, iTabCount+1, "List HitPosition\n");

  000fe	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@FOOKPLLP@List?5HitPosition?6@
  00103	56		 push	 esi
  00104	53		 push	 ebx
  00105	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 228  : 		PrintfTabs(File, iTabCount+1, "{\n");

  0010a	68 00 00 00 00	 push	 OFFSET ??_C@_02KCPFEJNG@?$HL?6@
  0010f	56		 push	 esi
  00110	53		 push	 ebx
  00111	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 1148 :         return const_iterator(_Scary->_Myhead->_Left, _Scary);

  00116	8b 47 24	 mov	 eax, DWORD PTR [edi+36]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 228  : 		PrintfTabs(File, iTabCount+1, "{\n");

  00119	83 c4 2c	 add	 esp, 44			; 0000002cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0011c	8b 30		 mov	 esi, DWORD PTR [eax]

; 236  :         return this->_Ptr == _Right._Ptr;

  0011e	3b f0		 cmp	 esi, eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 231  : 		for(it = c_rHitData.mapHitPosition.begin(); it!= c_rHitData.mapHitPosition.end();++it)

  00120	0f 84 c5 00 00
	00		 je	 $LN109@SaveMotion
  00126	8b 45 0c	 mov	 eax, DWORD PTR _iTabCount$[ebp]
  00129	83 c0 02	 add	 eax, 2
  0012c	89 45 f8	 mov	 DWORD PTR tv943[ebp], eax
  0012f	90		 npad	 1
$LL48@SaveMotion:
  00130	f3 0f 10 46 1c	 movss	 xmm0, DWORD PTR [esi+28]

; 233  : 			PrintfTabs(File, iTabCount+2, "%f %f %f %f %f %f %f\n", it->first,

  00135	83 ec 38	 sub	 esp, 56			; 00000038H
  00138	0f 5a c0	 cvtps2pd xmm0, xmm0
  0013b	f2 0f 11 44 24
	30		 movsd	 QWORD PTR [esp+48], xmm0
  00141	f3 0f 10 46 18	 movss	 xmm0, DWORD PTR [esi+24]
  00146	0f 5a c0	 cvtps2pd xmm0, xmm0
  00149	f2 0f 11 44 24
	28		 movsd	 QWORD PTR [esp+40], xmm0
  0014f	f3 0f 10 46 14	 movss	 xmm0, DWORD PTR [esi+20]
  00154	0f 5a c0	 cvtps2pd xmm0, xmm0
  00157	f2 0f 11 44 24
	20		 movsd	 QWORD PTR [esp+32], xmm0
  0015d	f3 0f 10 46 28	 movss	 xmm0, DWORD PTR [esi+40]
  00162	0f 5a c0	 cvtps2pd xmm0, xmm0
  00165	f2 0f 11 44 24
	18		 movsd	 QWORD PTR [esp+24], xmm0
  0016b	f3 0f 10 46 24	 movss	 xmm0, DWORD PTR [esi+36]
  00170	0f 5a c0	 cvtps2pd xmm0, xmm0
  00173	f2 0f 11 44 24
	10		 movsd	 QWORD PTR [esp+16], xmm0
  00179	f3 0f 10 46 20	 movss	 xmm0, DWORD PTR [esi+32]
  0017e	0f 5a c0	 cvtps2pd xmm0, xmm0
  00181	f2 0f 11 44 24
	08		 movsd	 QWORD PTR [esp+8], xmm0
  00187	f3 0f 10 46 10	 movss	 xmm0, DWORD PTR [esi+16]
  0018c	0f 5a c0	 cvtps2pd xmm0, xmm0
  0018f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00194	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@DHJNNNIC@?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?6@
  00199	50		 push	 eax
  0019a	53		 push	 ebx
  0019b	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  001a0	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 233  : 			PrintfTabs(File, iTabCount+2, "%f %f %f %f %f %f %f\n", it->first,

  001a3	83 c4 44	 add	 esp, 68			; 00000044H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  001a6	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001aa	74 1d		 je	 SHORT $LN47@SaveMotion

; 53   :             _Nodeptr _Pnode;
; 54   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

  001ac	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  001af	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b3	75 10		 jne	 SHORT $LN110@SaveMotion
$LL45@SaveMotion:
  001b5	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  001b8	75 0b		 jne	 SHORT $LN110@SaveMotion

; 55   :                 _Ptr = _Pnode; // ==> parent while right subtree

  001ba	8b f0		 mov	 esi, eax
  001bc	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001bf	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001c3	74 f0		 je	 SHORT $LL45@SaveMotion
$LN110@SaveMotion:

; 56   :             }
; 57   : 
; 58   :             _Ptr = _Pnode; // ==> parent (head if end())

  001c5	8b f0		 mov	 esi, eax

; 59   :         } else {

  001c7	eb 16		 jmp	 SHORT $LN52@SaveMotion
$LN47@SaveMotion:

; 60   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

  001c9	8b f0		 mov	 esi, eax

; 457  :         while (!_Pnode->_Left->_Isnil) {

  001cb	8b 0e		 mov	 ecx, DWORD PTR [esi]
  001cd	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  001d1	75 0c		 jne	 SHORT $LN52@SaveMotion
$LL51@SaveMotion:
  001d3	8b 01		 mov	 eax, DWORD PTR [ecx]

; 458  :             _Pnode = _Pnode->_Left;

  001d5	8b f1		 mov	 esi, ecx
  001d7	8b c8		 mov	 ecx, eax
  001d9	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001dd	74 f4		 je	 SHORT $LL51@SaveMotion
$LN52@SaveMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 231  : 		for(it = c_rHitData.mapHitPosition.begin(); it!= c_rHitData.mapHitPosition.end();++it)

  001df	8b 45 f8	 mov	 eax, DWORD PTR tv943[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 236  :         return this->_Ptr == _Right._Ptr;

  001e2	3b 77 24	 cmp	 esi, DWORD PTR [edi+36]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 231  : 		for(it = c_rHitData.mapHitPosition.begin(); it!= c_rHitData.mapHitPosition.end();++it)

  001e5	0f 85 45 ff ff
	ff		 jne	 $LL48@SaveMotion
$LN109@SaveMotion:

; 234  : 				it->second.v3LastPosition.x, it->second.v3LastPosition.y, it->second.v3LastPosition.z,
; 235  : 				it->second.v3Position.x,     it->second.v3Position.y,     it->second.v3Position.z);
; 236  : 		}
; 237  : 		PrintfTabs(File, iTabCount+1, "}\n");

  001eb	8b 75 0c	 mov	 esi, DWORD PTR _iTabCount$[ebp]
  001ee	68 00 00 00 00	 push	 OFFSET ??_C@_02KGHIDFGE@?$HN?6@
  001f3	46		 inc	 esi
  001f4	56		 push	 esi
  001f5	53		 push	 ebx
  001f6	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 238  : 		PrintfTabs(File, iTabCount, "}\n");

  001fb	68 00 00 00 00	 push	 OFFSET ??_C@_02KGHIDFGE@?$HN?6@
  00200	ff 75 0c	 push	 DWORD PTR _iTabCount$[ebp]
  00203	53		 push	 ebx
  00204	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 154  :         return _Ptr == _Right._Ptr;

  00209	8b 45 10	 mov	 eax, DWORD PTR _c_rData$[ebp]

; 78   :         ++_Ptr;

  0020c	83 c7 2c	 add	 edi, 44			; 0000002cH
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 216  : 	for (; itor != c_rData.HitDataContainer.end(); ++itor, ++dwHitDataNumber)

  0020f	8b 4d fc	 mov	 ecx, DWORD PTR _dwHitDataNumber$1$[ebp]

; 238  : 		PrintfTabs(File, iTabCount, "}\n");

  00212	83 c4 18	 add	 esp, 24			; 00000018H
  00215	41		 inc	 ecx
  00216	89 4d fc	 mov	 DWORD PTR _dwHitDataNumber$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 154  :         return _Ptr == _Right._Ptr;

  00219	3b 78 20	 cmp	 edi, DWORD PTR [eax+32]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 216  : 	for (; itor != c_rData.HitDataContainer.end(); ++itor, ++dwHitDataNumber)

  0021c	8b 45 0c	 mov	 eax, DWORD PTR _iTabCount$[ebp]
  0021f	0f 85 50 fe ff
	ff		 jne	 $LL4@SaveMotion
$LN3@SaveMotion:
  00225	5f		 pop	 edi

; 239  : 	}
; 240  : }

  00226	5e		 pop	 esi
  00227	5b		 pop	 ebx
  00228	8b e5		 mov	 esp, ebp
  0022a	5d		 pop	 ebp
  0022b	c3		 ret	 0
?SaveMotionAttackData@NRaceData@@YAXPAU_iobuf@@HABUSMotionAttackData@1@@Z ENDP ; NRaceData::SaveMotionAttackData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
;	COMDAT ?SaveAttackData@NRaceData@@YAXPAU_iobuf@@HABUSAttackData@1@@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabCount$ = 12					; size = 4
_c_rData$ = 16						; size = 4
?SaveAttackData@NRaceData@@YAXPAU_iobuf@@HABUSAttackData@1@@Z PROC ; NRaceData::SaveAttackData, COMDAT

; 197  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 198  : 	PrintfTabs(File, iTabCount, "AttackType           %d\n", c_rData.iAttackType);

  00004	8b 5d 10	 mov	 ebx, DWORD PTR _c_rData$[ebp]
  00007	56		 push	 esi
  00008	8b 75 08	 mov	 esi, DWORD PTR _File$[ebp]
  0000b	57		 push	 edi
  0000c	ff 33		 push	 DWORD PTR [ebx]
  0000e	8b 7d 0c	 mov	 edi, DWORD PTR _iTabCount$[ebp]
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@EGAIMMNM@AttackType?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@
  00016	57		 push	 edi
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 199  : 	PrintfTabs(File, iTabCount, "HittingType          %d\n", c_rData.iHittingType);

  0001d	ff 73 04	 push	 DWORD PTR [ebx+4]
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@LOMGAMME@HittingType?5?5?5?5?5?5?5?5?5?5?$CFd?6@
  00025	57		 push	 edi
  00026	56		 push	 esi
  00027	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  0002c	f3 0f 10 43 10	 movss	 xmm0, DWORD PTR [ebx+16]

; 200  : 	PrintfTabs(File, iTabCount, "StiffenTime          %f\n", c_rData.fStiffenTime);

  00031	83 c4 18	 add	 esp, 24			; 00000018H
  00034	0f 5a c0	 cvtps2pd xmm0, xmm0
  00037	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@PMKNADAG@StiffenTime?5?5?5?5?5?5?5?5?5?5?$CFf?6@
  00041	57		 push	 edi
  00042	56		 push	 esi
  00043	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00048	f3 0f 10 43 08	 movss	 xmm0, DWORD PTR [ebx+8]

; 201  : 	PrintfTabs(File, iTabCount, "InvisibleTime        %f\n", c_rData.fInvisibleTime);

  0004d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00050	0f 5a c0	 cvtps2pd xmm0, xmm0
  00053	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@PMIBIGHB@InvisibleTime?5?5?5?5?5?5?5?5?$CFf?6@
  0005d	57		 push	 edi
  0005e	56		 push	 esi
  0005f	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00064	f3 0f 10 43 0c	 movss	 xmm0, DWORD PTR [ebx+12]

; 202  : 	PrintfTabs(File, iTabCount, "ExternalForce        %f\n", c_rData.fExternalForce);

  00069	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006c	0f 5a c0	 cvtps2pd xmm0, xmm0
  0006f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@LGCKNMAM@ExternalForce?5?5?5?5?5?5?5?5?$CFf?6@
  00079	57		 push	 edi
  0007a	56		 push	 esi
  0007b	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 203  : 	PrintfTabs(File, iTabCount, "HitLimitCount        %d\n", c_rData.iHitLimitCount);

  00080	ff 73 14	 push	 DWORD PTR [ebx+20]
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@CEBPFMIJ@HitLimitCount?5?5?5?5?5?5?5?5?$CFd?6@
  00088	57		 push	 edi
  00089	56		 push	 esi
  0008a	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  0008f	83 c4 24	 add	 esp, 36			; 00000024H
  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	5b		 pop	 ebx

; 204  : }

  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
?SaveAttackData@NRaceData@@YAXPAU_iobuf@@HABUSAttackData@1@@Z ENDP ; NRaceData::SaveAttackData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
;	COMDAT ?DestroySystem@NRaceData@@YAXXZ
_TEXT	SEGMENT
?DestroySystem@NRaceData@@YAXXZ PROC			; NRaceData::DestroySystem, COMDAT

; 12   : {

  00000	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00001	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 12   : {

  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 269  :     const auto _ULast = _Get_unwrapped(_Last);

  00008	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+8

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b f7		 cmp	 esi, edi
  00010	74 19		 je	 SHORT $LN19@DestroySys
$LL20@DestroySys:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00014	85 c9		 test	 ecx, ecx
  00016	74 06		 je	 SHORT $LN18@DestroySys
  00018	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001a	6a 01		 push	 1
  0001c	ff 10		 call	 DWORD PTR [eax]
$LN18@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001e	83 c6 04	 add	 esi, 4
  00021	3b f7		 cmp	 esi, edi
  00023	75 ed		 jne	 SHORT $LL20@DestroySys
  00025	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+4
$LN19@DestroySys:

; 269  :     const auto _ULast = _Get_unwrapped(_Last);

  0002b	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  00031	a1 10 00 00 00	 mov	 eax, DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+16
  00036	89 35 08 00 00
	00		 mov	 DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+8, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0003c	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  00042	a3 14 00 00 00	 mov	 DWORD PTR ?g_CollisionDataPool@NRaceData@@3V?$CDynamicPool@USCollisionData@NRaceData@@@@A+20, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00047	3b f7		 cmp	 esi, edi
  00049	74 1e		 je	 SHORT $LN42@DestroySys
  0004b	0f 1f 44 00 00	 npad	 5
$LL43@DestroySys:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00050	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00052	85 c9		 test	 ecx, ecx
  00054	74 06		 je	 SHORT $LN41@DestroySys
  00056	8b 01		 mov	 eax, DWORD PTR [ecx]
  00058	6a 01		 push	 1
  0005a	ff 10		 call	 DWORD PTR [eax]
$LN41@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0005c	83 c6 04	 add	 esi, 4
  0005f	3b f7		 cmp	 esi, edi
  00061	75 ed		 jne	 SHORT $LL43@DestroySys
  00063	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+4
$LN42@DestroySys:

; 269  :     const auto _ULast = _Get_unwrapped(_Last);

  00069	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  0006f	a1 10 00 00 00	 mov	 eax, DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+16
  00074	89 35 08 00 00
	00		 mov	 DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+8, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0007a	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  00080	a3 14 00 00 00	 mov	 DWORD PTR ?g_EffectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingEffectData@NRaceData@@@@A+20, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00085	3b f7		 cmp	 esi, edi
  00087	74 31		 je	 SHORT $LN84@DestroySys
  00089	0f 1f 80 00 00
	00 00		 npad	 7
$LL66@DestroySys:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00090	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00092	85 c9		 test	 ecx, ecx
  00094	74 06		 je	 SHORT $LN64@DestroySys
  00096	8b 01		 mov	 eax, DWORD PTR [ecx]
  00098	6a 01		 push	 1
  0009a	ff 10		 call	 DWORD PTR [eax]
$LN64@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0009c	83 c6 04	 add	 esi, 4
  0009f	3b f7		 cmp	 esi, edi
  000a1	75 ed		 jne	 SHORT $LL66@DestroySys
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  000a3	a1 04 00 00 00	 mov	 eax, DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+4
  000a8	a3 08 00 00 00	 mov	 DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+8, eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 16   : }

  000ad	a1 10 00 00 00	 mov	 eax, DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+16
  000b2	5f		 pop	 edi
  000b3	a3 14 00 00 00	 mov	 DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+20, eax
  000b8	5e		 pop	 esi
  000b9	c3		 ret	 0
$LN84@DestroySys:
  000ba	a1 10 00 00 00	 mov	 eax, DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+16
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  000c0	89 35 08 00 00
	00		 mov	 DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+8, esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 16   : }

  000c6	a3 14 00 00 00	 mov	 DWORD PTR ?g_ObjectDataPool@NRaceData@@3V?$CDynamicPool@USAttachingObjectData@NRaceData@@@@A+20, eax
  000cb	5e		 pop	 esi
  000cc	c3		 ret	 0
?DestroySystem@NRaceData@@YAXXZ ENDP			; NRaceData::DestroySystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??_GSAttachingObjectData@NRaceData@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSAttachingObjectData@NRaceData@@UAEPAXI@Z PROC	; NRaceData::SAttachingObjectData::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h

; 138  : 		virtual ~SAttachingObjectData() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SAttachingObjectData@NRaceData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  0000c	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  0000f	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 28		 jb	 SHORT $LN19@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00014	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00017	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00018	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001e	72 12		 jb	 SHORT $LN29@scalar

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00020	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00023	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00026	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00028	83 c0 fc	 add	 eax, -4			; fffffffcH
  0002b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002e	77 36		 ja	 SHORT $LN26@scalar

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00030	8b c2		 mov	 eax, edx
$LN29@scalar:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00032	51		 push	 ecx
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00039	83 c4 08	 add	 esp, 8
$LN19@scalar:
  0003c	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00040	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00047	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004e	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  00052	74 0b		 je	 SHORT $LN2@scalar
  00054	6a 1c		 push	 28			; 0000001cH
  00056	56		 push	 esi
  00057	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0005c	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0005f	8b c6		 mov	 eax, esi
  00061	5e		 pop	 esi
  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
$LN26@scalar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00066	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN36@scalar:
  0006b	cc		 int	 3
??_GSAttachingObjectData@NRaceData@@UAEPAXI@Z ENDP	; NRaceData::SAttachingObjectData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h
;	COMDAT ??1SAttachingObjectData@NRaceData@@UAE@XZ
_TEXT	SEGMENT
??1SAttachingObjectData@NRaceData@@UAE@XZ PROC		; NRaceData::SAttachingObjectData::~SAttachingObjectData, COMDAT
; _this$ = ecx

; 138  : 		virtual ~SAttachingObjectData() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SAttachingObjectData@NRaceData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00009	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  0000c	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0000f	72 28		 jb	 SHORT $LN15@SAttaching
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00015	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001b	72 12		 jb	 SHORT $LN25@SAttaching

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001d	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00020	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00023	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00025	83 c0 fc	 add	 eax, -4			; fffffffcH
  00028	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002b	77 20		 ja	 SHORT $LN22@SAttaching

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002d	8b c2		 mov	 eax, edx
$LN25@SAttaching:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0002f	51		 push	 ecx
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00036	83 c4 08	 add	 esp, 8
$LN15@SAttaching:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00039	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00040	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00047	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  0004b	5e		 pop	 esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h

; 138  : 		virtual ~SAttachingObjectData() {}

  0004c	c3		 ret	 0
$LN22@SAttaching:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004d	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN31@SAttaching:
  00052	cc		 int	 3
??1SAttachingObjectData@NRaceData@@UAE@XZ ENDP		; NRaceData::SAttachingObjectData::~SAttachingObjectData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??_GSAttachingEffectData@NRaceData@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSAttachingEffectData@NRaceData@@UAEPAXI@Z PROC	; NRaceData::SAttachingEffectData::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h

; 130  : 		virtual ~SAttachingEffectData() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SAttachingEffectData@NRaceData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  0000c	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  0000f	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 28		 jb	 SHORT $LN19@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00014	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00017	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00018	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001e	72 12		 jb	 SHORT $LN29@scalar

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00020	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00023	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00026	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00028	83 c0 fc	 add	 eax, -4			; fffffffcH
  0002b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002e	77 36		 ja	 SHORT $LN26@scalar

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00030	8b c2		 mov	 eax, edx
$LN29@scalar:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00032	51		 push	 ecx
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00039	83 c4 08	 add	 esp, 8
$LN19@scalar:
  0003c	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00040	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00047	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004e	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  00052	74 0b		 je	 SHORT $LN2@scalar
  00054	6a 34		 push	 52			; 00000034H
  00056	56		 push	 esi
  00057	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0005c	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0005f	8b c6		 mov	 eax, esi
  00061	5e		 pop	 esi
  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
$LN26@scalar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00066	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN36@scalar:
  0006b	cc		 int	 3
??_GSAttachingEffectData@NRaceData@@UAEPAXI@Z ENDP	; NRaceData::SAttachingEffectData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h
;	COMDAT ??1SAttachingEffectData@NRaceData@@UAE@XZ
_TEXT	SEGMENT
??1SAttachingEffectData@NRaceData@@UAE@XZ PROC		; NRaceData::SAttachingEffectData::~SAttachingEffectData, COMDAT
; _this$ = ecx

; 130  : 		virtual ~SAttachingEffectData() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SAttachingEffectData@NRaceData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00009	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  0000c	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0000f	72 28		 jb	 SHORT $LN15@SAttaching
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00015	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001b	72 12		 jb	 SHORT $LN25@SAttaching

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001d	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00020	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00023	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00025	83 c0 fc	 add	 eax, -4			; fffffffcH
  00028	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002b	77 20		 ja	 SHORT $LN22@SAttaching

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002d	8b c2		 mov	 eax, edx
$LN25@SAttaching:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0002f	51		 push	 ecx
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00036	83 c4 08	 add	 esp, 8
$LN15@SAttaching:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00039	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00040	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00047	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  0004b	5e		 pop	 esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h

; 130  : 		virtual ~SAttachingEffectData() {}

  0004c	c3		 ret	 0
$LN22@SAttaching:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004d	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN31@SAttaching:
  00052	cc		 int	 3
??1SAttachingEffectData@NRaceData@@UAE@XZ ENDP		; NRaceData::SAttachingEffectData::~SAttachingEffectData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h
;	COMDAT ??_GSCollisionData@NRaceData@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSCollisionData@NRaceData@@UAEPAXI@Z PROC		; NRaceData::SCollisionData::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 120  : 		virtual ~SCollisionData() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SCollisionData@NRaceData@@6B@
  0000f	e8 00 00 00 00	 call	 ??1?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@QAE@XZ ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::~vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >
  00014	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00018	74 0b		 je	 SHORT $LN7@scalar
  0001a	6a 14		 push	 20			; 00000014H
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00022	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??_GSCollisionData@NRaceData@@UAEPAXI@Z ENDP		; NRaceData::SCollisionData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h
;	COMDAT ??1SCollisionData@NRaceData@@UAE@XZ
_TEXT	SEGMENT
??1SCollisionData@NRaceData@@UAE@XZ PROC		; NRaceData::SCollisionData::~SCollisionData, COMDAT
; _this$ = ecx

; 120  : 		virtual ~SCollisionData() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SCollisionData@NRaceData@@6B@
  00006	83 c1 08	 add	 ecx, 8
  00009	e9 00 00 00 00	 jmp	 ??1?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@QAE@XZ ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::~vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >
??1SCollisionData@NRaceData@@UAE@XZ ENDP		; NRaceData::SCollisionData::~SCollisionData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Ufill@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@AAEPAVCSphereCollisionInstance@@PAV3@IU_Value_init_tag@2@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Count$ = 12						; size = 4
___formal$ = 16						; size = 1
?_Ufill@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@AAEPAVCSphereCollisionInstance@@PAV3@IU_Value_init_tag@2@@Z PROC ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::_Ufill, COMDAT
; _this$ = ecx

; 1646 :     _CONSTEXPR20_CONTAINER pointer _Ufill(pointer _Dest, const size_type _Count, _Value_init_tag) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1647 :         // fill raw _Dest with _Count value-initialized objects, using allocator
; 1648 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1620 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00006	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]

; 1830 :     for (; 0 < _Count; --_Count) {

  00009	85 c9		 test	 ecx, ecx
  0000b	74 2d		 je	 SHORT $LN5@Ufill
  0000d	0f 1f 00	 npad	 3
$LL6@Ufill:

; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  00010	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00017	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
  0001e	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
  00025	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
  0002c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CSphereCollisionInstance@@6B@

; 1632 :         ++_Last;

  00032	83 c0 14	 add	 eax, 20			; 00000014H

; 1830 :     for (; 0 < _Count; --_Count) {

  00035	83 e9 01	 sub	 ecx, 1
  00038	75 d6		 jne	 SHORT $LL6@Ufill
$LN5@Ufill:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1649 :     }

  0003a	5d		 pop	 ebp
  0003b	c2 0c 00	 ret	 12			; 0000000cH
?_Ufill@?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@AAEPAVCSphereCollisionInstance@@PAV3@IU_Value_init_tag@2@@Z ENDP ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::_Ufill
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??1?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@QAE@XZ PROC ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::~vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >, COMDAT
; _this$ = ecx

; 711  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00004	8b 37		 mov	 esi, DWORD PTR [edi]
  00006	85 f6		 test	 esi, esi
  00008	74 54		 je	 SHORT $LN4@vector

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000a	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0000d	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00012	2b ce		 sub	 ecx, esi
  00014	f7 e9		 imul	 ecx
  00016	c1 fa 03	 sar	 edx, 3
  00019	8b c2		 mov	 eax, edx
  0001b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001e	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00020	8d 0c 80	 lea	 ecx, DWORD PTR [eax+eax*4]
  00023	c1 e1 02	 shl	 ecx, 2

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0002c	72 12		 jb	 SHORT $LN20@vector

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0002e	8b 56 fc	 mov	 edx, DWORD PTR [esi-4]
  00031	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00034	2b f2		 sub	 esi, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00036	8d 46 fc	 lea	 eax, DWORD PTR [esi-4]
  00039	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0003c	77 23		 ja	 SHORT $LN17@vector

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0003e	8b f2		 mov	 esi, edx
$LN20@vector:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00040	51		 push	 ecx
  00041	56		 push	 esi
  00042	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  00047	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  0004d	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00050	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 1769 :             _Myend   = nullptr;

  00057	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
$LN4@vector:
  0005e	5f		 pop	 edi

; 717  :     }

  0005f	5e		 pop	 esi
  00060	c3		 ret	 0
$LN17@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00061	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN25@vector:
  00066	cc		 int	 3
??1?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@QAE@XZ ENDP ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::~vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@CAXXZ PROC ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@CAXXZ ENDP ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Destroy@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEXPAUSHitData@NRaceData@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEXPAUSHitData@NRaceData@@0@Z PROC ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Destroy, COMDAT
; _this$ = ecx

; 1678 :     _CONSTEXPR20_CONTAINER void _Destroy(pointer _First, pointer _Last) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1679 :         // destroy [_First, _Last) using allocator
; 1680 :         _Destroy_range(_First, _Last, _Getal());

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 0f		 je	 SHORT $LN5@Destroy
  0000f	90		 npad	 1
$LL6@Destroy:
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ??1SHitData@NRaceData@@QAE@XZ
  00017	83 c6 2c	 add	 esi, 44			; 0000002cH
  0001a	3b f7		 cmp	 esi, edi
  0001c	75 f2		 jne	 SHORT $LL6@Destroy
$LN5@Destroy:
  0001e	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1681 :     }

  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
?_Destroy@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEXPAUSHitData@NRaceData@@0@Z ENDP ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Umove@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEPAUSHitData@NRaceData@@PAU34@00@Z
_TEXT	SEGMENT
__Backout$2 = -24					; size = 12
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
?_Umove@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEPAUSHitData@NRaceData@@PAU34@00@Z PROC ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Umove, COMDAT
; _this$ = ecx

; 1657 :     _CONSTEXPR20_CONTAINER pointer _Umove(pointer _First, pointer _Last, pointer _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Umove@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEPAUSHitData@NRaceData@@PAU34@00@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1620 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  0002a	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]

; 1717 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]

; 1620 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00030	89 7d e8	 mov	 DWORD PTR __Backout$2[ebp], edi
  00033	89 7d ec	 mov	 DWORD PTR __Backout$2[ebp+4], edi
  00036	89 5d f0	 mov	 DWORD PTR __Backout$2[ebp+8], ebx

; 1730 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  00039	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  00040	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00043	74 19		 je	 SHORT $LN35@Umove
$LL6@Umove:

; 1631 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00045	56		 push	 esi
  00046	57		 push	 edi
  00047	53		 push	 ebx
  00048	e8 00 00 00 00	 call	 ??$construct@USHitData@NRaceData@@U12@@?$_Default_allocator_traits@V?$allocator@USHitData@NRaceData@@@std@@@std@@SAXAAV?$allocator@USHitData@NRaceData@@@1@QAUSHitData@NRaceData@@$$QAU34@@Z ; std::_Default_allocator_traits<std::allocator<NRaceData::SHitData> >::construct<NRaceData::SHitData,NRaceData::SHitData>

; 1632 :         ++_Last;

  0004d	83 c7 2c	 add	 edi, 44			; 0000002cH

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  00050	83 c6 2c	 add	 esi, 44			; 0000002cH

; 1631 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1632 :         ++_Last;

  00056	89 7d ec	 mov	 DWORD PTR __Backout$2[ebp+4], edi

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  00059	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  0005c	75 e7		 jne	 SHORT $LL6@Umove
$LN35@Umove:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1660 :     }

  0005e	8b c7		 mov	 eax, edi
  00060	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00063	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006a	59		 pop	 ecx
  0006b	5f		 pop	 edi
  0006c	5e		 pop	 esi
  0006d	5b		 pop	 ebx
  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Umove@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEPAUSHitData@NRaceData@@PAU34@00@Z$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Backout$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<NRaceData::SHitData> >::~_Uninitialized_backout_al<std::allocator<NRaceData::SHitData> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?_Umove@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEPAUSHitData@NRaceData@@PAU34@00@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Umove@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEPAUSHitData@NRaceData@@PAU34@00@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Umove@?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@AAEPAUSHitData@NRaceData@@PAU34@00@Z ENDP ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::_Umove
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ?deallocate@?$allocator@USHitData@NRaceData@@@std@@QAEXQAUSHitData@NRaceData@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@USHitData@NRaceData@@@std@@QAEXQAUSHitData@NRaceData@@I@Z PROC ; std::allocator<NRaceData::SHitData>::deallocate, COMDAT
; _this$ = ecx

; 833  :     _CONSTEXPR20_DYNALLOC void deallocate(_Ty* const _Ptr, const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 834  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00003	6b 4d 0c 2c	 imul	 ecx, DWORD PTR __Count$[ebp], 44
  00007	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0000a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00010	72 12		 jb	 SHORT $LN15@deallocate

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00012	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00015	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00018	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0001a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00020	77 10		 ja	 SHORT $LN12@deallocate

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00022	8b c2		 mov	 eax, edx
$LN15@deallocate:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00024	51		 push	 ecx
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002b	83 c4 08	 add	 esp, 8

; 836  :     }

  0002e	5d		 pop	 ebp
  0002f	c2 08 00	 ret	 8
$LN12@deallocate:

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00032	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN18@deallocate:
  00037	cc		 int	 3
?deallocate@?$allocator@USHitData@NRaceData@@@std@@QAEXQAUSHitData@NRaceData@@I@Z ENDP ; std::allocator<NRaceData::SHitData>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??0SHitData@NRaceData@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Sentinel$2 = -24					; size = 8
__Right_size$1$ = -20					; size = 4
_this$ = -20						; size = 4
__Result$1$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
$T3 = 8							; size = 1
tv863 = 8						; size = 4
___that$ = 8						; size = 4
??0SHitData@NRaceData@@QAE@ABU01@@Z PROC		; NRaceData::SHitData::SHitData, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0SHitData@NRaceData@@QAE@ABU01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f1		 mov	 esi, ecx
  00029	89 75 e4	 mov	 DWORD PTR _this$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0002c	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0002f	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00036	8b 01		 mov	 eax, DWORD PTR [ecx]
  00038	89 06		 mov	 DWORD PTR [esi], eax
  0003a	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0003d	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00040	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00043	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 2920 :         auto& _Right_data             = _Right._Mypair._Myval2;

  00046	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]

; 2355 :     size_type _Mysize = 0; // current length of string

  00049	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0

; 2356 :     size_type _Myres  = 0; // current storage reserved for string

  00050	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 2306 :         if (_Large_string_engaged()) {

  00057	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2921 :         const size_type _Right_size   = _Right_data._Mysize;

  0005b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0005e	89 45 f0	 mov	 DWORD PTR __Result$1$[ebp], eax
  00061	89 4d ec	 mov	 DWORD PTR __Right_size$1$[ebp], ecx

; 2306 :         if (_Large_string_engaged()) {

  00064	72 05		 jb	 SHORT $LN19@SHitData

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00066	8b 00		 mov	 eax, DWORD PTR [eax]
  00068	89 45 f0	 mov	 DWORD PTR __Result$1$[ebp], eax
$LN19@SHitData:

; 2933 :         if (_Stay_small) { // stay small, don't allocate

  0006b	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0006e	73 0e		 jae	 SHORT $LN16@SHitData

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00070	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 2936 :             _My_data._Myres  = _BUF_SIZE - 1;

  00073	bf 0f 00 00 00	 mov	 edi, 15			; 0000000fH

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00078	0f 11 46 0c	 movups	 XMMWORD PTR [esi+12], xmm0

; 2937 :             return;

  0007c	eb 50		 jmp	 SHORT $LN15@SHitData
$LN16@SHitData:

; 2938 :         }
; 2939 : 
; 2940 :         auto& _Al                     = _Getal();
; 2941 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  0007e	8b f9		 mov	 edi, ecx
  00080	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00085	83 cf 0f	 or	 edi, 15			; 0000000fH
  00088	3b f8		 cmp	 edi, eax
  0008a	0f 47 f8	 cmova	 edi, eax

; 2942 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  0008d	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00090	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00095	72 0d		 jb	 SHORT $LN30@SHitData

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00097	50		 push	 eax
  00098	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0009d	83 c4 04	 add	 esp, 4
  000a0	8b c8		 mov	 ecx, eax
  000a2	eb 13		 jmp	 SHORT $LN29@SHitData
$LN30@SHitData:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  000a4	85 c0		 test	 eax, eax
  000a6	74 0d		 je	 SHORT $LN31@SHitData

; 85   :         return ::operator new(_Bytes);

  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000ae	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  000b1	8b c8		 mov	 ecx, eax
  000b3	eb 02		 jmp	 SHORT $LN29@SHitData
$LN31@SHitData:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  000b5	33 c9		 xor	 ecx, ecx
$LN29@SHitData:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2950 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  000b7	8b 45 ec	 mov	 eax, DWORD PTR __Right_size$1$[ebp]
  000ba	40		 inc	 eax
  000bb	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000be	50		 push	 eax
  000bf	ff 75 f0	 push	 DWORD PTR __Result$1$[ebp]
  000c2	51		 push	 ecx
  000c3	e8 00 00 00 00	 call	 _memcpy
  000c8	8b 4d ec	 mov	 ecx, DWORD PTR __Right_size$1$[ebp]
  000cb	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN15@SHitData:
  000ce	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1395 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  000d5	89 4e 1c	 mov	 DWORD PTR [esi+28], ecx
  000d8	89 7e 20	 mov	 DWORD PTR [esi+32], edi
  000db	8d 7e 24	 lea	 edi, DWORD PTR [esi+36]
  000de	89 7d ec	 mov	 DWORD PTR _this$[ebp], edi

; 85   :         return ::operator new(_Bytes);

  000e1	6a 30		 push	 48			; 00000030H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 441  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  000e3	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  000e9	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 772  :     _Tree_head_scoped_ptr(_Alnode& _Al_, _Scary_val& _Mycont_) : _Al(_Al_), _Mycont(_STD addressof(_Mycont_)) {

  000f0	89 7d e8	 mov	 DWORD PTR __Sentinel$2[ebp], edi
  000f3	89 7d ec	 mov	 DWORD PTR __Sentinel$2[ebp+4], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 85   :         return ::operator new(_Bytes);

  000f6	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000fb	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 350  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  000fe	89 00		 mov	 DWORD PTR [eax], eax

; 351  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  00100	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 352  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  00103	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 353  :         _Pnode->_Color = _Black;

  00106	66 c7 40 0c 01
	01		 mov	 WORD PTR [eax+12], 257	; 00000101H

; 773  :         _Mycont->_Myhead = _Alnode::value_type::_Buyheadnode(_Al);

  0010c	89 07		 mov	 DWORD PTR [edi], eax

; 1632 :         _Scary->_Myhead->_Parent = _Copy_nodes(_Right_scary->_Myhead->_Parent, _Scary->_Myhead, _Movefl);

  0010e	ff 75 08	 push	 DWORD PTR $T3[ebp]
  00111	8b cf		 mov	 ecx, edi

; 907  :         _Tree_head_scoped_ptr<_Alnode, _Scary_val> _Sentinel(_Getal(), *_Scary);

  00113	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 1632 :         _Scary->_Myhead->_Parent = _Copy_nodes(_Right_scary->_Myhead->_Parent, _Scary->_Myhead, _Movefl);

  00117	50		 push	 eax
  00118	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0011b	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  0011e	ff 70 04	 push	 DWORD PTR [eax+4]
  00121	e8 00 00 00 00	 call	 ??$_Copy_nodes@U_Copy_tag@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@PAU21@0U_Copy_tag@01@@Z ; std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_nodes<std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Copy_tag>
  00126	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00128	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1633 :         _Scary->_Mysize          = _Right_scary->_Mysize;

  0012b	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0012e	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  00131	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 1634 :         if (!_Scary->_Myhead->_Parent->_Isnil) { // nonempty tree, look for new smallest and largest

  00134	8b 07		 mov	 eax, DWORD PTR [edi]
  00136	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00139	80 7a 0d 00	 cmp	 BYTE PTR [edx+13], 0
  0013d	75 36		 jne	 SHORT $LN69@SHitData

; 457  :         while (!_Pnode->_Left->_Isnil) {

  0013f	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00141	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00145	75 0e		 jne	 SHORT $LN74@SHitData
$LL73@SHitData:
  00147	8b 01		 mov	 eax, DWORD PTR [ecx]

; 458  :             _Pnode = _Pnode->_Left;

  00149	8b d1		 mov	 edx, ecx
  0014b	8b c8		 mov	 ecx, eax
  0014d	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00151	74 f4		 je	 SHORT $LL73@SHitData
  00153	8b 07		 mov	 eax, DWORD PTR [edi]
$LN74@SHitData:

; 1635 :             _Scary->_Myhead->_Left  = _Scary_val::_Min(_Scary->_Myhead->_Parent);

  00155	89 10		 mov	 DWORD PTR [eax], edx

; 1636 :             _Scary->_Myhead->_Right = _Scary_val::_Max(_Scary->_Myhead->_Parent);

  00157	8b 17		 mov	 edx, DWORD PTR [edi]
  00159	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]

; 449  :         while (!_Pnode->_Right->_Isnil) {

  0015c	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015f	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00163	75 0b		 jne	 SHORT $LN78@SHitData
$LL77@SHitData:

; 450  :             _Pnode = _Pnode->_Right;

  00165	8b c8		 mov	 ecx, eax
  00167	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0016a	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0016e	74 f5		 je	 SHORT $LL77@SHitData
$LN78@SHitData:

; 1636 :             _Scary->_Myhead->_Right = _Scary_val::_Max(_Scary->_Myhead->_Parent);

  00170	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1637 :         } else { // empty tree, just tidy head pointers

  00173	eb 07		 jmp	 SHORT $LN95@SHitData
$LN69@SHitData:

; 1638 :             _Scary->_Myhead->_Left  = _Scary->_Myhead;

  00175	89 00		 mov	 DWORD PTR [eax], eax

; 1639 :             _Scary->_Myhead->_Right = _Scary->_Myhead;

  00177	8b 07		 mov	 eax, DWORD PTR [edi]
  00179	89 40 08	 mov	 DWORD PTR [eax+8], eax
$LN95@SHitData:
  0017c	8b c6		 mov	 eax, esi
  0017e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00181	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00188	59		 pop	 ecx
  00189	5f		 pop	 edi
  0018a	5e		 pop	 esi
  0018b	8b e5		 mov	 esp, ebp
  0018d	5d		 pop	 ebp
  0018e	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SHitData@NRaceData@@QAE@ABU01@@Z$0:
  00000	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0SHitData@NRaceData@@QAE@ABU01@@Z$5:
  0000b	8d 4d e8	 lea	 ecx, DWORD PTR __Sentinel$2[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@2@@std@@QAE@XZ ; std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > > >::~_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > > >
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
  00017	cc		 int	 3
__ehhandler$??0SHitData@NRaceData@@QAE@ABU01@@Z:
  00018	90		 npad	 1
  00019	90		 npad	 1
  0001a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00021	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0SHitData@NRaceData@@QAE@ABU01@@Z
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0SHitData@NRaceData@@QAE@ABU01@@Z ENDP		; NRaceData::SHitData::SHitData
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??1SHitData@NRaceData@@QAE@XZ
_TEXT	SEGMENT
??1SHitData@NRaceData@@QAE@XZ PROC			; NRaceData::SHitData::~SHitData, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 1094 :         _Scary->_Erase_head(_Getal());

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 4e 24	 lea	 ecx, DWORD PTR [esi+36]
  00006	51		 push	 ecx
  00007	e8 00 00 00 00	 call	 ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  0000c	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  0000f	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 28		 jb	 SHORT $LN20@SHitData
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00014	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00017	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00018	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001e	72 12		 jb	 SHORT $LN30@SHitData

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00020	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00023	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00026	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00028	83 c0 fc	 add	 eax, -4			; fffffffcH
  0002b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002e	77 20		 ja	 SHORT $LN27@SHitData

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00030	8b c2		 mov	 eax, edx
$LN30@SHitData:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00032	51		 push	 ecx
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00039	83 c4 08	 add	 esp, 8
$LN20@SHitData:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  0003c	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00043	c7 46 20 0f 00
	00 00		 mov	 DWORD PTR [esi+32], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004a	c6 46 0c 00	 mov	 BYTE PTR [esi+12], 0
  0004e	5e		 pop	 esi
  0004f	c3		 ret	 0
$LN27@SHitData:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00050	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN36@SHitData:
  00055	cc		 int	 3
??1SHitData@NRaceData@@QAE@XZ ENDP			; NRaceData::SHitData::~SHitData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??0SHitData@NRaceData@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0SHitData@NRaceData@@QAE@XZ PROC			; NRaceData::SHitData::SHitData, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0SHitData@NRaceData@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f9		 mov	 edi, ecx
  00029	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0002c	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0

; 4596 :         _My_data._Mysize = 0;

  00033	c7 47 1c 00 00
	00 00		 mov	 DWORD PTR [edi+28], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0003a	c7 47 20 0f 00
	00 00		 mov	 DWORD PTR [edi+32], 15	; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00041	c6 47 0c 00	 mov	 BYTE PTR [edi+12], 0
  00045	8d 77 24	 lea	 esi, DWORD PTR [edi+36]
  00048	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 85   :         return ::operator new(_Bytes);

  0004f	6a 30		 push	 48			; 00000030H
  00051	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 441  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  00054	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0005a	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 85   :         return ::operator new(_Bytes);

  00061	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00066	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 350  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  00069	89 00		 mov	 DWORD PTR [eax], eax

; 351  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  0006b	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 352  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  0006e	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 353  :         _Pnode->_Color = _Black;

  00071	66 c7 40 0c 01
	01		 mov	 WORD PTR [eax+12], 257	; 00000101H

; 1925 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  00077	89 06		 mov	 DWORD PTR [esi], eax
  00079	8b c7		 mov	 eax, edi
  0007b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00085	59		 pop	 ecx
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SHitData@NRaceData@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
__ehhandler$??0SHitData@NRaceData@@QAE@XZ:
  00010	90		 npad	 1
  00011	90		 npad	 1
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0SHitData@NRaceData@@QAE@XZ
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0SHitData@NRaceData@@QAE@XZ ENDP			; NRaceData::SHitData::SHitData
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\map
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\map
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
;	COMDAT ?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z
_TEXT	SEGMENT
$T4 = -80						; size = 8
_it$1$ = -72						; size = 4
_tv$ = -68						; size = 4
_this$GSCopy$1$ = -64					; size = 4
_time$5 = -60						; size = 4
__Loc$1$ = -56						; size = 4
__Head$1$ = -56						; size = 4
__Myhead$1$ = -52					; size = 4
_rTextFileLoader$GSCopy$1$ = -52			; size = 4
__Result$1$ = -52					; size = 4
__Result$1$ = -52					; size = 4
__Result$1$ = -52					; size = 4
tv2511 = -45						; size = 1
tv2510 = -45						; size = 1
tv2508 = -45						; size = 1
tv2506 = -45						; size = 1
_hp$6 = -44						; size = 28
$T7 = -40						; size = 24
$T8 = -40						; size = 24
$T9 = -40						; size = 24
$T10 = -40						; size = 24
$T11 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z PROC ; NRaceData::SHitData::Load, COMDAT
; _this$ = ecx

; 43   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f1		 mov	 esi, ecx
  0002c	89 75 c0	 mov	 DWORD PTR _this$GSCopy$1$[ebp], esi
  0002f	8b 7d 08	 mov	 edi, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2521 :         assign(_Ptr);

  00032	8d 4d d8	 lea	 ecx, DWORD PTR $T11[ebp]

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00035	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T11[ebp], 0

; 2521 :         assign(_Ptr);

  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@CPENFGPA@attackingstarttime@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 43   : {

  00041	89 7d cc	 mov	 DWORD PTR _rTextFileLoader$GSCopy$1$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4596 :         _My_data._Mysize = 0;

  00044	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T11[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0004b	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T11[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00052	c6 45 d8 00	 mov	 BYTE PTR $T11[ebp], 0

; 2521 :         assign(_Ptr);

  00056	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 44   : 	if (!rTextFileLoader.GetTokenFloat("attackingstarttime", &fAttackStartTime))

  0005b	56		 push	 esi
  0005c	8d 45 d8	 lea	 eax, DWORD PTR $T11[ebp]
  0005f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00066	50		 push	 eax
  00067	8b cf		 mov	 ecx, edi
  00069	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0006e	8b 55 ec	 mov	 edx, DWORD PTR $T11[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 44   : 	if (!rTextFileLoader.GetTokenFloat("attackingstarttime", &fAttackStartTime))

  00071	85 c0		 test	 eax, eax
  00073	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007a	0f 94 c0	 sete	 al
  0007d	88 45 d3	 mov	 BYTE PTR tv2511[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00080	83 fa 10	 cmp	 edx, 16			; 00000010H
  00083	72 2f		 jb	 SHORT $LN39@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00085	8b 4d d8	 mov	 ecx, DWORD PTR $T11[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00088	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00089	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0008b	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00091	72 14		 jb	 SHORT $LN49@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00093	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00096	83 c2 23	 add	 edx, 35			; 00000023H
  00099	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0009b	83 c0 fc	 add	 eax, -4			; fffffffcH
  0009e	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a1	0f 87 5e 04 00
	00		 ja	 $LN462@Load
$LN49@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a7	52		 push	 edx
  000a8	51		 push	 ecx
  000a9	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000ae	8a 45 d3	 mov	 al, BYTE PTR tv2511[ebp]
  000b1	83 c4 08	 add	 esp, 8
$LN39@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 44   : 	if (!rTextFileLoader.GetTokenFloat("attackingstarttime", &fAttackStartTime))

  000b4	84 c0		 test	 al, al
  000b6	0f 85 2a 04 00
	00		 jne	 $LN457@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  000bc	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T10[ebp], 0

; 2521 :         assign(_Ptr);

  000c3	8d 4d d8	 lea	 ecx, DWORD PTR $T10[ebp]
  000c6	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KAKEFPLI@attackingendtime@

; 4596 :         _My_data._Mysize = 0;

  000cb	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T10[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  000d2	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T10[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000d9	88 45 d8	 mov	 BYTE PTR $T10[ebp], al

; 2521 :         assign(_Ptr);

  000dc	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 46   : 	if (!rTextFileLoader.GetTokenFloat("attackingendtime", &fAttackEndTime))

  000e1	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000e4	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000eb	50		 push	 eax
  000ec	8d 45 d8	 lea	 eax, DWORD PTR $T10[ebp]
  000ef	8b cf		 mov	 ecx, edi
  000f1	50		 push	 eax
  000f2	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000f7	8b 55 ec	 mov	 edx, DWORD PTR $T10[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 46   : 	if (!rTextFileLoader.GetTokenFloat("attackingendtime", &fAttackEndTime))

  000fa	85 c0		 test	 eax, eax
  000fc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00103	0f 94 c0	 sete	 al
  00106	88 45 d3	 mov	 BYTE PTR tv2510[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00109	83 fa 10	 cmp	 edx, 16			; 00000010H
  0010c	72 2f		 jb	 SHORT $LN79@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0010e	8b 4d d8	 mov	 ecx, DWORD PTR $T10[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00111	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00112	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00114	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0011a	72 14		 jb	 SHORT $LN89@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0011c	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0011f	83 c2 23	 add	 edx, 35			; 00000023H
  00122	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00124	83 c0 fc	 add	 eax, -4			; fffffffcH
  00127	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0012a	0f 87 da 03 00
	00		 ja	 $LN463@Load
$LN89@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00130	52		 push	 edx
  00131	51		 push	 ecx
  00132	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00137	8a 45 d3	 mov	 al, BYTE PTR tv2510[ebp]
  0013a	83 c4 08	 add	 esp, 8
$LN79@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 46   : 	if (!rTextFileLoader.GetTokenFloat("attackingendtime", &fAttackEndTime))

  0013d	84 c0		 test	 al, al
  0013f	0f 85 a1 03 00
	00		 jne	 $LN457@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00145	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T9[ebp], 0

; 2521 :         assign(_Ptr);

  0014c	8d 4d d8	 lea	 ecx, DWORD PTR $T9[ebp]
  0014f	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MMIDKEHG@attackingbone@

; 4596 :         _My_data._Mysize = 0;

  00154	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T9[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0015b	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T9[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00162	88 45 d8	 mov	 BYTE PTR $T9[ebp], al

; 2521 :         assign(_Ptr);

  00165	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 49   : 	if (!rTextFileLoader.GetTokenString("attackingbone", &strBoneName))

  0016a	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  0016d	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00174	50		 push	 eax
  00175	8d 45 d8	 lea	 eax, DWORD PTR $T9[ebp]
  00178	8b cf		 mov	 ecx, edi
  0017a	50		 push	 eax
  0017b	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00180	8b 55 ec	 mov	 edx, DWORD PTR $T9[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 49   : 	if (!rTextFileLoader.GetTokenString("attackingbone", &strBoneName))

  00183	85 c0		 test	 eax, eax
  00185	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0018c	0f 94 c0	 sete	 al
  0018f	88 45 d3	 mov	 BYTE PTR tv2508[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00192	83 fa 10	 cmp	 edx, 16			; 00000010H
  00195	72 2f		 jb	 SHORT $LN118@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00197	8b 4d d8	 mov	 ecx, DWORD PTR $T9[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0019a	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0019b	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0019d	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  001a3	72 14		 jb	 SHORT $LN128@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  001a5	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  001a8	83 c2 23	 add	 edx, 35			; 00000023H
  001ab	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001ad	83 c0 fc	 add	 eax, -4			; fffffffcH
  001b0	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  001b3	0f 87 56 03 00
	00		 ja	 $LN464@Load
$LN128@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  001b9	52		 push	 edx
  001ba	51		 push	 ecx
  001bb	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  001c0	8a 45 d3	 mov	 al, BYTE PTR tv2508[ebp]
  001c3	83 c4 08	 add	 esp, 8
$LN118@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 49   : 	if (!rTextFileLoader.GetTokenString("attackingbone", &strBoneName))

  001c6	84 c0		 test	 al, al
  001c8	74 0d		 je	 SHORT $LN6@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3092 :         return assign(_Ptr);

  001ca	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  001cf	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  001d2	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN6@Load:

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  001d7	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T8[ebp], 0

; 2521 :         assign(_Ptr);

  001de	8d 4d d8	 lea	 ecx, DWORD PTR $T8[ebp]
  001e1	68 00 00 00 00	 push	 OFFSET ??_C@_0N@MMFFHHOI@weaponlength@

; 4596 :         _My_data._Mysize = 0;

  001e6	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T8[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  001ed	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T8[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  001f4	c6 45 d8 00	 mov	 BYTE PTR $T8[ebp], 0

; 2521 :         assign(_Ptr);

  001f8	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 51   : 	if (!rTextFileLoader.GetTokenFloat("weaponlength",&fWeaponLength))

  001fd	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00200	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  00207	50		 push	 eax
  00208	8d 45 d8	 lea	 eax, DWORD PTR $T8[ebp]
  0020b	8b cf		 mov	 ecx, edi
  0020d	50		 push	 eax
  0020e	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00213	8b 55 ec	 mov	 edx, DWORD PTR $T8[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 51   : 	if (!rTextFileLoader.GetTokenFloat("weaponlength",&fWeaponLength))

  00216	85 c0		 test	 eax, eax
  00218	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0021f	0f 94 c0	 sete	 al
  00222	88 45 d3	 mov	 BYTE PTR tv2506[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00225	83 fa 10	 cmp	 edx, 16			; 00000010H
  00228	72 2f		 jb	 SHORT $LN159@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0022a	8b 4d d8	 mov	 ecx, DWORD PTR $T8[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0022d	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0022e	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00230	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00236	72 14		 jb	 SHORT $LN169@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00238	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0023b	83 c2 23	 add	 edx, 35			; 00000023H
  0023e	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00240	83 c0 fc	 add	 eax, -4			; fffffffcH
  00243	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00246	0f 87 c8 02 00
	00		 ja	 $LN465@Load
$LN169@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0024c	52		 push	 edx
  0024d	51		 push	 ecx
  0024e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00253	8a 45 d3	 mov	 al, BYTE PTR tv2506[ebp]
  00256	83 c4 08	 add	 esp, 8
$LN159@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 51   : 	if (!rTextFileLoader.GetTokenFloat("weaponlength",&fWeaponLength))

  00259	84 c0		 test	 al, al
  0025b	74 07		 je	 SHORT $LN7@Load

; 52   : 		fWeaponLength = 0.0f;

  0025d	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN7@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 1350 :         auto _Head = _Scary->_Myhead;

  00264	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 54   : 	mapHitPosition.clear();

  00267	8d 7e 24	 lea	 edi, DWORD PTR [esi+36]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 1350 :         auto _Head = _Scary->_Myhead;

  0026a	89 45 c8	 mov	 DWORD PTR __Head$1$[ebp], eax

; 1351 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

  0026d	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 749  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00270	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00274	75 23		 jne	 SHORT $LN178@Load
$LL177@Load:

; 750  :             _Erase_tree(_Al, _Rootnode->_Right);

  00276	ff 76 08	 push	 DWORD PTR [esi+8]
  00279	8b cf		 mov	 ecx, edi
  0027b	57		 push	 edi
  0027c	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 616  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00281	8b c6		 mov	 eax, esi

; 617  :     _Val         = static_cast<_Other&&>(_New_val);

  00283	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00285	6a 30		 push	 48			; 00000030H
  00287	50		 push	 eax
  00288	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0028d	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 749  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00290	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00294	74 e0		 je	 SHORT $LL177@Load
  00296	8b 45 c8	 mov	 eax, DWORD PTR __Head$1$[ebp]
$LN178@Load:

; 1352 :         _Head->_Parent  = _Head;

  00299	89 40 04	 mov	 DWORD PTR [eax+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2521 :         assign(_Ptr);

  0029c	8d 4d d8	 lea	 ecx, DWORD PTR $T7[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 1353 :         _Head->_Left    = _Head;

  0029f	89 00		 mov	 DWORD PTR [eax], eax

; 1354 :         _Head->_Right   = _Head;

  002a1	89 40 08	 mov	 DWORD PTR [eax+8], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  002a4	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T7[ebp], 0

; 2521 :         assign(_Ptr);

  002ab	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IHNFHPGN@hitposition@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 1355 :         _Scary->_Mysize = 0;

  002b0	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4596 :         _My_data._Mysize = 0;

  002b7	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T7[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  002be	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T7[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  002c5	c6 45 d8 00	 mov	 BYTE PTR $T7[ebp], 0

; 2521 :         assign(_Ptr);

  002c9	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 57   : 	if (rTextFileLoader.GetTokenVector("hitposition",&tv))

  002ce	8b 4d cc	 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  002d1	8d 45 bc	 lea	 eax, DWORD PTR _tv$[ebp]
  002d4	50		 push	 eax
  002d5	8d 45 d8	 lea	 eax, DWORD PTR $T7[ebp]
  002d8	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  002df	50		 push	 eax
  002e0	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  002e5	8b 55 ec	 mov	 edx, DWORD PTR $T7[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 57   : 	if (rTextFileLoader.GetTokenVector("hitposition",&tv))

  002e8	8b f0		 mov	 esi, eax
  002ea	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  002f1	83 fa 10	 cmp	 edx, 16			; 00000010H
  002f4	72 2c		 jb	 SHORT $LN231@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002f6	8b 4d d8	 mov	 ecx, DWORD PTR $T7[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  002f9	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002fa	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  002fc	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00302	72 14		 jb	 SHORT $LN241@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00304	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00307	83 c2 23	 add	 edx, 35			; 00000023H
  0030a	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0030c	83 c0 fc	 add	 eax, -4			; fffffffcH
  0030f	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00312	0f 87 01 02 00
	00		 ja	 $LN466@Load
$LN241@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00318	52		 push	 edx
  00319	51		 push	 ecx
  0031a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0031f	83 c4 08	 add	 esp, 8
$LN231@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 57   : 	if (rTextFileLoader.GetTokenVector("hitposition",&tv))

  00322	85 f6		 test	 esi, esi
  00324	0f 84 b8 01 00
	00		 je	 $LN3@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0032a	8b 45 bc	 mov	 eax, DWORD PTR _tv$[ebp]
  0032d	8b 30		 mov	 esi, DWORD PTR [eax]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 61   : 		while(it!=tv->end())

  0032f	3b 70 04	 cmp	 esi, DWORD PTR [eax+4]
  00332	0f 84 aa 01 00
	00		 je	 $LN3@Load
  00338	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL2@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 289  :         _Vector_iterator _Tmp = *this;

  00340	8b c6		 mov	 eax, esi

; 78   :         ++_Ptr;

  00342	8d 7e 18	 lea	 edi, DWORD PTR [esi+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  00345	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00349	72 02		 jb	 SHORT $LN269@Load

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  0034b	8b 00		 mov	 eax, DWORD PTR [eax]
$LN269@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 65   : 			time = atof(it++->c_str());

  0034d	50		 push	 eax
  0034e	e8 00 00 00 00	 call	 _atof
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 78   :         ++_Ptr;

  00353	83 c6 30	 add	 esi, 48			; 00000030H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 65   : 			time = atof(it++->c_str());

  00356	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  00359	83 7f 14 10	 cmp	 DWORD PTR [edi+20], 16	; 00000010H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 65   : 			time = atof(it++->c_str());

  0035d	d9 5d c4	 fstp	 DWORD PTR _time$5[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 78   :         ++_Ptr;

  00360	89 75 cc	 mov	 DWORD PTR __Result$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  00363	72 02		 jb	 SHORT $LN280@Load

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00365	8b 3f		 mov	 edi, DWORD PTR [edi]
$LN280@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 66   : 			hp.v3LastPosition.x = atof(it++->c_str());

  00367	57		 push	 edi
  00368	e8 00 00 00 00	 call	 _atof
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  0036d	8b 45 cc	 mov	 eax, DWORD PTR __Result$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 78   :         ++_Ptr;

  00370	8d 7e 18	 lea	 edi, DWORD PTR [esi+24]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 66   : 			hp.v3LastPosition.x = atof(it++->c_str());

  00373	83 c4 04	 add	 esp, 4
  00376	d9 5d e0	 fstp	 DWORD PTR _hp$6[ebp+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  00379	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0037d	72 02		 jb	 SHORT $LN291@Load

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  0037f	8b 00		 mov	 eax, DWORD PTR [eax]
$LN291@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 67   : 			hp.v3LastPosition.y = atof(it++->c_str());

  00381	50		 push	 eax
  00382	e8 00 00 00 00	 call	 _atof
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 78   :         ++_Ptr;

  00387	83 c6 30	 add	 esi, 48			; 00000030H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 67   : 			hp.v3LastPosition.y = atof(it++->c_str());

  0038a	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  0038d	83 7f 14 10	 cmp	 DWORD PTR [edi+20], 16	; 00000010H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 67   : 			hp.v3LastPosition.y = atof(it++->c_str());

  00391	d9 5d e4	 fstp	 DWORD PTR _hp$6[ebp+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 78   :         ++_Ptr;

  00394	89 75 cc	 mov	 DWORD PTR __Result$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  00397	72 02		 jb	 SHORT $LN302@Load

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00399	8b 3f		 mov	 edi, DWORD PTR [edi]
$LN302@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 68   : 			hp.v3LastPosition.z = atof(it++->c_str());

  0039b	57		 push	 edi
  0039c	e8 00 00 00 00	 call	 _atof
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  003a1	8b 45 cc	 mov	 eax, DWORD PTR __Result$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 78   :         ++_Ptr;

  003a4	8d 7e 18	 lea	 edi, DWORD PTR [esi+24]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 68   : 			hp.v3LastPosition.z = atof(it++->c_str());

  003a7	83 c4 04	 add	 esp, 4
  003aa	d9 5d e8	 fstp	 DWORD PTR _hp$6[ebp+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  003ad	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  003b1	72 02		 jb	 SHORT $LN313@Load

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  003b3	8b 00		 mov	 eax, DWORD PTR [eax]
$LN313@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 69   : 			hp.v3Position.x = atof(it++->c_str());

  003b5	50		 push	 eax
  003b6	e8 00 00 00 00	 call	 _atof
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 78   :         ++_Ptr;

  003bb	83 c6 30	 add	 esi, 48			; 00000030H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 69   : 			hp.v3Position.x = atof(it++->c_str());

  003be	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  003c1	83 7f 14 10	 cmp	 DWORD PTR [edi+20], 16	; 00000010H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 69   : 			hp.v3Position.x = atof(it++->c_str());

  003c5	d9 5d d4	 fstp	 DWORD PTR _hp$6[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 78   :         ++_Ptr;

  003c8	89 75 cc	 mov	 DWORD PTR __Result$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  003cb	72 02		 jb	 SHORT $LN324@Load

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  003cd	8b 3f		 mov	 edi, DWORD PTR [edi]
$LN324@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 70   : 			hp.v3Position.y = atof(it++->c_str());

  003cf	57		 push	 edi
  003d0	e8 00 00 00 00	 call	 _atof
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  003d5	8b 45 cc	 mov	 eax, DWORD PTR __Result$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 78   :         ++_Ptr;

  003d8	83 c6 18	 add	 esi, 24			; 00000018H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 70   : 			hp.v3Position.y = atof(it++->c_str());

  003db	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 78   :         ++_Ptr;

  003de	89 75 b8	 mov	 DWORD PTR _it$1$[ebp], esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 70   : 			hp.v3Position.y = atof(it++->c_str());

  003e1	d9 5d d8	 fstp	 DWORD PTR _hp$6[ebp+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  003e4	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  003e8	72 02		 jb	 SHORT $LN335@Load

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  003ea	8b 00		 mov	 eax, DWORD PTR [eax]
$LN335@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 71   : 			hp.v3Position.z = atof(it++->c_str());

  003ec	50		 push	 eax
  003ed	e8 00 00 00 00	 call	 _atof
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 1605 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  003f2	8b 4d c0	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 71   : 			hp.v3Position.z = atof(it++->c_str());

  003f5	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 1607 :         while (!_Trynode->_Isnil) {

  003f8	f3 0f 10 4d c4	 movss	 xmm1, DWORD PTR _time$5[ebp]
  003fd	83 c1 24	 add	 ecx, 36			; 00000024H
  00400	33 ff		 xor	 edi, edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 71   : 			hp.v3Position.z = atof(it++->c_str());

  00402	d9 5d dc	 fstp	 DWORD PTR _hp$6[ebp+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 1605 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00405	8b 11		 mov	 edx, DWORD PTR [ecx]
  00407	89 55 cc	 mov	 DWORD PTR __Myhead$1$[ebp], edx
  0040a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0040d	89 45 c8	 mov	 DWORD PTR __Loc$1$[ebp], eax

; 1607 :         while (!_Trynode->_Isnil) {

  00410	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00414	75 22		 jne	 SHORT $LN347@Load
$LL346@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstddef

; 127  :         return _Left < _Right;

  00416	0f 2f 48 10	 comiss	 xmm1, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 1608 :             _Result._Location._Parent = _Trynode;

  0041a	89 45 c8	 mov	 DWORD PTR __Loc$1$[ebp], eax

; 1609 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  0041d	76 07		 jbe	 SHORT $LN348@Load

; 1610 :                 _Result._Location._Child = _Tree_child::_Right;
; 1611 :                 _Trynode                 = _Trynode->_Right;

  0041f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00422	33 ff		 xor	 edi, edi

; 1612 :             } else {

  00424	eb 09		 jmp	 SHORT $LN349@Load
$LN348@Load:

; 1613 :                 _Result._Location._Child = _Tree_child::_Left;
; 1614 :                 _Result._Bound           = _Trynode;

  00426	8b d0		 mov	 edx, eax
  00428	bf 01 00 00 00	 mov	 edi, 1

; 1615 :                 _Trynode                 = _Trynode->_Left;

  0042d	8b 00		 mov	 eax, DWORD PTR [eax]
$LN349@Load:

; 1607 :         while (!_Trynode->_Isnil) {

  0042f	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00433	74 e1		 je	 SHORT $LL346@Load
  00435	8b 75 b8	 mov	 esi, DWORD PTR _it$1$[ebp]
$LN347@Load:

; 1599 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00438	80 7a 0d 00	 cmp	 BYTE PTR [edx+13], 0
  0043c	75 0a		 jne	 SHORT $LN342@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstddef

; 127  :         return _Left < _Right;

  0043e	f3 0f 10 42 10	 movss	 xmm0, DWORD PTR [edx+16]
  00443	0f 2f c1	 comiss	 xmm0, xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 1599 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00446	76 76		 jbe	 SHORT $LN341@Load
$LN342@Load:

; 1623 :         if (max_size() == _Get_scary()->_Mysize) {

  00448	81 79 04 55 55
	55 05		 cmp	 DWORD PTR [ecx+4], 89478485 ; 05555555H
  0044f	0f 84 c9 00 00
	00		 je	 $LN446@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1012 :     _CONSTEXPR20_DYNALLOC explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00455	89 4d b0	 mov	 DWORD PTR $T4[ebp], ecx

; 85   :         return ::operator new(_Bytes);

  00458	6a 30		 push	 48			; 00000030H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 790  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  0045a	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1019 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00461	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0

; 85   :         return ::operator new(_Bytes);

  00468	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 270  :         : first(_Tuple_get<_Indexes1>(_STD move(_Val1))...), second(_Tuple_get<_Indexes2>(_STD move(_Val2))...) {}

  0046d	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _time$5[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 85   :         return ::operator new(_Bytes);

  00472	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 813  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  00475	8b 4d cc	 mov	 ecx, DWORD PTR __Myhead$1$[ebp]

; 792  :     }

  00478	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 270  :         : first(_Tuple_get<_Indexes1>(_STD move(_Val1))...), second(_Tuple_get<_Indexes2>(_STD move(_Val2))...) {}

  0047f	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0
  00484	0f 57 c0	 xorps	 xmm0, xmm0
  00487	0f 11 40 14	 movups	 XMMWORD PTR [eax+20], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\map

; 190  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  0048b	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 270  :         : first(_Tuple_get<_Indexes1>(_STD move(_Val1))...), second(_Tuple_get<_Indexes2>(_STD move(_Val2))...) {}

  0048c	66 0f d6 40 24	 movq	 QWORD PTR [eax+36], xmm0
  00491	c7 40 2c 00 00
	00 00		 mov	 DWORD PTR [eax+44], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 813  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  00498	89 08		 mov	 DWORD PTR [eax], ecx

; 814  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  0049a	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 815  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  0049d	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\map

; 190  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  004a0	8b 4d c0	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  004a3	57		 push	 edi
  004a4	ff 75 c8	 push	 DWORD PTR __Loc$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 816  :         this->_Ptr->_Color = _Red;

  004a7	66 c7 40 0c 00
	00		 mov	 WORD PTR [eax+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\map

; 190  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  004ad	8d 49 24	 lea	 ecx, DWORD PTR [ecx+36]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 617  :     _Val         = static_cast<_Other&&>(_New_val);

  004b0	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\map

; 190  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  004b7	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Insert_node
  004bc	8b d0		 mov	 edx, eax
$LN341@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 73   : 			mapHitPosition[time] = hp;

  004be	0f 10 45 d4	 movups	 xmm0, XMMWORD PTR _hp$6[ebp]
  004c2	8b 4d ec	 mov	 ecx, DWORD PTR _hp$6[ebp+24]
  004c5	0f 11 42 14	 movups	 XMMWORD PTR [edx+20], xmm0
  004c9	f3 0f 7e 45 e4	 movq	 xmm0, QWORD PTR _hp$6[ebp+16]
  004ce	66 0f d6 42 24	 movq	 QWORD PTR [edx+36], xmm0
  004d3	89 4a 2c	 mov	 DWORD PTR [edx+44], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  004d6	8b 45 bc	 mov	 eax, DWORD PTR _tv$[ebp]

; 154  :         return _Ptr == _Right._Ptr;

  004d9	3b 70 04	 cmp	 esi, DWORD PTR [eax+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp

; 61   : 		while(it!=tv->end())

  004dc	0f 85 5e fe ff
	ff		 jne	 $LL2@Load
$LN3@Load:

; 74   : 		}
; 75   : 	}
; 76   : 
; 77   : 	return true;

  004e2	b0 01		 mov	 al, 1
  004e4	eb 02		 jmp	 SHORT $LN1@Load
$LN457@Load:

; 47   : 		return false;

  004e6	32 c0		 xor	 al, al
$LN1@Load:

; 78   : }

  004e8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004eb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  004f2	59		 pop	 ecx
  004f3	5f		 pop	 edi
  004f4	5e		 pop	 esi
  004f5	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004f8	33 cd		 xor	 ecx, ebp
  004fa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004ff	8b e5		 mov	 esp, ebp
  00501	5d		 pop	 ebp
  00502	c2 04 00	 ret	 4
$LN462@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00505	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN463@Load:
  0050a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN464@Load:
  0050f	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN465@Load:
  00514	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN466@Load:
  00519	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN446@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 1624 :             _Throw_tree_length_error();

  0051e	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN460@Load:
  00523	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T11[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T10[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$2:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR $T9[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$3:
  00018	8d 4d d8	 lea	 ecx, DWORD PTR $T8[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$4:
  00020	8d 4d d8	 lea	 ecx, DWORD PTR $T7[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z$22:
  00028	8d 4d b0	 lea	 ecx, DWORD PTR $T4[ebp]
  0002b	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
  00030	cc		 int	 3
  00031	cc		 int	 3
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
__ehhandler$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z:
  00035	90		 npad	 1
  00036	90		 npad	 1
  00037	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003e	8b 4a b0	 mov	 ecx, DWORD PTR [edx-80]
  00041	33 c8		 xor	 ecx, eax
  00043	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00048	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0004b	33 c8		 xor	 ecx, eax
  0004d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00052	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z
  00057	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Load@SHitData@NRaceData@@QAE_NAAVCTextFileLoader@@@Z ENDP ; NRaceData::SHitData::Load
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Insert_node, COMDAT
; _this$ = ecx

; 650  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 651  :         ++_Mysize;
; 652  :         const auto _Head  = _Myhead;
; 653  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 654  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 655  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 656  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 657  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 658  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 717  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 659  :             return _Newnode;
; 660  :         }
; 661  : 
; 662  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 663  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 665  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 666  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 668  :             }
; 669  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 670  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 671  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 672  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 673  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 674  :             }
; 675  :         }
; 676  : 
; 677  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 678  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 679  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 680  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 681  :                     _Pnode->_Parent->_Color          = _Black;
; 682  :                     _Parent_sibling->_Color          = _Black;
; 683  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 684  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 685  :                 } else { // parent's sibling has red and black children
; 686  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 466  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 687  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 466  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 467  : 
; 468  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 469  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 470  :         }
; 471  : 
; 472  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 473  : 
; 474  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 475  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 483  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 476  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 477  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 483  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 479  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 483  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 688  :                         _Lrotate(_Pnode);
; 689  :                     }
; 690  : 
; 691  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 692  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 693  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 487  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 488  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 489  : 
; 490  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 491  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 492  :         }
; 493  : 
; 494  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 495  : 
; 496  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 497  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 502  :         }
; 503  : 
; 504  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 694  :                 }
; 695  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 498  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 499  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 502  :         }
; 503  : 
; 504  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 694  :                 }
; 695  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 501  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 502  :         }
; 503  : 
; 504  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 694  :                 }
; 695  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 696  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 697  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 674  :             }
; 675  :         }
; 676  : 
; 677  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 698  :                     _Pnode->_Parent->_Color          = _Black;
; 699  :                     _Parent_sibling->_Color          = _Black;
; 700  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 701  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 702  :                 } else { // parent's sibling has red and black children
; 703  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 704  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 487  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 488  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 489  : 
; 490  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 491  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 492  :         }
; 493  : 
; 494  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 495  : 
; 496  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 497  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 498  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 499  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 500  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 501  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 502  :         }
; 503  : 
; 504  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 505  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 705  :                         _Rrotate(_Pnode);
; 706  :                     }
; 707  : 
; 708  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 709  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 710  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 465  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 466  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 467  : 
; 468  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 469  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 470  :         }
; 471  : 
; 472  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 473  : 
; 474  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 475  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 476  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 477  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 478  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 479  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 480  :         }
; 481  : 
; 482  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 674  :             }
; 675  :         }
; 676  : 
; 677  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 711  :                 }
; 712  :             }
; 713  :         }
; 714  : 
; 715  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 716  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 717  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Getal@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Getal, COMDAT
; _this$ = ecx

; 1943 :         return _Mypair._Myval2._Get_first();

  00000	8b c1		 mov	 eax, ecx

; 1944 :     }

  00002	c3		 ret	 0
?_Getal@?$_Tree@V?$_Tmap_traits@MUCDynamicSphereInstance@@U?$less@M@std@@V?$allocator@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@3@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<float,CDynamicSphereInstance,std::less<float>,std::allocator<std::pair<float const ,CDynamicSphereInstance> >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ?_Throw_tree_length_error@std@@YAXXZ
_TEXT	SEGMENT
?_Throw_tree_length_error@std@@YAXXZ PROC		; std::_Throw_tree_length_error, COMDAT

; 421  :     _Xlength_error("map/set too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Throw_tree:
  0000a	cc		 int	 3
?_Throw_tree_length_error@std@@YAXXZ ENDP		; std::_Throw_tree_length_error
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z
_TEXT	SEGMENT
__Old$1$ = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 3263 :     _CONSTEXPR20_CONTAINER basic_string& assign(_In_z_ const _Elem* const _Ptr) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00003	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]

; 3263 :     _CONSTEXPR20_CONTAINER basic_string& assign(_In_z_ const _Elem* const _Ptr) {

  00006	83 ec 08	 sub	 esp, 8
  00009	53		 push	 ebx
  0000a	56		 push	 esi

; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000b	8b f2		 mov	 esi, edx

; 3263 :     _CONSTEXPR20_CONTAINER basic_string& assign(_In_z_ const _Elem* const _Ptr) {

  0000d	8b d9		 mov	 ebx, ecx
  0000f	57		 push	 edi

; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00010	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL61@assign:
  00013	8a 06		 mov	 al, BYTE PTR [esi]
  00015	46		 inc	 esi
  00016	84 c0		 test	 al, al
  00018	75 f9		 jne	 SHORT $LL61@assign
  0001a	2b f1		 sub	 esi, ecx

; 3246 :         if (_Count <= _Mypair._Myval2._Myres) {

  0001c	8b 4b 14	 mov	 ecx, DWORD PTR [ebx+20]
  0001f	89 4d f8	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00022	3b f1		 cmp	 esi, ecx
  00024	77 26		 ja	 SHORT $LN6@assign

; 2296 :         value_type* _Result = _Bx._Buf;

  00026	8b fb		 mov	 edi, ebx

; 2319 :         return _BUF_SIZE <= _Myres;

  00028	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2297 :         if (_Large_string_engaged()) {

  0002b	72 02		 jb	 SHORT $LN9@assign

; 2298 :             _Result = _Unfancy(_Bx._Ptr);

  0002d	8b 3b		 mov	 edi, DWORD PTR [ebx]
$LN9@assign:

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0002f	56		 push	 esi
  00030	52		 push	 edx
  00031	57		 push	 edi

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  00032	89 73 10	 mov	 DWORD PTR [ebx+16], esi

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00035	e8 00 00 00 00	 call	 _memmove
  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0003d	c6 04 37 00	 mov	 BYTE PTR [edi+esi], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00041	8b c3		 mov	 eax, ebx
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx

; 3265 :     }

  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
$LN6@assign:

; 4508 :         if (_New_size > max_size()) {

  0004c	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH
  00052	0f 87 d4 00 00
	00		 ja	 $LN65@assign

; 4488 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00058	8b fe		 mov	 edi, esi
  0005a	83 cf 0f	 or	 edi, 15			; 0000000fH
  0005d	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4489 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00063	76 15		 jbe	 SHORT $LN23@assign

; 4490 :             return _Max;

  00065	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  0006a	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00075	83 c4 04	 add	 esp, 4
  00078	eb 52		 jmp	 SHORT $LN63@assign
$LN23@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4493 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0007a	8b d1		 mov	 edx, ecx
  0007c	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00081	d1 ea		 shr	 edx, 1
  00083	2b c2		 sub	 eax, edx
  00085	3b c8		 cmp	 ecx, eax
  00087	76 15		 jbe	 SHORT $LN24@assign

; 4494 :             return _Max;

  00089	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  0008e	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00099	83 c4 04	 add	 esp, 4
  0009c	eb 2e		 jmp	 SHORT $LN63@assign
$LN24@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4497 :         return (_STD max)(_Masked, _Old + _Old / 2);

  0009e	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  000a1	3b f8		 cmp	 edi, eax
  000a3	0f 42 f8	 cmovb	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4515 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000a6	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000a9	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  000ae	72 0b		 jb	 SHORT $LN31@assign

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000b0	50		 push	 eax
  000b1	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000b6	83 c4 04	 add	 esp, 4
  000b9	eb 11		 jmp	 SHORT $LN63@assign
$LN31@assign:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  000bb	85 c0		 test	 eax, eax
  000bd	74 0b		 je	 SHORT $LN32@assign

; 85   :         return ::operator new(_Bytes);

  000bf	50		 push	 eax
  000c0	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000c5	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  000c8	eb 02		 jmp	 SHORT $LN63@assign
$LN32@assign:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  000ca	33 c0		 xor	 eax, eax
$LN63@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000cc	56		 push	 esi
  000cd	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4523 :         _Mypair._Myval2._Mysize = _New_size;

  000d0	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000d3	50		 push	 eax

; 4523 :         _Mypair._Myval2._Mysize = _New_size;

  000d4	89 73 10	 mov	 DWORD PTR [ebx+16], esi

; 4524 :         _Mypair._Myval2._Myres  = _New_capacity;

  000d7	89 7b 14	 mov	 DWORD PTR [ebx+20], edi

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000da	e8 00 00 00 00	 call	 _memcpy

; 3258 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000df	8b 7d fc	 mov	 edi, DWORD PTR $T1[ebp]

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000e2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4526 :         if (_BUF_SIZE <= _Old_capacity) {

  000e5	8b 45 f8	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 3258 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000e8	c6 04 37 00	 mov	 BYTE PTR [edi+esi], 0

; 4526 :         if (_BUF_SIZE <= _Old_capacity) {

  000ec	83 f8 10	 cmp	 eax, 16			; 00000010H
  000ef	72 29		 jb	 SHORT $LN17@assign

; 4527 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000f1	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000f4	8b 03		 mov	 eax, DWORD PTR [ebx]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f6	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000fc	72 12		 jb	 SHORT $LN54@assign

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000fe	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00101	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00104	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00106	83 c0 fc	 add	 eax, -4			; fffffffcH
  00109	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0010c	77 19		 ja	 SHORT $LN51@assign

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0010e	8b c2		 mov	 eax, edx
$LN54@assign:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00110	51		 push	 ecx
  00111	50		 push	 eax
  00112	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00117	83 c4 08	 add	 esp, 8
$LN17@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3254 :         return _Reallocate_for(

  0011a	89 3b		 mov	 DWORD PTR [ebx], edi

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0011c	8b c3		 mov	 eax, ebx
  0011e	5f		 pop	 edi
  0011f	5e		 pop	 esi
  00120	5b		 pop	 ebx

; 3265 :     }

  00121	8b e5		 mov	 esp, ebp
  00123	5d		 pop	 ebp
  00124	c2 04 00	 ret	 4
$LN51@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00127	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN65@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4509 :             _Xlen_string(); // result too long

  0012c	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN62@assign:
  00131	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 3002 :     _CONSTEXPR20_CONTAINER ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2319 :         return _BUF_SIZE <= _Myres;

  00003	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00006	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 27		 jb	 SHORT $LN12@basic_stri
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000d	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0000e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00014	72 12		 jb	 SHORT $LN22@basic_stri

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00016	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00019	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0001e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00021	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00024	77 1f		 ja	 SHORT $LN19@basic_stri

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00026	8b c2		 mov	 eax, edx
$LN22@basic_stri:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00028	51		 push	 ecx
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	83 c4 08	 add	 esp, 8
$LN12@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00032	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00039	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00040	c6 06 00	 mov	 BYTE PTR [esi], 0
  00043	5e		 pop	 esi

; 3010 :     }

  00044	c3		 ret	 0
$LN19@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00045	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN27@basic_stri:
  0004a	cc		 int	 3
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2374 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
