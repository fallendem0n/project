; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30137.0 

	TITLE	C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\Distribute\MapUtil.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
PUBLIC	?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
PUBLIC	?_Ufill@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@AAEPAUTGradientColor@@PAU3@IU_Value_init_tag@2@@Z ; std::vector<TGradientColor,std::allocator<TGradientColor> >::_Ufill
PUBLIC	?_Xlength@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@CAXXZ ; std::vector<TGradientColor,std::allocator<TGradientColor> >::_Xlength
PUBLIC	?Environment_Init@@YAXAAUSEnvironmentData@@@Z	; Environment_Init
PUBLIC	?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z ; Environment_Load
PUBLIC	?GetInterpolatedPosition@@YAXMPAUD3DXVECTOR3@@@Z ; GetInterpolatedPosition
PUBLIC	?GetLinearInterpolation@@YAMMMM@Z		; GetLinearInterpolation
PUBLIC	?PixelPositionToAttributeCellPosition@@YAXUD3DXVECTOR3@@PAUSCellPosition@@@Z ; PixelPositionToAttributeCellPosition
PUBLIC	?AttributeCellPositionToPixelPosition@@YAXUSCellPosition@@PAUD3DXVECTOR3@@@Z ; AttributeCellPositionToPixelPosition
PUBLIC	?GetPixelPositionDistance@@YAMABUD3DXVECTOR3@@0@Z ; GetPixelPositionDistance
PUBLIC	??0CEaseOutInterpolation@@QAE@XZ		; CEaseOutInterpolation::CEaseOutInterpolation
PUBLIC	??1CEaseOutInterpolation@@UAE@XZ		; CEaseOutInterpolation::~CEaseOutInterpolation
PUBLIC	?Initialize@CEaseOutInterpolation@@QAEXXZ	; CEaseOutInterpolation::Initialize
PUBLIC	?Setup@CEaseOutInterpolation@@QAEHMMM@Z		; CEaseOutInterpolation::Setup
PUBLIC	?Interpolate@CEaseOutInterpolation@@QAEXM@Z	; CEaseOutInterpolation::Interpolate
PUBLIC	?isPlaying@CEaseOutInterpolation@@QAEHXZ	; CEaseOutInterpolation::isPlaying
PUBLIC	?GetValue@CEaseOutInterpolation@@QAEMXZ		; CEaseOutInterpolation::GetValue
PUBLIC	?GetChangingValue@CEaseOutInterpolation@@QAEMXZ	; CEaseOutInterpolation::GetChangingValue
PUBLIC	??_GCEaseOutInterpolation@@UAEPAXI@Z		; CEaseOutInterpolation::`scalar deleting destructor'
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<TGradientColor,std::allocator<TGradientColor> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_7CEaseOutInterpolation@@6B@			; CEaseOutInterpolation::`vftable'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_C@_08FINKBBAF@reserved@			; `string'
PUBLIC	??_C@_0BB@GPOHGDLH@directionallight@		; `string'
PUBLIC	??_C@_09HPKLLIJF@direction@			; `string'
PUBLIC	??_C@_0L@EGCKCJDC@background@			; `string'
PUBLIC	??_C@_06OFNJOBDK@enable@			; `string'
PUBLIC	??_C@_07KFBPAAO@diffuse@			; `string'
PUBLIC	??_C@_07LIABELBC@ambient@			; `string'
PUBLIC	??_C@_09MNKJOHH@character@			; `string'
PUBLIC	??_C@_08KNOEMJMM@material@			; `string'
PUBLIC	??_C@_08GHNOEFBP@emissive@			; `string'
PUBLIC	??_C@_03KJMBPJEB@fog@				; `string'
PUBLIC	??_C@_09BCCBMEKP@isdensity@			; `string'
PUBLIC	??_C@_0N@HJCBLCNJ@neardistance@			; `string'
PUBLIC	??_C@_0M@IOALDGCK@fardistance@			; `string'
PUBLIC	??_C@_05PEENBMOG@color@				; `string'
PUBLIC	??_C@_06EOIELIPE@filter@			; `string'
PUBLIC	??_C@_08BJBIEDIL@alphasrc@			; `string'
PUBLIC	??_C@_09DCAIHJNN@alphadest@			; `string'
PUBLIC	??_C@_06BMKANHHL@skybox@			; `string'
PUBLIC	??_C@_0BD@MANDHJLJ@btexturerendermode@		; `string'
PUBLIC	??_C@_05MHMEBBGO@scale@				; `string'
PUBLIC	??_C@_0BD@JOBCGNII@gradientlevelupper@		; `string'
PUBLIC	??_C@_0BD@MFKMAGDB@gradientlevellower@		; `string'
PUBLIC	??_C@_0BC@MAAIOOFC@frontfacefilename@		; `string'
PUBLIC	??_C@_0BB@HMLADBDH@backfacefilename@		; `string'
PUBLIC	??_C@_0BB@OKAELDDH@leftfacefilename@		; `string'
PUBLIC	??_C@_0BC@BGDBKDJG@rightfacefilename@		; `string'
PUBLIC	??_C@_0BA@ODMABPL@topfacefilename@		; `string'
PUBLIC	??_C@_0BD@PAPHNGLP@bottomfacefilename@		; `string'
PUBLIC	??_C@_0L@HPPKMJB@cloudscale@			; `string'
PUBLIC	??_C@_0M@JAHFJEDG@cloudheight@			; `string'
PUBLIC	??_C@_0BC@BBJMDDCO@cloudtexturescale@		; `string'
PUBLIC	??_C@_0L@LJBHNMFK@cloudspeed@			; `string'
PUBLIC	??_C@_0BF@KCIBJMLM@cloudtexturefilename@	; `string'
PUBLIC	??_C@_0L@DEHGKBBJ@cloudcolor@			; `string'
PUBLIC	??_C@_08OAOFNDBJ@gradient@			; `string'
PUBLIC	??_C@_09JHLBAKBC@lensflare@			; `string'
PUBLIC	??_C@_0BA@KOCEAOMM@brightnesscolor@		; `string'
PUBLIC	??_C@_0O@GEBPBGOO@maxbrightness@		; `string'
PUBLIC	??_C@_0BA@GMIEGFJG@mainflareenable@		; `string'
PUBLIC	??_C@_0BJ@EAALILHN@mainflaretexturefilename@	; `string'
PUBLIC	??_C@_0O@JBMODIIN@mainflaresize@		; `string'
PUBLIC	??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@	; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CEaseOutInterpolation@@6B@			; CEaseOutInterpolation::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCEaseOutInterpolation@@@8		; CEaseOutInterpolation `RTTI Type Descriptor'
PUBLIC	??_R3CEaseOutInterpolation@@8			; CEaseOutInterpolation::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CEaseOutInterpolation@@8			; CEaseOutInterpolation::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CEaseOutInterpolation@@8		; CEaseOutInterpolation::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@34000000
PUBLIC	__real@3c23d70a
PUBLIC	__real@3f000000
PUBLIC	__real@42480000
PUBLIC	__real@455ac000
PUBLIC	__xmm@000000003dcccccd3dcccccd3e99999a
PUBLIC	__xmm@3f800000000000000000000000000000
PUBLIC	__xmm@3f8000003f0000003f0000003f000000
PUBLIC	__xmm@3f8000003f4ccccd3f4ccccd3f4ccccd
PUBLIC	__xmm@3f8000003f8000003f8000003f800000
PUBLIC	__xmm@7fffffff7fffffff7fffffff7fffffff
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_atof:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	??0CTextFileLoader@@QAE@XZ:PROC			; CTextFileLoader::CTextFileLoader
EXTRN	??1CTextFileLoader@@UAE@XZ:PROC			; CTextFileLoader::~CTextFileLoader
EXTRN	?Load@CTextFileLoader@@QAE_NPBD@Z:PROC		; CTextFileLoader::Load
EXTRN	?SetTop@CTextFileLoader@@QAEXXZ:PROC		; CTextFileLoader::SetTop
EXTRN	?SetChildNode@CTextFileLoader@@QAEHPBD@Z:PROC	; CTextFileLoader::SetChildNode
EXTRN	?SetParentNode@CTextFileLoader@@QAEHXZ:PROC	; CTextFileLoader::SetParentNode
EXTRN	?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z:PROC ; CTextFileLoader::GetTokenVector
EXTRN	?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z:PROC ; CTextFileLoader::GetTokenBoolean
EXTRN	?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z:PROC ; CTextFileLoader::GetTokenByte
EXTRN	?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z:PROC ; CTextFileLoader::GetTokenFloat
EXTRN	?GetTokenVector2@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR2@@@Z:PROC ; CTextFileLoader::GetTokenVector2
EXTRN	?GetTokenVector3@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z:PROC ; CTextFileLoader::GetTokenVector3
EXTRN	?GetTokenDirection@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DVECTOR@@@Z:PROC ; CTextFileLoader::GetTokenDirection
EXTRN	?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXCOLOR@@@Z:PROC ; CTextFileLoader::GetTokenColor
EXTRN	?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DCOLORVALUE@@@Z:PROC ; CTextFileLoader::GetTokenColor
EXTRN	?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z:PROC ; CTextFileLoader::GetTokenString
EXTRN	??_ECEaseOutInterpolation@@UAEPAXI@Z:PROC	; CEaseOutInterpolation::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __xmm@7fffffff7fffffff7fffffff7fffffff
CONST	SEGMENT
__xmm@7fffffff7fffffff7fffffff7fffffff DB 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __xmm@3f8000003f8000003f8000003f800000
CONST	SEGMENT
__xmm@3f8000003f8000003f8000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 080H
	DB	'?', 00H, 00H, 080H, '?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f4ccccd3f4ccccd3f4ccccd
CONST	SEGMENT
__xmm@3f8000003f4ccccd3f4ccccd3f4ccccd DB 0cdH, 0ccH, 'L?', 0cdH, 0ccH, 'L'
	DB	'?', 0cdH, 0ccH, 'L?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f0000003f0000003f000000
CONST	SEGMENT
__xmm@3f8000003f0000003f0000003f000000 DB 00H, 00H, 00H, '?', 00H, 00H, 00H
	DB	'?', 00H, 00H, 00H, '?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f800000000000000000000000000000
CONST	SEGMENT
__xmm@3f800000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@000000003dcccccd3dcccccd3e99999a
CONST	SEGMENT
__xmm@000000003dcccccd3dcccccd3e99999a DB 09aH, 099H, 099H, '>', 0cdH, 0ccH
	DB	0ccH, '=', 0cdH, 0ccH, 0ccH, '=', 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __real@455ac000
CONST	SEGMENT
__real@455ac000 DD 0455ac000r			; 3500
CONST	ENDS
;	COMDAT __real@42480000
CONST	SEGMENT
__real@42480000 DD 042480000r			; 50
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3c23d70a
CONST	SEGMENT
__real@3c23d70a DD 03c23d70ar			; 0.01
CONST	ENDS
;	COMDAT __real@34000000
CONST	SEGMENT
__real@34000000 DD 034000000r			; 1.19209e-07
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CEaseOutInterpolation@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CEaseOutInterpolation@@8 DD FLAT:??_R0?AVCEaseOutInterpolation@@@8 ; CEaseOutInterpolation::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CEaseOutInterpolation@@8
rdata$r	ENDS
;	COMDAT ??_R2CEaseOutInterpolation@@8
rdata$r	SEGMENT
??_R2CEaseOutInterpolation@@8 DD FLAT:??_R1A@?0A@EA@CEaseOutInterpolation@@8 ; CEaseOutInterpolation::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CEaseOutInterpolation@@8
rdata$r	SEGMENT
??_R3CEaseOutInterpolation@@8 DD 00H			; CEaseOutInterpolation::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CEaseOutInterpolation@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCEaseOutInterpolation@@@8
data$rs	SEGMENT
??_R0?AVCEaseOutInterpolation@@@8 DD FLAT:??_7type_info@@6B@ ; CEaseOutInterpolation `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCEaseOutInterpolation@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CEaseOutInterpolation@@6B@
rdata$r	SEGMENT
??_R4CEaseOutInterpolation@@6B@ DD 00H			; CEaseOutInterpolation::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCEaseOutInterpolation@@@8
	DD	FLAT:??_R3CEaseOutInterpolation@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
CONST	SEGMENT
??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@ DB 'invalid vector subscri'
	DB	'pt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JBMODIIN@mainflaresize@
CONST	SEGMENT
??_C@_0O@JBMODIIN@mainflaresize@ DB 'mainflaresize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EAALILHN@mainflaretexturefilename@
CONST	SEGMENT
??_C@_0BJ@EAALILHN@mainflaretexturefilename@ DB 'mainflaretexturefilename'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GMIEGFJG@mainflareenable@
CONST	SEGMENT
??_C@_0BA@GMIEGFJG@mainflareenable@ DB 'mainflareenable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GEBPBGOO@maxbrightness@
CONST	SEGMENT
??_C@_0O@GEBPBGOO@maxbrightness@ DB 'maxbrightness', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KOCEAOMM@brightnesscolor@
CONST	SEGMENT
??_C@_0BA@KOCEAOMM@brightnesscolor@ DB 'brightnesscolor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09JHLBAKBC@lensflare@
CONST	SEGMENT
??_C@_09JHLBAKBC@lensflare@ DB 'lensflare', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OAOFNDBJ@gradient@
CONST	SEGMENT
??_C@_08OAOFNDBJ@gradient@ DB 'gradient', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DEHGKBBJ@cloudcolor@
CONST	SEGMENT
??_C@_0L@DEHGKBBJ@cloudcolor@ DB 'cloudcolor', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KCIBJMLM@cloudtexturefilename@
CONST	SEGMENT
??_C@_0BF@KCIBJMLM@cloudtexturefilename@ DB 'cloudtexturefilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LJBHNMFK@cloudspeed@
CONST	SEGMENT
??_C@_0L@LJBHNMFK@cloudspeed@ DB 'cloudspeed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BBJMDDCO@cloudtexturescale@
CONST	SEGMENT
??_C@_0BC@BBJMDDCO@cloudtexturescale@ DB 'cloudtexturescale', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JAHFJEDG@cloudheight@
CONST	SEGMENT
??_C@_0M@JAHFJEDG@cloudheight@ DB 'cloudheight', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HPPKMJB@cloudscale@
CONST	SEGMENT
??_C@_0L@HPPKMJB@cloudscale@ DB 'cloudscale', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PAPHNGLP@bottomfacefilename@
CONST	SEGMENT
??_C@_0BD@PAPHNGLP@bottomfacefilename@ DB 'bottomfacefilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ODMABPL@topfacefilename@
CONST	SEGMENT
??_C@_0BA@ODMABPL@topfacefilename@ DB 'topfacefilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BGDBKDJG@rightfacefilename@
CONST	SEGMENT
??_C@_0BC@BGDBKDJG@rightfacefilename@ DB 'rightfacefilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OKAELDDH@leftfacefilename@
CONST	SEGMENT
??_C@_0BB@OKAELDDH@leftfacefilename@ DB 'leftfacefilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HMLADBDH@backfacefilename@
CONST	SEGMENT
??_C@_0BB@HMLADBDH@backfacefilename@ DB 'backfacefilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MAAIOOFC@frontfacefilename@
CONST	SEGMENT
??_C@_0BC@MAAIOOFC@frontfacefilename@ DB 'frontfacefilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MFKMAGDB@gradientlevellower@
CONST	SEGMENT
??_C@_0BD@MFKMAGDB@gradientlevellower@ DB 'gradientlevellower', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JOBCGNII@gradientlevelupper@
CONST	SEGMENT
??_C@_0BD@JOBCGNII@gradientlevelupper@ DB 'gradientlevelupper', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MHMEBBGO@scale@
CONST	SEGMENT
??_C@_05MHMEBBGO@scale@ DB 'scale', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MANDHJLJ@btexturerendermode@
CONST	SEGMENT
??_C@_0BD@MANDHJLJ@btexturerendermode@ DB 'btexturerendermode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06BMKANHHL@skybox@
CONST	SEGMENT
??_C@_06BMKANHHL@skybox@ DB 'skybox', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09DCAIHJNN@alphadest@
CONST	SEGMENT
??_C@_09DCAIHJNN@alphadest@ DB 'alphadest', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08BJBIEDIL@alphasrc@
CONST	SEGMENT
??_C@_08BJBIEDIL@alphasrc@ DB 'alphasrc', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06EOIELIPE@filter@
CONST	SEGMENT
??_C@_06EOIELIPE@filter@ DB 'filter', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PEENBMOG@color@
CONST	SEGMENT
??_C@_05PEENBMOG@color@ DB 'color', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IOALDGCK@fardistance@
CONST	SEGMENT
??_C@_0M@IOALDGCK@fardistance@ DB 'fardistance', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HJCBLCNJ@neardistance@
CONST	SEGMENT
??_C@_0N@HJCBLCNJ@neardistance@ DB 'neardistance', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BCCBMEKP@isdensity@
CONST	SEGMENT
??_C@_09BCCBMEKP@isdensity@ DB 'isdensity', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03KJMBPJEB@fog@
CONST	SEGMENT
??_C@_03KJMBPJEB@fog@ DB 'fog', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08GHNOEFBP@emissive@
CONST	SEGMENT
??_C@_08GHNOEFBP@emissive@ DB 'emissive', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08KNOEMJMM@material@
CONST	SEGMENT
??_C@_08KNOEMJMM@material@ DB 'material', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MNKJOHH@character@
CONST	SEGMENT
??_C@_09MNKJOHH@character@ DB 'character', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07LIABELBC@ambient@
CONST	SEGMENT
??_C@_07LIABELBC@ambient@ DB 'ambient', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KFBPAAO@diffuse@
CONST	SEGMENT
??_C@_07KFBPAAO@diffuse@ DB 'diffuse', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OFNJOBDK@enable@
CONST	SEGMENT
??_C@_06OFNJOBDK@enable@ DB 'enable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EGCKCJDC@background@
CONST	SEGMENT
??_C@_0L@EGCKCJDC@background@ DB 'background', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HPKLLIJF@direction@
CONST	SEGMENT
??_C@_09HPKLLIJF@direction@ DB 'direction', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GPOHGDLH@directionallight@
CONST	SEGMENT
??_C@_0BB@GPOHGDLH@directionallight@ DB 'directionallight', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08FINKBBAF@reserved@
CONST	SEGMENT
??_C@_08FINKBBAF@reserved@ DB 'reserved', 00H		; `string'
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_7CEaseOutInterpolation@@6B@
CONST	SEGMENT
??_7CEaseOutInterpolation@@6B@ DD FLAT:??_R4CEaseOutInterpolation@@6B@ ; CEaseOutInterpolation::`vftable'
	DD	FLAT:??_ECEaseOutInterpolation@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z DD 019930522H
	DD	02cH
	DD	FLAT:__unwindtable$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$6
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$7
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$8
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$9
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$10
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$11
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$12
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$13
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$14
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$15
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$16
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$17
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$18
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$19
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$20
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$21
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$22
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$23
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$24
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$25
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$26
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$27
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$28
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$29
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$30
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$31
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$32
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$33
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$34
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$35
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$36
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$37
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$38
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$39
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$40
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$41
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$42
	DD	00H
	DD	FLAT:__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$43
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
__Oldsize$1$ = -4					; size = 4
$T2 = 8							; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<TGradientColor,std::allocator<TGradientColor> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1229 :     _CONSTEXPR20_CONTAINER void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi

; 1230 :         if (_Newsize > max_size()) {

  00007	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0000a	8b d9		 mov	 ebx, ecx
  0000c	81 ff ff ff ff
	07		 cmp	 edi, 134217727		; 07ffffffH
  00012	0f 87 14 01 00
	00		 ja	 $LN75@Resize_rea

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00018	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0001b	b8 ff ff ff 07	 mov	 eax, 134217727		; 07ffffffH

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00020	2b 0b		 sub	 ecx, DWORD PTR [ebx]

; 1232 :         }
; 1233 : 
; 1234 :         auto& _My_data    = _Mypair._Myval2;
; 1235 :         pointer& _Myfirst = _My_data._Myfirst;
; 1236 :         pointer& _Mylast  = _My_data._Mylast;
; 1237 : 
; 1238 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00022	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  00025	2b 13		 sub	 edx, DWORD PTR [ebx]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	c1 f9 05	 sar	 ecx, 5

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0002a	8b f1		 mov	 esi, ecx

; 1232 :         }
; 1233 : 
; 1234 :         auto& _My_data    = _Mypair._Myval2;
; 1235 :         pointer& _Myfirst = _My_data._Myfirst;
; 1236 :         pointer& _Mylast  = _My_data._Mylast;
; 1237 : 
; 1238 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0002c	c1 fa 05	 sar	 edx, 5

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0002f	d1 ee		 shr	 esi, 1
  00031	2b c6		 sub	 eax, esi

; 1232 :         }
; 1233 : 
; 1234 :         auto& _My_data    = _Mypair._Myval2;
; 1235 :         pointer& _Myfirst = _My_data._Myfirst;
; 1236 :         pointer& _Mylast  = _My_data._Mylast;
; 1237 : 
; 1238 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00033	89 55 fc	 mov	 DWORD PTR __Oldsize$1$[ebp], edx

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	3b c8		 cmp	 ecx, eax
  00038	76 15		 jbe	 SHORT $LN10@Resize_rea

; 1689 :             return _Max; // geometric growth would overflow

  0003a	be e0 ff ff ff	 mov	 esi, -32		; ffffffe0H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00045	8b 55 fc	 mov	 edx, DWORD PTR __Oldsize$1$[ebp]
  00048	83 c4 04	 add	 esp, 4
  0004b	8b c8		 mov	 ecx, eax
  0004d	eb 4a		 jmp	 SHORT $LN73@Resize_rea
$LN10@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0004f	03 f1		 add	 esi, ecx

; 1693 : 
; 1694 :         if (_Geometric < _Newsize) {

  00051	3b f7		 cmp	 esi, edi
  00053	73 1d		 jae	 SHORT $LN11@Resize_rea

; 1695 :             return _Newsize; // geometric growth would be insufficient

  00055	8b f7		 mov	 esi, edi
$LN70@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 69   :     return _Count * _Ty_size;

  00057	c1 e6 05	 shl	 esi, 5

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0005a	81 fe 00 10 00
	00		 cmp	 esi, 4096		; 00001000H
  00060	72 1e		 jb	 SHORT $LN22@Resize_rea

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00062	56		 push	 esi
  00063	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00068	8b 55 fc	 mov	 edx, DWORD PTR __Oldsize$1$[ebp]
  0006b	83 c4 04	 add	 esp, 4
  0006e	8b c8		 mov	 ecx, eax
  00070	eb 27		 jmp	 SHORT $LN73@Resize_rea
$LN11@Resize_rea:

; 64   :         if (_Count > _Max_possible) {

  00072	81 fe ff ff ff
	07		 cmp	 esi, 134217727		; 07ffffffH
  00078	0f 87 b3 00 00
	00		 ja	 $LN76@Resize_rea
  0007e	eb d7		 jmp	 SHORT $LN70@Resize_rea
$LN22@Resize_rea:

; 243  :     if (_Bytes != 0) {

  00080	85 f6		 test	 esi, esi
  00082	74 13		 je	 SHORT $LN23@Resize_rea

; 85   :         return ::operator new(_Bytes);

  00084	56		 push	 esi
  00085	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 244  :         return _Traits::_Allocate(_Bytes);

  0008a	8b 55 fc	 mov	 edx, DWORD PTR __Oldsize$1$[ebp]

; 85   :         return ::operator new(_Bytes);

  0008d	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  00090	8b c8		 mov	 ecx, eax
  00092	89 45 08	 mov	 DWORD PTR $T2[ebp], eax
  00095	eb 05		 jmp	 SHORT $LN21@Resize_rea
$LN23@Resize_rea:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  00097	33 c9		 xor	 ecx, ecx
$LN73@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1246 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  00099	89 4d 08	 mov	 DWORD PTR $T2[ebp], ecx
$LN21@Resize_rea:
  0009c	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  0009f	0f b6 00	 movzx	 eax, BYTE PTR [eax]
  000a2	50		 push	 eax
  000a3	8b c7		 mov	 eax, edi
  000a5	2b c2		 sub	 eax, edx
  000a7	c1 e2 05	 shl	 edx, 5
  000aa	03 d1		 add	 edx, ecx
  000ac	8b cb		 mov	 ecx, ebx
  000ae	50		 push	 eax
  000af	52		 push	 edx
  000b0	e8 00 00 00 00	 call	 ?_Ufill@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@AAEPAUTGradientColor@@PAU3@IU_Value_init_tag@2@@Z ; std::vector<TGradientColor,std::allocator<TGradientColor> >::_Ufill

; 1247 :         _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  000b5	8b 03		 mov	 eax, DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1718 :     const auto _ULast = _Get_unwrapped(_Last);

  000b7	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]

; 1620 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  000ba	8b 4d 08	 mov	 ecx, DWORD PTR $T2[ebp]

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  000bd	3b c2		 cmp	 eax, edx
  000bf	74 1b		 je	 SHORT $LN34@Resize_rea
$LL35@Resize_rea:

; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  000c1	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 1632 :         ++_Last;

  000c4	8d 49 20	 lea	 ecx, DWORD PTR [ecx+32]

; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  000c7	0f 11 41 e0	 movups	 XMMWORD PTR [ecx-32], xmm0
  000cb	0f 10 40 10	 movups	 xmm0, XMMWORD PTR [eax+16]

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  000cf	83 c0 20	 add	 eax, 32			; 00000020H

; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  000d2	0f 11 41 f0	 movups	 XMMWORD PTR [ecx-16], xmm0

; 1731 :     for (; _UFirst != _ULast; ++_UFirst) {

  000d6	3b c2		 cmp	 eax, edx
  000d8	75 e7		 jne	 SHORT $LL35@Resize_rea
  000da	8b 03		 mov	 eax, DWORD PTR [ebx]
$LN34@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000dc	85 c0		 test	 eax, eax
  000de	74 2c		 je	 SHORT $LN52@Resize_rea

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e0	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  000e3	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e5	83 e1 e0	 and	 ecx, -32		; ffffffe0H

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000e8	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000ee	72 12		 jb	 SHORT $LN62@Resize_rea

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f0	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f3	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f6	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000f8	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fb	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000fe	77 27		 ja	 SHORT $LN59@Resize_rea

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00100	8b c2		 mov	 eax, edx
$LN62@Resize_rea:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00102	51		 push	 ecx
  00103	50		 push	 eax
  00104	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00109	83 c4 08	 add	 esp, 8
$LN52@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1750 :         _Myfirst = _Newvec;

  0010c	8b 45 08	 mov	 eax, DWORD PTR $T2[ebp]

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0010f	c1 e7 05	 shl	 edi, 5
  00112	89 03		 mov	 DWORD PTR [ebx], eax
  00114	03 f8		 add	 edi, eax
  00116	89 7b 04	 mov	 DWORD PTR [ebx+4], edi

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00119	03 c6		 add	 eax, esi
  0011b	5f		 pop	 edi
  0011c	5e		 pop	 esi
  0011d	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  00120	5b		 pop	 ebx

; 1255 :     }

  00121	8b e5		 mov	 esp, ebp
  00123	5d		 pop	 ebp
  00124	c2 08 00	 ret	 8
$LN59@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00127	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN75@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1231 :             _Xlength();

  0012c	e8 00 00 00 00	 call	 ?_Xlength@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@CAXXZ ; std::vector<TGradientColor,std::allocator<TGradientColor> >::_Xlength
$LN76@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00131	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN72@Resize_rea:
  00136	cc		 int	 3
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<TGradientColor,std::allocator<TGradientColor> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 134  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 135  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 137  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 85   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 138  :         _Throw_bad_array_new_length(); // add overflow
; 139  :     }
; 140  : 
; 141  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 85   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 145  : 
; 146  : #ifdef _DEBUG
; 147  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 148  : #endif // _DEBUG
; 149  :     return _Ptr;
; 150  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCEaseOutInterpolation@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCEaseOutInterpolation@@UAEPAXI@Z PROC		; CEaseOutInterpolation::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CEaseOutInterpolation@@UAE@XZ ; CEaseOutInterpolation::~CEaseOutInterpolation
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 1c		 push	 28			; 0000001cH
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCEaseOutInterpolation@@UAEPAXI@Z ENDP		; CEaseOutInterpolation::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
;	COMDAT ?GetChangingValue@CEaseOutInterpolation@@QAEMXZ
_TEXT	SEGMENT
?GetChangingValue@CEaseOutInterpolation@@QAEMXZ PROC	; CEaseOutInterpolation::GetChangingValue, COMDAT
; _this$ = ecx

; 305  : 	return m_fValue - m_fLastValue;

  00000	d9 41 08	 fld	 DWORD PTR [ecx+8]
  00003	d8 61 18	 fsub	 DWORD PTR [ecx+24]

; 306  : }

  00006	c3		 ret	 0
?GetChangingValue@CEaseOutInterpolation@@QAEMXZ ENDP	; CEaseOutInterpolation::GetChangingValue
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
;	COMDAT ?GetValue@CEaseOutInterpolation@@QAEMXZ
_TEXT	SEGMENT
?GetValue@CEaseOutInterpolation@@QAEMXZ PROC		; CEaseOutInterpolation::GetValue, COMDAT
; _this$ = ecx

; 300  : 	return m_fValue;

  00000	d9 41 08	 fld	 DWORD PTR [ecx+8]

; 301  : }

  00003	c3		 ret	 0
?GetValue@CEaseOutInterpolation@@QAEMXZ ENDP		; CEaseOutInterpolation::GetValue
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
;	COMDAT ?isPlaying@CEaseOutInterpolation@@QAEHXZ
_TEXT	SEGMENT
?isPlaying@CEaseOutInterpolation@@QAEHXZ PROC		; CEaseOutInterpolation::isPlaying, COMDAT
; _this$ = ecx

; 295  : 	return m_fRemainingTime > 0.0f;

  00000	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00005	33 c0		 xor	 eax, eax
  00007	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  0000e	0f 97 c0	 seta	 al

; 296  : }

  00011	c3		 ret	 0
?isPlaying@CEaseOutInterpolation@@QAEHXZ ENDP		; CEaseOutInterpolation::isPlaying
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
;	COMDAT ?Interpolate@CEaseOutInterpolation@@QAEXM@Z
_TEXT	SEGMENT
_fElapsedTime$ = 8					; size = 4
?Interpolate@CEaseOutInterpolation@@QAEXM@Z PROC	; CEaseOutInterpolation::Interpolate, COMDAT
; _this$ = ecx

; 279  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	m_fLastValue = m_fValue;
; 281  : 
; 282  : 	m_fRemainingTime -= fElapsedTime;

  00003	f3 0f 10 4d 08	 movss	 xmm1, DWORD PTR _fElapsedTime$[ebp]
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	f3 0f 10 46 04	 movss	 xmm0, DWORD PTR [esi+4]
  00010	f3 0f 10 56 08	 movss	 xmm2, DWORD PTR [esi+8]
  00015	f3 0f 5c c1	 subss	 xmm0, xmm1
  00019	f3 0f 11 56 18	 movss	 DWORD PTR [esi+24], xmm2
  0001e	f3 0f 11 46 04	 movss	 DWORD PTR [esi+4], xmm0

; 283  : 	m_fSpeed += m_fAcceleration * fElapsedTime;

  00023	0f 28 c1	 movaps	 xmm0, xmm1
  00026	f3 0f 59 46 10	 mulss	 xmm0, DWORD PTR [esi+16]
  0002b	f3 0f 58 46 0c	 addss	 xmm0, DWORD PTR [esi+12]
  00030	f3 0f 11 46 0c	 movss	 DWORD PTR [esi+12], xmm0

; 284  : 	m_fValue += m_fSpeed * fElapsedTime;

  00035	f3 0f 59 c1	 mulss	 xmm0, xmm1
  00039	f3 0f 58 c2	 addss	 xmm0, xmm2
  0003d	f3 0f 11 46 08	 movss	 DWORD PTR [esi+8], xmm0

; 285  : 
; 286  : 	if (!isPlaying())

  00042	e8 00 00 00 00	 call	 ?isPlaying@CEaseOutInterpolation@@QAEHXZ ; CEaseOutInterpolation::isPlaying
  00047	85 c0		 test	 eax, eax
  00049	75 06		 jne	 SHORT $LN2@Interpolat

; 287  : 	{
; 288  : 		m_fValue = 0.0f;

  0004b	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 289  : 		m_fLastValue = 0.0f;

  0004e	89 46 18	 mov	 DWORD PTR [esi+24], eax
$LN2@Interpolat:
  00051	5e		 pop	 esi

; 290  : 	}
; 291  : }

  00052	5d		 pop	 ebp
  00053	c2 04 00	 ret	 4
?Interpolate@CEaseOutInterpolation@@QAEXM@Z ENDP	; CEaseOutInterpolation::Interpolate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_math.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_math.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
;	COMDAT ?Setup@CEaseOutInterpolation@@QAEHMMM@Z
_TEXT	SEGMENT
_fStart$ = 8						; size = 4
_fEnd$ = 12						; size = 4
_fTime$ = 16						; size = 4
?Setup@CEaseOutInterpolation@@QAEHMMM@Z PROC		; CEaseOutInterpolation::Setup, COMDAT
; _this$ = ecx

; 260  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_math.h

; 670  :             return (float)fabs(_X);

  00003	f3 0f 10 5d 10	 movss	 xmm3, DWORD PTR _fTime$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 262  : 	if( fabs(fTime) < FLT_EPSILON )

  00008	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@34000000
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_math.h

; 670  :             return (float)fabs(_X);

  00010	0f 28 cb	 movaps	 xmm1, xmm3
  00013	0f 54 0d 00 00
	00 00		 andps	 xmm1, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 262  : 	if( fabs(fTime) < FLT_EPSILON )

  0001a	0f 2f c1	 comiss	 xmm0, xmm1
  0001d	76 08		 jbe	 SHORT $LN2@Setup

; 263  : 	{
; 264  : 		fTime = 0.01f;

  0001f	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@3c23d70a
$LN2@Setup:

; 265  : 	}
; 266  : 
; 267  : 	m_fValue = fStart;

  00027	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fStart$[ebp]

; 268  : 	m_fStartValue = fStart;
; 269  : 	m_fLastValue = fStart;
; 270  : 
; 271  : 	m_fSpeed = (2.0f * (fEnd - fStart)) / fTime;
; 272  : 	m_fAcceleration = 2.0f * (fEnd - fStart) / (fTime * fTime) - 2.0f * m_fSpeed / fTime;
; 273  : 	m_fRemainingTime = fTime;
; 274  : 
; 275  : 	return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1
  00031	f3 0f 10 55 0c	 movss	 xmm2, DWORD PTR _fEnd$[ebp]
  00036	f3 0f 5c d0	 subss	 xmm2, xmm0
  0003a	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0
  0003f	f3 0f 11 41 14	 movss	 DWORD PTR [ecx+20], xmm0
  00044	f3 0f 11 41 18	 movss	 DWORD PTR [ecx+24], xmm0
  00049	0f 28 c3	 movaps	 xmm0, xmm3
  0004c	f3 0f 59 c3	 mulss	 xmm0, xmm3
  00050	f3 0f 58 d2	 addss	 xmm2, xmm2
  00054	f3 0f 11 59 04	 movss	 DWORD PTR [ecx+4], xmm3
  00059	0f 28 ca	 movaps	 xmm1, xmm2
  0005c	f3 0f 5e cb	 divss	 xmm1, xmm3
  00060	f3 0f 5e d0	 divss	 xmm2, xmm0
  00064	f3 0f 11 49 0c	 movss	 DWORD PTR [ecx+12], xmm1
  00069	f3 0f 58 c9	 addss	 xmm1, xmm1
  0006d	f3 0f 5e cb	 divss	 xmm1, xmm3
  00071	f3 0f 5c d1	 subss	 xmm2, xmm1
  00075	f3 0f 11 51 10	 movss	 DWORD PTR [ecx+16], xmm2

; 276  : }

  0007a	5d		 pop	 ebp
  0007b	c2 0c 00	 ret	 12			; 0000000cH
?Setup@CEaseOutInterpolation@@QAEHMMM@Z ENDP		; CEaseOutInterpolation::Setup
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
;	COMDAT ?Initialize@CEaseOutInterpolation@@QAEXXZ
_TEXT	SEGMENT
?Initialize@CEaseOutInterpolation@@QAEXXZ PROC		; CEaseOutInterpolation::Initialize, COMDAT
; _this$ = ecx

; 250  : 	m_fRemainingTime = 0.0f;

  00000	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 251  : 	m_fValue = 0.0f;

  00007	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 252  : 	m_fSpeed = 0.0f;

  0000e	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0

; 253  : 	m_fAcceleration = 0.0f;

  00015	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 254  : 	m_fStartValue = 0.0f;

  0001c	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 255  : 	m_fLastValue = 0.0f;

  00023	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0

; 256  : }

  0002a	c3		 ret	 0
?Initialize@CEaseOutInterpolation@@QAEXXZ ENDP		; CEaseOutInterpolation::Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
;	COMDAT ??1CEaseOutInterpolation@@UAE@XZ
_TEXT	SEGMENT
??1CEaseOutInterpolation@@UAE@XZ PROC			; CEaseOutInterpolation::~CEaseOutInterpolation, COMDAT
; _this$ = ecx

; 245  : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CEaseOutInterpolation@@6B@

; 246  : }

  00006	c3		 ret	 0
??1CEaseOutInterpolation@@UAE@XZ ENDP			; CEaseOutInterpolation::~CEaseOutInterpolation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
;	COMDAT ??0CEaseOutInterpolation@@QAE@XZ
_TEXT	SEGMENT
??0CEaseOutInterpolation@@QAE@XZ PROC			; CEaseOutInterpolation::CEaseOutInterpolation, COMDAT
; _this$ = ecx

; 240  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CEaseOutInterpolation@@6B@

; 241  : 	Initialize();

  00009	e8 00 00 00 00	 call	 ?Initialize@CEaseOutInterpolation@@QAEXXZ ; CEaseOutInterpolation::Initialize

; 242  : }

  0000e	8b c6		 mov	 eax, esi
  00010	5e		 pop	 esi
  00011	c3		 ret	 0
??0CEaseOutInterpolation@@QAE@XZ ENDP			; CEaseOutInterpolation::CEaseOutInterpolation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_math.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_math.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
;	COMDAT ?GetPixelPositionDistance@@YAMABUD3DXVECTOR3@@0@Z
_TEXT	SEGMENT
tv174 = -4						; size = 4
_c_rsrcPosition$ = 8					; size = 4
_c_rdstPosition$ = 12					; size = 4
?GetPixelPositionDistance@@YAMABUD3DXVECTOR3@@0@Z PROC	; GetPixelPositionDistance, COMDAT

; 231  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H

; 232  : 	int idx = c_rsrcPosition.x - c_rdstPosition.x;

  00006	8b 4d 08	 mov	 ecx, DWORD PTR _c_rsrcPosition$[ebp]
  00009	0f 57 c9	 xorps	 xmm1, xmm1
  0000c	8b 45 0c	 mov	 eax, DWORD PTR _c_rdstPosition$[ebp]
  0000f	83 ec 08	 sub	 esp, 8
  00012	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00016	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  0001a	f3 0f 2c d0	 cvttss2si edx, xmm0

; 233  : 	int idy = c_rsrcPosition.y - c_rdstPosition.y;

  0001e	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00023	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]

; 235  : 	return sqrtf(float(idx*idx + idy*idy));

  00028	0f af d2	 imul	 edx, edx
  0002b	f3 0f 2c c0	 cvttss2si eax, xmm0
  0002f	0f af c0	 imul	 eax, eax
  00032	03 c2		 add	 eax, edx
  00034	66 0f 6e c0	 movd	 xmm0, eax
  00038	0f 5b c0	 cvtdq2ps xmm0, xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_math.h

; 758  :             return (float)sqrt(_X);

  0003b	0f 5a c0	 cvtps2pd xmm0, xmm0
  0003e	66 0f 2e c8	 ucomisd xmm1, xmm0
  00042	77 16		 ja	 SHORT $LN5@GetPixelPo
  00044	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  00048	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 235  : 	return sqrtf(float(idx*idx + idy*idy));

  0004c	f3 0f 11 44 24
	04		 movss	 DWORD PTR tv174[esp+8], xmm0
  00052	d9 44 24 04	 fld	 DWORD PTR tv174[esp+8]

; 236  : }

  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
$LN5@GetPixelPo:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_math.h

; 758  :             return (float)sqrt(_X);

  0005a	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
  0005f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 235  : 	return sqrtf(float(idx*idx + idy*idy));

  00063	f3 0f 11 44 24
	04		 movss	 DWORD PTR tv174[esp+8], xmm0
  00069	d9 44 24 04	 fld	 DWORD PTR tv174[esp+8]

; 236  : }

  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
?GetPixelPositionDistance@@YAMABUD3DXVECTOR3@@0@Z ENDP	; GetPixelPositionDistance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
;	COMDAT ?AttributeCellPositionToPixelPosition@@YAXUSCellPosition@@PAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_AttrCellPosition$ = 8					; size = 8
_pPixelPosition$ = 16					; size = 4
?AttributeCellPositionToPixelPosition@@YAXUSCellPosition@@PAUD3DXVECTOR3@@@Z PROC ; AttributeCellPositionToPixelPosition, COMDAT

; 225  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 226  : 	pPixelPosition->x = AttrCellPosition.x * c_Section_xAttributeCellSize;

  00003	6b 45 08 32	 imul	 eax, DWORD PTR _AttrCellPosition$[ebp], 50
  00007	8b 4d 10	 mov	 ecx, DWORD PTR _pPixelPosition$[ebp]
  0000a	66 0f 6e c0	 movd	 xmm0, eax

; 227  : 	pPixelPosition->y = AttrCellPosition.y * c_Section_yAttributeCellSize;

  0000e	6b 45 0c 32	 imul	 eax, DWORD PTR _AttrCellPosition$[ebp+4], 50
  00012	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00015	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0
  00019	66 0f 6e c0	 movd	 xmm0, eax
  0001d	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00020	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 228  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?AttributeCellPositionToPixelPosition@@YAXUSCellPosition@@PAUD3DXVECTOR3@@@Z ENDP ; AttributeCellPositionToPixelPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
;	COMDAT ?PixelPositionToAttributeCellPosition@@YAXUD3DXVECTOR3@@PAUSCellPosition@@@Z
_TEXT	SEGMENT
_PixelPosition$ = 8					; size = 12
_pAttrCellPosition$ = 20				; size = 4
?PixelPositionToAttributeCellPosition@@YAXUD3DXVECTOR3@@PAUSCellPosition@@@Z PROC ; PixelPositionToAttributeCellPosition, COMDAT

; 219  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 220  : 	pAttrCellPosition->x = PixelPosition.x / c_Section_xAttributeCellSize;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _PixelPosition$[ebp]
  00008	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@42480000
  00010	8b 4d 14	 mov	 ecx, DWORD PTR _pAttrCellPosition$[ebp]
  00013	f3 0f 2c c0	 cvttss2si eax, xmm0

; 221  : 	pAttrCellPosition->y = PixelPosition.y / c_Section_yAttributeCellSize;

  00017	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _PixelPosition$[ebp+4]
  0001c	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@42480000
  00024	89 01		 mov	 DWORD PTR [ecx], eax
  00026	f3 0f 2c c0	 cvttss2si eax, xmm0
  0002a	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 222  : }

  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?PixelPositionToAttributeCellPosition@@YAXUD3DXVECTOR3@@PAUSCellPosition@@@Z ENDP ; PixelPositionToAttributeCellPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
;	COMDAT ?GetLinearInterpolation@@YAMMMM@Z
_TEXT	SEGMENT
_begin$ = 8						; size = 4
tv128 = 12						; size = 4
_end$ = 12						; size = 4
_curRate$ = 16						; size = 4
?GetLinearInterpolation@@YAMMMM@Z PROC			; GetLinearInterpolation, COMDAT

; 214  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 215  : 	return (end - begin) * curRate + begin;

  00003	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _end$[ebp]
  00008	f3 0f 5c 4d 08	 subss	 xmm1, DWORD PTR _begin$[ebp]
  0000d	f3 0f 59 4d 10	 mulss	 xmm1, DWORD PTR _curRate$[ebp]
  00012	f3 0f 58 4d 08	 addss	 xmm1, DWORD PTR _begin$[ebp]
  00017	f3 0f 11 4d 0c	 movss	 DWORD PTR tv128[ebp], xmm1
  0001c	d9 45 0c	 fld	 DWORD PTR tv128[ebp]

; 216  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?GetLinearInterpolation@@YAMMMM@Z ENDP			; GetLinearInterpolation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
;	COMDAT ?GetInterpolatedPosition@@YAXMPAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_curPositionRate$ = 8					; size = 4
_PixelPosition$ = 12					; size = 4
?GetInterpolatedPosition@@YAXMPAUD3DXVECTOR3@@@Z PROC	; GetInterpolatedPosition, COMDAT

; 211  : }

  00000	c2 00 00	 ret	 0
?GetInterpolatedPosition@@YAXMPAUD3DXVECTOR3@@@Z ENDP	; GetInterpolatedPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
;	COMDAT ?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z
_TEXT	SEGMENT
tv9408 = -220						; size = 4
$T2 = -216						; size = 4
_i$1$ = -212						; size = 4
$T3 = -212						; size = 1
_pTokenVectorCloudColor$4 = -208			; size = 4
tv9350 = -204						; size = 4
_pTokenVector$5 = -200					; size = 4
tv9351 = -196						; size = 4
_textLoader$ = -192					; size = 128
$T6 = -64						; size = 24
_v3Dir$7 = -52						; size = 12
$T8 = -40						; size = 24
$T9 = -40						; size = 24
$T10 = -40						; size = 24
$T11 = -40						; size = 24
$T12 = -40						; size = 24
$T13 = -40						; size = 24
$T14 = -40						; size = 24
$T15 = -40						; size = 24
$T16 = -40						; size = 24
$T17 = -40						; size = 24
$T18 = -40						; size = 24
$T19 = -40						; size = 24
$T20 = -40						; size = 24
$T21 = -40						; size = 24
$T22 = -40						; size = 24
$T23 = -40						; size = 24
$T24 = -40						; size = 24
$T25 = -40						; size = 24
$T26 = -40						; size = 24
$T27 = -40						; size = 24
$T28 = -40						; size = 24
$T29 = -40						; size = 24
$T30 = -40						; size = 24
$T31 = -40						; size = 24
$T32 = -40						; size = 24
$T33 = -40						; size = 24
$T34 = -40						; size = 24
$T35 = -40						; size = 24
$T36 = -40						; size = 24
$T37 = -40						; size = 24
$T38 = -40						; size = 24
$T39 = -40						; size = 24
$T40 = -40						; size = 24
$T41 = -40						; size = 24
$T42 = -40						; size = 24
$T43 = -40						; size = 24
$T44 = -40						; size = 24
$T45 = -40						; size = 24
$T46 = -40						; size = 24
$T47 = -40						; size = 24
$T48 = -40						; size = 24
$T49 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_envData$ = 8						; size = 4
_envFileName$ = 12					; size = 4
?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z PROC	; Environment_Load, COMDAT

; 71   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b 7d 08	 mov	 edi, DWORD PTR _envData$[ebp]

; 72   : 	CTextFileLoader textLoader;

  00031	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00037	8b 75 0c	 mov	 esi, DWORD PTR _envFileName$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0CTextFileLoader@@QAE@XZ ; CTextFileLoader::CTextFileLoader

; 73   : 
; 74   : 	if (!textLoader.Load(envFileName))

  0003f	56		 push	 esi
  00040	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00046	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004d	e8 00 00 00 00	 call	 ?Load@CTextFileLoader@@QAE_NPBD@Z ; CTextFileLoader::Load
  00052	84 c0		 test	 al, al
  00054	75 07		 jne	 SHORT $LN5@Environmen
  00056	32 db		 xor	 bl, bl
  00058	e9 33 1a 00 00	 jmp	 $LN64@Environmen
$LN5@Environmen:

; 75   : 		return false;
; 76   : 
; 77   : 	textLoader.SetTop();

  0005d	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00063	e8 00 00 00 00	 call	 ?SetTop@CTextFileLoader@@QAEXXZ ; CTextFileLoader::SetTop
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00068	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR $T6[ebp], 0

; 2521 :         assign(_Ptr);

  0006f	8d 4d c0	 lea	 ecx, DWORD PTR $T6[ebp]
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_08FINKBBAF@reserved@

; 4596 :         _My_data._Mysize = 0;

  00077	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T6[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0007e	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00085	c6 45 c0 00	 mov	 BYTE PTR $T6[ebp], 0

; 2521 :         assign(_Ptr);

  00089	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 79   : 	textLoader.GetTokenBoolean("reserved", &envData.bReserve);

  0008e	8d 87 98 02 00
	00		 lea	 eax, DWORD PTR [edi+664]
  00094	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00098	50		 push	 eax
  00099	8d 45 c0	 lea	 eax, DWORD PTR $T6[ebp]
  0009c	50		 push	 eax
  0009d	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  000a3	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000a8	8b 55 d4	 mov	 edx, DWORD PTR $T6[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 79   : 	textLoader.GetTokenBoolean("reserved", &envData.bReserve);

  000ab	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000af	83 fa 10	 cmp	 edx, 16			; 00000010H
  000b2	72 2c		 jb	 SHORT $LN89@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000b4	8b 4d c0	 mov	 ecx, DWORD PTR $T6[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000b7	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000b8	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000ba	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  000c0	72 14		 jb	 SHORT $LN99@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000c2	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  000c5	83 c2 23	 add	 edx, 35			; 00000023H
  000c8	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000ca	83 c0 fc	 add	 eax, -4			; fffffffcH
  000cd	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000d0	0f 87 e3 19 00
	00		 ja	 $LN1924@Environmen
$LN99@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000d6	52		 push	 edx
  000d7	51		 push	 ecx
  000d8	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000dd	83 c4 08	 add	 esp, 8
$LN89@Environmen:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 81   : 	if (textLoader.SetChildNode("directionallight"))

  000e0	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GPOHGDLH@directionallight@
  000e5	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  000eb	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  000f0	85 c0		 test	 eax, eax
  000f2	0f 84 aa 03 00
	00		 je	 $LN6@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  000f8	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T49[ebp], 0

; 2521 :         assign(_Ptr);

  000ff	8d 4d d8	 lea	 ecx, DWORD PTR $T49[ebp]
  00102	68 00 00 00 00	 push	 OFFSET ??_C@_09HPKLLIJF@direction@

; 4596 :         _My_data._Mysize = 0;

  00107	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T49[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0010e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T49[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00115	c6 45 d8 00	 mov	 BYTE PTR $T49[ebp], 0

; 2521 :         assign(_Ptr);

  00119	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 84   : 		textLoader.GetTokenDirection("direction", &v3Dir);

  0011e	8d 45 cc	 lea	 eax, DWORD PTR _v3Dir$7[ebp]
  00121	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00125	50		 push	 eax
  00126	8d 45 d8	 lea	 eax, DWORD PTR $T49[ebp]
  00129	50		 push	 eax
  0012a	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00130	e8 00 00 00 00	 call	 ?GetTokenDirection@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DVECTOR@@@Z ; CTextFileLoader::GetTokenDirection
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00135	8b 55 ec	 mov	 edx, DWORD PTR $T49[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 84   : 		textLoader.GetTokenDirection("direction", &v3Dir);

  00138	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0013c	83 fa 10	 cmp	 edx, 16			; 00000010H
  0013f	72 2c		 jb	 SHORT $LN129@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00141	8b 4d d8	 mov	 ecx, DWORD PTR $T49[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00144	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00145	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00147	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0014d	72 14		 jb	 SHORT $LN139@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0014f	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00152	83 c2 23	 add	 edx, 35			; 00000023H
  00155	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00157	83 c0 fc	 add	 eax, -4			; fffffffcH
  0015a	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0015d	0f 87 5b 19 00
	00		 ja	 $LN1925@Environmen
$LN139@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00163	52		 push	 edx
  00164	51		 push	 ecx
  00165	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0016a	83 c4 08	 add	 esp, 8
$LN129@Environmen:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 86   : 		if (textLoader.SetChildNode("background"))

  0016d	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EGCKCJDC@background@
  00172	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00178	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  0017d	85 c0		 test	 eax, eax
  0017f	0f 84 77 01 00
	00		 je	 $LN7@Environmen

; 88   : 			envData.DirLights[ENV_DIRLIGHT_BACKGROUND].Direction = v3Dir;

  00185	f3 0f 7e 45 cc	 movq	 xmm0, QWORD PTR _v3Dir$7[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2521 :         assign(_Ptr);

  0018a	8d 4d d8	 lea	 ecx, DWORD PTR $T48[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 88   : 			envData.DirLights[ENV_DIRLIGHT_BACKGROUND].Direction = v3Dir;

  0018d	8b 45 d4	 mov	 eax, DWORD PTR _v3Dir$7[ebp+8]
  00190	66 0f d6 47 48	 movq	 QWORD PTR [edi+72], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00195	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T48[ebp], 0

; 2521 :         assign(_Ptr);

  0019c	68 00 00 00 00	 push	 OFFSET ??_C@_06OFNJOBDK@enable@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 88   : 			envData.DirLights[ENV_DIRLIGHT_BACKGROUND].Direction = v3Dir;

  001a1	89 47 50	 mov	 DWORD PTR [edi+80], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4596 :         _My_data._Mysize = 0;

  001a4	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T48[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  001ab	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T48[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  001b2	c6 45 d8 00	 mov	 BYTE PTR $T48[ebp], 0

; 2521 :         assign(_Ptr);

  001b6	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 89   : 			textLoader.GetTokenBoolean("enable", &envData.bDirLightsEnable[ENV_DIRLIGHT_BACKGROUND]);

  001bb	57		 push	 edi
  001bc	8d 45 d8	 lea	 eax, DWORD PTR $T48[ebp]
  001bf	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  001c3	50		 push	 eax
  001c4	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  001ca	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001cf	8b 55 ec	 mov	 edx, DWORD PTR $T48[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 89   : 			textLoader.GetTokenBoolean("enable", &envData.bDirLightsEnable[ENV_DIRLIGHT_BACKGROUND]);

  001d2	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001d6	83 fa 10	 cmp	 edx, 16			; 00000010H
  001d9	72 2c		 jb	 SHORT $LN168@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001db	8b 4d d8	 mov	 ecx, DWORD PTR $T48[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001de	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001df	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  001e1	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  001e7	72 14		 jb	 SHORT $LN178@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  001e9	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  001ec	83 c2 23	 add	 edx, 35			; 00000023H
  001ef	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001f1	83 c0 fc	 add	 eax, -4			; fffffffcH
  001f4	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  001f7	0f 87 c6 18 00
	00		 ja	 $LN1926@Environmen
$LN178@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  001fd	52		 push	 edx
  001fe	51		 push	 ecx
  001ff	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00204	83 c4 08	 add	 esp, 8
$LN168@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00207	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T47[ebp], 0

; 2521 :         assign(_Ptr);

  0020e	8d 4d d8	 lea	 ecx, DWORD PTR $T47[ebp]
  00211	68 00 00 00 00	 push	 OFFSET ??_C@_07KFBPAAO@diffuse@

; 4596 :         _My_data._Mysize = 0;

  00216	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T47[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0021d	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T47[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00224	c6 45 d8 00	 mov	 BYTE PTR $T47[ebp], 0

; 2521 :         assign(_Ptr);

  00228	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 90   : 			textLoader.GetTokenColor("diffuse", &envData.DirLights[ENV_DIRLIGHT_BACKGROUND].Diffuse);

  0022d	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  00230	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00234	50		 push	 eax
  00235	8d 45 d8	 lea	 eax, DWORD PTR $T47[ebp]
  00238	50		 push	 eax
  00239	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  0023f	e8 00 00 00 00	 call	 ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DCOLORVALUE@@@Z ; CTextFileLoader::GetTokenColor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00244	8b 55 ec	 mov	 edx, DWORD PTR $T47[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 90   : 			textLoader.GetTokenColor("diffuse", &envData.DirLights[ENV_DIRLIGHT_BACKGROUND].Diffuse);

  00247	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0024b	83 fa 10	 cmp	 edx, 16			; 00000010H
  0024e	72 2c		 jb	 SHORT $LN207@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00250	8b 4d d8	 mov	 ecx, DWORD PTR $T47[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00253	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00254	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00256	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0025c	72 14		 jb	 SHORT $LN217@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0025e	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00261	83 c2 23	 add	 edx, 35			; 00000023H
  00264	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00266	83 c0 fc	 add	 eax, -4			; fffffffcH
  00269	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0026c	0f 87 56 18 00
	00		 ja	 $LN1927@Environmen
$LN217@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00272	52		 push	 edx
  00273	51		 push	 ecx
  00274	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00279	83 c4 08	 add	 esp, 8
$LN207@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0027c	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T46[ebp], 0

; 2521 :         assign(_Ptr);

  00283	8d 4d d8	 lea	 ecx, DWORD PTR $T46[ebp]
  00286	68 00 00 00 00	 push	 OFFSET ??_C@_07LIABELBC@ambient@

; 4596 :         _My_data._Mysize = 0;

  0028b	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T46[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00292	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T46[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00299	c6 45 d8 00	 mov	 BYTE PTR $T46[ebp], 0

; 2521 :         assign(_Ptr);

  0029d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 91   : 			textLoader.GetTokenColor("ambient", &envData.DirLights[ENV_DIRLIGHT_BACKGROUND].Ambient);

  002a2	8d 47 2c	 lea	 eax, DWORD PTR [edi+44]
  002a5	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  002a9	50		 push	 eax
  002aa	8d 45 d8	 lea	 eax, DWORD PTR $T46[ebp]
  002ad	50		 push	 eax
  002ae	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  002b4	e8 00 00 00 00	 call	 ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DCOLORVALUE@@@Z ; CTextFileLoader::GetTokenColor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  002b9	8b 55 ec	 mov	 edx, DWORD PTR $T46[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 91   : 			textLoader.GetTokenColor("ambient", &envData.DirLights[ENV_DIRLIGHT_BACKGROUND].Ambient);

  002bc	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  002c0	83 fa 10	 cmp	 edx, 16			; 00000010H
  002c3	72 2c		 jb	 SHORT $LN246@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002c5	8b 4d d8	 mov	 ecx, DWORD PTR $T46[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  002c8	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002c9	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  002cb	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  002d1	72 14		 jb	 SHORT $LN256@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  002d3	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  002d6	83 c2 23	 add	 edx, 35			; 00000023H
  002d9	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  002db	83 c0 fc	 add	 eax, -4			; fffffffcH
  002de	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  002e1	0f 87 e6 17 00
	00		 ja	 $LN1928@Environmen
$LN256@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  002e7	52		 push	 edx
  002e8	51		 push	 ecx
  002e9	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  002ee	83 c4 08	 add	 esp, 8
$LN246@Environmen:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 92   : 			textLoader.SetParentNode();

  002f1	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  002f7	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
$LN7@Environmen:

; 93   : 		}
; 94   : 
; 95   : 		if (textLoader.SetChildNode("character"))

  002fc	68 00 00 00 00	 push	 OFFSET ??_C@_09MNKJOHH@character@
  00301	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00307	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  0030c	85 c0		 test	 eax, eax
  0030e	0f 84 83 01 00
	00		 je	 $LN8@Environmen

; 97   : 			envData.DirLights[ENV_DIRLIGHT_CHARACTER].Direction = v3Dir;

  00314	f3 0f 7e 45 cc	 movq	 xmm0, QWORD PTR _v3Dir$7[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2521 :         assign(_Ptr);

  00319	8d 4d d8	 lea	 ecx, DWORD PTR $T45[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 97   : 			envData.DirLights[ENV_DIRLIGHT_CHARACTER].Direction = v3Dir;

  0031c	8b 45 d4	 mov	 eax, DWORD PTR _v3Dir$7[ebp+8]
  0031f	66 0f d6 87 b0
	00 00 00	 movq	 QWORD PTR [edi+176], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00327	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T45[ebp], 0

; 2521 :         assign(_Ptr);

  0032e	68 00 00 00 00	 push	 OFFSET ??_C@_06OFNJOBDK@enable@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 97   : 			envData.DirLights[ENV_DIRLIGHT_CHARACTER].Direction = v3Dir;

  00333	89 87 b8 00 00
	00		 mov	 DWORD PTR [edi+184], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4596 :         _My_data._Mysize = 0;

  00339	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T45[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00340	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T45[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00347	c6 45 d8 00	 mov	 BYTE PTR $T45[ebp], 0

; 2521 :         assign(_Ptr);

  0034b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 98   : 			textLoader.GetTokenBoolean("enable", &envData.bDirLightsEnable[ENV_DIRLIGHT_CHARACTER]);

  00350	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00353	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00357	50		 push	 eax
  00358	8d 45 d8	 lea	 eax, DWORD PTR $T45[ebp]
  0035b	50		 push	 eax
  0035c	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00362	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00367	8b 55 ec	 mov	 edx, DWORD PTR $T45[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 98   : 			textLoader.GetTokenBoolean("enable", &envData.bDirLightsEnable[ENV_DIRLIGHT_CHARACTER]);

  0036a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0036e	83 fa 10	 cmp	 edx, 16			; 00000010H
  00371	72 2c		 jb	 SHORT $LN285@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00373	8b 4d d8	 mov	 ecx, DWORD PTR $T45[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00376	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00377	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00379	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0037f	72 14		 jb	 SHORT $LN295@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00381	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00384	83 c2 23	 add	 edx, 35			; 00000023H
  00387	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00389	83 c0 fc	 add	 eax, -4			; fffffffcH
  0038c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0038f	0f 87 3d 17 00
	00		 ja	 $LN1929@Environmen
$LN295@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00395	52		 push	 edx
  00396	51		 push	 ecx
  00397	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0039c	83 c4 08	 add	 esp, 8
$LN285@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0039f	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T44[ebp], 0

; 2521 :         assign(_Ptr);

  003a6	8d 4d d8	 lea	 ecx, DWORD PTR $T44[ebp]
  003a9	68 00 00 00 00	 push	 OFFSET ??_C@_07KFBPAAO@diffuse@

; 4596 :         _My_data._Mysize = 0;

  003ae	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T44[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  003b5	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T44[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  003bc	c6 45 d8 00	 mov	 BYTE PTR $T44[ebp], 0

; 2521 :         assign(_Ptr);

  003c0	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 99   : 			textLoader.GetTokenColor("diffuse", &envData.DirLights[ENV_DIRLIGHT_CHARACTER].Diffuse);

  003c5	8d 47 74	 lea	 eax, DWORD PTR [edi+116]
  003c8	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  003cc	50		 push	 eax
  003cd	8d 45 d8	 lea	 eax, DWORD PTR $T44[ebp]
  003d0	50		 push	 eax
  003d1	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  003d7	e8 00 00 00 00	 call	 ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DCOLORVALUE@@@Z ; CTextFileLoader::GetTokenColor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  003dc	8b 55 ec	 mov	 edx, DWORD PTR $T44[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 99   : 			textLoader.GetTokenColor("diffuse", &envData.DirLights[ENV_DIRLIGHT_CHARACTER].Diffuse);

  003df	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  003e3	83 fa 10	 cmp	 edx, 16			; 00000010H
  003e6	72 2c		 jb	 SHORT $LN324@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  003e8	8b 4d d8	 mov	 ecx, DWORD PTR $T44[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  003eb	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  003ec	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  003ee	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  003f4	72 14		 jb	 SHORT $LN334@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  003f6	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  003f9	83 c2 23	 add	 edx, 35			; 00000023H
  003fc	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  003fe	83 c0 fc	 add	 eax, -4			; fffffffcH
  00401	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00404	0f 87 cd 16 00
	00		 ja	 $LN1930@Environmen
$LN334@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0040a	52		 push	 edx
  0040b	51		 push	 ecx
  0040c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00411	83 c4 08	 add	 esp, 8
$LN324@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00414	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T43[ebp], 0

; 2521 :         assign(_Ptr);

  0041b	8d 4d d8	 lea	 ecx, DWORD PTR $T43[ebp]
  0041e	68 00 00 00 00	 push	 OFFSET ??_C@_07LIABELBC@ambient@

; 4596 :         _My_data._Mysize = 0;

  00423	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T43[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0042a	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T43[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00431	c6 45 d8 00	 mov	 BYTE PTR $T43[ebp], 0

; 2521 :         assign(_Ptr);

  00435	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 100  : 			textLoader.GetTokenColor("ambient", &envData.DirLights[ENV_DIRLIGHT_CHARACTER].Ambient);

  0043a	8d 87 94 00 00
	00		 lea	 eax, DWORD PTR [edi+148]
  00440	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  00444	50		 push	 eax
  00445	8d 45 d8	 lea	 eax, DWORD PTR $T43[ebp]
  00448	50		 push	 eax
  00449	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  0044f	e8 00 00 00 00	 call	 ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DCOLORVALUE@@@Z ; CTextFileLoader::GetTokenColor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00454	8b 55 ec	 mov	 edx, DWORD PTR $T43[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 100  : 			textLoader.GetTokenColor("ambient", &envData.DirLights[ENV_DIRLIGHT_CHARACTER].Ambient);

  00457	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0045b	83 fa 10	 cmp	 edx, 16			; 00000010H
  0045e	72 2c		 jb	 SHORT $LN363@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00460	8b 4d d8	 mov	 ecx, DWORD PTR $T43[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00463	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00464	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00466	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0046c	72 14		 jb	 SHORT $LN373@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0046e	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00471	83 c2 23	 add	 edx, 35			; 00000023H
  00474	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00476	83 c0 fc	 add	 eax, -4			; fffffffcH
  00479	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0047c	0f 87 5a 16 00
	00		 ja	 $LN1931@Environmen
$LN373@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00482	52		 push	 edx
  00483	51		 push	 ecx
  00484	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00489	83 c4 08	 add	 esp, 8
$LN363@Environmen:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 101  : 			textLoader.SetParentNode();

  0048c	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00492	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
$LN8@Environmen:

; 102  : 		}
; 103  : 
; 104  : 		textLoader.SetParentNode();

  00497	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  0049d	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
$LN6@Environmen:

; 105  : 	}
; 106  : 
; 107  : 	if (textLoader.SetChildNode("material"))

  004a2	68 00 00 00 00	 push	 OFFSET ??_C@_08KNOEMJMM@material@
  004a7	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  004ad	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  004b2	85 c0		 test	 eax, eax
  004b4	0f 84 73 01 00
	00		 je	 $LN9@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  004ba	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T42[ebp], 0

; 2521 :         assign(_Ptr);

  004c1	8d 4d d8	 lea	 ecx, DWORD PTR $T42[ebp]
  004c4	68 00 00 00 00	 push	 OFFSET ??_C@_07KFBPAAO@diffuse@

; 4596 :         _My_data._Mysize = 0;

  004c9	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T42[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  004d0	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T42[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  004d7	c6 45 d8 00	 mov	 BYTE PTR $T42[ebp], 0

; 2521 :         assign(_Ptr);

  004db	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 109  : 		textLoader.GetTokenColor("diffuse", &envData.Material.Diffuse);

  004e0	8d 87 d8 00 00
	00		 lea	 eax, DWORD PTR [edi+216]
  004e6	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  004ea	50		 push	 eax
  004eb	8d 45 d8	 lea	 eax, DWORD PTR $T42[ebp]
  004ee	50		 push	 eax
  004ef	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  004f5	e8 00 00 00 00	 call	 ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DCOLORVALUE@@@Z ; CTextFileLoader::GetTokenColor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  004fa	8b 55 ec	 mov	 edx, DWORD PTR $T42[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 109  : 		textLoader.GetTokenColor("diffuse", &envData.Material.Diffuse);

  004fd	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00501	83 fa 10	 cmp	 edx, 16			; 00000010H
  00504	72 2c		 jb	 SHORT $LN402@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00506	8b 4d d8	 mov	 ecx, DWORD PTR $T42[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00509	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0050a	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0050c	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00512	72 14		 jb	 SHORT $LN412@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00514	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00517	83 c2 23	 add	 edx, 35			; 00000023H
  0051a	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0051c	83 c0 fc	 add	 eax, -4			; fffffffcH
  0051f	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00522	0f 87 b9 15 00
	00		 ja	 $LN1932@Environmen
$LN412@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00528	52		 push	 edx
  00529	51		 push	 ecx
  0052a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0052f	83 c4 08	 add	 esp, 8
$LN402@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00532	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T41[ebp], 0

; 2521 :         assign(_Ptr);

  00539	8d 4d d8	 lea	 ecx, DWORD PTR $T41[ebp]
  0053c	68 00 00 00 00	 push	 OFFSET ??_C@_07LIABELBC@ambient@

; 4596 :         _My_data._Mysize = 0;

  00541	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T41[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00548	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T41[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0054f	c6 45 d8 00	 mov	 BYTE PTR $T41[ebp], 0

; 2521 :         assign(_Ptr);

  00553	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 110  : 		textLoader.GetTokenColor("ambient", &envData.Material.Ambient);

  00558	8d 87 e8 00 00
	00		 lea	 eax, DWORD PTR [edi+232]
  0055e	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  00562	50		 push	 eax
  00563	8d 45 d8	 lea	 eax, DWORD PTR $T41[ebp]
  00566	50		 push	 eax
  00567	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  0056d	e8 00 00 00 00	 call	 ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DCOLORVALUE@@@Z ; CTextFileLoader::GetTokenColor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00572	8b 55 ec	 mov	 edx, DWORD PTR $T41[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 110  : 		textLoader.GetTokenColor("ambient", &envData.Material.Ambient);

  00575	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00579	83 fa 10	 cmp	 edx, 16			; 00000010H
  0057c	72 2c		 jb	 SHORT $LN441@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0057e	8b 4d d8	 mov	 ecx, DWORD PTR $T41[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00581	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00582	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00584	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0058a	72 14		 jb	 SHORT $LN451@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0058c	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0058f	83 c2 23	 add	 edx, 35			; 00000023H
  00592	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00594	83 c0 fc	 add	 eax, -4			; fffffffcH
  00597	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0059a	0f 87 46 15 00
	00		 ja	 $LN1933@Environmen
$LN451@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  005a0	52		 push	 edx
  005a1	51		 push	 ecx
  005a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  005a7	83 c4 08	 add	 esp, 8
$LN441@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  005aa	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T40[ebp], 0

; 2521 :         assign(_Ptr);

  005b1	8d 4d d8	 lea	 ecx, DWORD PTR $T40[ebp]
  005b4	68 00 00 00 00	 push	 OFFSET ??_C@_08GHNOEFBP@emissive@

; 4596 :         _My_data._Mysize = 0;

  005b9	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T40[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  005c0	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T40[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  005c7	c6 45 d8 00	 mov	 BYTE PTR $T40[ebp], 0

; 2521 :         assign(_Ptr);

  005cb	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 111  : 		textLoader.GetTokenColor("emissive", &envData.Material.Emissive);

  005d0	8d 87 08 01 00
	00		 lea	 eax, DWORD PTR [edi+264]
  005d6	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  005da	50		 push	 eax
  005db	8d 45 d8	 lea	 eax, DWORD PTR $T40[ebp]
  005de	50		 push	 eax
  005df	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  005e5	e8 00 00 00 00	 call	 ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_D3DCOLORVALUE@@@Z ; CTextFileLoader::GetTokenColor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  005ea	8b 55 ec	 mov	 edx, DWORD PTR $T40[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 111  : 		textLoader.GetTokenColor("emissive", &envData.Material.Emissive);

  005ed	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  005f1	83 fa 10	 cmp	 edx, 16			; 00000010H
  005f4	72 2c		 jb	 SHORT $LN480@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  005f6	8b 4d d8	 mov	 ecx, DWORD PTR $T40[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  005f9	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  005fa	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  005fc	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00602	72 14		 jb	 SHORT $LN490@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00604	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00607	83 c2 23	 add	 edx, 35			; 00000023H
  0060a	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0060c	83 c0 fc	 add	 eax, -4			; fffffffcH
  0060f	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00612	0f 87 d3 14 00
	00		 ja	 $LN1934@Environmen
$LN490@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00618	52		 push	 edx
  00619	51		 push	 ecx
  0061a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0061f	83 c4 08	 add	 esp, 8
$LN480@Environmen:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 112  : 		textLoader.SetParentNode();

  00622	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00628	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
$LN9@Environmen:

; 113  : 	}
; 114  : 
; 115  : 	if (textLoader.SetChildNode("fog"))

  0062d	68 00 00 00 00	 push	 OFFSET ??_C@_03KJMBPJEB@fog@
  00632	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00638	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  0063d	85 c0		 test	 eax, eax
  0063f	0f 84 63 02 00
	00		 je	 $LN10@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00645	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T39[ebp], 0

; 2521 :         assign(_Ptr);

  0064c	8d 4d d8	 lea	 ecx, DWORD PTR $T39[ebp]
  0064f	68 00 00 00 00	 push	 OFFSET ??_C@_06OFNJOBDK@enable@

; 4596 :         _My_data._Mysize = 0;

  00654	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T39[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0065b	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T39[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00662	c6 45 d8 00	 mov	 BYTE PTR $T39[ebp], 0

; 2521 :         assign(_Ptr);

  00666	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 117  : 		textLoader.GetTokenBoolean("enable", &envData.bFogEnable);

  0066b	8d 87 1c 01 00
	00		 lea	 eax, DWORD PTR [edi+284]
  00671	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  00675	50		 push	 eax
  00676	8d 45 d8	 lea	 eax, DWORD PTR $T39[ebp]
  00679	50		 push	 eax
  0067a	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00680	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00685	8b 55 ec	 mov	 edx, DWORD PTR $T39[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 117  : 		textLoader.GetTokenBoolean("enable", &envData.bFogEnable);

  00688	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0068c	83 fa 10	 cmp	 edx, 16			; 00000010H
  0068f	72 2c		 jb	 SHORT $LN519@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00691	8b 4d d8	 mov	 ecx, DWORD PTR $T39[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00694	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00695	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00697	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0069d	72 14		 jb	 SHORT $LN529@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0069f	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  006a2	83 c2 23	 add	 edx, 35			; 00000023H
  006a5	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  006a7	83 c0 fc	 add	 eax, -4			; fffffffcH
  006aa	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  006ad	0f 87 3d 14 00
	00		 ja	 $LN1935@Environmen
$LN529@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  006b3	52		 push	 edx
  006b4	51		 push	 ecx
  006b5	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  006ba	83 c4 08	 add	 esp, 8
$LN519@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  006bd	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T38[ebp], 0

; 2521 :         assign(_Ptr);

  006c4	8d 4d d8	 lea	 ecx, DWORD PTR $T38[ebp]
  006c7	68 00 00 00 00	 push	 OFFSET ??_C@_09BCCBMEKP@isdensity@

; 4596 :         _My_data._Mysize = 0;

  006cc	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T38[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  006d3	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T38[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  006da	c6 45 d8 00	 mov	 BYTE PTR $T38[ebp], 0

; 2521 :         assign(_Ptr);

  006de	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 118  : 		textLoader.GetTokenBoolean("isdensity", &envData.bDensityFog);

  006e3	8d 87 20 01 00
	00		 lea	 eax, DWORD PTR [edi+288]
  006e9	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  006ed	50		 push	 eax
  006ee	8d 45 d8	 lea	 eax, DWORD PTR $T38[ebp]
  006f1	50		 push	 eax
  006f2	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  006f8	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  006fd	8b 55 ec	 mov	 edx, DWORD PTR $T38[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 118  : 		textLoader.GetTokenBoolean("isdensity", &envData.bDensityFog);

  00700	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00704	83 fa 10	 cmp	 edx, 16			; 00000010H
  00707	72 2c		 jb	 SHORT $LN558@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00709	8b 4d d8	 mov	 ecx, DWORD PTR $T38[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0070c	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0070d	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0070f	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00715	72 14		 jb	 SHORT $LN568@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00717	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0071a	83 c2 23	 add	 edx, 35			; 00000023H
  0071d	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0071f	83 c0 fc	 add	 eax, -4			; fffffffcH
  00722	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00725	0f 87 ca 13 00
	00		 ja	 $LN1936@Environmen
$LN568@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0072b	52		 push	 edx
  0072c	51		 push	 ecx
  0072d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00732	83 c4 08	 add	 esp, 8
$LN558@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00735	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T37[ebp], 0

; 2521 :         assign(_Ptr);

  0073c	8d 4d d8	 lea	 ecx, DWORD PTR $T37[ebp]
  0073f	68 00 00 00 00	 push	 OFFSET ??_C@_0N@HJCBLCNJ@neardistance@

; 4596 :         _My_data._Mysize = 0;

  00744	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T37[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0074b	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T37[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00752	c6 45 d8 00	 mov	 BYTE PTR $T37[ebp], 0

; 2521 :         assign(_Ptr);

  00756	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 119  : 		textLoader.GetTokenFloat("neardistance", &envData.m_fFogNearDistance);

  0075b	8d 87 24 01 00
	00		 lea	 eax, DWORD PTR [edi+292]
  00761	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  00765	50		 push	 eax
  00766	8d 45 d8	 lea	 eax, DWORD PTR $T37[ebp]
  00769	50		 push	 eax
  0076a	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00770	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00775	8b 55 ec	 mov	 edx, DWORD PTR $T37[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 119  : 		textLoader.GetTokenFloat("neardistance", &envData.m_fFogNearDistance);

  00778	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0077c	83 fa 10	 cmp	 edx, 16			; 00000010H
  0077f	72 2c		 jb	 SHORT $LN597@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00781	8b 4d d8	 mov	 ecx, DWORD PTR $T37[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00784	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00785	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00787	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0078d	72 14		 jb	 SHORT $LN607@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0078f	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00792	83 c2 23	 add	 edx, 35			; 00000023H
  00795	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00797	83 c0 fc	 add	 eax, -4			; fffffffcH
  0079a	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0079d	0f 87 57 13 00
	00		 ja	 $LN1937@Environmen
$LN607@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  007a3	52		 push	 edx
  007a4	51		 push	 ecx
  007a5	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  007aa	83 c4 08	 add	 esp, 8
$LN597@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  007ad	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T36[ebp], 0

; 2521 :         assign(_Ptr);

  007b4	8d 4d d8	 lea	 ecx, DWORD PTR $T36[ebp]
  007b7	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IOALDGCK@fardistance@

; 4596 :         _My_data._Mysize = 0;

  007bc	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T36[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  007c3	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T36[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  007ca	c6 45 d8 00	 mov	 BYTE PTR $T36[ebp], 0

; 2521 :         assign(_Ptr);

  007ce	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 120  : 		textLoader.GetTokenFloat("fardistance", &envData.m_fFogFarDistance);

  007d3	8d 87 28 01 00
	00		 lea	 eax, DWORD PTR [edi+296]
  007d9	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  007dd	50		 push	 eax
  007de	8d 45 d8	 lea	 eax, DWORD PTR $T36[ebp]
  007e1	50		 push	 eax
  007e2	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  007e8	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  007ed	8b 55 ec	 mov	 edx, DWORD PTR $T36[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 120  : 		textLoader.GetTokenFloat("fardistance", &envData.m_fFogFarDistance);

  007f0	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  007f4	83 fa 10	 cmp	 edx, 16			; 00000010H
  007f7	72 2c		 jb	 SHORT $LN636@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  007f9	8b 4d d8	 mov	 ecx, DWORD PTR $T36[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  007fc	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  007fd	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  007ff	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00805	72 14		 jb	 SHORT $LN646@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00807	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0080a	83 c2 23	 add	 edx, 35			; 00000023H
  0080d	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0080f	83 c0 fc	 add	 eax, -4			; fffffffcH
  00812	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00815	0f 87 e4 12 00
	00		 ja	 $LN1938@Environmen
$LN646@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0081b	52		 push	 edx
  0081c	51		 push	 ecx
  0081d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00822	83 c4 08	 add	 esp, 8
$LN636@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00825	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T35[ebp], 0

; 2521 :         assign(_Ptr);

  0082c	8d 4d d8	 lea	 ecx, DWORD PTR $T35[ebp]
  0082f	68 00 00 00 00	 push	 OFFSET ??_C@_05PEENBMOG@color@

; 4596 :         _My_data._Mysize = 0;

  00834	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T35[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0083b	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T35[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00842	c6 45 d8 00	 mov	 BYTE PTR $T35[ebp], 0

; 2521 :         assign(_Ptr);

  00846	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 121  : 		textLoader.GetTokenColor("color", &envData.FogColor);

  0084b	8d 87 2c 01 00
	00		 lea	 eax, DWORD PTR [edi+300]
  00851	c6 45 fc 10	 mov	 BYTE PTR __$EHRec$[ebp+8], 16 ; 00000010H
  00855	50		 push	 eax
  00856	8d 45 d8	 lea	 eax, DWORD PTR $T35[ebp]
  00859	50		 push	 eax
  0085a	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00860	e8 00 00 00 00	 call	 ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXCOLOR@@@Z ; CTextFileLoader::GetTokenColor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00865	8b 55 ec	 mov	 edx, DWORD PTR $T35[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 121  : 		textLoader.GetTokenColor("color", &envData.FogColor);

  00868	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0086c	83 fa 10	 cmp	 edx, 16			; 00000010H
  0086f	72 2c		 jb	 SHORT $LN675@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00871	8b 4d d8	 mov	 ecx, DWORD PTR $T35[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00874	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00875	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00877	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0087d	72 14		 jb	 SHORT $LN685@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0087f	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00882	83 c2 23	 add	 edx, 35			; 00000023H
  00885	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00887	83 c0 fc	 add	 eax, -4			; fffffffcH
  0088a	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0088d	0f 87 71 12 00
	00		 ja	 $LN1939@Environmen
$LN685@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00893	52		 push	 edx
  00894	51		 push	 ecx
  00895	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0089a	83 c4 08	 add	 esp, 8
$LN675@Environmen:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 122  : 		textLoader.SetParentNode();

  0089d	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  008a3	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
$LN10@Environmen:

; 123  : 	}
; 124  : 
; 125  : 	if (textLoader.SetChildNode("filter"))

  008a8	68 00 00 00 00	 push	 OFFSET ??_C@_06EOIELIPE@filter@
  008ad	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  008b3	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  008b8	85 c0		 test	 eax, eax
  008ba	0f 84 eb 01 00
	00		 je	 $LN11@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  008c0	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T34[ebp], 0

; 2521 :         assign(_Ptr);

  008c7	8d 4d d8	 lea	 ecx, DWORD PTR $T34[ebp]
  008ca	68 00 00 00 00	 push	 OFFSET ??_C@_06OFNJOBDK@enable@

; 4596 :         _My_data._Mysize = 0;

  008cf	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T34[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  008d6	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T34[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  008dd	c6 45 d8 00	 mov	 BYTE PTR $T34[ebp], 0

; 2521 :         assign(_Ptr);

  008e1	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 127  : 		textLoader.GetTokenBoolean("enable", (BOOL *) &envData.bFilteringEnable);

  008e6	8d 87 3c 01 00
	00		 lea	 eax, DWORD PTR [edi+316]
  008ec	c6 45 fc 11	 mov	 BYTE PTR __$EHRec$[ebp+8], 17 ; 00000011H
  008f0	50		 push	 eax
  008f1	8d 45 d8	 lea	 eax, DWORD PTR $T34[ebp]
  008f4	50		 push	 eax
  008f5	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  008fb	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00900	8b 55 ec	 mov	 edx, DWORD PTR $T34[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 127  : 		textLoader.GetTokenBoolean("enable", (BOOL *) &envData.bFilteringEnable);

  00903	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00907	83 fa 10	 cmp	 edx, 16			; 00000010H
  0090a	72 2c		 jb	 SHORT $LN714@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0090c	8b 4d d8	 mov	 ecx, DWORD PTR $T34[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0090f	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00910	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00912	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00918	72 14		 jb	 SHORT $LN724@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0091a	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0091d	83 c2 23	 add	 edx, 35			; 00000023H
  00920	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00922	83 c0 fc	 add	 eax, -4			; fffffffcH
  00925	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00928	0f 87 db 11 00
	00		 ja	 $LN1940@Environmen
$LN724@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0092e	52		 push	 edx
  0092f	51		 push	 ecx
  00930	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00935	83 c4 08	 add	 esp, 8
$LN714@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00938	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T33[ebp], 0

; 2521 :         assign(_Ptr);

  0093f	8d 4d d8	 lea	 ecx, DWORD PTR $T33[ebp]
  00942	68 00 00 00 00	 push	 OFFSET ??_C@_05PEENBMOG@color@

; 4596 :         _My_data._Mysize = 0;

  00947	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T33[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0094e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T33[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00955	c6 45 d8 00	 mov	 BYTE PTR $T33[ebp], 0

; 2521 :         assign(_Ptr);

  00959	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 128  : 		textLoader.GetTokenColor("color", &envData.FilteringColor);

  0095e	8d 87 40 01 00
	00		 lea	 eax, DWORD PTR [edi+320]
  00964	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  00968	50		 push	 eax
  00969	8d 45 d8	 lea	 eax, DWORD PTR $T33[ebp]
  0096c	50		 push	 eax
  0096d	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00973	e8 00 00 00 00	 call	 ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXCOLOR@@@Z ; CTextFileLoader::GetTokenColor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00978	8b 55 ec	 mov	 edx, DWORD PTR $T33[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 128  : 		textLoader.GetTokenColor("color", &envData.FilteringColor);

  0097b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0097f	83 fa 10	 cmp	 edx, 16			; 00000010H
  00982	72 2c		 jb	 SHORT $LN753@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00984	8b 4d d8	 mov	 ecx, DWORD PTR $T33[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00987	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00988	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0098a	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00990	72 14		 jb	 SHORT $LN763@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00992	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00995	83 c2 23	 add	 edx, 35			; 00000023H
  00998	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0099a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0099d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  009a0	0f 87 68 11 00
	00		 ja	 $LN1941@Environmen
$LN763@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  009a6	52		 push	 edx
  009a7	51		 push	 ecx
  009a8	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  009ad	83 c4 08	 add	 esp, 8
$LN753@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  009b0	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T32[ebp], 0

; 2521 :         assign(_Ptr);

  009b7	8d 4d d8	 lea	 ecx, DWORD PTR $T32[ebp]
  009ba	68 00 00 00 00	 push	 OFFSET ??_C@_08BJBIEDIL@alphasrc@

; 4596 :         _My_data._Mysize = 0;

  009bf	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T32[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  009c6	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T32[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  009cd	c6 45 d8 00	 mov	 BYTE PTR $T32[ebp], 0

; 2521 :         assign(_Ptr);

  009d1	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 129  : 		textLoader.GetTokenByte("alphasrc", &envData.byFilteringAlphaSrc);

  009d6	8d 87 50 01 00
	00		 lea	 eax, DWORD PTR [edi+336]
  009dc	c6 45 fc 13	 mov	 BYTE PTR __$EHRec$[ebp+8], 19 ; 00000013H
  009e0	50		 push	 eax
  009e1	8d 45 d8	 lea	 eax, DWORD PTR $T32[ebp]
  009e4	50		 push	 eax
  009e5	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  009eb	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  009f0	8b 55 ec	 mov	 edx, DWORD PTR $T32[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 129  : 		textLoader.GetTokenByte("alphasrc", &envData.byFilteringAlphaSrc);

  009f3	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  009f7	83 fa 10	 cmp	 edx, 16			; 00000010H
  009fa	72 2c		 jb	 SHORT $LN792@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  009fc	8b 4d d8	 mov	 ecx, DWORD PTR $T32[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  009ff	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00a00	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00a02	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00a08	72 14		 jb	 SHORT $LN802@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00a0a	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00a0d	83 c2 23	 add	 edx, 35			; 00000023H
  00a10	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00a12	83 c0 fc	 add	 eax, -4			; fffffffcH
  00a15	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00a18	0f 87 f5 10 00
	00		 ja	 $LN1942@Environmen
$LN802@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00a1e	52		 push	 edx
  00a1f	51		 push	 ecx
  00a20	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00a25	83 c4 08	 add	 esp, 8
$LN792@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00a28	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T31[ebp], 0

; 2521 :         assign(_Ptr);

  00a2f	8d 4d d8	 lea	 ecx, DWORD PTR $T31[ebp]
  00a32	68 00 00 00 00	 push	 OFFSET ??_C@_09DCAIHJNN@alphadest@

; 4596 :         _My_data._Mysize = 0;

  00a37	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T31[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00a3e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T31[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00a45	c6 45 d8 00	 mov	 BYTE PTR $T31[ebp], 0

; 2521 :         assign(_Ptr);

  00a49	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 130  : 		textLoader.GetTokenByte("alphadest", &envData.byFilteringAlphaDest);

  00a4e	8d 87 51 01 00
	00		 lea	 eax, DWORD PTR [edi+337]
  00a54	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
  00a58	50		 push	 eax
  00a59	8d 45 d8	 lea	 eax, DWORD PTR $T31[ebp]
  00a5c	50		 push	 eax
  00a5d	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00a63	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00a68	8b 55 ec	 mov	 edx, DWORD PTR $T31[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 130  : 		textLoader.GetTokenByte("alphadest", &envData.byFilteringAlphaDest);

  00a6b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00a6f	83 fa 10	 cmp	 edx, 16			; 00000010H
  00a72	72 2c		 jb	 SHORT $LN831@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00a74	8b 4d d8	 mov	 ecx, DWORD PTR $T31[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00a77	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00a78	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00a7a	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00a80	72 14		 jb	 SHORT $LN841@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00a82	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00a85	83 c2 23	 add	 edx, 35			; 00000023H
  00a88	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00a8a	83 c0 fc	 add	 eax, -4			; fffffffcH
  00a8d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00a90	0f 87 82 10 00
	00		 ja	 $LN1943@Environmen
$LN841@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00a96	52		 push	 edx
  00a97	51		 push	 ecx
  00a98	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00a9d	83 c4 08	 add	 esp, 8
$LN831@Environmen:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 131  : 		textLoader.SetParentNode();

  00aa0	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00aa6	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
$LN11@Environmen:

; 132  : 	}
; 133  : 
; 134  : 	if (textLoader.SetChildNode("skybox"))

  00aab	68 00 00 00 00	 push	 OFFSET ??_C@_06BMKANHHL@skybox@
  00ab0	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00ab6	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  00abb	85 c0		 test	 eax, eax
  00abd	0f 84 d8 0c 00
	00		 je	 $LN12@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00ac3	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T30[ebp], 0

; 2521 :         assign(_Ptr);

  00aca	8d 4d d8	 lea	 ecx, DWORD PTR $T30[ebp]
  00acd	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@MANDHJLJ@btexturerendermode@

; 4596 :         _My_data._Mysize = 0;

  00ad2	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T30[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00ad9	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T30[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00ae0	c6 45 d8 00	 mov	 BYTE PTR $T30[ebp], 0

; 2521 :         assign(_Ptr);

  00ae4	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 136  : 		textLoader.GetTokenBoolean("btexturerendermode", (BOOL *) &envData.bSkyBoxTextureRenderMode);

  00ae9	8d 87 68 01 00
	00		 lea	 eax, DWORD PTR [edi+360]
  00aef	c6 45 fc 15	 mov	 BYTE PTR __$EHRec$[ebp+8], 21 ; 00000015H
  00af3	50		 push	 eax
  00af4	8d 45 d8	 lea	 eax, DWORD PTR $T30[ebp]
  00af7	50		 push	 eax
  00af8	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00afe	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00b03	8b 55 ec	 mov	 edx, DWORD PTR $T30[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 136  : 		textLoader.GetTokenBoolean("btexturerendermode", (BOOL *) &envData.bSkyBoxTextureRenderMode);

  00b06	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00b0a	83 fa 10	 cmp	 edx, 16			; 00000010H
  00b0d	72 2c		 jb	 SHORT $LN870@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00b0f	8b 4d d8	 mov	 ecx, DWORD PTR $T30[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00b12	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00b13	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00b15	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00b1b	72 14		 jb	 SHORT $LN880@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00b1d	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00b20	83 c2 23	 add	 edx, 35			; 00000023H
  00b23	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00b25	83 c0 fc	 add	 eax, -4			; fffffffcH
  00b28	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00b2b	0f 87 ec 0f 00
	00		 ja	 $LN1944@Environmen
$LN880@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00b31	52		 push	 edx
  00b32	51		 push	 ecx
  00b33	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00b38	83 c4 08	 add	 esp, 8
$LN870@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00b3b	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T29[ebp], 0

; 2521 :         assign(_Ptr);

  00b42	8d 4d d8	 lea	 ecx, DWORD PTR $T29[ebp]
  00b45	68 00 00 00 00	 push	 OFFSET ??_C@_05MHMEBBGO@scale@

; 4596 :         _My_data._Mysize = 0;

  00b4a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T29[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00b51	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T29[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00b58	c6 45 d8 00	 mov	 BYTE PTR $T29[ebp], 0

; 2521 :         assign(_Ptr);

  00b5c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 137  : 		textLoader.GetTokenVector3("scale", &envData.v3SkyBoxScale);

  00b61	8d 87 5c 01 00
	00		 lea	 eax, DWORD PTR [edi+348]
  00b67	c6 45 fc 16	 mov	 BYTE PTR __$EHRec$[ebp+8], 22 ; 00000016H
  00b6b	50		 push	 eax
  00b6c	8d 45 d8	 lea	 eax, DWORD PTR $T29[ebp]
  00b6f	50		 push	 eax
  00b70	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00b76	e8 00 00 00 00	 call	 ?GetTokenVector3@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenVector3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00b7b	8b 55 ec	 mov	 edx, DWORD PTR $T29[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 137  : 		textLoader.GetTokenVector3("scale", &envData.v3SkyBoxScale);

  00b7e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00b82	83 fa 10	 cmp	 edx, 16			; 00000010H
  00b85	72 2c		 jb	 SHORT $LN909@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00b87	8b 4d d8	 mov	 ecx, DWORD PTR $T29[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00b8a	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00b8b	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00b8d	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00b93	72 14		 jb	 SHORT $LN919@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00b95	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00b98	83 c2 23	 add	 edx, 35			; 00000023H
  00b9b	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00b9d	83 c0 fc	 add	 eax, -4			; fffffffcH
  00ba0	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00ba3	0f 87 79 0f 00
	00		 ja	 $LN1945@Environmen
$LN919@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00ba9	52		 push	 edx
  00baa	51		 push	 ecx
  00bab	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00bb0	83 c4 08	 add	 esp, 8
$LN909@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00bb3	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T28[ebp], 0

; 2521 :         assign(_Ptr);

  00bba	8d 4d d8	 lea	 ecx, DWORD PTR $T28[ebp]
  00bbd	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@JOBCGNII@gradientlevelupper@

; 4596 :         _My_data._Mysize = 0;

  00bc2	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T28[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00bc9	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T28[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00bd0	c6 45 d8 00	 mov	 BYTE PTR $T28[ebp], 0

; 2521 :         assign(_Ptr);

  00bd4	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 138  : 		textLoader.GetTokenByte("gradientlevelupper", &envData.bySkyBoxGradientLevelUpper);

  00bd9	8d 87 6c 01 00
	00		 lea	 eax, DWORD PTR [edi+364]
  00bdf	c6 45 fc 17	 mov	 BYTE PTR __$EHRec$[ebp+8], 23 ; 00000017H
  00be3	50		 push	 eax
  00be4	8d 45 d8	 lea	 eax, DWORD PTR $T28[ebp]
  00be7	50		 push	 eax
  00be8	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00bee	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00bf3	8b 55 ec	 mov	 edx, DWORD PTR $T28[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 138  : 		textLoader.GetTokenByte("gradientlevelupper", &envData.bySkyBoxGradientLevelUpper);

  00bf6	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00bfa	83 fa 10	 cmp	 edx, 16			; 00000010H
  00bfd	72 2c		 jb	 SHORT $LN948@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00bff	8b 4d d8	 mov	 ecx, DWORD PTR $T28[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00c02	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00c03	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00c05	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00c0b	72 14		 jb	 SHORT $LN958@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00c0d	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00c10	83 c2 23	 add	 edx, 35			; 00000023H
  00c13	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00c15	83 c0 fc	 add	 eax, -4			; fffffffcH
  00c18	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00c1b	0f 87 06 0f 00
	00		 ja	 $LN1946@Environmen
$LN958@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00c21	52		 push	 edx
  00c22	51		 push	 ecx
  00c23	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00c28	83 c4 08	 add	 esp, 8
$LN948@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00c2b	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T27[ebp], 0

; 2521 :         assign(_Ptr);

  00c32	8d 4d d8	 lea	 ecx, DWORD PTR $T27[ebp]
  00c35	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@MFKMAGDB@gradientlevellower@

; 4596 :         _My_data._Mysize = 0;

  00c3a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T27[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00c41	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T27[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00c48	c6 45 d8 00	 mov	 BYTE PTR $T27[ebp], 0

; 2521 :         assign(_Ptr);

  00c4c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 139  : 		textLoader.GetTokenByte("gradientlevellower", &envData.bySkyBoxGradientLevelLower);

  00c51	8d 9f 6d 01 00
	00		 lea	 ebx, DWORD PTR [edi+365]
  00c57	c6 45 fc 18	 mov	 BYTE PTR __$EHRec$[ebp+8], 24 ; 00000018H
  00c5b	53		 push	 ebx
  00c5c	8d 45 d8	 lea	 eax, DWORD PTR $T27[ebp]
  00c5f	50		 push	 eax
  00c60	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00c66	e8 00 00 00 00	 call	 ?GetTokenByte@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAE@Z ; CTextFileLoader::GetTokenByte
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00c6b	8b 55 ec	 mov	 edx, DWORD PTR $T27[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 139  : 		textLoader.GetTokenByte("gradientlevellower", &envData.bySkyBoxGradientLevelLower);

  00c6e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00c72	83 fa 10	 cmp	 edx, 16			; 00000010H
  00c75	72 2c		 jb	 SHORT $LN987@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00c77	8b 4d d8	 mov	 ecx, DWORD PTR $T27[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00c7a	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00c7b	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00c7d	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00c83	72 14		 jb	 SHORT $LN997@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00c85	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00c88	83 c2 23	 add	 edx, 35			; 00000023H
  00c8b	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00c8d	83 c0 fc	 add	 eax, -4			; fffffffcH
  00c90	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00c93	0f 87 93 0e 00
	00		 ja	 $LN1947@Environmen
$LN997@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00c99	52		 push	 edx
  00c9a	51		 push	 ecx
  00c9b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00ca0	83 c4 08	 add	 esp, 8
$LN987@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00ca3	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T26[ebp], 0

; 2521 :         assign(_Ptr);

  00caa	8d 4d d8	 lea	 ecx, DWORD PTR $T26[ebp]
  00cad	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MAAIOOFC@frontfacefilename@

; 4596 :         _My_data._Mysize = 0;

  00cb2	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T26[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00cb9	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T26[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00cc0	c6 45 d8 00	 mov	 BYTE PTR $T26[ebp], 0

; 2521 :         assign(_Ptr);

  00cc4	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 141  : 		textLoader.GetTokenString("frontfacefilename", &envData.strSkyBoxFaceFileName[0]);

  00cc9	8d 87 70 01 00
	00		 lea	 eax, DWORD PTR [edi+368]
  00ccf	c6 45 fc 19	 mov	 BYTE PTR __$EHRec$[ebp+8], 25 ; 00000019H
  00cd3	50		 push	 eax
  00cd4	8d 45 d8	 lea	 eax, DWORD PTR $T26[ebp]
  00cd7	50		 push	 eax
  00cd8	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00cde	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00ce3	8b 55 ec	 mov	 edx, DWORD PTR $T26[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 141  : 		textLoader.GetTokenString("frontfacefilename", &envData.strSkyBoxFaceFileName[0]);

  00ce6	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00cea	83 fa 10	 cmp	 edx, 16			; 00000010H
  00ced	72 2c		 jb	 SHORT $LN1026@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00cef	8b 4d d8	 mov	 ecx, DWORD PTR $T26[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00cf2	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00cf3	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00cf5	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00cfb	72 14		 jb	 SHORT $LN1036@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00cfd	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00d00	83 c2 23	 add	 edx, 35			; 00000023H
  00d03	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00d05	83 c0 fc	 add	 eax, -4			; fffffffcH
  00d08	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00d0b	0f 87 20 0e 00
	00		 ja	 $LN1948@Environmen
$LN1036@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00d11	52		 push	 edx
  00d12	51		 push	 ecx
  00d13	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00d18	83 c4 08	 add	 esp, 8
$LN1026@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00d1b	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T25[ebp], 0

; 2521 :         assign(_Ptr);

  00d22	8d 4d d8	 lea	 ecx, DWORD PTR $T25[ebp]
  00d25	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@HMLADBDH@backfacefilename@

; 4596 :         _My_data._Mysize = 0;

  00d2a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T25[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00d31	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T25[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00d38	c6 45 d8 00	 mov	 BYTE PTR $T25[ebp], 0

; 2521 :         assign(_Ptr);

  00d3c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 142  : 		textLoader.GetTokenString("backfacefilename", &envData.strSkyBoxFaceFileName[1]);

  00d41	8d 87 88 01 00
	00		 lea	 eax, DWORD PTR [edi+392]
  00d47	c6 45 fc 1a	 mov	 BYTE PTR __$EHRec$[ebp+8], 26 ; 0000001aH
  00d4b	50		 push	 eax
  00d4c	8d 45 d8	 lea	 eax, DWORD PTR $T25[ebp]
  00d4f	50		 push	 eax
  00d50	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00d56	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00d5b	8b 55 ec	 mov	 edx, DWORD PTR $T25[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 142  : 		textLoader.GetTokenString("backfacefilename", &envData.strSkyBoxFaceFileName[1]);

  00d5e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00d62	83 fa 10	 cmp	 edx, 16			; 00000010H
  00d65	72 2c		 jb	 SHORT $LN1065@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00d67	8b 4d d8	 mov	 ecx, DWORD PTR $T25[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00d6a	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00d6b	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00d6d	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00d73	72 14		 jb	 SHORT $LN1075@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00d75	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00d78	83 c2 23	 add	 edx, 35			; 00000023H
  00d7b	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00d7d	83 c0 fc	 add	 eax, -4			; fffffffcH
  00d80	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00d83	0f 87 ad 0d 00
	00		 ja	 $LN1949@Environmen
$LN1075@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00d89	52		 push	 edx
  00d8a	51		 push	 ecx
  00d8b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00d90	83 c4 08	 add	 esp, 8
$LN1065@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00d93	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T24[ebp], 0

; 2521 :         assign(_Ptr);

  00d9a	8d 4d d8	 lea	 ecx, DWORD PTR $T24[ebp]
  00d9d	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@OKAELDDH@leftfacefilename@

; 4596 :         _My_data._Mysize = 0;

  00da2	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T24[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00da9	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T24[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00db0	c6 45 d8 00	 mov	 BYTE PTR $T24[ebp], 0

; 2521 :         assign(_Ptr);

  00db4	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 143  : 		textLoader.GetTokenString("leftfacefilename", &envData.strSkyBoxFaceFileName[2]);

  00db9	8d 87 a0 01 00
	00		 lea	 eax, DWORD PTR [edi+416]
  00dbf	c6 45 fc 1b	 mov	 BYTE PTR __$EHRec$[ebp+8], 27 ; 0000001bH
  00dc3	50		 push	 eax
  00dc4	8d 45 d8	 lea	 eax, DWORD PTR $T24[ebp]
  00dc7	50		 push	 eax
  00dc8	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00dce	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00dd3	8b 55 ec	 mov	 edx, DWORD PTR $T24[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 143  : 		textLoader.GetTokenString("leftfacefilename", &envData.strSkyBoxFaceFileName[2]);

  00dd6	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00dda	83 fa 10	 cmp	 edx, 16			; 00000010H
  00ddd	72 2c		 jb	 SHORT $LN1104@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00ddf	8b 4d d8	 mov	 ecx, DWORD PTR $T24[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00de2	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00de3	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00de5	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00deb	72 14		 jb	 SHORT $LN1114@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00ded	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00df0	83 c2 23	 add	 edx, 35			; 00000023H
  00df3	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00df5	83 c0 fc	 add	 eax, -4			; fffffffcH
  00df8	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00dfb	0f 87 3a 0d 00
	00		 ja	 $LN1950@Environmen
$LN1114@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00e01	52		 push	 edx
  00e02	51		 push	 ecx
  00e03	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00e08	83 c4 08	 add	 esp, 8
$LN1104@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00e0b	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T23[ebp], 0

; 2521 :         assign(_Ptr);

  00e12	8d 4d d8	 lea	 ecx, DWORD PTR $T23[ebp]
  00e15	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BGDBKDJG@rightfacefilename@

; 4596 :         _My_data._Mysize = 0;

  00e1a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T23[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00e21	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T23[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00e28	c6 45 d8 00	 mov	 BYTE PTR $T23[ebp], 0

; 2521 :         assign(_Ptr);

  00e2c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 144  : 		textLoader.GetTokenString("rightfacefilename", &envData.strSkyBoxFaceFileName[3]);

  00e31	8d 87 b8 01 00
	00		 lea	 eax, DWORD PTR [edi+440]
  00e37	c6 45 fc 1c	 mov	 BYTE PTR __$EHRec$[ebp+8], 28 ; 0000001cH
  00e3b	50		 push	 eax
  00e3c	8d 45 d8	 lea	 eax, DWORD PTR $T23[ebp]
  00e3f	50		 push	 eax
  00e40	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00e46	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00e4b	8b 55 ec	 mov	 edx, DWORD PTR $T23[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 144  : 		textLoader.GetTokenString("rightfacefilename", &envData.strSkyBoxFaceFileName[3]);

  00e4e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00e52	83 fa 10	 cmp	 edx, 16			; 00000010H
  00e55	72 2c		 jb	 SHORT $LN1143@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00e57	8b 4d d8	 mov	 ecx, DWORD PTR $T23[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00e5a	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00e5b	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00e5d	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00e63	72 14		 jb	 SHORT $LN1153@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00e65	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00e68	83 c2 23	 add	 edx, 35			; 00000023H
  00e6b	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00e6d	83 c0 fc	 add	 eax, -4			; fffffffcH
  00e70	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00e73	0f 87 c7 0c 00
	00		 ja	 $LN1951@Environmen
$LN1153@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00e79	52		 push	 edx
  00e7a	51		 push	 ecx
  00e7b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00e80	83 c4 08	 add	 esp, 8
$LN1143@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00e83	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T22[ebp], 0

; 2521 :         assign(_Ptr);

  00e8a	8d 4d d8	 lea	 ecx, DWORD PTR $T22[ebp]
  00e8d	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@ODMABPL@topfacefilename@

; 4596 :         _My_data._Mysize = 0;

  00e92	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T22[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00e99	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T22[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00ea0	c6 45 d8 00	 mov	 BYTE PTR $T22[ebp], 0

; 2521 :         assign(_Ptr);

  00ea4	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 145  : 		textLoader.GetTokenString("topfacefilename", &envData.strSkyBoxFaceFileName[4]);

  00ea9	8d 87 d0 01 00
	00		 lea	 eax, DWORD PTR [edi+464]
  00eaf	c6 45 fc 1d	 mov	 BYTE PTR __$EHRec$[ebp+8], 29 ; 0000001dH
  00eb3	50		 push	 eax
  00eb4	8d 45 d8	 lea	 eax, DWORD PTR $T22[ebp]
  00eb7	50		 push	 eax
  00eb8	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00ebe	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00ec3	8b 55 ec	 mov	 edx, DWORD PTR $T22[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 145  : 		textLoader.GetTokenString("topfacefilename", &envData.strSkyBoxFaceFileName[4]);

  00ec6	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00eca	83 fa 10	 cmp	 edx, 16			; 00000010H
  00ecd	72 2c		 jb	 SHORT $LN1182@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00ecf	8b 4d d8	 mov	 ecx, DWORD PTR $T22[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00ed2	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00ed3	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00ed5	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00edb	72 14		 jb	 SHORT $LN1192@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00edd	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00ee0	83 c2 23	 add	 edx, 35			; 00000023H
  00ee3	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00ee5	83 c0 fc	 add	 eax, -4			; fffffffcH
  00ee8	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00eeb	0f 87 54 0c 00
	00		 ja	 $LN1952@Environmen
$LN1192@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00ef1	52		 push	 edx
  00ef2	51		 push	 ecx
  00ef3	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00ef8	83 c4 08	 add	 esp, 8
$LN1182@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00efb	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T21[ebp], 0

; 2521 :         assign(_Ptr);

  00f02	8d 4d d8	 lea	 ecx, DWORD PTR $T21[ebp]
  00f05	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@PAPHNGLP@bottomfacefilename@

; 4596 :         _My_data._Mysize = 0;

  00f0a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T21[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00f11	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T21[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00f18	c6 45 d8 00	 mov	 BYTE PTR $T21[ebp], 0

; 2521 :         assign(_Ptr);

  00f1c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 146  : 		textLoader.GetTokenString("bottomfacefilename", &envData.strSkyBoxFaceFileName[5]);

  00f21	8d 87 e8 01 00
	00		 lea	 eax, DWORD PTR [edi+488]
  00f27	c6 45 fc 1e	 mov	 BYTE PTR __$EHRec$[ebp+8], 30 ; 0000001eH
  00f2b	50		 push	 eax
  00f2c	8d 45 d8	 lea	 eax, DWORD PTR $T21[ebp]
  00f2f	50		 push	 eax
  00f30	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00f36	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00f3b	8b 55 ec	 mov	 edx, DWORD PTR $T21[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 146  : 		textLoader.GetTokenString("bottomfacefilename", &envData.strSkyBoxFaceFileName[5]);

  00f3e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00f42	83 fa 10	 cmp	 edx, 16			; 00000010H
  00f45	72 2c		 jb	 SHORT $LN1221@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00f47	8b 4d d8	 mov	 ecx, DWORD PTR $T21[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00f4a	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00f4b	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00f4d	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00f53	72 14		 jb	 SHORT $LN1231@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00f55	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00f58	83 c2 23	 add	 edx, 35			; 00000023H
  00f5b	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00f5d	83 c0 fc	 add	 eax, -4			; fffffffcH
  00f60	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00f63	0f 87 e1 0b 00
	00		 ja	 $LN1953@Environmen
$LN1231@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00f69	52		 push	 edx
  00f6a	51		 push	 ecx
  00f6b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00f70	83 c4 08	 add	 esp, 8
$LN1221@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00f73	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T20[ebp], 0

; 2521 :         assign(_Ptr);

  00f7a	8d 4d d8	 lea	 ecx, DWORD PTR $T20[ebp]
  00f7d	68 00 00 00 00	 push	 OFFSET ??_C@_0L@HPPKMJB@cloudscale@

; 4596 :         _My_data._Mysize = 0;

  00f82	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T20[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00f89	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T20[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00f90	c6 45 d8 00	 mov	 BYTE PTR $T20[ebp], 0

; 2521 :         assign(_Ptr);

  00f94	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 149  : 		textLoader.GetTokenVector2("cloudscale", &envData.v2CloudScale);

  00f99	8d 87 00 02 00
	00		 lea	 eax, DWORD PTR [edi+512]
  00f9f	c6 45 fc 1f	 mov	 BYTE PTR __$EHRec$[ebp+8], 31 ; 0000001fH
  00fa3	50		 push	 eax
  00fa4	8d 45 d8	 lea	 eax, DWORD PTR $T20[ebp]
  00fa7	50		 push	 eax
  00fa8	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00fae	e8 00 00 00 00	 call	 ?GetTokenVector2@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR2@@@Z ; CTextFileLoader::GetTokenVector2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00fb3	8b 55 ec	 mov	 edx, DWORD PTR $T20[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 149  : 		textLoader.GetTokenVector2("cloudscale", &envData.v2CloudScale);

  00fb6	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00fba	83 fa 10	 cmp	 edx, 16			; 00000010H
  00fbd	72 2c		 jb	 SHORT $LN1260@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00fbf	8b 4d d8	 mov	 ecx, DWORD PTR $T20[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00fc2	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00fc3	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00fc5	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00fcb	72 14		 jb	 SHORT $LN1270@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00fcd	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00fd0	83 c2 23	 add	 edx, 35			; 00000023H
  00fd3	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00fd5	83 c0 fc	 add	 eax, -4			; fffffffcH
  00fd8	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00fdb	0f 87 6e 0b 00
	00		 ja	 $LN1954@Environmen
$LN1270@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00fe1	52		 push	 edx
  00fe2	51		 push	 ecx
  00fe3	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00fe8	83 c4 08	 add	 esp, 8
$LN1260@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00feb	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T19[ebp], 0

; 2521 :         assign(_Ptr);

  00ff2	8d 4d d8	 lea	 ecx, DWORD PTR $T19[ebp]
  00ff5	68 00 00 00 00	 push	 OFFSET ??_C@_0M@JAHFJEDG@cloudheight@

; 4596 :         _My_data._Mysize = 0;

  00ffa	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T19[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  01001	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T19[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  01008	c6 45 d8 00	 mov	 BYTE PTR $T19[ebp], 0

; 2521 :         assign(_Ptr);

  0100c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 150  : 		textLoader.GetTokenFloat("cloudheight", &envData.fCloudHeight);

  01011	8d 87 08 02 00
	00		 lea	 eax, DWORD PTR [edi+520]
  01017	c6 45 fc 20	 mov	 BYTE PTR __$EHRec$[ebp+8], 32 ; 00000020H
  0101b	50		 push	 eax
  0101c	8d 45 d8	 lea	 eax, DWORD PTR $T19[ebp]
  0101f	50		 push	 eax
  01020	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  01026	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0102b	8b 55 ec	 mov	 edx, DWORD PTR $T19[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 150  : 		textLoader.GetTokenFloat("cloudheight", &envData.fCloudHeight);

  0102e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  01032	83 fa 10	 cmp	 edx, 16			; 00000010H
  01035	72 2c		 jb	 SHORT $LN1299@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01037	8b 4d d8	 mov	 ecx, DWORD PTR $T19[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0103a	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0103b	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0103d	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  01043	72 14		 jb	 SHORT $LN1309@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  01045	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  01048	83 c2 23	 add	 edx, 35			; 00000023H
  0104b	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0104d	83 c0 fc	 add	 eax, -4			; fffffffcH
  01050	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01053	0f 87 fb 0a 00
	00		 ja	 $LN1955@Environmen
$LN1309@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  01059	52		 push	 edx
  0105a	51		 push	 ecx
  0105b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01060	83 c4 08	 add	 esp, 8
$LN1299@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  01063	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T18[ebp], 0

; 2521 :         assign(_Ptr);

  0106a	8d 4d d8	 lea	 ecx, DWORD PTR $T18[ebp]
  0106d	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BBJMDDCO@cloudtexturescale@

; 4596 :         _My_data._Mysize = 0;

  01072	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T18[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  01079	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T18[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  01080	c6 45 d8 00	 mov	 BYTE PTR $T18[ebp], 0

; 2521 :         assign(_Ptr);

  01084	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 151  : 		textLoader.GetTokenVector2("cloudtexturescale", &envData.v2CloudTextureScale);

  01089	8d 87 0c 02 00
	00		 lea	 eax, DWORD PTR [edi+524]
  0108f	c6 45 fc 21	 mov	 BYTE PTR __$EHRec$[ebp+8], 33 ; 00000021H
  01093	50		 push	 eax
  01094	8d 45 d8	 lea	 eax, DWORD PTR $T18[ebp]
  01097	50		 push	 eax
  01098	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  0109e	e8 00 00 00 00	 call	 ?GetTokenVector2@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR2@@@Z ; CTextFileLoader::GetTokenVector2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  010a3	8b 55 ec	 mov	 edx, DWORD PTR $T18[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 151  : 		textLoader.GetTokenVector2("cloudtexturescale", &envData.v2CloudTextureScale);

  010a6	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  010aa	83 fa 10	 cmp	 edx, 16			; 00000010H
  010ad	72 2c		 jb	 SHORT $LN1338@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  010af	8b 4d d8	 mov	 ecx, DWORD PTR $T18[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  010b2	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  010b3	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  010b5	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  010bb	72 14		 jb	 SHORT $LN1348@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  010bd	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  010c0	83 c2 23	 add	 edx, 35			; 00000023H
  010c3	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  010c5	83 c0 fc	 add	 eax, -4			; fffffffcH
  010c8	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  010cb	0f 87 88 0a 00
	00		 ja	 $LN1956@Environmen
$LN1348@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  010d1	52		 push	 edx
  010d2	51		 push	 ecx
  010d3	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  010d8	83 c4 08	 add	 esp, 8
$LN1338@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  010db	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T17[ebp], 0

; 2521 :         assign(_Ptr);

  010e2	8d 4d d8	 lea	 ecx, DWORD PTR $T17[ebp]
  010e5	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LJBHNMFK@cloudspeed@

; 4596 :         _My_data._Mysize = 0;

  010ea	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T17[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  010f1	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T17[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  010f8	c6 45 d8 00	 mov	 BYTE PTR $T17[ebp], 0

; 2521 :         assign(_Ptr);

  010fc	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 152  : 		textLoader.GetTokenVector2("cloudspeed", &envData.v2CloudSpeed);

  01101	8d 87 14 02 00
	00		 lea	 eax, DWORD PTR [edi+532]
  01107	c6 45 fc 22	 mov	 BYTE PTR __$EHRec$[ebp+8], 34 ; 00000022H
  0110b	50		 push	 eax
  0110c	8d 45 d8	 lea	 eax, DWORD PTR $T17[ebp]
  0110f	50		 push	 eax
  01110	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  01116	e8 00 00 00 00	 call	 ?GetTokenVector2@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR2@@@Z ; CTextFileLoader::GetTokenVector2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0111b	8b 55 ec	 mov	 edx, DWORD PTR $T17[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 152  : 		textLoader.GetTokenVector2("cloudspeed", &envData.v2CloudSpeed);

  0111e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  01122	83 fa 10	 cmp	 edx, 16			; 00000010H
  01125	72 2c		 jb	 SHORT $LN1377@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01127	8b 4d d8	 mov	 ecx, DWORD PTR $T17[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0112a	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0112b	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0112d	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  01133	72 14		 jb	 SHORT $LN1387@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  01135	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  01138	83 c2 23	 add	 edx, 35			; 00000023H
  0113b	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0113d	83 c0 fc	 add	 eax, -4			; fffffffcH
  01140	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01143	0f 87 15 0a 00
	00		 ja	 $LN1957@Environmen
$LN1387@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  01149	52		 push	 edx
  0114a	51		 push	 ecx
  0114b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01150	83 c4 08	 add	 esp, 8
$LN1377@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  01153	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T16[ebp], 0

; 2521 :         assign(_Ptr);

  0115a	8d 4d d8	 lea	 ecx, DWORD PTR $T16[ebp]
  0115d	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@KCIBJMLM@cloudtexturefilename@

; 4596 :         _My_data._Mysize = 0;

  01162	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T16[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  01169	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T16[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  01170	c6 45 d8 00	 mov	 BYTE PTR $T16[ebp], 0

; 2521 :         assign(_Ptr);

  01174	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 153  : 		textLoader.GetTokenString("cloudtexturefilename", &envData.strCloudTextureFileName);

  01179	8d 87 1c 02 00
	00		 lea	 eax, DWORD PTR [edi+540]
  0117f	c6 45 fc 23	 mov	 BYTE PTR __$EHRec$[ebp+8], 35 ; 00000023H
  01183	50		 push	 eax
  01184	8d 45 d8	 lea	 eax, DWORD PTR $T16[ebp]
  01187	50		 push	 eax
  01188	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  0118e	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  01193	8b 55 ec	 mov	 edx, DWORD PTR $T16[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 153  : 		textLoader.GetTokenString("cloudtexturefilename", &envData.strCloudTextureFileName);

  01196	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0119a	83 fa 10	 cmp	 edx, 16			; 00000010H
  0119d	72 2c		 jb	 SHORT $LN1416@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0119f	8b 4d d8	 mov	 ecx, DWORD PTR $T16[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  011a2	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  011a3	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  011a5	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  011ab	72 14		 jb	 SHORT $LN1426@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  011ad	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  011b0	83 c2 23	 add	 edx, 35			; 00000023H
  011b3	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  011b5	83 c0 fc	 add	 eax, -4			; fffffffcH
  011b8	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  011bb	0f 87 a2 09 00
	00		 ja	 $LN1958@Environmen
$LN1426@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  011c1	52		 push	 edx
  011c2	51		 push	 ecx
  011c3	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  011c8	83 c4 08	 add	 esp, 8
$LN1416@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  011cb	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T15[ebp], 0

; 2521 :         assign(_Ptr);

  011d2	8d 4d d8	 lea	 ecx, DWORD PTR $T15[ebp]
  011d5	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DEHGKBBJ@cloudcolor@

; 4596 :         _My_data._Mysize = 0;

  011da	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T15[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  011e1	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T15[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  011e8	c6 45 d8 00	 mov	 BYTE PTR $T15[ebp], 0

; 2521 :         assign(_Ptr);

  011ec	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 156  : 		if(textLoader.GetTokenVector("cloudcolor", &pTokenVectorCloudColor))

  011f1	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _pTokenVectorCloudColor$4[ebp]
  011f7	c6 45 fc 24	 mov	 BYTE PTR __$EHRec$[ebp+8], 36 ; 00000024H
  011fb	50		 push	 eax
  011fc	8d 45 d8	 lea	 eax, DWORD PTR $T15[ebp]
  011ff	50		 push	 eax
  01200	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  01206	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0120b	8b 55 ec	 mov	 edx, DWORD PTR $T15[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 156  : 		if(textLoader.GetTokenVector("cloudcolor", &pTokenVectorCloudColor))

  0120e	8b f0		 mov	 esi, eax
  01210	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  01214	83 fa 10	 cmp	 edx, 16			; 00000010H
  01217	72 2c		 jb	 SHORT $LN1455@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01219	8b 4d d8	 mov	 ecx, DWORD PTR $T15[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0121c	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0121d	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0121f	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  01225	72 14		 jb	 SHORT $LN1465@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  01227	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0122a	83 c2 23	 add	 edx, 35			; 00000023H
  0122d	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0122f	83 c0 fc	 add	 eax, -4			; fffffffcH
  01232	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01235	0f 87 2d 09 00
	00		 ja	 $LN1959@Environmen
$LN1465@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0123b	52		 push	 edx
  0123c	51		 push	 ecx
  0123d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01242	83 c4 08	 add	 esp, 8
$LN1455@Environmen:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 156  : 		if(textLoader.GetTokenVector("cloudcolor", &pTokenVectorCloudColor))

  01245	85 f6		 test	 esi, esi
  01247	0f 84 40 01 00
	00		 je	 $LN14@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0124d	8b b5 30 ff ff
	ff		 mov	 esi, DWORD PTR _pTokenVectorCloudColor$4[ebp]
  01253	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  01258	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0125b	2b 0e		 sub	 ecx, DWORD PTR [esi]
  0125d	f7 e9		 imul	 ecx
  0125f	c1 fa 02	 sar	 edx, 2
  01262	8b c2		 mov	 eax, edx
  01264	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  01267	03 c2		 add	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 157  : 		if ( 0 == pTokenVectorCloudColor->size()%8)

  01269	a8 07		 test	 al, 7
  0126b	0f 85 1c 01 00
	00		 jne	 $LN14@Environmen

; 159  : 			envData.CloudGradientColor.m_FirstColor.r = atof(pTokenVectorCloudColor->at(0).c_str());

  01271	6a 00		 push	 0
  01273	8b ce		 mov	 ecx, esi
  01275	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  0127a	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0127e	72 02		 jb	 SHORT $LN1475@Environmen

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  01280	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1475@Environmen:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 159  : 			envData.CloudGradientColor.m_FirstColor.r = atof(pTokenVectorCloudColor->at(0).c_str());

  01282	50		 push	 eax
  01283	e8 00 00 00 00	 call	 _atof

; 160  : 			envData.CloudGradientColor.m_FirstColor.g = atof(pTokenVectorCloudColor->at(1).c_str());

  01288	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _pTokenVectorCloudColor$4[ebp]
  0128e	83 c4 04	 add	 esp, 4
  01291	d9 9f 34 02 00
	00		 fstp	 DWORD PTR [edi+564]
  01297	6a 01		 push	 1
  01299	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  0129e	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  012a2	72 02		 jb	 SHORT $LN1482@Environmen

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  012a4	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1482@Environmen:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 160  : 			envData.CloudGradientColor.m_FirstColor.g = atof(pTokenVectorCloudColor->at(1).c_str());

  012a6	50		 push	 eax
  012a7	e8 00 00 00 00	 call	 _atof

; 161  : 			envData.CloudGradientColor.m_FirstColor.b = atof(pTokenVectorCloudColor->at(2).c_str());

  012ac	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _pTokenVectorCloudColor$4[ebp]
  012b2	83 c4 04	 add	 esp, 4
  012b5	d9 9f 38 02 00
	00		 fstp	 DWORD PTR [edi+568]
  012bb	6a 02		 push	 2
  012bd	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  012c2	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  012c6	72 02		 jb	 SHORT $LN1489@Environmen

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  012c8	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1489@Environmen:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 161  : 			envData.CloudGradientColor.m_FirstColor.b = atof(pTokenVectorCloudColor->at(2).c_str());

  012ca	50		 push	 eax
  012cb	e8 00 00 00 00	 call	 _atof

; 162  : 			envData.CloudGradientColor.m_FirstColor.a = atof(pTokenVectorCloudColor->at(3).c_str());

  012d0	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _pTokenVectorCloudColor$4[ebp]
  012d6	83 c4 04	 add	 esp, 4
  012d9	d9 9f 3c 02 00
	00		 fstp	 DWORD PTR [edi+572]
  012df	6a 03		 push	 3
  012e1	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  012e6	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  012ea	72 02		 jb	 SHORT $LN1496@Environmen

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  012ec	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1496@Environmen:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 162  : 			envData.CloudGradientColor.m_FirstColor.a = atof(pTokenVectorCloudColor->at(3).c_str());

  012ee	50		 push	 eax
  012ef	e8 00 00 00 00	 call	 _atof

; 164  : 			envData.CloudGradientColor.m_SecondColor.r = atof(pTokenVectorCloudColor->at(4).c_str());

  012f4	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _pTokenVectorCloudColor$4[ebp]
  012fa	83 c4 04	 add	 esp, 4
  012fd	d9 9f 40 02 00
	00		 fstp	 DWORD PTR [edi+576]
  01303	6a 04		 push	 4
  01305	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  0130a	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0130e	72 02		 jb	 SHORT $LN1503@Environmen

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  01310	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1503@Environmen:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 164  : 			envData.CloudGradientColor.m_SecondColor.r = atof(pTokenVectorCloudColor->at(4).c_str());

  01312	50		 push	 eax
  01313	e8 00 00 00 00	 call	 _atof

; 165  : 			envData.CloudGradientColor.m_SecondColor.g = atof(pTokenVectorCloudColor->at(5).c_str());

  01318	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _pTokenVectorCloudColor$4[ebp]
  0131e	83 c4 04	 add	 esp, 4
  01321	d9 9f 44 02 00
	00		 fstp	 DWORD PTR [edi+580]
  01327	6a 05		 push	 5
  01329	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  0132e	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  01332	72 02		 jb	 SHORT $LN1510@Environmen

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  01334	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1510@Environmen:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 165  : 			envData.CloudGradientColor.m_SecondColor.g = atof(pTokenVectorCloudColor->at(5).c_str());

  01336	50		 push	 eax
  01337	e8 00 00 00 00	 call	 _atof

; 166  : 			envData.CloudGradientColor.m_SecondColor.b = atof(pTokenVectorCloudColor->at(6).c_str());

  0133c	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _pTokenVectorCloudColor$4[ebp]
  01342	83 c4 04	 add	 esp, 4
  01345	d9 9f 48 02 00
	00		 fstp	 DWORD PTR [edi+584]
  0134b	6a 06		 push	 6
  0134d	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  01352	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  01356	72 02		 jb	 SHORT $LN1517@Environmen

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  01358	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1517@Environmen:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 166  : 			envData.CloudGradientColor.m_SecondColor.b = atof(pTokenVectorCloudColor->at(6).c_str());

  0135a	50		 push	 eax
  0135b	e8 00 00 00 00	 call	 _atof

; 167  : 			envData.CloudGradientColor.m_SecondColor.a = atof(pTokenVectorCloudColor->at(7).c_str());

  01360	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR _pTokenVectorCloudColor$4[ebp]
  01366	83 c4 04	 add	 esp, 4
  01369	d9 9f 4c 02 00
	00		 fstp	 DWORD PTR [edi+588]
  0136f	6a 07		 push	 7
  01371	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  01376	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0137a	72 02		 jb	 SHORT $LN1524@Environmen

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  0137c	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1524@Environmen:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 167  : 			envData.CloudGradientColor.m_SecondColor.a = atof(pTokenVectorCloudColor->at(7).c_str());

  0137e	50		 push	 eax
  0137f	e8 00 00 00 00	 call	 _atof
  01384	d9 9f 50 02 00
	00		 fstp	 DWORD PTR [edi+592]
  0138a	83 c4 04	 add	 esp, 4
$LN14@Environmen:

; 170  : 		BYTE byGradientCount = envData.bySkyBoxGradientLevelUpper+envData.bySkyBoxGradientLevelLower;

  0138d	8a 1b		 mov	 bl, BYTE PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2521 :         assign(_Ptr);

  0138f	8d 4d d8	 lea	 ecx, DWORD PTR $T14[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 170  : 		BYTE byGradientCount = envData.bySkyBoxGradientLevelUpper+envData.bySkyBoxGradientLevelLower;

  01392	02 9f 6c 01 00
	00		 add	 bl, BYTE PTR [edi+364]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  01398	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T14[ebp], 0

; 2521 :         assign(_Ptr);

  0139f	68 00 00 00 00	 push	 OFFSET ??_C@_08OAOFNDBJ@gradient@

; 4596 :         _My_data._Mysize = 0;

  013a4	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T14[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  013ab	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T14[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  013b2	c6 45 d8 00	 mov	 BYTE PTR $T14[ebp], 0

; 2521 :         assign(_Ptr);

  013b6	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 172  : 		if (textLoader.GetTokenVector("gradient", &pTokenVector))

  013bb	8d 85 38 ff ff
	ff		 lea	 eax, DWORD PTR _pTokenVector$5[ebp]
  013c1	c6 45 fc 25	 mov	 BYTE PTR __$EHRec$[ebp+8], 37 ; 00000025H
  013c5	50		 push	 eax
  013c6	8d 45 d8	 lea	 eax, DWORD PTR $T14[ebp]
  013c9	50		 push	 eax
  013ca	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  013d0	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  013d5	8b 55 ec	 mov	 edx, DWORD PTR $T14[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 172  : 		if (textLoader.GetTokenVector("gradient", &pTokenVector))

  013d8	8b f0		 mov	 esi, eax
  013da	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  013de	83 fa 10	 cmp	 edx, 16			; 00000010H
  013e1	72 2c		 jb	 SHORT $LN1552@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  013e3	8b 4d d8	 mov	 ecx, DWORD PTR $T14[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  013e6	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  013e7	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  013e9	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  013ef	72 14		 jb	 SHORT $LN1562@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  013f1	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  013f4	83 c2 23	 add	 edx, 35			; 00000023H
  013f7	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  013f9	83 c0 fc	 add	 eax, -4			; fffffffcH
  013fc	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  013ff	0f 87 68 07 00
	00		 ja	 $LN1960@Environmen
$LN1562@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  01405	52		 push	 edx
  01406	51		 push	 ecx
  01407	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0140c	83 c4 08	 add	 esp, 8
$LN1552@Environmen:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 172  : 		if (textLoader.GetTokenVector("gradient", &pTokenVector))

  0140f	85 f6		 test	 esi, esi
  01411	0f 84 79 03 00
	00		 je	 $LN3@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  01417	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _pTokenVector$5[ebp]
  0141d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  01420	2b 08		 sub	 ecx, DWORD PTR [eax]
  01422	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  01427	f7 e9		 imul	 ecx
  01429	c1 fa 02	 sar	 edx, 2
  0142c	8b c2		 mov	 eax, edx
  0142e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  01431	03 c2		 add	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 173  : 		if (0 == pTokenVector->size()%8)

  01433	a8 07		 test	 al, 7
  01435	0f 85 55 03 00
	00		 jne	 $LN3@Environmen

; 174  : 		if (byGradientCount == pTokenVector->size()/8)

  0143b	0f b6 f3	 movzx	 esi, bl
  0143e	c1 e8 03	 shr	 eax, 3
  01441	89 b5 28 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], esi
  01447	3b f0		 cmp	 esi, eax
  01449	0f 85 41 03 00
	00		 jne	 $LN3@Environmen

; 175  : 		{
; 176  : 			envData.SkyBoxGradientColorVector.clear();

  0144f	8b 8f 54 02 00
	00		 mov	 ecx, DWORD PTR [edi+596]
  01455	8d 9f 54 02 00
	00		 lea	 ebx, DWORD PTR [edi+596]
  0145b	89 4b 04	 mov	 DWORD PTR [ebx+4], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1272 :         if (_Newsize > _Oldsize) { // append

  0145e	85 f6		 test	 esi, esi
  01460	0f 84 2a 03 00
	00		 je	 $LN3@Environmen

; 1273 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  01466	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  01469	2b c1		 sub	 eax, ecx
  0146b	c1 f8 05	 sar	 eax, 5

; 1274 :             if (_Newsize > _Oldcapacity) { // reallocate

  0146e	3b f0		 cmp	 esi, eax
  01470	76 11		 jbe	 SHORT $LN1576@Environmen

; 1275 :                 _Resize_reallocate(_Newsize, _Val);

  01472	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  01478	8b cb		 mov	 ecx, ebx
  0147a	50		 push	 eax
  0147b	56		 push	 esi
  0147c	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<TGradientColor,std::allocator<TGradientColor> >::_Resize_reallocate<std::_Value_init_tag>

; 1276 :                 return;

  01481	eb 18		 jmp	 SHORT $LN1920@Environmen
$LN1576@Environmen:

; 1277 :             }
; 1278 : 
; 1279 :             const pointer _Oldlast = _Mylast;
; 1280 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  01483	ff b5 2c ff ff
	ff		 push	 DWORD PTR $T3[ebp]
  01489	56		 push	 esi
  0148a	51		 push	 ecx
  0148b	8b cb		 mov	 ecx, ebx
  0148d	e8 00 00 00 00	 call	 ?_Ufill@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@AAEPAUTGradientColor@@PAU3@IU_Value_init_tag@2@@Z ; std::vector<TGradientColor,std::allocator<TGradientColor> >::_Ufill
  01492	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  01495	89 b5 28 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], esi
$LN1920@Environmen:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 178  : 			for (DWORD i = 0; i < byGradientCount; ++i)

  0149b	be 02 00 00 00	 mov	 esi, 2
  014a0	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv9351[ebp], 0
  014aa	89 b5 34 ff ff
	ff		 mov	 DWORD PTR tv9350[ebp], esi
  014b0	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$1$[ebp], 0
  014ba	8d 5e 2e	 lea	 ebx, DWORD PTR [esi+46]
  014bd	0f 1f 00	 npad	 3
$LL4@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1584 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  014c0	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _pTokenVector$5[ebp]
  014c6	8b 10		 mov	 edx, DWORD PTR [eax]
  014c8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  014cb	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  014d0	2b ca		 sub	 ecx, edx
  014d2	89 95 24 ff ff
	ff		 mov	 DWORD PTR tv9408[ebp], edx
  014d8	f7 e9		 imul	 ecx
  014da	8d 46 fe	 lea	 eax, DWORD PTR [esi-2]
  014dd	c1 fa 02	 sar	 edx, 2
  014e0	8b ca		 mov	 ecx, edx
  014e2	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  014e5	03 ca		 add	 ecx, edx
  014e7	3b c8		 cmp	 ecx, eax
  014e9	0f 86 88 06 00
	00		 jbe	 $LN1916@Environmen

; 1588 :         return _My_data._Myfirst[_Pos];

  014ef	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv9408[ebp]
  014f5	83 c0 d0	 add	 eax, -48		; ffffffd0H
  014f8	03 c3		 add	 eax, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  014fa	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  014fe	72 02		 jb	 SHORT $LN1584@Environmen

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  01500	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1584@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  01502	8b b7 54 02 00
	00		 mov	 esi, DWORD PTR [edi+596]
  01508	03 b5 3c ff ff
	ff		 add	 esi, DWORD PTR tv9351[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 180  : 				envData.SkyBoxGradientColorVector[i].m_FirstColor.r = atof(pTokenVector->at(i*8+0).c_str());

  0150e	50		 push	 eax
  0150f	e8 00 00 00 00	 call	 _atof
  01514	d9 1e		 fstp	 DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1584 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  01516	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _pTokenVector$5[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 180  : 				envData.SkyBoxGradientColorVector[i].m_FirstColor.r = atof(pTokenVector->at(i*8+0).c_str());

  0151c	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1584 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  0151f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  01522	8b 30		 mov	 esi, DWORD PTR [eax]
  01524	2b ce		 sub	 ecx, esi
  01526	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0152b	f7 e9		 imul	 ecx
  0152d	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv9350[ebp]
  01533	c1 fa 02	 sar	 edx, 2
  01536	48		 dec	 eax
  01537	8b ca		 mov	 ecx, edx
  01539	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0153c	03 ca		 add	 ecx, edx
  0153e	3b c8		 cmp	 ecx, eax
  01540	0f 86 31 06 00
	00		 jbe	 $LN1916@Environmen

; 1588 :         return _My_data._Myfirst[_Pos];

  01546	8d 46 e8	 lea	 eax, DWORD PTR [esi-24]
  01549	03 c3		 add	 eax, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  0154b	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0154f	72 02		 jb	 SHORT $LN1596@Environmen

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  01551	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1596@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  01553	8b b7 54 02 00
	00		 mov	 esi, DWORD PTR [edi+596]
  01559	03 b5 3c ff ff
	ff		 add	 esi, DWORD PTR tv9351[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 181  : 				envData.SkyBoxGradientColorVector[i].m_FirstColor.g = atof(pTokenVector->at(i*8+1).c_str());

  0155f	50		 push	 eax
  01560	e8 00 00 00 00	 call	 _atof
  01565	d9 5e 04	 fstp	 DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1584 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  01568	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _pTokenVector$5[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 181  : 				envData.SkyBoxGradientColorVector[i].m_FirstColor.g = atof(pTokenVector->at(i*8+1).c_str());

  0156e	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1584 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  01571	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  01574	8b 30		 mov	 esi, DWORD PTR [eax]
  01576	2b ce		 sub	 ecx, esi
  01578	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0157d	f7 e9		 imul	 ecx
  0157f	c1 fa 02	 sar	 edx, 2
  01582	8b c2		 mov	 eax, edx
  01584	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  01587	03 c2		 add	 eax, edx
  01589	3b 85 34 ff ff
	ff		 cmp	 eax, DWORD PTR tv9350[ebp]
  0158f	0f 86 e2 05 00
	00		 jbe	 $LN1916@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  01595	83 7c 1e 14 10	 cmp	 DWORD PTR [esi+ebx+20], 16 ; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1588 :         return _My_data._Myfirst[_Pos];

  0159a	8d 04 1e	 lea	 eax, DWORD PTR [esi+ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  0159d	72 02		 jb	 SHORT $LN1608@Environmen

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  0159f	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1608@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  015a1	8b b7 54 02 00
	00		 mov	 esi, DWORD PTR [edi+596]
  015a7	03 b5 3c ff ff
	ff		 add	 esi, DWORD PTR tv9351[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 182  : 				envData.SkyBoxGradientColorVector[i].m_FirstColor.b = atof(pTokenVector->at(i*8+2).c_str());

  015ad	50		 push	 eax
  015ae	e8 00 00 00 00	 call	 _atof
  015b3	d9 5e 08	 fstp	 DWORD PTR [esi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1584 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  015b6	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _pTokenVector$5[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 182  : 				envData.SkyBoxGradientColorVector[i].m_FirstColor.b = atof(pTokenVector->at(i*8+2).c_str());

  015bc	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1584 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  015bf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  015c2	8b 30		 mov	 esi, DWORD PTR [eax]
  015c4	2b ce		 sub	 ecx, esi
  015c6	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  015cb	f7 e9		 imul	 ecx
  015cd	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv9350[ebp]
  015d3	c1 fa 02	 sar	 edx, 2
  015d6	40		 inc	 eax
  015d7	8b ca		 mov	 ecx, edx
  015d9	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  015dc	03 ca		 add	 ecx, edx
  015de	3b c8		 cmp	 ecx, eax
  015e0	0f 86 91 05 00
	00		 jbe	 $LN1916@Environmen

; 1588 :         return _My_data._Myfirst[_Pos];

  015e6	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
  015e9	03 c3		 add	 eax, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  015eb	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  015ef	72 02		 jb	 SHORT $LN1620@Environmen

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  015f1	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1620@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  015f3	8b b7 54 02 00
	00		 mov	 esi, DWORD PTR [edi+596]
  015f9	03 b5 3c ff ff
	ff		 add	 esi, DWORD PTR tv9351[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 183  : 				envData.SkyBoxGradientColorVector[i].m_FirstColor.a = atof(pTokenVector->at(i*8+3).c_str());

  015ff	50		 push	 eax
  01600	e8 00 00 00 00	 call	 _atof
  01605	d9 5e 0c	 fstp	 DWORD PTR [esi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1584 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  01608	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _pTokenVector$5[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 183  : 				envData.SkyBoxGradientColorVector[i].m_FirstColor.a = atof(pTokenVector->at(i*8+3).c_str());

  0160e	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1584 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  01611	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  01614	8b 30		 mov	 esi, DWORD PTR [eax]
  01616	2b ce		 sub	 ecx, esi
  01618	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0161d	f7 e9		 imul	 ecx
  0161f	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv9350[ebp]
  01625	c1 fa 02	 sar	 edx, 2
  01628	83 c0 02	 add	 eax, 2
  0162b	8b ca		 mov	 ecx, edx
  0162d	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  01630	03 ca		 add	 ecx, edx
  01632	3b c8		 cmp	 ecx, eax
  01634	0f 86 3d 05 00
	00		 jbe	 $LN1916@Environmen

; 1588 :         return _My_data._Myfirst[_Pos];

  0163a	8d 46 30	 lea	 eax, DWORD PTR [esi+48]
  0163d	03 c3		 add	 eax, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  0163f	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  01643	72 02		 jb	 SHORT $LN1632@Environmen

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  01645	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1632@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  01647	8b b7 54 02 00
	00		 mov	 esi, DWORD PTR [edi+596]
  0164d	03 b5 3c ff ff
	ff		 add	 esi, DWORD PTR tv9351[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 185  : 				envData.SkyBoxGradientColorVector[i].m_SecondColor.r = atof(pTokenVector->at(i*8+4).c_str());

  01653	50		 push	 eax
  01654	e8 00 00 00 00	 call	 _atof
  01659	d9 5e 10	 fstp	 DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1584 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  0165c	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _pTokenVector$5[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 185  : 				envData.SkyBoxGradientColorVector[i].m_SecondColor.r = atof(pTokenVector->at(i*8+4).c_str());

  01662	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1584 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  01665	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  01668	8b 30		 mov	 esi, DWORD PTR [eax]
  0166a	2b ce		 sub	 ecx, esi
  0166c	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  01671	f7 e9		 imul	 ecx
  01673	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv9350[ebp]
  01679	c1 fa 02	 sar	 edx, 2
  0167c	83 c0 03	 add	 eax, 3
  0167f	8b ca		 mov	 ecx, edx
  01681	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  01684	03 ca		 add	 ecx, edx
  01686	3b c8		 cmp	 ecx, eax
  01688	0f 86 e9 04 00
	00		 jbe	 $LN1916@Environmen

; 1588 :         return _My_data._Myfirst[_Pos];

  0168e	8d 46 48	 lea	 eax, DWORD PTR [esi+72]
  01691	03 c3		 add	 eax, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  01693	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  01697	72 02		 jb	 SHORT $LN1644@Environmen

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  01699	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1644@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  0169b	8b b7 54 02 00
	00		 mov	 esi, DWORD PTR [edi+596]
  016a1	03 b5 3c ff ff
	ff		 add	 esi, DWORD PTR tv9351[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 186  : 				envData.SkyBoxGradientColorVector[i].m_SecondColor.g = atof(pTokenVector->at(i*8+5).c_str());

  016a7	50		 push	 eax
  016a8	e8 00 00 00 00	 call	 _atof
  016ad	d9 5e 14	 fstp	 DWORD PTR [esi+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1584 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  016b0	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _pTokenVector$5[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 186  : 				envData.SkyBoxGradientColorVector[i].m_SecondColor.g = atof(pTokenVector->at(i*8+5).c_str());

  016b6	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1584 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  016b9	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  016bc	8b 30		 mov	 esi, DWORD PTR [eax]
  016be	2b ce		 sub	 ecx, esi
  016c0	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  016c5	f7 e9		 imul	 ecx
  016c7	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv9350[ebp]
  016cd	c1 fa 02	 sar	 edx, 2
  016d0	83 c0 04	 add	 eax, 4
  016d3	8b ca		 mov	 ecx, edx
  016d5	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  016d8	03 ca		 add	 ecx, edx
  016da	3b c8		 cmp	 ecx, eax
  016dc	0f 86 95 04 00
	00		 jbe	 $LN1916@Environmen

; 1588 :         return _My_data._Myfirst[_Pos];

  016e2	8d 46 60	 lea	 eax, DWORD PTR [esi+96]
  016e5	03 c3		 add	 eax, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  016e7	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  016eb	72 02		 jb	 SHORT $LN1656@Environmen

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  016ed	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1656@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  016ef	8b b7 54 02 00
	00		 mov	 esi, DWORD PTR [edi+596]
  016f5	03 b5 3c ff ff
	ff		 add	 esi, DWORD PTR tv9351[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 187  : 				envData.SkyBoxGradientColorVector[i].m_SecondColor.b = atof(pTokenVector->at(i*8+6).c_str());

  016fb	50		 push	 eax
  016fc	e8 00 00 00 00	 call	 _atof
  01701	d9 5e 18	 fstp	 DWORD PTR [esi+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1584 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  01704	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _pTokenVector$5[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 187  : 				envData.SkyBoxGradientColorVector[i].m_SecondColor.b = atof(pTokenVector->at(i*8+6).c_str());

  0170a	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1584 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  0170d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  01710	8b 30		 mov	 esi, DWORD PTR [eax]
  01712	2b ce		 sub	 ecx, esi
  01714	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  01719	f7 e9		 imul	 ecx
  0171b	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv9350[ebp]
  01721	c1 fa 02	 sar	 edx, 2
  01724	83 c0 05	 add	 eax, 5
  01727	8b ca		 mov	 ecx, edx
  01729	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0172c	03 ca		 add	 ecx, edx
  0172e	3b c8		 cmp	 ecx, eax
  01730	0f 86 41 04 00
	00		 jbe	 $LN1916@Environmen

; 1588 :         return _My_data._Myfirst[_Pos];

  01736	8d 46 78	 lea	 eax, DWORD PTR [esi+120]
  01739	03 c3		 add	 eax, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  0173b	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0173f	72 02		 jb	 SHORT $LN1668@Environmen

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  01741	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1668@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  01743	8b b7 54 02 00
	00		 mov	 esi, DWORD PTR [edi+596]
  01749	03 b5 3c ff ff
	ff		 add	 esi, DWORD PTR tv9351[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 188  : 				envData.SkyBoxGradientColorVector[i].m_SecondColor.a = atof(pTokenVector->at(i*8+7).c_str());

  0174f	50		 push	 eax
  01750	e8 00 00 00 00	 call	 _atof
  01755	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR _i$1$[ebp]
  0175b	83 c4 04	 add	 esp, 4
  0175e	83 85 3c ff ff
	ff 20		 add	 DWORD PTR tv9351[ebp], 32 ; 00000020H
  01765	40		 inc	 eax
  01766	d9 5e 1c	 fstp	 DWORD PTR [esi+28]
  01769	8b b5 34 ff ff
	ff		 mov	 esi, DWORD PTR tv9350[ebp]
  0176f	81 c3 c0 00 00
	00		 add	 ebx, 192		; 000000c0H
  01775	83 c6 08	 add	 esi, 8
  01778	89 85 2c ff ff
	ff		 mov	 DWORD PTR _i$1$[ebp], eax
  0177e	89 b5 34 ff ff
	ff		 mov	 DWORD PTR tv9350[ebp], esi
  01784	3b 85 28 ff ff
	ff		 cmp	 eax, DWORD PTR $T2[ebp]
  0178a	0f 82 30 fd ff
	ff		 jb	 $LL4@Environmen
$LN3@Environmen:

; 189  : 			}
; 190  : 		}
; 191  : 
; 192  : 		textLoader.SetParentNode();

  01790	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  01796	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
$LN12@Environmen:

; 193  : 	}
; 194  : 
; 195  : 	if (textLoader.SetChildNode("lensflare"))

  0179b	68 00 00 00 00	 push	 OFFSET ??_C@_09JHLBAKBC@lensflare@
  017a0	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  017a6	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHPBD@Z ; CTextFileLoader::SetChildNode
  017ab	85 c0		 test	 eax, eax
  017ad	0f 84 db 02 00
	00		 je	 $LN18@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  017b3	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T13[ebp], 0

; 2521 :         assign(_Ptr);

  017ba	8d 4d d8	 lea	 ecx, DWORD PTR $T13[ebp]
  017bd	68 00 00 00 00	 push	 OFFSET ??_C@_06OFNJOBDK@enable@

; 4596 :         _My_data._Mysize = 0;

  017c2	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T13[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  017c9	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T13[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  017d0	c6 45 d8 00	 mov	 BYTE PTR $T13[ebp], 0

; 2521 :         assign(_Ptr);

  017d4	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 197  : 		textLoader.GetTokenBoolean("enable", &envData.bLensFlareEnable);

  017d9	8d 87 60 02 00
	00		 lea	 eax, DWORD PTR [edi+608]
  017df	c6 45 fc 26	 mov	 BYTE PTR __$EHRec$[ebp+8], 38 ; 00000026H
  017e3	50		 push	 eax
  017e4	8d 45 d8	 lea	 eax, DWORD PTR $T13[ebp]
  017e7	50		 push	 eax
  017e8	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  017ee	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  017f3	8b 55 ec	 mov	 edx, DWORD PTR $T13[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 197  : 		textLoader.GetTokenBoolean("enable", &envData.bLensFlareEnable);

  017f6	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  017fa	83 fa 10	 cmp	 edx, 16			; 00000010H
  017fd	72 2c		 jb	 SHORT $LN1698@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  017ff	8b 4d d8	 mov	 ecx, DWORD PTR $T13[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  01802	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01803	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01805	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0180b	72 14		 jb	 SHORT $LN1708@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0180d	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  01810	83 c2 23	 add	 edx, 35			; 00000023H
  01813	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01815	83 c0 fc	 add	 eax, -4			; fffffffcH
  01818	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0181b	0f 87 51 03 00
	00		 ja	 $LN1961@Environmen
$LN1708@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  01821	52		 push	 edx
  01822	51		 push	 ecx
  01823	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01828	83 c4 08	 add	 esp, 8
$LN1698@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0182b	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T12[ebp], 0

; 2521 :         assign(_Ptr);

  01832	8d 4d d8	 lea	 ecx, DWORD PTR $T12[ebp]
  01835	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@KOCEAOMM@brightnesscolor@

; 4596 :         _My_data._Mysize = 0;

  0183a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T12[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  01841	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T12[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  01848	c6 45 d8 00	 mov	 BYTE PTR $T12[ebp], 0

; 2521 :         assign(_Ptr);

  0184c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 198  : 		textLoader.GetTokenColor("brightnesscolor", &envData.LensFlareBrightnessColor);

  01851	8d 87 64 02 00
	00		 lea	 eax, DWORD PTR [edi+612]
  01857	c6 45 fc 27	 mov	 BYTE PTR __$EHRec$[ebp+8], 39 ; 00000027H
  0185b	50		 push	 eax
  0185c	8d 45 d8	 lea	 eax, DWORD PTR $T12[ebp]
  0185f	50		 push	 eax
  01860	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  01866	e8 00 00 00 00	 call	 ?GetTokenColor@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXCOLOR@@@Z ; CTextFileLoader::GetTokenColor
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0186b	8b 55 ec	 mov	 edx, DWORD PTR $T12[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 198  : 		textLoader.GetTokenColor("brightnesscolor", &envData.LensFlareBrightnessColor);

  0186e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  01872	83 fa 10	 cmp	 edx, 16			; 00000010H
  01875	72 2c		 jb	 SHORT $LN1737@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01877	8b 4d d8	 mov	 ecx, DWORD PTR $T12[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0187a	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0187b	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0187d	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  01883	72 14		 jb	 SHORT $LN1747@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  01885	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  01888	83 c2 23	 add	 edx, 35			; 00000023H
  0188b	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0188d	83 c0 fc	 add	 eax, -4			; fffffffcH
  01890	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01893	0f 87 e3 02 00
	00		 ja	 $LN1962@Environmen
$LN1747@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  01899	52		 push	 edx
  0189a	51		 push	 ecx
  0189b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  018a0	83 c4 08	 add	 esp, 8
$LN1737@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  018a3	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T11[ebp], 0

; 2521 :         assign(_Ptr);

  018aa	8d 4d d8	 lea	 ecx, DWORD PTR $T11[ebp]
  018ad	68 00 00 00 00	 push	 OFFSET ??_C@_0O@GEBPBGOO@maxbrightness@

; 4596 :         _My_data._Mysize = 0;

  018b2	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T11[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  018b9	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T11[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  018c0	c6 45 d8 00	 mov	 BYTE PTR $T11[ebp], 0

; 2521 :         assign(_Ptr);

  018c4	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 199  : 		textLoader.GetTokenFloat("maxbrightness", &envData.fLensFlareMaxBrightness);

  018c9	8d 87 74 02 00
	00		 lea	 eax, DWORD PTR [edi+628]
  018cf	c6 45 fc 28	 mov	 BYTE PTR __$EHRec$[ebp+8], 40 ; 00000028H
  018d3	50		 push	 eax
  018d4	8d 45 d8	 lea	 eax, DWORD PTR $T11[ebp]
  018d7	50		 push	 eax
  018d8	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  018de	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  018e3	8b 55 ec	 mov	 edx, DWORD PTR $T11[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 199  : 		textLoader.GetTokenFloat("maxbrightness", &envData.fLensFlareMaxBrightness);

  018e6	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  018ea	83 fa 10	 cmp	 edx, 16			; 00000010H
  018ed	72 2c		 jb	 SHORT $LN1776@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  018ef	8b 4d d8	 mov	 ecx, DWORD PTR $T11[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  018f2	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  018f3	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  018f5	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  018fb	72 14		 jb	 SHORT $LN1786@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  018fd	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  01900	83 c2 23	 add	 edx, 35			; 00000023H
  01903	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01905	83 c0 fc	 add	 eax, -4			; fffffffcH
  01908	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0190b	0f 87 70 02 00
	00		 ja	 $LN1963@Environmen
$LN1786@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  01911	52		 push	 edx
  01912	51		 push	 ecx
  01913	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01918	83 c4 08	 add	 esp, 8
$LN1776@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0191b	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T10[ebp], 0

; 2521 :         assign(_Ptr);

  01922	8d 4d d8	 lea	 ecx, DWORD PTR $T10[ebp]
  01925	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@GMIEGFJG@mainflareenable@

; 4596 :         _My_data._Mysize = 0;

  0192a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T10[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  01931	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T10[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  01938	c6 45 d8 00	 mov	 BYTE PTR $T10[ebp], 0

; 2521 :         assign(_Ptr);

  0193c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 200  : 		textLoader.GetTokenBoolean("mainflareenable", &envData.bMainFlareEnable);

  01941	8d 87 78 02 00
	00		 lea	 eax, DWORD PTR [edi+632]
  01947	c6 45 fc 29	 mov	 BYTE PTR __$EHRec$[ebp+8], 41 ; 00000029H
  0194b	50		 push	 eax
  0194c	8d 45 d8	 lea	 eax, DWORD PTR $T10[ebp]
  0194f	50		 push	 eax
  01950	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  01956	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0195b	8b 55 ec	 mov	 edx, DWORD PTR $T10[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 200  : 		textLoader.GetTokenBoolean("mainflareenable", &envData.bMainFlareEnable);

  0195e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  01962	83 fa 10	 cmp	 edx, 16			; 00000010H
  01965	72 2c		 jb	 SHORT $LN1815@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01967	8b 4d d8	 mov	 ecx, DWORD PTR $T10[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0196a	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0196b	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0196d	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  01973	72 14		 jb	 SHORT $LN1825@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  01975	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  01978	83 c2 23	 add	 edx, 35			; 00000023H
  0197b	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0197d	83 c0 fc	 add	 eax, -4			; fffffffcH
  01980	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01983	0f 87 fd 01 00
	00		 ja	 $LN1964@Environmen
$LN1825@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  01989	52		 push	 edx
  0198a	51		 push	 ecx
  0198b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01990	83 c4 08	 add	 esp, 8
$LN1815@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  01993	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T9[ebp], 0

; 2521 :         assign(_Ptr);

  0199a	8d 4d d8	 lea	 ecx, DWORD PTR $T9[ebp]
  0199d	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@EAALILHN@mainflaretexturefilename@

; 4596 :         _My_data._Mysize = 0;

  019a2	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T9[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  019a9	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T9[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  019b0	c6 45 d8 00	 mov	 BYTE PTR $T9[ebp], 0

; 2521 :         assign(_Ptr);

  019b4	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 201  : 		textLoader.GetTokenString("mainflaretexturefilename", &envData.strMainFlareTextureFileName);

  019b9	8d 87 7c 02 00
	00		 lea	 eax, DWORD PTR [edi+636]
  019bf	c6 45 fc 2a	 mov	 BYTE PTR __$EHRec$[ebp+8], 42 ; 0000002aH
  019c3	50		 push	 eax
  019c4	8d 45 d8	 lea	 eax, DWORD PTR $T9[ebp]
  019c7	50		 push	 eax
  019c8	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  019ce	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  019d3	8b 55 ec	 mov	 edx, DWORD PTR $T9[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 201  : 		textLoader.GetTokenString("mainflaretexturefilename", &envData.strMainFlareTextureFileName);

  019d6	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  019da	83 fa 10	 cmp	 edx, 16			; 00000010H
  019dd	72 2c		 jb	 SHORT $LN1854@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  019df	8b 4d d8	 mov	 ecx, DWORD PTR $T9[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  019e2	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  019e3	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  019e5	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  019eb	72 14		 jb	 SHORT $LN1864@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  019ed	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  019f0	83 c2 23	 add	 edx, 35			; 00000023H
  019f3	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  019f5	83 c0 fc	 add	 eax, -4			; fffffffcH
  019f8	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  019fb	0f 87 8a 01 00
	00		 ja	 $LN1965@Environmen
$LN1864@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  01a01	52		 push	 edx
  01a02	51		 push	 ecx
  01a03	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01a08	83 c4 08	 add	 esp, 8
$LN1854@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  01a0b	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T8[ebp], 0

; 2521 :         assign(_Ptr);

  01a12	8d 4d d8	 lea	 ecx, DWORD PTR $T8[ebp]
  01a15	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JBMODIIN@mainflaresize@

; 4596 :         _My_data._Mysize = 0;

  01a1a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T8[ebp+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  01a21	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T8[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  01a28	c6 45 d8 00	 mov	 BYTE PTR $T8[ebp], 0

; 2521 :         assign(_Ptr);

  01a2c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 202  : 		textLoader.GetTokenFloat("mainflaresize", &envData.fMainFlareSize);

  01a31	8d 87 94 02 00
	00		 lea	 eax, DWORD PTR [edi+660]
  01a37	c6 45 fc 2b	 mov	 BYTE PTR __$EHRec$[ebp+8], 43 ; 0000002bH
  01a3b	50		 push	 eax
  01a3c	8d 45 d8	 lea	 eax, DWORD PTR $T8[ebp]
  01a3f	50		 push	 eax
  01a40	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  01a46	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  01a4b	8b 55 ec	 mov	 edx, DWORD PTR $T8[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 202  : 		textLoader.GetTokenFloat("mainflaresize", &envData.fMainFlareSize);

  01a4e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  01a52	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  01a55	72 2c		 jb	 SHORT $LN1893@Environmen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01a57	8b 4d d8	 mov	 ecx, DWORD PTR $T8[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  01a5a	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01a5b	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01a5d	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  01a63	72 14		 jb	 SHORT $LN1903@Environmen

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  01a65	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  01a68	83 c2 23	 add	 edx, 35			; 00000023H
  01a6b	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01a6d	83 c0 fc	 add	 eax, -4			; fffffffcH
  01a70	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  01a73	0f 87 17 01 00
	00		 ja	 $LN1966@Environmen
$LN1903@Environmen:

; 264  :         ::operator delete(_Ptr, _Bytes);

  01a79	52		 push	 edx
  01a7a	51		 push	 ecx
  01a7b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01a80	83 c4 08	 add	 esp, 8
$LN1893@Environmen:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 204  : 		textLoader.SetParentNode();

  01a83	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  01a89	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
$LN18@Environmen:

; 205  : 	}
; 206  : 	return true;

  01a8e	b3 01		 mov	 bl, 1
$LN64@Environmen:
  01a90	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  01a96	e8 00 00 00 00	 call	 ??1CTextFileLoader@@UAE@XZ ; CTextFileLoader::~CTextFileLoader
  01a9b	8a c3		 mov	 al, bl

; 207  : }

  01a9d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  01aa0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  01aa7	59		 pop	 ecx
  01aa8	5f		 pop	 edi
  01aa9	5e		 pop	 esi
  01aaa	5b		 pop	 ebx
  01aab	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01aae	33 cd		 xor	 ecx, ebp
  01ab0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01ab5	8b e5		 mov	 esp, ebp
  01ab7	5d		 pop	 ebp
  01ab8	c3		 ret	 0
$LN1924@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01ab9	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1925@Environmen:
  01abe	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1926@Environmen:
  01ac3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1927@Environmen:
  01ac8	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1928@Environmen:
  01acd	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1929@Environmen:
  01ad2	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1930@Environmen:
  01ad7	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1931@Environmen:
  01adc	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1932@Environmen:
  01ae1	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1933@Environmen:
  01ae6	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1934@Environmen:
  01aeb	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1935@Environmen:
  01af0	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1936@Environmen:
  01af5	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1937@Environmen:
  01afa	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1938@Environmen:
  01aff	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1939@Environmen:
  01b04	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1940@Environmen:
  01b09	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1941@Environmen:
  01b0e	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1942@Environmen:
  01b13	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1943@Environmen:
  01b18	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1944@Environmen:
  01b1d	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1945@Environmen:
  01b22	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1946@Environmen:
  01b27	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1947@Environmen:
  01b2c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1948@Environmen:
  01b31	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1949@Environmen:
  01b36	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1950@Environmen:
  01b3b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1951@Environmen:
  01b40	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1952@Environmen:
  01b45	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1953@Environmen:
  01b4a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1954@Environmen:
  01b4f	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1955@Environmen:
  01b54	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1956@Environmen:
  01b59	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1957@Environmen:
  01b5e	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1958@Environmen:
  01b63	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1959@Environmen:
  01b68	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1960@Environmen:
  01b6d	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1961@Environmen:
  01b72	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1916@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1585 :             _Xrange();

  01b77	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN1962@Environmen:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01b7c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1963@Environmen:
  01b81	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1964@Environmen:
  01b86	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1965@Environmen:
  01b8b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1966@Environmen:
  01b90	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1922@Environmen:
  01b95	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$0:
  00000	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _textLoader$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CTextFileLoader@@UAE@XZ ; CTextFileLoader::~CTextFileLoader
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$1:
  0000b	8d 4d c0	 lea	 ecx, DWORD PTR $T6[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$2:
  00013	8d 4d d8	 lea	 ecx, DWORD PTR $T49[ebp]
  00016	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$3:
  0001b	8d 4d d8	 lea	 ecx, DWORD PTR $T48[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$4:
  00023	8d 4d d8	 lea	 ecx, DWORD PTR $T47[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$5:
  0002b	8d 4d d8	 lea	 ecx, DWORD PTR $T46[ebp]
  0002e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$6:
  00033	8d 4d d8	 lea	 ecx, DWORD PTR $T45[ebp]
  00036	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$7:
  0003b	8d 4d d8	 lea	 ecx, DWORD PTR $T44[ebp]
  0003e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$8:
  00043	8d 4d d8	 lea	 ecx, DWORD PTR $T43[ebp]
  00046	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$9:
  0004b	8d 4d d8	 lea	 ecx, DWORD PTR $T42[ebp]
  0004e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$10:
  00053	8d 4d d8	 lea	 ecx, DWORD PTR $T41[ebp]
  00056	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$11:
  0005b	8d 4d d8	 lea	 ecx, DWORD PTR $T40[ebp]
  0005e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$12:
  00063	8d 4d d8	 lea	 ecx, DWORD PTR $T39[ebp]
  00066	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$13:
  0006b	8d 4d d8	 lea	 ecx, DWORD PTR $T38[ebp]
  0006e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$14:
  00073	8d 4d d8	 lea	 ecx, DWORD PTR $T37[ebp]
  00076	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$15:
  0007b	8d 4d d8	 lea	 ecx, DWORD PTR $T36[ebp]
  0007e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$16:
  00083	8d 4d d8	 lea	 ecx, DWORD PTR $T35[ebp]
  00086	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$17:
  0008b	8d 4d d8	 lea	 ecx, DWORD PTR $T34[ebp]
  0008e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$18:
  00093	8d 4d d8	 lea	 ecx, DWORD PTR $T33[ebp]
  00096	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$19:
  0009b	8d 4d d8	 lea	 ecx, DWORD PTR $T32[ebp]
  0009e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$20:
  000a3	8d 4d d8	 lea	 ecx, DWORD PTR $T31[ebp]
  000a6	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$21:
  000ab	8d 4d d8	 lea	 ecx, DWORD PTR $T30[ebp]
  000ae	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$22:
  000b3	8d 4d d8	 lea	 ecx, DWORD PTR $T29[ebp]
  000b6	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$23:
  000bb	8d 4d d8	 lea	 ecx, DWORD PTR $T28[ebp]
  000be	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$24:
  000c3	8d 4d d8	 lea	 ecx, DWORD PTR $T27[ebp]
  000c6	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$25:
  000cb	8d 4d d8	 lea	 ecx, DWORD PTR $T26[ebp]
  000ce	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$26:
  000d3	8d 4d d8	 lea	 ecx, DWORD PTR $T25[ebp]
  000d6	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$27:
  000db	8d 4d d8	 lea	 ecx, DWORD PTR $T24[ebp]
  000de	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$28:
  000e3	8d 4d d8	 lea	 ecx, DWORD PTR $T23[ebp]
  000e6	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$29:
  000eb	8d 4d d8	 lea	 ecx, DWORD PTR $T22[ebp]
  000ee	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$30:
  000f3	8d 4d d8	 lea	 ecx, DWORD PTR $T21[ebp]
  000f6	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$31:
  000fb	8d 4d d8	 lea	 ecx, DWORD PTR $T20[ebp]
  000fe	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$32:
  00103	8d 4d d8	 lea	 ecx, DWORD PTR $T19[ebp]
  00106	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$33:
  0010b	8d 4d d8	 lea	 ecx, DWORD PTR $T18[ebp]
  0010e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$34:
  00113	8d 4d d8	 lea	 ecx, DWORD PTR $T17[ebp]
  00116	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$35:
  0011b	8d 4d d8	 lea	 ecx, DWORD PTR $T16[ebp]
  0011e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$36:
  00123	8d 4d d8	 lea	 ecx, DWORD PTR $T15[ebp]
  00126	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$37:
  0012b	8d 4d d8	 lea	 ecx, DWORD PTR $T14[ebp]
  0012e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$38:
  00133	8d 4d d8	 lea	 ecx, DWORD PTR $T13[ebp]
  00136	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$39:
  0013b	8d 4d d8	 lea	 ecx, DWORD PTR $T12[ebp]
  0013e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$40:
  00143	8d 4d d8	 lea	 ecx, DWORD PTR $T11[ebp]
  00146	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$41:
  0014b	8d 4d d8	 lea	 ecx, DWORD PTR $T10[ebp]
  0014e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$42:
  00153	8d 4d d8	 lea	 ecx, DWORD PTR $T9[ebp]
  00156	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z$43:
  0015b	8d 4d d8	 lea	 ecx, DWORD PTR $T8[ebp]
  0015e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00163	cc		 int	 3
  00164	cc		 int	 3
  00165	cc		 int	 3
  00166	cc		 int	 3
  00167	cc		 int	 3
__ehhandler$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z:
  00168	90		 npad	 1
  00169	90		 npad	 1
  0016a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0016e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00171	8b 8a 20 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-224]
  00177	33 c8		 xor	 ecx, eax
  00179	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0017e	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00181	33 c8		 xor	 ecx, eax
  00183	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00188	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z
  0018d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Environment_Load@@YA_NAAUSEnvironmentData@@PBD@Z ENDP	; Environment_Load
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp
;	COMDAT ?Environment_Init@@YAXAAUSEnvironmentData@@@Z
_TEXT	SEGMENT
$T4 = -12						; size = 12
$T5 = -12						; size = 12
$T6 = -12						; size = 12
_envData$ = 8						; size = 4
?Environment_Init@@YAXAAUSEnvironmentData@@@Z PROC	; Environment_Init, COMDAT

; 5    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 180  :     x = fx;

  00006	f3 0f 10 2d 00
	00 00 00	 movss	 xmm5, DWORD PTR __real@3f000000
  0000e	0f 57 e4	 xorps	 xmm4, xmm4

; 920  :     r = fr;

  00011	0f 28 1d 00 00
	00 00		 movaps	 xmm3, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
  00018	0f 28 15 00 00
	00 00		 movaps	 xmm2, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
  0001f	0f 28 0d 00 00
	00 00		 movaps	 xmm1, XMMWORD PTR __xmm@3f8000003f0000003f0000003f000000
  00026	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@3f8000003f4ccccd3f4ccccd3f4ccccd
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 5    : {

  0002d	56		 push	 esi

; 6    : 	for (int i = 0; i < ENV_DIRLIGHT_NUM; ++i)
; 7    : 	{
; 8    : 		envData.bDirLightsEnable[i] = false;

  0002e	8b 75 08	 mov	 esi, DWORD PTR _envData$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00031	c7 45 fc 00 00
	00 bf		 mov	 DWORD PTR $T6[ebp+8], -1090519040 ; bf000000H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 10   : 		envData.DirLights[i].Direction = D3DXVECTOR3(0.5f, 0.5f, -0.5f);

  00038	8b 4d fc	 mov	 ecx, DWORD PTR $T6[ebp+8]
  0003b	0f 14 ed	 unpcklps xmm5, xmm5
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	66 0f d6 6e 48	 movq	 QWORD PTR [esi+72], xmm5
  00049	c7 46 08 03 00
	00 00		 mov	 DWORD PTR [esi+8], 3
  00050	89 4e 50	 mov	 DWORD PTR [esi+80], ecx

; 12   : 		envData.DirLights[i].Specular = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);

  00053	0f 11 5e 1c	 movups	 XMMWORD PTR [esi+28], xmm3

; 13   : 		envData.DirLights[i].Diffuse = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);
; 14   : 		envData.DirLights[i].Ambient = D3DXCOLOR(0.5f, 0.5f, 0.5f, 1.0f);
; 15   : 		envData.DirLights[i].Range = 0.0f; // Used by Point Light & Spot Light

  00057	c7 46 54 00 00
	00 00		 mov	 DWORD PTR [esi+84], 0
  0005e	0f 11 56 0c	 movups	 XMMWORD PTR [esi+12], xmm2

; 16   : 		envData.DirLights[i].Falloff = 1.0f; // Used by Spot Light

  00062	c7 46 58 00 00
	80 3f		 mov	 DWORD PTR [esi+88], 1065353216 ; 3f800000H
  00069	0f 11 4e 2c	 movups	 XMMWORD PTR [esi+44], xmm1

; 17   : 		envData.DirLights[i].Theta = 0.0f; // Used by Spot Light

  0006d	c7 46 68 00 00
	00 00		 mov	 DWORD PTR [esi+104], 0

; 18   : 		envData.DirLights[i].Phi = 0.0f; // Used by Spot Light

  00074	c7 46 6c 00 00
	00 00		 mov	 DWORD PTR [esi+108], 0

; 19   : 		envData.DirLights[i].Attenuation0 = 0.0f;

  0007b	c7 46 5c 00 00
	00 00		 mov	 DWORD PTR [esi+92], 0

; 20   : 		envData.DirLights[i].Attenuation1 = 1.0f;

  00082	c7 46 60 00 00
	80 3f		 mov	 DWORD PTR [esi+96], 1065353216 ; 3f800000H

; 21   : 		envData.DirLights[i].Attenuation2 = 0.0f;

  00089	c7 46 64 00 00
	00 00		 mov	 DWORD PTR [esi+100], 0
  00090	0f 14 e4	 unpcklps xmm4, xmm4
  00093	66 0f d6 66 3c	 movq	 QWORD PTR [esi+60], xmm4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00098	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 11   : 		envData.DirLights[i].Position = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

  0009f	8b 45 fc	 mov	 eax, DWORD PTR $T5[ebp+8]
  000a2	89 46 44	 mov	 DWORD PTR [esi+68], eax
  000a5	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  000ac	66 0f d6 ae b0
	00 00 00	 movq	 QWORD PTR [esi+176], xmm5
  000b4	66 0f d6 a6 a4
	00 00 00	 movq	 QWORD PTR [esi+164], xmm4
  000bc	89 86 ac 00 00
	00		 mov	 DWORD PTR [esi+172], eax
  000c2	c7 46 70 03 00
	00 00		 mov	 DWORD PTR [esi+112], 3
  000c9	89 8e b8 00 00
	00		 mov	 DWORD PTR [esi+184], ecx

; 12   : 		envData.DirLights[i].Specular = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);

  000cf	0f 11 9e 84 00
	00 00		 movups	 XMMWORD PTR [esi+132], xmm3

; 13   : 		envData.DirLights[i].Diffuse = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);
; 14   : 		envData.DirLights[i].Ambient = D3DXCOLOR(0.5f, 0.5f, 0.5f, 1.0f);
; 15   : 		envData.DirLights[i].Range = 0.0f; // Used by Point Light & Spot Light

  000d6	c7 86 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+188], 0
  000e0	0f 11 56 74	 movups	 XMMWORD PTR [esi+116], xmm2

; 16   : 		envData.DirLights[i].Falloff = 1.0f; // Used by Spot Light

  000e4	c7 86 c0 00 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+192], 1065353216 ; 3f800000H
  000ee	0f 11 8e 94 00
	00 00		 movups	 XMMWORD PTR [esi+148], xmm1

; 17   : 		envData.DirLights[i].Theta = 0.0f; // Used by Spot Light

  000f5	c7 86 d0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+208], 0

; 18   : 		envData.DirLights[i].Phi = 0.0f; // Used by Spot Light

  000ff	c7 86 d4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+212], 0

; 19   : 		envData.DirLights[i].Attenuation0 = 0.0f;

  00109	c7 86 c4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+196], 0

; 20   : 		envData.DirLights[i].Attenuation1 = 1.0f;

  00113	c7 86 c8 00 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+200], 1065353216 ; 3f800000H

; 21   : 		envData.DirLights[i].Attenuation2 = 0.0f;

  0011d	c7 86 cc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+204], 0

; 22   : 	}
; 23   : 
; 24   : 	envData.Material.Diffuse = D3DXCOLOR(0.8f, 0.8f, 0.8f, 1.0f);

  00127	0f 11 86 d8 00
	00 00		 movups	 XMMWORD PTR [esi+216], xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0012e	c7 45 fc 00 c0
	5a 45		 mov	 DWORD PTR $T4[ebp+8], 1163575296 ; 455ac000H

; 920  :     r = fr;

  00135	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@3f8000003f4ccccd3f4ccccd3f4ccccd
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 44   : 	envData.v3SkyBoxScale = D3DXVECTOR3(3500.0f, 3500.0f, 3500.0f);

  0013c	8b 45 fc	 mov	 eax, DWORD PTR $T4[ebp+8]
  0013f	0f 11 86 e8 00
	00 00		 movups	 XMMWORD PTR [esi+232], xmm0
  00146	c7 86 18 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+280], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 920  :     r = fr;

  00150	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@3f8000003f4ccccd3f4ccccd3f4ccccd
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 26   : 	envData.Material.Emissive = D3DXCOLOR(0.8f, 0.8f, 0.8f, 1.0f);

  00157	0f 11 86 08 01
	00 00		 movups	 XMMWORD PTR [esi+264], xmm0

; 28   : 	envData.Material.Power = 0.0f;
; 29   : 
; 30   : 	envData.bFogEnable = FALSE;

  0015e	c7 86 1c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+284], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 920  :     r = fr;

  00168	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 27   : 	envData.Material.Specular = D3DXCOLOR(0.0f, 0.0f, 0.0f, 1.0f);

  0016f	0f 11 86 f8 00
	00 00		 movups	 XMMWORD PTR [esi+248], xmm0

; 31   : 	envData.bDensityFog = FALSE;

  00176	c7 86 20 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+288], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 920  :     r = fr;

  00180	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@3f8000003f0000003f0000003f000000
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 34   : 	envData.FogColor = D3DXCOLOR(0.5f, 0.5f, 0.5f, 1.0f);

  00187	0f 11 86 2c 01
	00 00		 movups	 XMMWORD PTR [esi+300], xmm0
  0018e	c7 86 24 01 00
	00 00 00 48 46	 mov	 DWORD PTR [esi+292], 1179123712 ; 46480000H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 920  :     r = fr;

  00198	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@000000003dcccccd3dcccccd3e99999a
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 37   : 	envData.FilteringColor = D3DXCOLOR(0.3f, 0.1f, 0.1f, 0.0f);

  0019f	0f 11 86 40 01
	00 00		 movups	 XMMWORD PTR [esi+320], xmm0
  001a6	c7 86 28 01 00
	00 00 00 8c 46	 mov	 DWORD PTR [esi+296], 1183580160 ; 468c0000H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 180  :     x = fx;

  001b0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@455ac000
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 44   : 	envData.v3SkyBoxScale = D3DXVECTOR3(3500.0f, 3500.0f, 3500.0f);

  001b8	0f 14 c0	 unpcklps xmm0, xmm0
  001bb	66 0f d6 86 5c
	01 00 00	 movq	 QWORD PTR [esi+348], xmm0
  001c3	c7 86 3c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+316], 0
  001cd	66 c7 86 50 01
	00 00 02 02	 mov	 WORD PTR [esi+336], 514	; 00000202H
  001d6	c7 86 54 01 00
	00 cd cc 4c 3e	 mov	 DWORD PTR [esi+340], 1045220557 ; 3e4ccccdH
  001e0	c7 86 58 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+344], 0
  001ea	89 86 64 01 00
	00		 mov	 DWORD PTR [esi+356], eax

; 45   : 	envData.bySkyBoxGradientLevelUpper = 0;

  001f0	66 c7 86 6c 01
	00 00 00 00	 mov	 WORD PTR [esi+364], 0

; 46   : 	envData.bySkyBoxGradientLevelLower = 0;
; 47   : 	envData.bSkyBoxTextureRenderMode = FALSE;

  001f9	c7 86 68 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+360], 0

; 48   : 
; 49   : 	envData.v2CloudScale = D3DXVECTOR2(200000.0f, 200000.0f);

  00203	c7 86 00 02 00
	00 00 50 43 48	 mov	 DWORD PTR [esi+512], 1212370944 ; 48435000H
  0020d	c7 86 04 02 00
	00 00 50 43 48	 mov	 DWORD PTR [esi+516], 1212370944 ; 48435000H

; 50   : 	envData.fCloudHeight = 30000.0f;

  00217	c7 86 08 02 00
	00 00 60 ea 46	 mov	 DWORD PTR [esi+520], 1189765120 ; 46ea6000H

; 51   : 	envData.v2CloudTextureScale = D3DXVECTOR2(4.0f, 4.0f);

  00221	c7 86 0c 02 00
	00 00 00 80 40	 mov	 DWORD PTR [esi+524], 1082130432 ; 40800000H
  0022b	c7 86 10 02 00
	00 00 00 80 40	 mov	 DWORD PTR [esi+528], 1082130432 ; 40800000H

; 52   : 	envData.v2CloudSpeed = D3DXVECTOR2(0.001f, 0.001f);

  00235	c7 86 14 02 00
	00 6f 12 83 3a	 mov	 DWORD PTR [esi+532], 981668463 ; 3a83126fH
  0023f	c7 86 18 02 00
	00 6f 12 83 3a	 mov	 DWORD PTR [esi+536], 981668463 ; 3a83126fH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3092 :         return assign(_Ptr);

  00249	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 53   : 	envData.strCloudTextureFileName = "";

  0024e	8d 8e 1c 02 00
	00		 lea	 ecx, DWORD PTR [esi+540]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3092 :         return assign(_Ptr);

  00254	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 54   : 	envData.CloudGradientColor.m_FirstColor = .0f;

  00259	c7 86 34 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+564], 0

; 64   : 	envData.strMainFlareTextureFileName = "";

  00263	8d 8e 7c 02 00
	00		 lea	 ecx, DWORD PTR [esi+636]
  00269	c7 86 38 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+568], 0
  00273	c7 86 3c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+572], 0
  0027d	c7 86 40 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+576], 0
  00287	c7 86 44 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+580], 0
  00291	c7 86 48 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+584], 0
  0029b	c7 86 4c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+588], 0
  002a5	c7 86 50 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+592], 0
  002af	8b 86 54 02 00
	00		 mov	 eax, DWORD PTR [esi+596]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 920  :     r = fr;

  002b5	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 57   : 	envData.SkyBoxGradientColorVector.clear();

  002bc	89 86 58 02 00
	00		 mov	 DWORD PTR [esi+600], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3092 :         return assign(_Ptr);

  002c2	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 59   : 	envData.bLensFlareEnable = FALSE;

  002c7	c7 86 60 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+608], 0

; 60   : 	envData.LensFlareBrightnessColor = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);

  002d1	0f 11 86 64 02
	00 00		 movups	 XMMWORD PTR [esi+612], xmm0

; 61   : 	envData.fLensFlareMaxBrightness = 1.0f;

  002d8	c7 86 74 02 00
	00 00 00 80 3f	 mov	 DWORD PTR [esi+628], 1065353216 ; 3f800000H

; 62   : 
; 63   : 	envData.bMainFlareEnable = FALSE;

  002e2	c7 86 78 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+632], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3092 :         return assign(_Ptr);

  002ec	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\MapUtil.cpp

; 65   : 	envData.fMainFlareSize = 0.2f;

  002f1	c7 86 94 02 00
	00 cd cc 4c 3e	 mov	 DWORD PTR [esi+660], 1045220557 ; 3e4ccccdH

; 66   : 
; 67   : 	envData.bReserve = FALSE;

  002fb	c7 86 98 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+664], 0
  00305	5e		 pop	 esi

; 68   : }

  00306	8b e5		 mov	 esp, ebp
  00308	5d		 pop	 ebp
  00309	c3		 ret	 0
?Environment_Init@@YAXAAUSEnvironmentData@@@Z ENDP	; Environment_Init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@CAXXZ PROC ; std::vector<TGradientColor,std::allocator<TGradientColor> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@CAXXZ ENDP ; std::vector<TGradientColor,std::allocator<TGradientColor> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\SkyBox.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\SkyBox.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Ufill@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@AAEPAUTGradientColor@@PAU3@IU_Value_init_tag@2@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Count$ = 12						; size = 4
___formal$ = 16						; size = 1
?_Ufill@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@AAEPAUTGradientColor@@PAU3@IU_Value_init_tag@2@@Z PROC ; std::vector<TGradientColor,std::allocator<TGradientColor> >::_Ufill, COMDAT
; _this$ = ecx

; 1646 :     _CONSTEXPR20_CONTAINER pointer _Ufill(pointer _Dest, const size_type _Count, _Value_init_tag) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1647 :         // fill raw _Dest with _Count value-initialized objects, using allocator
; 1648 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00003	8b 55 0c	 mov	 edx, DWORD PTR __Count$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1620 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00006	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]

; 1830 :     for (; 0 < _Count; --_Count) {

  00009	85 d2		 test	 edx, edx
  0000b	74 4f		 je	 SHORT $LN5@Ufill

; 1620 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  0000d	8d 48 18	 lea	 ecx, DWORD PTR [eax+24]
$LL6@Ufill:
  00010	0f 57 c0	 xorps	 xmm0, xmm0

; 1632 :         ++_Last;

  00013	8d 49 20	 lea	 ecx, DWORD PTR [ecx+32]

; 714  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

  00016	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00019	0f 11 40 10	 movups	 XMMWORD PTR [eax+16], xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\SkyBox.h

; 22   : 	SColor(float _r = 0.0f, float _g = 0.0f, float _b = 0.0f, float _a = 0.0f) : r(_r), g(_g), b(_b), a(_a){}

  0001d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1632 :         ++_Last;

  00023	83 c0 20	 add	 eax, 32			; 00000020H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\SkyBox.h

; 22   : 	SColor(float _r = 0.0f, float _g = 0.0f, float _b = 0.0f, float _a = 0.0f) : r(_r), g(_g), b(_b), a(_a){}

  00026	c7 41 cc 00 00
	00 00		 mov	 DWORD PTR [ecx-52], 0
  0002d	c7 41 d0 00 00
	00 00		 mov	 DWORD PTR [ecx-48], 0
  00034	c7 41 d4 00 00
	00 00		 mov	 DWORD PTR [ecx-44], 0
  0003b	c7 41 d8 00 00
	00 00		 mov	 DWORD PTR [ecx-40], 0
  00042	c7 41 dc 00 00
	00 00		 mov	 DWORD PTR [ecx-36], 0
  00049	c7 41 e0 00 00
	00 00		 mov	 DWORD PTR [ecx-32], 0
  00050	c7 41 e4 00 00
	00 00		 mov	 DWORD PTR [ecx-28], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1830 :     for (; 0 < _Count; --_Count) {

  00057	83 ea 01	 sub	 edx, 1
  0005a	75 b4		 jne	 SHORT $LL6@Ufill
$LN5@Ufill:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1649 :     }

  0005c	5d		 pop	 ebp
  0005d	c2 0c 00	 ret	 12			; 0000000cH
?_Ufill@?$vector@UTGradientColor@@V?$allocator@UTGradientColor@@@std@@@std@@AAEPAUTGradientColor@@PAU3@IU_Value_init_tag@2@@Z ENDP ; std::vector<TGradientColor,std::allocator<TGradientColor> >::_Ufill
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange, COMDAT

; 1778 :         _Xout_of_range("invalid vector subscript");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
  00005	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN3@Xrange:
  0000a	cc		 int	 3
?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at, COMDAT
; _this$ = ecx

; 1582 :     _NODISCARD _CONSTEXPR20_CONTAINER _Ty& at(const size_type _Pos) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1583 :         auto& _My_data = _Mypair._Myval2;
; 1584 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00004	8b 31		 mov	 esi, DWORD PTR [ecx]
  00006	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0000b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000e	2b ce		 sub	 ecx, esi
  00010	f7 e9		 imul	 ecx
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  00015	c1 fa 02	 sar	 edx, 2
  00018	8b c2		 mov	 eax, edx
  0001a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001d	03 c2		 add	 eax, edx
  0001f	3b c1		 cmp	 eax, ecx
  00021	76 0b		 jbe	 SHORT $LN6@at

; 1586 :         }
; 1587 : 
; 1588 :         return _My_data._Myfirst[_Pos];

  00023	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  00026	8d 04 c6	 lea	 eax, DWORD PTR [esi+eax*8]
  00029	5e		 pop	 esi

; 1589 :     }

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN6@at:

; 1585 :             _Xrange();

  0002e	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN4@at:
  00033	cc		 int	 3
?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z
_TEXT	SEGMENT
__Old$1$ = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 3263 :     _CONSTEXPR20_CONTAINER basic_string& assign(_In_z_ const _Elem* const _Ptr) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00003	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]

; 3263 :     _CONSTEXPR20_CONTAINER basic_string& assign(_In_z_ const _Elem* const _Ptr) {

  00006	83 ec 08	 sub	 esp, 8
  00009	53		 push	 ebx
  0000a	56		 push	 esi

; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000b	8b f2		 mov	 esi, edx

; 3263 :     _CONSTEXPR20_CONTAINER basic_string& assign(_In_z_ const _Elem* const _Ptr) {

  0000d	8b d9		 mov	 ebx, ecx
  0000f	57		 push	 edi

; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00010	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL61@assign:
  00013	8a 06		 mov	 al, BYTE PTR [esi]
  00015	46		 inc	 esi
  00016	84 c0		 test	 al, al
  00018	75 f9		 jne	 SHORT $LL61@assign
  0001a	2b f1		 sub	 esi, ecx

; 3246 :         if (_Count <= _Mypair._Myval2._Myres) {

  0001c	8b 4b 14	 mov	 ecx, DWORD PTR [ebx+20]
  0001f	89 4d f8	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00022	3b f1		 cmp	 esi, ecx
  00024	77 26		 ja	 SHORT $LN6@assign

; 2296 :         value_type* _Result = _Bx._Buf;

  00026	8b fb		 mov	 edi, ebx

; 2319 :         return _BUF_SIZE <= _Myres;

  00028	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2297 :         if (_Large_string_engaged()) {

  0002b	72 02		 jb	 SHORT $LN9@assign

; 2298 :             _Result = _Unfancy(_Bx._Ptr);

  0002d	8b 3b		 mov	 edi, DWORD PTR [ebx]
$LN9@assign:

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0002f	56		 push	 esi
  00030	52		 push	 edx
  00031	57		 push	 edi

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  00032	89 73 10	 mov	 DWORD PTR [ebx+16], esi

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00035	e8 00 00 00 00	 call	 _memmove
  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0003d	c6 04 37 00	 mov	 BYTE PTR [edi+esi], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00041	8b c3		 mov	 eax, ebx
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx

; 3265 :     }

  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
$LN6@assign:

; 4508 :         if (_New_size > max_size()) {

  0004c	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH
  00052	0f 87 d4 00 00
	00		 ja	 $LN65@assign

; 4488 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00058	8b fe		 mov	 edi, esi
  0005a	83 cf 0f	 or	 edi, 15			; 0000000fH
  0005d	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4489 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00063	76 15		 jbe	 SHORT $LN23@assign

; 4490 :             return _Max;

  00065	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  0006a	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00075	83 c4 04	 add	 esp, 4
  00078	eb 52		 jmp	 SHORT $LN63@assign
$LN23@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4493 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0007a	8b d1		 mov	 edx, ecx
  0007c	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00081	d1 ea		 shr	 edx, 1
  00083	2b c2		 sub	 eax, edx
  00085	3b c8		 cmp	 ecx, eax
  00087	76 15		 jbe	 SHORT $LN24@assign

; 4494 :             return _Max;

  00089	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  0008e	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00099	83 c4 04	 add	 esp, 4
  0009c	eb 2e		 jmp	 SHORT $LN63@assign
$LN24@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4497 :         return (_STD max)(_Masked, _Old + _Old / 2);

  0009e	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  000a1	3b f8		 cmp	 edi, eax
  000a3	0f 42 f8	 cmovb	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4515 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000a6	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000a9	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  000ae	72 0b		 jb	 SHORT $LN31@assign

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000b0	50		 push	 eax
  000b1	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000b6	83 c4 04	 add	 esp, 4
  000b9	eb 11		 jmp	 SHORT $LN63@assign
$LN31@assign:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  000bb	85 c0		 test	 eax, eax
  000bd	74 0b		 je	 SHORT $LN32@assign

; 85   :         return ::operator new(_Bytes);

  000bf	50		 push	 eax
  000c0	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000c5	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  000c8	eb 02		 jmp	 SHORT $LN63@assign
$LN32@assign:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  000ca	33 c0		 xor	 eax, eax
$LN63@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000cc	56		 push	 esi
  000cd	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4523 :         _Mypair._Myval2._Mysize = _New_size;

  000d0	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000d3	50		 push	 eax

; 4523 :         _Mypair._Myval2._Mysize = _New_size;

  000d4	89 73 10	 mov	 DWORD PTR [ebx+16], esi

; 4524 :         _Mypair._Myval2._Myres  = _New_capacity;

  000d7	89 7b 14	 mov	 DWORD PTR [ebx+20], edi

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000da	e8 00 00 00 00	 call	 _memcpy

; 3258 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000df	8b 7d fc	 mov	 edi, DWORD PTR $T1[ebp]

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000e2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4526 :         if (_BUF_SIZE <= _Old_capacity) {

  000e5	8b 45 f8	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 3258 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000e8	c6 04 37 00	 mov	 BYTE PTR [edi+esi], 0

; 4526 :         if (_BUF_SIZE <= _Old_capacity) {

  000ec	83 f8 10	 cmp	 eax, 16			; 00000010H
  000ef	72 29		 jb	 SHORT $LN17@assign

; 4527 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000f1	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000f4	8b 03		 mov	 eax, DWORD PTR [ebx]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000f6	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000fc	72 12		 jb	 SHORT $LN54@assign

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000fe	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00101	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00104	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00106	83 c0 fc	 add	 eax, -4			; fffffffcH
  00109	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0010c	77 19		 ja	 SHORT $LN51@assign

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0010e	8b c2		 mov	 eax, edx
$LN54@assign:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00110	51		 push	 ecx
  00111	50		 push	 eax
  00112	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00117	83 c4 08	 add	 esp, 8
$LN17@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3254 :         return _Reallocate_for(

  0011a	89 3b		 mov	 DWORD PTR [ebx], edi

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0011c	8b c3		 mov	 eax, ebx
  0011e	5f		 pop	 edi
  0011f	5e		 pop	 esi
  00120	5b		 pop	 ebx

; 3265 :     }

  00121	8b e5		 mov	 esp, ebp
  00123	5d		 pop	 ebp
  00124	c2 04 00	 ret	 4
$LN51@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00127	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN65@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4509 :             _Xlen_string(); // result too long

  0012c	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN62@assign:
  00131	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 3002 :     _CONSTEXPR20_CONTAINER ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2319 :         return _BUF_SIZE <= _Myres;

  00003	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00006	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 27		 jb	 SHORT $LN12@basic_stri
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000d	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0000e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00014	72 12		 jb	 SHORT $LN22@basic_stri

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00016	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00019	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0001e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00021	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00024	77 1f		 ja	 SHORT $LN19@basic_stri

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00026	8b c2		 mov	 eax, edx
$LN22@basic_stri:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00028	51		 push	 ecx
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	83 c4 08	 add	 esp, 8
$LN12@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00032	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00039	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00040	c6 06 00	 mov	 BYTE PTR [esi], 0
  00043	5e		 pop	 esi

; 3010 :     }

  00044	c3		 ret	 0
$LN19@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00045	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN27@basic_stri:
  0004a	cc		 int	 3
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2374 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
END
