; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30137.0 

	TITLE	C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\Distribute\RaceMotionData.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPool@VCRaceMotionData@@@@6B@	; CDynamicPool<CRaceMotionData>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@VCRaceMotionData@@@@@8	; CDynamicPool<CRaceMotionData> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@VCRaceMotionData@@@@8	; CDynamicPool<CRaceMotionData>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@VCRaceMotionData@@@@8	; CDynamicPool<CRaceMotionData>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@VCRaceMotionData@@@@8 ; CDynamicPool<CRaceMotionData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPool@VCRaceMotionData@@@@6B@	; CDynamicPool<CRaceMotionData>::`vftable'
PUBLIC	??_G?$CDynamicPool@VCRaceMotionData@@@@UAEPAXI@Z ; CDynamicPool<CRaceMotionData>::`scalar deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPool@VCRaceMotionData@@@@UAEPAXI@Z:PROC ; CDynamicPool<CRaceMotionData>::`vector deleting destructor'
;	COMDAT ??_7?$CDynamicPool@VCRaceMotionData@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@VCRaceMotionData@@@@6B@ DD FLAT:??_R4?$CDynamicPool@VCRaceMotionData@@@@6B@ ; CDynamicPool<CRaceMotionData>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@VCRaceMotionData@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@VCRaceMotionData@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@VCRaceMotionData@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@VCRaceMotionData@@@@@8 ; CDynamicPool<CRaceMotionData>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@VCRaceMotionData@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@VCRaceMotionData@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@VCRaceMotionData@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@VCRaceMotionData@@@@8 ; CDynamicPool<CRaceMotionData>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@VCRaceMotionData@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@VCRaceMotionData@@@@8 DD 00H	; CDynamicPool<CRaceMotionData>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@VCRaceMotionData@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@VCRaceMotionData@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPool@VCRaceMotionData@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CRaceMotionData> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@VCRaceMotionData@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPool@VCRaceMotionData@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@VCRaceMotionData@@@@6B@ DD 00H	; CDynamicPool<CRaceMotionData>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@VCRaceMotionData@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@VCRaceMotionData@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDe'
	DB	'corator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDec'
	DB	'orator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpd'
	DB	'ateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@N'
	DB	'EffectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEff'
	DB	'ectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffe'
	DB	'ctUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecora'
	DB	'tor@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDeco'
	DB	'rator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHQBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
PUBLIC	?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
PUBLIC	??1CGotoChild@CTextFileLoader@@QAE@XZ		; CTextFileLoader::CGotoChild::~CGotoChild
PUBLIC	??1?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAE@XZ ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::~vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >
PUBLIC	??1?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@QAE@XZ ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::~vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >
PUBLIC	??1SCollisionData@NRaceData@@UAE@XZ		; NRaceData::SCollisionData::~SCollisionData
PUBLIC	??_GSCollisionData@NRaceData@@UAEPAXI@Z		; NRaceData::SCollisionData::`scalar deleting destructor'
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??1?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@QAE@XZ ; std::vector<NSound::SSoundInstance,std::allocator<NSound::SSoundInstance> >::~vector<NSound::SSoundInstance,std::allocator<NSound::SSoundInstance> >
PUBLIC	?_Destroy@?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@AAEXPAUSSoundInstance@NSound@@0@Z ; std::vector<NSound::SSoundInstance,std::allocator<NSound::SSoundInstance> >::_Destroy
PUBLIC	??1SMotionEventData@NMotionEvent@@UAE@XZ	; NMotionEvent::SMotionEventData::~SMotionEventData
PUBLIC	?Load@SMotionEventData@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ; NMotionEvent::SMotionEventData::Load
PUBLIC	??_GSMotionEventData@NMotionEvent@@UAEPAXI@Z	; NMotionEvent::SMotionEventData::`scalar deleting destructor'
PUBLIC	??1SMotionEventDataScreenWaving@NMotionEvent@@UAE@XZ ; NMotionEvent::SMotionEventDataScreenWaving::~SMotionEventDataScreenWaving
PUBLIC	?Save@SMotionEventDataScreenWaving@NMotionEvent@@UAEXPAU_iobuf@@H@Z ; NMotionEvent::SMotionEventDataScreenWaving::Save
PUBLIC	?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ; NMotionEvent::SMotionEventDataScreenWaving::Load
PUBLIC	??_GSMotionEventDataScreenWaving@NMotionEvent@@UAEPAXI@Z ; NMotionEvent::SMotionEventDataScreenWaving::`scalar deleting destructor'
PUBLIC	??1SMotionEventDataEffect@NMotionEvent@@UAE@XZ	; NMotionEvent::SMotionEventDataEffect::~SMotionEventDataEffect
PUBLIC	?Save@SMotionEventDataEffect@NMotionEvent@@UAEXPAU_iobuf@@H@Z ; NMotionEvent::SMotionEventDataEffect::Save
PUBLIC	?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ; NMotionEvent::SMotionEventDataEffect::Load
PUBLIC	??_GSMotionEventDataEffect@NMotionEvent@@UAEPAXI@Z ; NMotionEvent::SMotionEventDataEffect::`scalar deleting destructor'
PUBLIC	??1SMotionEventDataEffectToTarget@NMotionEvent@@UAE@XZ ; NMotionEvent::SMotionEventDataEffectToTarget::~SMotionEventDataEffectToTarget
PUBLIC	?Save@SMotionEventDataEffectToTarget@NMotionEvent@@UAEXPAU_iobuf@@H@Z ; NMotionEvent::SMotionEventDataEffectToTarget::Save
PUBLIC	?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ; NMotionEvent::SMotionEventDataEffectToTarget::Load
PUBLIC	??_GSMotionEventDataEffectToTarget@NMotionEvent@@UAEPAXI@Z ; NMotionEvent::SMotionEventDataEffectToTarget::`scalar deleting destructor'
PUBLIC	??1SMotionEventDataFly@NMotionEvent@@UAE@XZ	; NMotionEvent::SMotionEventDataFly::~SMotionEventDataFly
PUBLIC	?Save@SMotionEventDataFly@NMotionEvent@@UAEXPAU_iobuf@@H@Z ; NMotionEvent::SMotionEventDataFly::Save
PUBLIC	?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ; NMotionEvent::SMotionEventDataFly::Load
PUBLIC	??_GSMotionEventDataFly@NMotionEvent@@UAEPAXI@Z	; NMotionEvent::SMotionEventDataFly::`scalar deleting destructor'
PUBLIC	??1SMotionEventDataAttack@NMotionEvent@@UAE@XZ	; NMotionEvent::SMotionEventDataAttack::~SMotionEventDataAttack
PUBLIC	?Save@SMotionEventDataAttack@NMotionEvent@@UAEXPAU_iobuf@@H@Z ; NMotionEvent::SMotionEventDataAttack::Save
PUBLIC	?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ; NMotionEvent::SMotionEventDataAttack::Load
PUBLIC	??_GSMotionEventDataAttack@NMotionEvent@@UAEPAXI@Z ; NMotionEvent::SMotionEventDataAttack::`scalar deleting destructor'
PUBLIC	??1SMotionEventDataSound@NMotionEvent@@UAE@XZ	; NMotionEvent::SMotionEventDataSound::~SMotionEventDataSound
PUBLIC	?Save@SMotionEventDataSound@NMotionEvent@@UAEXPAU_iobuf@@H@Z ; NMotionEvent::SMotionEventDataSound::Save
PUBLIC	?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ; NMotionEvent::SMotionEventDataSound::Load
PUBLIC	??_GSMotionEventDataSound@NMotionEvent@@UAEPAXI@Z ; NMotionEvent::SMotionEventDataSound::`scalar deleting destructor'
PUBLIC	??1SMotionEventDataCharacterShow@NMotionEvent@@UAE@XZ ; NMotionEvent::SMotionEventDataCharacterShow::~SMotionEventDataCharacterShow
PUBLIC	?Save@SMotionEventDataCharacterShow@NMotionEvent@@UAEXPAU_iobuf@@H@Z ; NMotionEvent::SMotionEventDataCharacterShow::Save
PUBLIC	??_GSMotionEventDataCharacterShow@NMotionEvent@@UAEPAXI@Z ; NMotionEvent::SMotionEventDataCharacterShow::`scalar deleting destructor'
PUBLIC	??1SMotionEventDataCharacterHide@NMotionEvent@@UAE@XZ ; NMotionEvent::SMotionEventDataCharacterHide::~SMotionEventDataCharacterHide
PUBLIC	?Save@SMotionEventDataCharacterHide@NMotionEvent@@UAEXPAU_iobuf@@H@Z ; NMotionEvent::SMotionEventDataCharacterHide::Save
PUBLIC	??_GSMotionEventDataCharacterHide@NMotionEvent@@UAEPAXI@Z ; NMotionEvent::SMotionEventDataCharacterHide::`scalar deleting destructor'
PUBLIC	??1SMotionEventDataWarp@NMotionEvent@@UAE@XZ	; NMotionEvent::SMotionEventDataWarp::~SMotionEventDataWarp
PUBLIC	?Save@SMotionEventDataWarp@NMotionEvent@@UAEXPAU_iobuf@@H@Z ; NMotionEvent::SMotionEventDataWarp::Save
PUBLIC	??_GSMotionEventDataWarp@NMotionEvent@@UAEPAXI@Z ; NMotionEvent::SMotionEventDataWarp::`scalar deleting destructor'
PUBLIC	??1SMotionEventDataUnk11@NMotionEvent@@UAE@XZ	; NMotionEvent::SMotionEventDataUnk11::~SMotionEventDataUnk11
PUBLIC	?Save@SMotionEventDataUnk11@NMotionEvent@@UAEXPAU_iobuf@@H@Z ; NMotionEvent::SMotionEventDataUnk11::Save
PUBLIC	?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ; NMotionEvent::SMotionEventDataUnk11::Load
PUBLIC	??_GSMotionEventDataUnk11@NMotionEvent@@UAEPAXI@Z ; NMotionEvent::SMotionEventDataUnk11::`scalar deleting destructor'
PUBLIC	??1SMotionEventDataUnk12@NMotionEvent@@UAE@XZ	; NMotionEvent::SMotionEventDataUnk12::~SMotionEventDataUnk12
PUBLIC	?Save@SMotionEventDataUnk12@NMotionEvent@@UAEXPAU_iobuf@@H@Z ; NMotionEvent::SMotionEventDataUnk12::Save
PUBLIC	??_GSMotionEventDataUnk12@NMotionEvent@@UAEPAXI@Z ; NMotionEvent::SMotionEventDataUnk12::`scalar deleting destructor'
PUBLIC	?New@CRaceMotionData@@SAPAV1@XZ			; CRaceMotionData::New
PUBLIC	?Delete@CRaceMotionData@@SAXPAV1@@Z		; CRaceMotionData::Delete
PUBLIC	?CreateSystem@CRaceMotionData@@SAXI@Z		; CRaceMotionData::CreateSystem
PUBLIC	?DestroySystem@CRaceMotionData@@SAXXZ		; CRaceMotionData::DestroySystem
PUBLIC	??0CRaceMotionData@@QAE@XZ			; CRaceMotionData::CRaceMotionData
PUBLIC	??1CRaceMotionData@@UAE@XZ			; CRaceMotionData::~CRaceMotionData
PUBLIC	?Initialize@CRaceMotionData@@QAEXXZ		; CRaceMotionData::Initialize
PUBLIC	?Destroy@CRaceMotionData@@QAEXXZ		; CRaceMotionData::Destroy
PUBLIC	?SetName@CRaceMotionData@@QAEXI@Z		; CRaceMotionData::SetName
PUBLIC	?GetType@CRaceMotionData@@QBEIXZ		; CRaceMotionData::GetType
PUBLIC	?IsLock@CRaceMotionData@@QBE_NXZ		; CRaceMotionData::IsLock
PUBLIC	?GetLoopCount@CRaceMotionData@@QBEHXZ		; CRaceMotionData::GetLoopCount
PUBLIC	?GetMotionFileName@CRaceMotionData@@QBEPBDXZ	; CRaceMotionData::GetMotionFileName
PUBLIC	?GetSoundScriptFileName@CRaceMotionData@@QBEPBDXZ ; CRaceMotionData::GetSoundScriptFileName
PUBLIC	?SetMotionDuration@CRaceMotionData@@QAEXM@Z	; CRaceMotionData::SetMotionDuration
PUBLIC	?GetMotionDuration@CRaceMotionData@@QAEMXZ	; CRaceMotionData::GetMotionDuration
PUBLIC	?SetAccumulationPosition@CRaceMotionData@@QAEXABUD3DXVECTOR3@@@Z ; CRaceMotionData::SetAccumulationPosition
PUBLIC	?IsComboInputTimeData@CRaceMotionData@@QBEHXZ	; CRaceMotionData::IsComboInputTimeData
PUBLIC	?GetComboInputStartTime@CRaceMotionData@@QBEMXZ	; CRaceMotionData::GetComboInputStartTime
PUBLIC	?GetNextComboTime@CRaceMotionData@@QBEMXZ	; CRaceMotionData::GetNextComboTime
PUBLIC	?GetComboInputEndTime@CRaceMotionData@@QBEMXZ	; CRaceMotionData::GetComboInputEndTime
PUBLIC	?isAttackingMotion@CRaceMotionData@@QBEHXZ	; CRaceMotionData::isAttackingMotion
PUBLIC	?GetMotionAttackDataPointer@CRaceMotionData@@QBEPBUSMotionAttackData@NRaceData@@XZ ; CRaceMotionData::GetMotionAttackDataPointer
PUBLIC	?GetMotionAttackDataReference@CRaceMotionData@@QBEABUSMotionAttackData@NRaceData@@XZ ; CRaceMotionData::GetMotionAttackDataReference
PUBLIC	?HasSplashMotionEvent@CRaceMotionData@@QBEHXZ	; CRaceMotionData::HasSplashMotionEvent
PUBLIC	?IsCancelEnableSkill@CRaceMotionData@@QBEHXZ	; CRaceMotionData::IsCancelEnableSkill
PUBLIC	?IsLoopMotion@CRaceMotionData@@QBEHXZ		; CRaceMotionData::IsLoopMotion
PUBLIC	?GetLoopStartTime@CRaceMotionData@@QBEMXZ	; CRaceMotionData::GetLoopStartTime
PUBLIC	?GetLoopEndTime@CRaceMotionData@@QBEMXZ		; CRaceMotionData::GetLoopEndTime
PUBLIC	?GetMotionEventDataCount@CRaceMotionData@@QBEKXZ ; CRaceMotionData::GetMotionEventDataCount
PUBLIC	?GetMotionEventDataPointer@CRaceMotionData@@QBEHEPAPBUSMotionEventData@NMotionEvent@@@Z ; CRaceMotionData::GetMotionEventDataPointer
PUBLIC	?GetMotionAttackingEventDataPointer@CRaceMotionData@@QBEHEPAPBUSMotionEventDataAttack@NMotionEvent@@@Z ; CRaceMotionData::GetMotionAttackingEventDataPointer
PUBLIC	?GetEventType@CRaceMotionData@@QBEHK@Z		; CRaceMotionData::GetEventType
PUBLIC	?GetEventStartTime@CRaceMotionData@@QBEMK@Z	; CRaceMotionData::GetEventStartTime
PUBLIC	?GetSoundInstanceVectorPointer@CRaceMotionData@@QBEPBV?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@XZ ; CRaceMotionData::GetSoundInstanceVectorPointer
PUBLIC	?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z	; CRaceMotionData::LoadMotionData
PUBLIC	?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z ; CRaceMotionData::LoadSoundScriptData
PUBLIC	?SetType@CRaceMotionData@@IAEXI@Z		; CRaceMotionData::SetType
PUBLIC	?_Ufill@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@AAEPAPAUSMotionEventData@NMotionEvent@@PAPAU34@IABQAU34@@Z ; std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> >::_Ufill
PUBLIC	?_Xlength@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@CAXXZ ; std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> >::_Xlength
PUBLIC	??_GCRaceMotionData@@UAEPAXI@Z			; CRaceMotionData::`scalar deleting destructor'
PUBLIC	??1?$CDynamicPool@VCRaceMotionData@@@@UAE@XZ	; CDynamicPool<CRaceMotionData>::~CDynamicPool<CRaceMotionData>
PUBLIC	?Delete@?$CDynamicPool@VCRaceMotionData@@@@KAXPAVCRaceMotionData@@@Z ; CDynamicPool<CRaceMotionData>::Delete
PUBLIC	?_Reallocate_exactly@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@AAEXI@Z ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Reallocate_exactly
PUBLIC	?_Change_array@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@AAEXQAPAVCRaceMotionData@@II@Z ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Change_array
PUBLIC	?_Xlength@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@CAXXZ ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Xlength
PUBLIC	??$stl_wipe@V?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@@YAXAAV?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@Z ; stl_wipe<std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> > >
PUBLIC	??1?$vector@USSoundData@NSound@@V?$allocator@USSoundData@NSound@@@std@@@std@@QAE@XZ ; std::vector<NSound::SSoundData,std::allocator<NSound::SSoundData> >::~vector<NSound::SSoundData,std::allocator<NSound::SSoundData> >
PUBLIC	??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
PUBLIC	??$_Emplace_reallocate@ABQAVCRaceMotionData@@@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@QAEPAPAVCRaceMotionData@@QAPAV2@ABQAV2@@Z ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Emplace_reallocate<CRaceMotionData * const &>
PUBLIC	??$_Resize_reallocate@PAUSMotionEventData@NMotionEvent@@@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@AAEXIABQAUSMotionEventData@NMotionEvent@@@Z ; std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> >::_Resize_reallocate<NMotionEvent::SMotionEventData *>
PUBLIC	??$_Copy_memmove@PAPAVCRaceMotionData@@PAPAV1@@std@@YAPAPAVCRaceMotionData@@PAPAV1@00@Z ; std::_Copy_memmove<CRaceMotionData * *,CRaceMotionData * *>
PUBLIC	??$_Is_all_bits_zero@PAUSMotionEventData@NMotionEvent@@@std@@YA_NABQAUSMotionEventData@NMotionEvent@@@Z ; std::_Is_all_bits_zero<NMotionEvent::SMotionEventData *>
PUBLIC	??$_Fill_zero_memset@PAPAUSMotionEventData@NMotionEvent@@@std@@YAXPAPAUSMotionEventData@NMotionEvent@@I@Z ; std::_Fill_zero_memset<NMotionEvent::SMotionEventData * *>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
PUBLIC	??$_Copy_memmove@PAPAUSMotionEventData@NMotionEvent@@PAPAU12@@std@@YAPAPAUSMotionEventData@NMotionEvent@@PAPAU12@00@Z ; std::_Copy_memmove<NMotionEvent::SMotionEventData * *,NMotionEvent::SMotionEventData * *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_7SCollisionData@NRaceData@@6B@		; NRaceData::SCollisionData::`vftable'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position@	; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SCollisionData@NRaceData@@6B@		; NRaceData::SCollisionData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSCollisionData@NRaceData@@@8		; NRaceData::SCollisionData `RTTI Type Descriptor'
PUBLIC	??_R3SCollisionData@NRaceData@@8		; NRaceData::SCollisionData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SCollisionData@NRaceData@@8		; NRaceData::SCollisionData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SCollisionData@NRaceData@@8	; NRaceData::SCollisionData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
PUBLIC	?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCFlyingManager@@@@0PAVCFlyingManager@@A ; CSingleton<CFlyingManager>::ms_singleton
PUBLIC	??_7SMotionEventData@NMotionEvent@@6B@		; NMotionEvent::SMotionEventData::`vftable'
PUBLIC	??_7SMotionEventDataScreenWaving@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataScreenWaving::`vftable'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_C@_0BJ@JOLNCGNF@DuringTime?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BJ@FEKHNOBC@Power?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BJ@KLBKOEEF@AffectingRange?5?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0L@KJGFIEPL@duringtime@			; `string'
PUBLIC	??_C@_05PLIADJJL@power@				; `string'
PUBLIC	??_C@_0P@JIGGKKJB@affectingrange@		; `string'
PUBLIC	??_7SMotionEventDataEffect@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataEffect::`vftable'
PUBLIC	??_C@_0BJ@EFAIBPHL@IndependentFlag?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BJ@LAKEIKLD@AttachingEnable?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BL@PLABIPOF@AttachingBoneName?5?5?5?5?$CC?$CFs?$CC?6@ ; `string'
PUBLIC	??_C@_0BJ@NDNPFOND@FollowingEnable?5?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BL@OHMOOLCL@EffectFileName?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@ ; `string'
PUBLIC	??_C@_0BP@CFDDPJAK@EffectPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0BA@MCOMBMGO@independentflag@		; `string'
PUBLIC	??_C@_0BA@HJAHPMOG@attachingenable@		; `string'
PUBLIC	??_C@_0BC@FCIOLNPK@attachingbonename@		; `string'
PUBLIC	??_C@_0P@MBGGNLC@effectfilename@		; `string'
PUBLIC	??_C@_0P@PMGDNJPL@effectposition@		; `string'
PUBLIC	??_C@_0BA@DEKLACIK@followingenable@		; `string'
PUBLIC	??_7SMotionEventDataEffectToTarget@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataEffectToTarget::`vftable'
PUBLIC	??_C@_0BJ@ECHDEMEM@FishingEffectFlag?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BC@PGIDKNAJ@fishingeffectflag@		; `string'
PUBLIC	??_7SMotionEventDataFly@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataFly::`vftable'
PUBLIC	??_C@_0BI@MFBAEGBD@FlyFileName?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@ ; `string'
PUBLIC	??_C@_0BM@LNHEOAC@FlyPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@ ; `string'
PUBLIC	??_C@_0M@BKDIDPMI@flyfilename@			; `string'
PUBLIC	??_C@_0M@OKENILIB@flyposition@			; `string'
PUBLIC	??_7SMotionEventDataAttack@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataAttack::`vftable'
PUBLIC	??_C@_0BJ@DAILMIKJ@EnableHitProcess?5?5?5?5?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BB@NODGLCEN@enablehitprocess@		; `string'
PUBLIC	??_7SMotionEventDataSound@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataSound::`vftable'
PUBLIC	??_C@_0BL@OCKKLAAD@SoundFileName?5?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@ ; `string'
PUBLIC	??_C@_0O@POGBJFAA@soundfilename@		; `string'
PUBLIC	??_7SMotionEventDataCharacterShow@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataCharacterShow::`vftable'
PUBLIC	??_7SMotionEventDataCharacterHide@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataCharacterHide::`vftable'
PUBLIC	??_7SMotionEventDataWarp@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataWarp::`vftable'
PUBLIC	??_7SMotionEventDataUnk11@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataUnk11::`vftable'
PUBLIC	??_C@_0BK@COIHOOIP@BaseVelocity?5?5?5?5?5?5?5?5?$CC?$CFd?$CC?6@ ; `string'
PUBLIC	??_C@_0N@OGGCDFHA@basevelocity@			; `string'
PUBLIC	??_7SMotionEventDataUnk12@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataUnk12::`vftable'
PUBLIC	?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A ; CRaceMotionData::ms_kPool
PUBLIC	??_7CRaceMotionData@@6B@			; CRaceMotionData::`vftable'
PUBLIC	??_C@_0CL@NGIMIHAA@CRaceMotionData?3?3SetName?5?9?5UNKN@ ; `string'
PUBLIC	??_C@_0P@IGAOIDID@motionfilename@		; `string'
PUBLIC	??_C@_0P@CAAIIAIN@motionduration@		; `string'
PUBLIC	??_C@_0N@JBNPINGA@accumulation@			; `string'
PUBLIC	??_C@_0EP@FGBECHEA@CRaceMotioNData?3?3LoadMotionData@ ; `string'
PUBLIC	??_C@_0P@BEGKENNC@comboinputdata@		; `string'
PUBLIC	??_C@_0N@IKJEINLI@preinputtime@			; `string'
PUBLIC	??_C@_0BA@OKILMLFK@directinputtime@		; `string'
PUBLIC	??_C@_0P@PPFBMGLB@inputlimittime@		; `string'
PUBLIC	??_C@_0O@NGMBMFEH@attackingdata@		; `string'
PUBLIC	??_C@_08BMIAMBLK@loopdata@			; `string'
PUBLIC	??_C@_0BA@HKGDAAAM@motionloopcount@		; `string'
PUBLIC	??_C@_0BB@LFNJMKIF@loopcancelenable@		; `string'
PUBLIC	??_C@_0O@FAMGINHI@loopstarttime@		; `string'
PUBLIC	??_C@_0M@HIAPALPD@loopendtime@			; `string'
PUBLIC	??_C@_0BA@LAEICHPP@motioneventdata@		; `string'
PUBLIC	??_C@_0BF@KNDELFNF@motioneventdatacount@	; `string'
PUBLIC	??_C@_05GFHEIIDD@event@				; `string'
PUBLIC	??_C@_0BA@CGGAKCNF@motioneventtype@		; `string'
PUBLIC	??_C@_0N@NHFBHOF@startingtime@			; `string'
PUBLIC	??_C@_04NMMFEKGF@?4mss@				; `string'
PUBLIC	??_C@_06PBLIODKG@sound?1@			; `string'
PUBLIC	??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@	; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4SMotionEventData@NMotionEvent@@6B@		; NMotionEvent::SMotionEventData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventData@NMotionEvent@@@8	; NMotionEvent::SMotionEventData `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventData@NMotionEvent@@8		; NMotionEvent::SMotionEventData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventData@NMotionEvent@@8		; NMotionEvent::SMotionEventData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8	; NMotionEvent::SMotionEventData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SMotionEventDataScreenWaving@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataScreenWaving::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventDataScreenWaving@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataScreenWaving `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventDataScreenWaving@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataScreenWaving::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventDataScreenWaving@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataScreenWaving::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventDataScreenWaving@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataScreenWaving::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SMotionEventDataEffect@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataEffect::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventDataEffect@NMotionEvent@@@8	; NMotionEvent::SMotionEventDataEffect `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventDataEffect@NMotionEvent@@8	; NMotionEvent::SMotionEventDataEffect::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventDataEffect@NMotionEvent@@8	; NMotionEvent::SMotionEventDataEffect::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventDataEffect@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataEffect::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SMotionEventDataEffectToTarget@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataEffectToTarget::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventDataEffectToTarget@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataEffectToTarget `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventDataEffectToTarget@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataEffectToTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventDataEffectToTarget@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataEffectToTarget::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventDataEffectToTarget@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataEffectToTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SMotionEventDataFly@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataFly::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventDataFly@NMotionEvent@@@8	; NMotionEvent::SMotionEventDataFly `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventDataFly@NMotionEvent@@8	; NMotionEvent::SMotionEventDataFly::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventDataFly@NMotionEvent@@8	; NMotionEvent::SMotionEventDataFly::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventDataFly@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataFly::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SMotionEventDataAttack@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataAttack::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventDataAttack@NMotionEvent@@@8	; NMotionEvent::SMotionEventDataAttack `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventDataAttack@NMotionEvent@@8	; NMotionEvent::SMotionEventDataAttack::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventDataAttack@NMotionEvent@@8	; NMotionEvent::SMotionEventDataAttack::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventDataAttack@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataAttack::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SMotionEventDataSound@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataSound::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventDataSound@NMotionEvent@@@8	; NMotionEvent::SMotionEventDataSound `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventDataSound@NMotionEvent@@8	; NMotionEvent::SMotionEventDataSound::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventDataSound@NMotionEvent@@8	; NMotionEvent::SMotionEventDataSound::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventDataSound@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataSound::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SMotionEventDataCharacterShow@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataCharacterShow::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventDataCharacterShow@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataCharacterShow `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventDataCharacterShow@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataCharacterShow::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventDataCharacterShow@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataCharacterShow::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventDataCharacterShow@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataCharacterShow::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SMotionEventDataCharacterHide@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataCharacterHide::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventDataCharacterHide@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataCharacterHide `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventDataCharacterHide@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataCharacterHide::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventDataCharacterHide@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataCharacterHide::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventDataCharacterHide@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataCharacterHide::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SMotionEventDataWarp@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataWarp::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventDataWarp@NMotionEvent@@@8	; NMotionEvent::SMotionEventDataWarp `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventDataWarp@NMotionEvent@@8	; NMotionEvent::SMotionEventDataWarp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventDataWarp@NMotionEvent@@8	; NMotionEvent::SMotionEventDataWarp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventDataWarp@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataWarp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SMotionEventDataUnk11@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataUnk11::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventDataUnk11@NMotionEvent@@@8	; NMotionEvent::SMotionEventDataUnk11 `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventDataUnk11@NMotionEvent@@8	; NMotionEvent::SMotionEventDataUnk11::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventDataUnk11@NMotionEvent@@8	; NMotionEvent::SMotionEventDataUnk11::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventDataUnk11@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataUnk11::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SMotionEventDataUnk12@NMotionEvent@@6B@	; NMotionEvent::SMotionEventDataUnk12::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSMotionEventDataUnk12@NMotionEvent@@@8	; NMotionEvent::SMotionEventDataUnk12 `RTTI Type Descriptor'
PUBLIC	??_R3SMotionEventDataUnk12@NMotionEvent@@8	; NMotionEvent::SMotionEventDataUnk12::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SMotionEventDataUnk12@NMotionEvent@@8	; NMotionEvent::SMotionEventDataUnk12::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SMotionEventDataUnk12@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataUnk12::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CRaceMotionData@@6B@			; CRaceMotionData::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRaceMotionData@@@8			; CRaceMotionData `RTTI Type Descriptor'
PUBLIC	??_R3CRaceMotionData@@8				; CRaceMotionData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRaceMotionData@@8				; CRaceMotionData::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRaceMotionData@@8		; CRaceMotionData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3f800000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	___std_terminate:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_atof:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?GetCaseCRC32@@YAKPBDI@Z:PROC			; GetCaseCRC32
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ:PROC		; PrintfTabs
EXTRN	?Cache@CTextFileLoader@@SAPAV1@PBD@Z:PROC	; CTextFileLoader::Cache
EXTRN	?IsEmpty@CTextFileLoader@@QAE_NXZ:PROC		; CTextFileLoader::IsEmpty
EXTRN	?SetTop@CTextFileLoader@@QAEXXZ:PROC		; CTextFileLoader::SetTop
EXTRN	?GetChildNodeCount@CTextFileLoader@@QAEKXZ:PROC	; CTextFileLoader::GetChildNodeCount
EXTRN	?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z:PROC ; CTextFileLoader::SetChildNode
EXTRN	?SetChildNode@CTextFileLoader@@QAEHK@Z:PROC	; CTextFileLoader::SetChildNode
EXTRN	?SetParentNode@CTextFileLoader@@QAEHXZ:PROC	; CTextFileLoader::SetParentNode
EXTRN	?GetCurrentNodeName@CTextFileLoader@@QAEHPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; CTextFileLoader::GetCurrentNodeName
EXTRN	?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z:PROC ; CTextFileLoader::GetTokenVector
EXTRN	?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z:PROC ; CTextFileLoader::GetTokenBoolean
EXTRN	?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z:PROC ; CTextFileLoader::GetTokenInteger
EXTRN	?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z:PROC ; CTextFileLoader::GetTokenDoubleWord
EXTRN	?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z:PROC ; CTextFileLoader::GetTokenFloat
EXTRN	?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z:PROC ; CTextFileLoader::GetTokenPosition
EXTRN	?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z:PROC ; CTextFileLoader::GetTokenString
EXTRN	??_ESCollisionData@NRaceData@@UAEPAXI@Z:PROC	; NRaceData::SCollisionData::`vector deleting destructor'
EXTRN	?SaveAttackData@NRaceData@@YAXPAU_iobuf@@HABUSAttackData@1@@Z:PROC ; NRaceData::SaveAttackData
EXTRN	?SaveCollisionData@NRaceData@@YAXPAU_iobuf@@HABUSCollisionData@1@@Z:PROC ; NRaceData::SaveCollisionData
EXTRN	?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z:PROC ; NRaceData::LoadAttackData
EXTRN	?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z:PROC ; NRaceData::LoadMotionAttackData
EXTRN	?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z:PROC ; NRaceData::LoadCollisionData
EXTRN	?LoadSoundInformationPiece@NSound@@YA_NPBDAAV?$vector@USSoundData@NSound@@V?$allocator@USSoundData@NSound@@@std@@@std@@0@Z:PROC ; NSound::LoadSoundInformationPiece
EXTRN	?DataToInstance@NSound@@YAXABV?$vector@USSoundData@NSound@@V?$allocator@USSoundData@NSound@@@std@@@std@@PAV?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@3@@Z:PROC ; NSound::DataToInstance
EXTRN	?RegisterEffect@CEffectManager@@QAEHPBD_N1@Z:PROC ; CEffectManager::RegisterEffect
EXTRN	?RegisterFlyingData@CFlyingManager@@QAE_NPBD@Z:PROC ; CFlyingManager::RegisterFlyingData
EXTRN	??_ESMotionEventData@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventData::`vector deleting destructor'
EXTRN	??_ESMotionEventDataScreenWaving@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventDataScreenWaving::`vector deleting destructor'
EXTRN	??_ESMotionEventDataEffect@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventDataEffect::`vector deleting destructor'
EXTRN	??_ESMotionEventDataEffectToTarget@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventDataEffectToTarget::`vector deleting destructor'
EXTRN	??_ESMotionEventDataFly@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventDataFly::`vector deleting destructor'
EXTRN	??_ESMotionEventDataAttack@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventDataAttack::`vector deleting destructor'
EXTRN	??_ESMotionEventDataSound@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventDataSound::`vector deleting destructor'
EXTRN	??_ESMotionEventDataCharacterShow@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventDataCharacterShow::`vector deleting destructor'
EXTRN	??_ESMotionEventDataCharacterHide@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventDataCharacterHide::`vector deleting destructor'
EXTRN	??_ESMotionEventDataWarp@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventDataWarp::`vector deleting destructor'
EXTRN	??_ESMotionEventDataUnk11@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventDataUnk11::`vector deleting destructor'
EXTRN	??_ESMotionEventDataUnk12@NMotionEvent@@UAEPAXI@Z:PROC ; NMotionEvent::SMotionEventDataUnk12::`vector deleting destructor'
EXTRN	??_ECRaceMotionData@@UAEPAXI@Z:PROC		; CRaceMotionData::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftoui3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	?g_fGameFPS@@3MA:DWORD				; g_fGameFPS
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A DD 01H DUP (?) ; CSingleton<CEffectManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCFlyingManager@@@@0PAVCFlyingManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCFlyingManager@@@@0PAVCFlyingManager@@A DD 01H DUP (?) ; CSingleton<CFlyingManager>::ms_singleton
_BSS	ENDS
CRT$XCU	SEGMENT
??ms_kPool$initializer$@CRaceMotionData@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A@@YAXXZ ; ??ms_kPool$initializer$@CRaceMotionData@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CRaceMotionData@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRaceMotionData@@8 DD FLAT:??_R0?AVCRaceMotionData@@@8 ; CRaceMotionData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRaceMotionData@@8
rdata$r	ENDS
;	COMDAT ??_R2CRaceMotionData@@8
rdata$r	SEGMENT
??_R2CRaceMotionData@@8 DD FLAT:??_R1A@?0A@EA@CRaceMotionData@@8 ; CRaceMotionData::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CRaceMotionData@@8
rdata$r	SEGMENT
??_R3CRaceMotionData@@8 DD 00H				; CRaceMotionData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CRaceMotionData@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRaceMotionData@@@8
data$rs	SEGMENT
??_R0?AVCRaceMotionData@@@8 DD FLAT:??_7type_info@@6B@	; CRaceMotionData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRaceMotionData@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CRaceMotionData@@6B@
rdata$r	SEGMENT
??_R4CRaceMotionData@@6B@ DD 00H			; CRaceMotionData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRaceMotionData@@@8
	DD	FLAT:??_R3CRaceMotionData@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventDataUnk12@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventDataUnk12@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventDataUnk12@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataUnk12::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventDataUnk12@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventDataUnk12@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventDataUnk12@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventDataUnk12@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataUnk12::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventDataUnk12@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventDataUnk12@NMotionEvent@@8 DD 00H	; NMotionEvent::SMotionEventDataUnk12::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SMotionEventDataUnk12@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventDataUnk12@NMotionEvent@@@8
data$rs	SEGMENT
??_R0?AUSMotionEventDataUnk12@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventDataUnk12 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventDataUnk12@NMotionEvent@@', 00H
data$rs	ENDS
;	COMDAT ??_R4SMotionEventDataUnk12@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventDataUnk12@NMotionEvent@@6B@ DD 00H	; NMotionEvent::SMotionEventDataUnk12::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventDataUnk12@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventDataUnk12@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventDataUnk11@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventDataUnk11@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventDataUnk11@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataUnk11::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventDataUnk11@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventDataUnk11@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventDataUnk11@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventDataUnk11@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataUnk11::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventDataUnk11@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventDataUnk11@NMotionEvent@@8 DD 00H	; NMotionEvent::SMotionEventDataUnk11::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SMotionEventDataUnk11@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventDataUnk11@NMotionEvent@@@8
data$rs	SEGMENT
??_R0?AUSMotionEventDataUnk11@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventDataUnk11 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventDataUnk11@NMotionEvent@@', 00H
data$rs	ENDS
;	COMDAT ??_R4SMotionEventDataUnk11@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventDataUnk11@NMotionEvent@@6B@ DD 00H	; NMotionEvent::SMotionEventDataUnk11::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventDataUnk11@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventDataUnk11@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventDataWarp@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventDataWarp@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventDataWarp@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataWarp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventDataWarp@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventDataWarp@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventDataWarp@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventDataWarp@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataWarp::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventDataWarp@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventDataWarp@NMotionEvent@@8 DD 00H	; NMotionEvent::SMotionEventDataWarp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SMotionEventDataWarp@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventDataWarp@NMotionEvent@@@8
data$rs	SEGMENT
??_R0?AUSMotionEventDataWarp@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventDataWarp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventDataWarp@NMotionEvent@@', 00H
data$rs	ENDS
;	COMDAT ??_R4SMotionEventDataWarp@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventDataWarp@NMotionEvent@@6B@ DD 00H	; NMotionEvent::SMotionEventDataWarp::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventDataWarp@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventDataWarp@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventDataCharacterHide@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventDataCharacterHide@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventDataCharacterHide@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataCharacterHide::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventDataCharacterHide@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventDataCharacterHide@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventDataCharacterHide@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventDataCharacterHide@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataCharacterHide::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventDataCharacterHide@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventDataCharacterHide@NMotionEvent@@8 DD 00H ; NMotionEvent::SMotionEventDataCharacterHide::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SMotionEventDataCharacterHide@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventDataCharacterHide@NMotionEvent@@@8
data$rs	SEGMENT
??_R0?AUSMotionEventDataCharacterHide@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventDataCharacterHide `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventDataCharacterHide@NMotionEvent@@', 00H
data$rs	ENDS
;	COMDAT ??_R4SMotionEventDataCharacterHide@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventDataCharacterHide@NMotionEvent@@6B@ DD 00H ; NMotionEvent::SMotionEventDataCharacterHide::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventDataCharacterHide@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventDataCharacterHide@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventDataCharacterShow@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventDataCharacterShow@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventDataCharacterShow@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataCharacterShow::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventDataCharacterShow@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventDataCharacterShow@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventDataCharacterShow@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventDataCharacterShow@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataCharacterShow::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventDataCharacterShow@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventDataCharacterShow@NMotionEvent@@8 DD 00H ; NMotionEvent::SMotionEventDataCharacterShow::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SMotionEventDataCharacterShow@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventDataCharacterShow@NMotionEvent@@@8
data$rs	SEGMENT
??_R0?AUSMotionEventDataCharacterShow@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventDataCharacterShow `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventDataCharacterShow@NMotionEvent@@', 00H
data$rs	ENDS
;	COMDAT ??_R4SMotionEventDataCharacterShow@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventDataCharacterShow@NMotionEvent@@6B@ DD 00H ; NMotionEvent::SMotionEventDataCharacterShow::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventDataCharacterShow@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventDataCharacterShow@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventDataSound@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventDataSound@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventDataSound@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataSound::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventDataSound@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventDataSound@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventDataSound@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventDataSound@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataSound::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventDataSound@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventDataSound@NMotionEvent@@8 DD 00H	; NMotionEvent::SMotionEventDataSound::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SMotionEventDataSound@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventDataSound@NMotionEvent@@@8
data$rs	SEGMENT
??_R0?AUSMotionEventDataSound@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventDataSound `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventDataSound@NMotionEvent@@', 00H
data$rs	ENDS
;	COMDAT ??_R4SMotionEventDataSound@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventDataSound@NMotionEvent@@6B@ DD 00H	; NMotionEvent::SMotionEventDataSound::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventDataSound@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventDataSound@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventDataAttack@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventDataAttack@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventDataAttack@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataAttack::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventDataAttack@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventDataAttack@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventDataAttack@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventDataAttack@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataAttack::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventDataAttack@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventDataAttack@NMotionEvent@@8 DD 00H	; NMotionEvent::SMotionEventDataAttack::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SMotionEventDataAttack@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventDataAttack@NMotionEvent@@@8
data$rs	SEGMENT
??_R0?AUSMotionEventDataAttack@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventDataAttack `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventDataAttack@NMotionEvent@@', 00H
data$rs	ENDS
;	COMDAT ??_R4SMotionEventDataAttack@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventDataAttack@NMotionEvent@@6B@ DD 00H	; NMotionEvent::SMotionEventDataAttack::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventDataAttack@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventDataAttack@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventDataFly@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventDataFly@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventDataFly@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataFly::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventDataFly@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventDataFly@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventDataFly@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventDataFly@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataFly::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventDataFly@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventDataFly@NMotionEvent@@8 DD 00H		; NMotionEvent::SMotionEventDataFly::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SMotionEventDataFly@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventDataFly@NMotionEvent@@@8
data$rs	SEGMENT
??_R0?AUSMotionEventDataFly@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventDataFly `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventDataFly@NMotionEvent@@', 00H
data$rs	ENDS
;	COMDAT ??_R4SMotionEventDataFly@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventDataFly@NMotionEvent@@6B@ DD 00H	; NMotionEvent::SMotionEventDataFly::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventDataFly@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventDataFly@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventDataEffectToTarget@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventDataEffectToTarget@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventDataEffectToTarget@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataEffectToTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventDataEffectToTarget@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventDataEffectToTarget@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventDataEffectToTarget@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventDataEffectToTarget@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataEffectToTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventDataEffectToTarget@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventDataEffectToTarget@NMotionEvent@@8 DD 00H ; NMotionEvent::SMotionEventDataEffectToTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SMotionEventDataEffectToTarget@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventDataEffectToTarget@NMotionEvent@@@8
data$rs	SEGMENT
??_R0?AUSMotionEventDataEffectToTarget@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventDataEffectToTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventDataEffectToTarget@NMotionEvent@@', 00H
data$rs	ENDS
;	COMDAT ??_R4SMotionEventDataEffectToTarget@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventDataEffectToTarget@NMotionEvent@@6B@ DD 00H ; NMotionEvent::SMotionEventDataEffectToTarget::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventDataEffectToTarget@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventDataEffectToTarget@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventDataEffect@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventDataEffect@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventDataEffect@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataEffect::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventDataEffect@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventDataEffect@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventDataEffect@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventDataEffect@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataEffect::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventDataEffect@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventDataEffect@NMotionEvent@@8 DD 00H	; NMotionEvent::SMotionEventDataEffect::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SMotionEventDataEffect@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventDataEffect@NMotionEvent@@@8
data$rs	SEGMENT
??_R0?AUSMotionEventDataEffect@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventDataEffect `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventDataEffect@NMotionEvent@@', 00H
data$rs	ENDS
;	COMDAT ??_R4SMotionEventDataEffect@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventDataEffect@NMotionEvent@@6B@ DD 00H	; NMotionEvent::SMotionEventDataEffect::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventDataEffect@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventDataEffect@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventDataScreenWaving@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventDataScreenWaving@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventDataScreenWaving@NMotionEvent@@@8 ; NMotionEvent::SMotionEventDataScreenWaving::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventDataScreenWaving@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventDataScreenWaving@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventDataScreenWaving@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventDataScreenWaving@NMotionEvent@@8 ; NMotionEvent::SMotionEventDataScreenWaving::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventDataScreenWaving@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventDataScreenWaving@NMotionEvent@@8 DD 00H ; NMotionEvent::SMotionEventDataScreenWaving::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SMotionEventDataScreenWaving@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventDataScreenWaving@NMotionEvent@@@8
data$rs	SEGMENT
??_R0?AUSMotionEventDataScreenWaving@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventDataScreenWaving `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventDataScreenWaving@NMotionEvent@@', 00H
data$rs	ENDS
;	COMDAT ??_R4SMotionEventDataScreenWaving@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventDataScreenWaving@NMotionEvent@@6B@ DD 00H ; NMotionEvent::SMotionEventDataScreenWaving::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventDataScreenWaving@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventDataScreenWaving@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8 DD FLAT:??_R0?AUSMotionEventData@NMotionEvent@@@8 ; NMotionEvent::SMotionEventData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R2SMotionEventData@NMotionEvent@@8
rdata$r	SEGMENT
??_R2SMotionEventData@NMotionEvent@@8 DD FLAT:??_R1A@?0A@EA@SMotionEventData@NMotionEvent@@8 ; NMotionEvent::SMotionEventData::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SMotionEventData@NMotionEvent@@8
rdata$r	SEGMENT
??_R3SMotionEventData@NMotionEvent@@8 DD 00H		; NMotionEvent::SMotionEventData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSMotionEventData@NMotionEvent@@@8
data$rs	SEGMENT
??_R0?AUSMotionEventData@NMotionEvent@@@8 DD FLAT:??_7type_info@@6B@ ; NMotionEvent::SMotionEventData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSMotionEventData@NMotionEvent@@', 00H
data$rs	ENDS
;	COMDAT ??_R4SMotionEventData@NMotionEvent@@6B@
rdata$r	SEGMENT
??_R4SMotionEventData@NMotionEvent@@6B@ DD 00H		; NMotionEvent::SMotionEventData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSMotionEventData@NMotionEvent@@@8
	DD	FLAT:??_R3SMotionEventData@NMotionEvent@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
CONST	SEGMENT
??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@ DB 'invalid vector subscri'
	DB	'pt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_06PBLIODKG@sound?1@
CONST	SEGMENT
??_C@_06PBLIODKG@sound?1@ DB 'sound/', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04NMMFEKGF@?4mss@
CONST	SEGMENT
??_C@_04NMMFEKGF@?4mss@ DB '.mss', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NHFBHOF@startingtime@
CONST	SEGMENT
??_C@_0N@NHFBHOF@startingtime@ DB 'startingtime', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CGGAKCNF@motioneventtype@
CONST	SEGMENT
??_C@_0BA@CGGAKCNF@motioneventtype@ DB 'motioneventtype', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05GFHEIIDD@event@
CONST	SEGMENT
??_C@_05GFHEIIDD@event@ DB 'event', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KNDELFNF@motioneventdatacount@
CONST	SEGMENT
??_C@_0BF@KNDELFNF@motioneventdatacount@ DB 'motioneventdatacount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LAEICHPP@motioneventdata@
CONST	SEGMENT
??_C@_0BA@LAEICHPP@motioneventdata@ DB 'motioneventdata', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HIAPALPD@loopendtime@
CONST	SEGMENT
??_C@_0M@HIAPALPD@loopendtime@ DB 'loopendtime', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FAMGINHI@loopstarttime@
CONST	SEGMENT
??_C@_0O@FAMGINHI@loopstarttime@ DB 'loopstarttime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LFNJMKIF@loopcancelenable@
CONST	SEGMENT
??_C@_0BB@LFNJMKIF@loopcancelenable@ DB 'loopcancelenable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HKGDAAAM@motionloopcount@
CONST	SEGMENT
??_C@_0BA@HKGDAAAM@motionloopcount@ DB 'motionloopcount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08BMIAMBLK@loopdata@
CONST	SEGMENT
??_C@_08BMIAMBLK@loopdata@ DB 'loopdata', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NGMBMFEH@attackingdata@
CONST	SEGMENT
??_C@_0O@NGMBMFEH@attackingdata@ DB 'attackingdata', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PPFBMGLB@inputlimittime@
CONST	SEGMENT
??_C@_0P@PPFBMGLB@inputlimittime@ DB 'inputlimittime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OKILMLFK@directinputtime@
CONST	SEGMENT
??_C@_0BA@OKILMLFK@directinputtime@ DB 'directinputtime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IKJEINLI@preinputtime@
CONST	SEGMENT
??_C@_0N@IKJEINLI@preinputtime@ DB 'preinputtime', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BEGKENNC@comboinputdata@
CONST	SEGMENT
??_C@_0P@BEGKENNC@comboinputdata@ DB 'comboinputdata', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@FGBECHEA@CRaceMotioNData?3?3LoadMotionData@
CONST	SEGMENT
??_C@_0EP@FGBECHEA@CRaceMotioNData?3?3LoadMotionData@ DB 'CRaceMotioNData'
	DB	'::LoadMotionData : syntax error on accumulation, vector size '
	DB	'%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JBNPINGA@accumulation@
CONST	SEGMENT
??_C@_0N@JBNPINGA@accumulation@ DB 'accumulation', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CAAIIAIN@motionduration@
CONST	SEGMENT
??_C@_0P@CAAIIAIN@motionduration@ DB 'motionduration', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IGAOIDID@motionfilename@
CONST	SEGMENT
??_C@_0P@IGAOIDID@motionfilename@ DB 'motionfilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@NGIMIHAA@CRaceMotionData?3?3SetName?5?9?5UNKN@
CONST	SEGMENT
??_C@_0CL@NGIMIHAA@CRaceMotionData?3?3SetName?5?9?5UNKN@ DB 'CRaceMotionD'
	DB	'ata::SetName - UNKNOWN NAME %d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CRaceMotionData@@6B@
CONST	SEGMENT
??_7CRaceMotionData@@6B@ DD FLAT:??_R4CRaceMotionData@@6B@ ; CRaceMotionData::`vftable'
	DD	FLAT:??_ECRaceMotionData@@UAEPAXI@Z
CONST	ENDS
_DATA	SEGMENT
?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A DD FLAT:??_7?$CDynamicPool@VCRaceMotionData@@@@6B@ ; CRaceMotionData::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7SMotionEventDataUnk12@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventDataUnk12@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventDataUnk12@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataUnk12::`vftable'
	DD	FLAT:??_ESMotionEventDataUnk12@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:?Save@SMotionEventDataUnk12@NMotionEvent@@UAEXPAU_iobuf@@H@Z
	DD	FLAT:?Load@SMotionEventData@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_C@_0N@OGGCDFHA@basevelocity@
CONST	SEGMENT
??_C@_0N@OGGCDFHA@basevelocity@ DB 'basevelocity', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@COIHOOIP@BaseVelocity?5?5?5?5?5?5?5?5?$CC?$CFd?$CC?6@
CONST	SEGMENT
??_C@_0BK@COIHOOIP@BaseVelocity?5?5?5?5?5?5?5?5?$CC?$CFd?$CC?6@ DB 'BaseV'
	DB	'elocity        "%d"', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_7SMotionEventDataUnk11@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventDataUnk11@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventDataUnk11@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataUnk11::`vftable'
	DD	FLAT:??_ESMotionEventDataUnk11@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:?Save@SMotionEventDataUnk11@NMotionEvent@@UAEXPAU_iobuf@@H@Z
	DD	FLAT:?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_7SMotionEventDataWarp@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventDataWarp@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventDataWarp@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataWarp::`vftable'
	DD	FLAT:??_ESMotionEventDataWarp@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:?Save@SMotionEventDataWarp@NMotionEvent@@UAEXPAU_iobuf@@H@Z
	DD	FLAT:?Load@SMotionEventData@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_7SMotionEventDataCharacterHide@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventDataCharacterHide@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventDataCharacterHide@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataCharacterHide::`vftable'
	DD	FLAT:??_ESMotionEventDataCharacterHide@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:?Save@SMotionEventDataCharacterHide@NMotionEvent@@UAEXPAU_iobuf@@H@Z
	DD	FLAT:?Load@SMotionEventData@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_7SMotionEventDataCharacterShow@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventDataCharacterShow@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventDataCharacterShow@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataCharacterShow::`vftable'
	DD	FLAT:??_ESMotionEventDataCharacterShow@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:?Save@SMotionEventDataCharacterShow@NMotionEvent@@UAEXPAU_iobuf@@H@Z
	DD	FLAT:?Load@SMotionEventData@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@POGBJFAA@soundfilename@
CONST	SEGMENT
??_C@_0O@POGBJFAA@soundfilename@ DB 'soundfilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OCKKLAAD@SoundFileName?5?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@
CONST	SEGMENT
??_C@_0BL@OCKKLAAD@SoundFileName?5?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@ DB 'Soun'
	DB	'dFileName        "%s"', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_7SMotionEventDataSound@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventDataSound@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventDataSound@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataSound::`vftable'
	DD	FLAT:??_ESMotionEventDataSound@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:?Save@SMotionEventDataSound@NMotionEvent@@UAEXPAU_iobuf@@H@Z
	DD	FLAT:?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_C@_0BB@NODGLCEN@enablehitprocess@
CONST	SEGMENT
??_C@_0BB@NODGLCEN@enablehitprocess@ DB 'enablehitprocess', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DAILMIKJ@EnableHitProcess?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@DAILMIKJ@EnableHitProcess?5?5?5?5?5?$CFd?6@ DB 'EnableHitProces'
	DB	's     %d', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_7SMotionEventDataAttack@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventDataAttack@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventDataAttack@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataAttack::`vftable'
	DD	FLAT:??_ESMotionEventDataAttack@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:?Save@SMotionEventDataAttack@NMotionEvent@@UAEXPAU_iobuf@@H@Z
	DD	FLAT:?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_C@_0M@OKENILIB@flyposition@
CONST	SEGMENT
??_C@_0M@OKENILIB@flyposition@ DB 'flyposition', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BKDIDPMI@flyfilename@
CONST	SEGMENT
??_C@_0M@BKDIDPMI@flyfilename@ DB 'flyfilename', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@LNHEOAC@FlyPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@
CONST	SEGMENT
??_C@_0BM@LNHEOAC@FlyPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@ DB 'Fly'
	DB	'Position       %f %f %f', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MFBAEGBD@FlyFileName?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@
CONST	SEGMENT
??_C@_0BI@MFBAEGBD@FlyFileName?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@ DB 'FlyFileN'
	DB	'ame       "%s"', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_7SMotionEventDataFly@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventDataFly@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventDataFly@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataFly::`vftable'
	DD	FLAT:??_ESMotionEventDataFly@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:?Save@SMotionEventDataFly@NMotionEvent@@UAEXPAU_iobuf@@H@Z
	DD	FLAT:?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_C@_0BC@PGIDKNAJ@fishingeffectflag@
CONST	SEGMENT
??_C@_0BC@PGIDKNAJ@fishingeffectflag@ DB 'fishingeffectflag', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@ECHDEMEM@FishingEffectFlag?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@ECHDEMEM@FishingEffectFlag?5?5?5?5?$CFd?6@ DB 'FishingEffectFla'
	DB	'g    %d', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_7SMotionEventDataEffectToTarget@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventDataEffectToTarget@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventDataEffectToTarget@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataEffectToTarget::`vftable'
	DD	FLAT:??_ESMotionEventDataEffectToTarget@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:?Save@SMotionEventDataEffectToTarget@NMotionEvent@@UAEXPAU_iobuf@@H@Z
	DD	FLAT:?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_C@_0BA@DEKLACIK@followingenable@
CONST	SEGMENT
??_C@_0BA@DEKLACIK@followingenable@ DB 'followingenable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PMGDNJPL@effectposition@
CONST	SEGMENT
??_C@_0P@PMGDNJPL@effectposition@ DB 'effectposition', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MBGGNLC@effectfilename@
CONST	SEGMENT
??_C@_0P@MBGGNLC@effectfilename@ DB 'effectfilename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FCIOLNPK@attachingbonename@
CONST	SEGMENT
??_C@_0BC@FCIOLNPK@attachingbonename@ DB 'attachingbonename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HJAHPMOG@attachingenable@
CONST	SEGMENT
??_C@_0BA@HJAHPMOG@attachingenable@ DB 'attachingenable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MCOMBMGO@independentflag@
CONST	SEGMENT
??_C@_0BA@MCOMBMGO@independentflag@ DB 'independentflag', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@CFDDPJAK@EffectPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@
CONST	SEGMENT
??_C@_0BP@CFDDPJAK@EffectPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@ DB 'E'
	DB	'ffectPosition       %f %f %f', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OHMOOLCL@EffectFileName?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@
CONST	SEGMENT
??_C@_0BL@OHMOOLCL@EffectFileName?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@ DB 'Effec'
	DB	'tFileName       "%s"', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NDNPFOND@FollowingEnable?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@NDNPFOND@FollowingEnable?5?5?5?5?5?5?$CFd?6@ DB 'FollowingEnabl'
	DB	'e      %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PLABIPOF@AttachingBoneName?5?5?5?5?$CC?$CFs?$CC?6@
CONST	SEGMENT
??_C@_0BL@PLABIPOF@AttachingBoneName?5?5?5?5?$CC?$CFs?$CC?6@ DB 'Attachin'
	DB	'gBoneName    "%s"', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LAKEIKLD@AttachingEnable?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@LAKEIKLD@AttachingEnable?5?5?5?5?5?5?$CFd?6@ DB 'AttachingEnabl'
	DB	'e      %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EFAIBPHL@IndependentFlag?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@EFAIBPHL@IndependentFlag?5?5?5?5?5?5?$CFd?6@ DB 'IndependentFla'
	DB	'g      %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_7SMotionEventDataEffect@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventDataEffect@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventDataEffect@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataEffect::`vftable'
	DD	FLAT:??_ESMotionEventDataEffect@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:?Save@SMotionEventDataEffect@NMotionEvent@@UAEXPAU_iobuf@@H@Z
	DD	FLAT:?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_C@_0P@JIGGKKJB@affectingrange@
CONST	SEGMENT
??_C@_0P@JIGGKKJB@affectingrange@ DB 'affectingrange', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05PLIADJJL@power@
CONST	SEGMENT
??_C@_05PLIADJJL@power@ DB 'power', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KJGFIEPL@duringtime@
CONST	SEGMENT
??_C@_0L@KJGFIEPL@duringtime@ DB 'duringtime', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KLBKOEEF@AffectingRange?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@KLBKOEEF@AffectingRange?5?5?5?5?5?5?5?$CFd?6@ DB 'AffectingRang'
	DB	'e       %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FEKHNOBC@Power?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@
CONST	SEGMENT
??_C@_0BJ@FEKHNOBC@Power?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@ DB 'Powe'
	DB	'r                %d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JOLNCGNF@DuringTime?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BJ@JOLNCGNF@DuringTime?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@ DB 'DuringTim'
	DB	'e           %f', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_7SMotionEventDataScreenWaving@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventDataScreenWaving@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventDataScreenWaving@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventDataScreenWaving::`vftable'
	DD	FLAT:??_ESMotionEventDataScreenWaving@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:?Save@SMotionEventDataScreenWaving@NMotionEvent@@UAEXPAU_iobuf@@H@Z
	DD	FLAT:?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ??_7SMotionEventData@NMotionEvent@@6B@
CONST	SEGMENT
??_7SMotionEventData@NMotionEvent@@6B@ DD FLAT:??_R4SMotionEventData@NMotionEvent@@6B@ ; NMotionEvent::SMotionEventData::`vftable'
	DD	FLAT:??_ESMotionEventData@NMotionEvent@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:?Load@SMotionEventData@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@SCollisionData@NRaceData@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SCollisionData@NRaceData@@8 DD FLAT:??_R0?AUSCollisionData@NRaceData@@@8 ; NRaceData::SCollisionData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SCollisionData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R2SCollisionData@NRaceData@@8
rdata$r	SEGMENT
??_R2SCollisionData@NRaceData@@8 DD FLAT:??_R1A@?0A@EA@SCollisionData@NRaceData@@8 ; NRaceData::SCollisionData::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SCollisionData@NRaceData@@8
rdata$r	SEGMENT
??_R3SCollisionData@NRaceData@@8 DD 00H			; NRaceData::SCollisionData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SCollisionData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSCollisionData@NRaceData@@@8
data$rs	SEGMENT
??_R0?AUSCollisionData@NRaceData@@@8 DD FLAT:??_7type_info@@6B@ ; NRaceData::SCollisionData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSCollisionData@NRaceData@@', 00H
data$rs	ENDS
;	COMDAT ??_R4SCollisionData@NRaceData@@6B@
rdata$r	SEGMENT
??_R4SCollisionData@NRaceData@@6B@ DD 00H		; NRaceData::SCollisionData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSCollisionData@NRaceData@@@8
	DD	FLAT:??_R3SCollisionData@NRaceData@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position@ DB 'invalid string position'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_7SCollisionData@NRaceData@@6B@
CONST	SEGMENT
??_7SCollisionData@NRaceData@@6B@ DD FLAT:??_R4SCollisionData@NRaceData@@6B@ ; NRaceData::SCollisionData::`vftable'
	DD	FLAT:??_ESCollisionData@NRaceData@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z$0
__ehfuncinfo$?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z DD 019930522H
	DD	01dH
	DD	FLAT:__unwindtable$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$5
	DD	03H
	DD	00H
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$6
	DD	03H
	DD	00H
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$7
	DD	03H
	DD	00H
	DD	03H
	DD	00H
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$8
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$9
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$10
	DD	03H
	DD	00H
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$11
	DD	03H
	DD	00H
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$12
	DD	03H
	DD	FLAT:___std_terminate
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$13
	DD	03H
	DD	00H
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$14
	DD	03H
	DD	00H
	DD	03H
	DD	00H
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$26
	DD	03H
	DD	FLAT:___std_terminate
	DD	03H
	DD	FLAT:___std_terminate
	DD	03H
	DD	FLAT:__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$27
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0
__ehfuncinfo$?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0
__ehfuncinfo$?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$1
__ehfuncinfo$?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$3
__ehfuncinfo$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$3
__ehfuncinfo$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$2
__ehfuncinfo$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CGotoChild@CTextFileLoader@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAUSMotionEventData@NMotionEvent@@PAPAU12@@std@@YAPAPAUSMotionEventData@NMotionEvent@@PAPAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAUSMotionEventData@NMotionEvent@@PAPAU12@@std@@YAPAPAUSMotionEventData@NMotionEvent@@PAPAU12@00@Z PROC ; std::_Copy_memmove<NMotionEvent::SMotionEventData * *,NMotionEvent::SMotionEventData * *>, COMDAT

; 4159 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4160 :     auto _FirstPtr              = _To_address(_First);
; 4161 :     auto _LastPtr               = _To_address(_Last);
; 4162 :     auto _DestPtr               = _To_address(_Dest);
; 4163 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4164 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4165 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4166 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4167 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4168 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4169 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4170 :     } else {
; 4171 :         return _Dest + (_LastPtr - _FirstPtr);
; 4172 :     }
; 4173 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAUSMotionEventData@NMotionEvent@@PAPAU12@@std@@YAPAPAUSMotionEventData@NMotionEvent@@PAPAU12@00@Z ENDP ; std::_Copy_memmove<NMotionEvent::SMotionEventData * *,NMotionEvent::SMotionEventData * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >, COMDAT
; _this$ = ecx

; 748  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 749  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 750  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 616  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 617  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00023	6a 30		 push	 48			; 00000030H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 749  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 751  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 752  :         }
; 753  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Fill_zero_memset@PAPAUSMotionEventData@NMotionEvent@@@std@@YAXPAPAUSMotionEventData@NMotionEvent@@I@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Count$ = 12						; size = 4
??$_Fill_zero_memset@PAPAUSMotionEventData@NMotionEvent@@@std@@YAXPAPAUSMotionEventData@NMotionEvent@@I@Z PROC ; std::_Fill_zero_memset<NMotionEvent::SMotionEventData * *>, COMDAT

; 4558 : void _Fill_zero_memset(_CtgIt _Dest, const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4559 :     _CSTD memset(_To_address(_Dest), 0, _Count * sizeof(_Iter_value_t<_CtgIt>));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	c1 e0 02	 shl	 eax, 2
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 08	 push	 DWORD PTR __Dest$[ebp]
  0000f	e8 00 00 00 00	 call	 _memset
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4560 : }

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Fill_zero_memset@PAPAUSMotionEventData@NMotionEvent@@@std@@YAXPAPAUSMotionEventData@NMotionEvent@@I@Z ENDP ; std::_Fill_zero_memset<NMotionEvent::SMotionEventData * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Is_all_bits_zero@PAUSMotionEventData@NMotionEvent@@@std@@YA_NABQAUSMotionEventData@NMotionEvent@@@Z
_TEXT	SEGMENT
__Zero$ = -4						; size = 4
__Val$ = 8						; size = 4
??$_Is_all_bits_zero@PAUSMotionEventData@NMotionEvent@@@std@@YA_NABQAUSMotionEventData@NMotionEvent@@@Z PROC ; std::_Is_all_bits_zero<NMotionEvent::SMotionEventData *>, COMDAT

; 4563 : _NODISCARD bool _Is_all_bits_zero(const _Ty& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 4564 :     // checks if scalar type has all bits set to zero
; 4565 :     _STL_INTERNAL_STATIC_ASSERT(is_scalar_v<_Ty> && !is_member_pointer_v<_Ty>);
; 4566 :     constexpr _Ty _Zero{};
; 4567 :     return _CSTD memcmp(&_Val, &_Zero, sizeof(_Ty)) == 0;

  00004	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00007	8d 4d fc	 lea	 ecx, DWORD PTR __Zero$[ebp]
  0000a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Zero$[ebp], 0
  00011	8b 00		 mov	 eax, DWORD PTR [eax]
  00013	3b 01		 cmp	 eax, DWORD PTR [ecx]
  00015	0f 94 c0	 sete	 al

; 4568 : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Is_all_bits_zero@PAUSMotionEventData@NMotionEvent@@@std@@YA_NABQAUSMotionEventData@NMotionEvent@@@Z ENDP ; std::_Is_all_bits_zero<NMotionEvent::SMotionEventData *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCRaceMotionData@@PAPAV1@@std@@YAPAPAVCRaceMotionData@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCRaceMotionData@@PAPAV1@@std@@YAPAPAVCRaceMotionData@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CRaceMotionData * *,CRaceMotionData * *>, COMDAT

; 4159 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4160 :     auto _FirstPtr              = _To_address(_First);
; 4161 :     auto _LastPtr               = _To_address(_Last);
; 4162 :     auto _DestPtr               = _To_address(_Dest);
; 4163 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4164 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4165 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4166 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4167 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4168 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4169 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4170 :     } else {
; 4171 :         return _Dest + (_LastPtr - _FirstPtr);
; 4172 :     }
; 4173 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCRaceMotionData@@PAPAV1@@std@@YAPAPAVCRaceMotionData@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CRaceMotionData * *,CRaceMotionData * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Resize_reallocate@PAUSMotionEventData@NMotionEvent@@@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@AAEXIABQAUSMotionEventData@NMotionEvent@@@Z
_TEXT	SEGMENT
_this$1$ = -16						; size = 4
__Oldsize$1$ = -12					; size = 4
tv507 = -8						; size = 4
$T2 = -4						; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@PAUSMotionEventData@NMotionEvent@@@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@AAEXIABQAUSMotionEventData@NMotionEvent@@@Z PROC ; std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> >::_Resize_reallocate<NMotionEvent::SMotionEventData *>, COMDAT
; _this$ = ecx

; 1229 :     _CONSTEXPR20_CONTAINER void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1230 :         if (_Newsize > max_size()) {

  00009	8b 7d 08	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0000c	8b d9		 mov	 ebx, ecx
  0000e	89 5d f0	 mov	 DWORD PTR _this$1$[ebp], ebx
  00011	81 ff ff ff ff
	3f		 cmp	 edi, 1073741823		; 3fffffffH
  00017	0f 87 17 01 00
	00		 ja	 $LN87@Resize_rea

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0001d	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00020	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00025	2b 0b		 sub	 ecx, DWORD PTR [ebx]

; 1232 :         }
; 1233 : 
; 1234 :         auto& _My_data    = _Mypair._Myval2;
; 1235 :         pointer& _Myfirst = _My_data._Myfirst;
; 1236 :         pointer& _Mylast  = _My_data._Mylast;
; 1237 : 
; 1238 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00027	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  0002a	2b 33		 sub	 esi, DWORD PTR [ebx]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002c	c1 f9 02	 sar	 ecx, 2

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0002f	8b d1		 mov	 edx, ecx

; 1232 :         }
; 1233 : 
; 1234 :         auto& _My_data    = _Mypair._Myval2;
; 1235 :         pointer& _Myfirst = _My_data._Myfirst;
; 1236 :         pointer& _Mylast  = _My_data._Mylast;
; 1237 : 
; 1238 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00031	c1 fe 02	 sar	 esi, 2

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00034	d1 ea		 shr	 edx, 1
  00036	2b c2		 sub	 eax, edx

; 1232 :         }
; 1233 : 
; 1234 :         auto& _My_data    = _Mypair._Myval2;
; 1235 :         pointer& _Myfirst = _My_data._Myfirst;
; 1236 :         pointer& _Mylast  = _My_data._Mylast;
; 1237 : 
; 1238 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00038	89 75 f4	 mov	 DWORD PTR __Oldsize$1$[ebp], esi

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0003b	3b c8		 cmp	 ecx, eax
  0003d	76 13		 jbe	 SHORT $LN10@Resize_rea

; 1689 :             return _Max; // geometric growth would overflow

  0003f	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00044	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1689 :             return _Max; // geometric growth would overflow

  00045	89 45 f8	 mov	 DWORD PTR tv507[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00048	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0004d	83 c4 04	 add	 esp, 4
  00050	eb 3f		 jmp	 SHORT $LN85@Resize_rea
$LN10@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00052	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1693 : 
; 1694 :         if (_Geometric < _Newsize) {

  00055	3b c7		 cmp	 eax, edi
  00057	73 1a		 jae	 SHORT $LN11@Resize_rea

; 1695 :             return _Newsize; // geometric growth would be insufficient

  00059	8b c7		 mov	 eax, edi
$LN82@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 69   :     return _Count * _Ty_size;

  0005b	c1 e0 02	 shl	 eax, 2
  0005e	89 45 f8	 mov	 DWORD PTR tv507[ebp], eax

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00061	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00066	72 18		 jb	 SHORT $LN22@Resize_rea

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0006e	83 c4 04	 add	 esp, 4
  00071	eb 1e		 jmp	 SHORT $LN85@Resize_rea
$LN11@Resize_rea:

; 64   :         if (_Count > _Max_possible) {

  00073	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00078	0f 87 bb 00 00
	00		 ja	 $LN88@Resize_rea
  0007e	eb db		 jmp	 SHORT $LN82@Resize_rea
$LN22@Resize_rea:

; 243  :     if (_Bytes != 0) {

  00080	85 c0		 test	 eax, eax
  00082	74 0b		 je	 SHORT $LN23@Resize_rea

; 85   :         return ::operator new(_Bytes);

  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0008a	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  0008d	eb 02		 jmp	 SHORT $LN85@Resize_rea
$LN23@Resize_rea:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  0008f	33 c0		 xor	 eax, eax
$LN85@Resize_rea:

; 1757 :             if (_Is_all_bits_zero(_Val)) {

  00091	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1246 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  00094	2b 7d f4	 sub	 edi, DWORD PTR __Oldsize$1$[ebp]
  00097	8d 34 b0	 lea	 esi, DWORD PTR [eax+esi*4]
  0009a	89 45 fc	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1757 :             if (_Is_all_bits_zero(_Val)) {

  0009d	e8 00 00 00 00	 call	 ??$_Is_all_bits_zero@PAUSMotionEventData@NMotionEvent@@@std@@YA_NABQAUSMotionEventData@NMotionEvent@@@Z ; std::_Is_all_bits_zero<NMotionEvent::SMotionEventData *>
  000a2	83 c4 04	 add	 esp, 4
  000a5	84 c0		 test	 al, al
  000a7	74 0c		 je	 SHORT $LN34@Resize_rea

; 1758 :                 _Fill_zero_memset(_Unfancy(_First), static_cast<size_t>(_Count));

  000a9	57		 push	 edi
  000aa	56		 push	 esi
  000ab	e8 00 00 00 00	 call	 ??$_Fill_zero_memset@PAPAUSMotionEventData@NMotionEvent@@@std@@YAXPAPAUSMotionEventData@NMotionEvent@@I@Z ; std::_Fill_zero_memset<NMotionEvent::SMotionEventData * *>
  000b0	83 c4 08	 add	 esp, 8

; 1759 :                 return _First + _Count;

  000b3	eb 1b		 jmp	 SHORT $LN32@Resize_rea
$LN34@Resize_rea:

; 1760 :             }
; 1761 :         }
; 1762 :     }
; 1763 : 
; 1764 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1765 :     for (; 0 < _Count; --_Count) {

  000b5	85 ff		 test	 edi, edi
  000b7	74 17		 je	 SHORT $LN32@Resize_rea
  000b9	8b 5d 0c	 mov	 ebx, DWORD PTR __Val$[ebp]
  000bc	0f 1f 40 00	 npad	 4
$LL33@Resize_rea:

; 1631 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  000c0	8b 03		 mov	 eax, DWORD PTR [ebx]

; 1632 :         ++_Last;

  000c2	8d 76 04	 lea	 esi, DWORD PTR [esi+4]
  000c5	89 46 fc	 mov	 DWORD PTR [esi-4], eax

; 1765 :     for (; 0 < _Count; --_Count) {

  000c8	83 ef 01	 sub	 edi, 1
  000cb	75 f3		 jne	 SHORT $LL33@Resize_rea
  000cd	8b 5d f0	 mov	 ebx, DWORD PTR _this$1$[ebp]
$LN32@Resize_rea:

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d0	8b 75 fc	 mov	 esi, DWORD PTR $T2[ebp]
  000d3	56		 push	 esi
  000d4	ff 73 04	 push	 DWORD PTR [ebx+4]
  000d7	ff 33		 push	 DWORD PTR [ebx]
  000d9	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAUSMotionEventData@NMotionEvent@@PAPAU12@@std@@YAPAPAUSMotionEventData@NMotionEvent@@PAPAU12@00@Z ; std::_Copy_memmove<NMotionEvent::SMotionEventData * *,NMotionEvent::SMotionEventData * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000de	8b 03		 mov	 eax, DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  000e3	85 c0		 test	 eax, eax
  000e5	74 2c		 je	 SHORT $LN64@Resize_rea

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e7	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  000ea	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ec	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000ef	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000f5	72 12		 jb	 SHORT $LN74@Resize_rea

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f7	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000fa	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000fd	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000ff	83 c0 fc	 add	 eax, -4			; fffffffcH
  00102	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00105	77 28		 ja	 SHORT $LN71@Resize_rea

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00107	8b c2		 mov	 eax, edx
$LN74@Resize_rea:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00109	51		 push	 ecx
  0010a	50		 push	 eax
  0010b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00110	83 c4 08	 add	 esp, 8
$LN64@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1751 :         _Mylast  = _Newvec + _Newsize;

  00113	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00116	89 33		 mov	 DWORD PTR [ebx], esi

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00118	5f		 pop	 edi
  00119	8d 04 86	 lea	 eax, DWORD PTR [esi+eax*4]
  0011c	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  0011f	8b 45 f8	 mov	 eax, DWORD PTR tv507[ebp]
  00122	03 c6		 add	 eax, esi
  00124	5e		 pop	 esi
  00125	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  00128	5b		 pop	 ebx

; 1255 :     }

  00129	8b e5		 mov	 esp, ebp
  0012b	5d		 pop	 ebp
  0012c	c2 08 00	 ret	 8
$LN71@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0012f	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN87@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1231 :             _Xlength();

  00134	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@CAXXZ ; std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> >::_Xlength
$LN88@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00139	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN84@Resize_rea:
  0013e	cc		 int	 3
??$_Resize_reallocate@PAUSMotionEventData@NMotionEvent@@@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@AAEXIABQAUSMotionEventData@NMotionEvent@@@Z ENDP ; std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> >::_Resize_reallocate<NMotionEvent::SMotionEventData *>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCRaceMotionData@@@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@QAEPAPAVCRaceMotionData@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
__Newsize$1$ = -8					; size = 4
__Whereoff$1$ = -4					; size = 4
tv505 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCRaceMotionData@@@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@QAEPAPAVCRaceMotionData@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Emplace_reallocate<CRaceMotionData * const &>, COMDAT
; _this$ = ecx

; 765  :     _CONSTEXPR20_CONTAINER pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 766  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 767  :         _Alty& _Al        = _Getal();
; 768  :         auto& _My_data    = _Mypair._Myval2;
; 769  :         pointer& _Myfirst = _My_data._Myfirst;
; 770  :         pointer& _Mylast  = _My_data._Mylast;
; 771  : 
; 772  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 773  : 
; 774  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  00009	53		 push	 ebx
  0000a	8b d9		 mov	 ebx, ecx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 13		 mov	 edx, DWORD PTR [ebx]
  00010	2b c2		 sub	 eax, edx
  00012	c1 f8 02	 sar	 eax, 2
  00015	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax

; 775  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	2b c2		 sub	 eax, edx
  0001d	c1 f8 02	 sar	 eax, 2

; 776  : 
; 777  :         if (_Oldsize == max_size()) {

  00020	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00025	0f 84 d2 00 00
	00		 je	 $LN74@Emplace_re

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002b	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  0002e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00031	2b ca		 sub	 ecx, edx

; 779  :         }
; 780  : 
; 781  :         const size_type _Newsize     = _Oldsize + 1;

  00033	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00036	c1 f9 02	 sar	 ecx, 2

; 1688 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00039	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003e	8b d1		 mov	 edx, ecx
  00040	d1 ea		 shr	 edx, 1
  00042	2b c2		 sub	 eax, edx
  00044	3b c8		 cmp	 ecx, eax
  00046	76 17		 jbe	 SHORT $LN12@Emplace_re

; 1689 :             return _Max; // geometric growth would overflow

  00048	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
  0004d	be ff ff ff 3f	 mov	 esi, 1073741823		; 3fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00058	83 c4 04	 add	 esp, 4
  0005b	8b f8		 mov	 edi, eax
  0005d	eb 44		 jmp	 SHORT $LN23@Emplace_re
$LN12@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1692 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0005f	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  00062	8b f7		 mov	 esi, edi
  00064	3b c7		 cmp	 eax, edi
  00066	0f 43 f0	 cmovae	 esi, eax
  00069	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  0006f	0f 87 8d 00 00
	00		 ja	 $LN75@Emplace_re

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00075	8d 04 b5 00 00
	00 00		 lea	 eax, DWORD PTR [esi*4]

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007c	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00081	72 0d		 jb	 SHORT $LN24@Emplace_re

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00089	83 c4 04	 add	 esp, 4
  0008c	8b f8		 mov	 edi, eax
  0008e	eb 13		 jmp	 SHORT $LN23@Emplace_re
$LN24@Emplace_re:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00090	85 c0		 test	 eax, eax
  00092	74 0d		 je	 SHORT $LN25@Emplace_re

; 85   :         return ::operator new(_Bytes);

  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0009a	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  0009d	8b f8		 mov	 edi, eax
  0009f	eb 02		 jmp	 SHORT $LN23@Emplace_re
$LN25@Emplace_re:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  000a1	33 ff		 xor	 edi, edi
$LN23@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 789  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a3	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  000a6	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]
  000a9	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  000ac	89 4d fc	 mov	 DWORD PTR tv505[ebp], ecx
  000af	8b 00		 mov	 eax, DWORD PTR [eax]
  000b1	89 01		 mov	 DWORD PTR [ecx], eax

; 790  :         _Constructed_first = _Newvec + _Whereoff;
; 791  : 
; 792  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000b3	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000b6	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000b9	8b 13		 mov	 edx, DWORD PTR [ebx]
  000bb	3b c1		 cmp	 eax, ecx
  000bd	75 04		 jne	 SHORT $LN4@Emplace_re
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000bf	8b c7		 mov	 eax, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 794  :         } else { // provide basic guarantee

  000c1	eb 17		 jmp	 SHORT $LN60@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000c3	57		 push	 edi
  000c4	50		 push	 eax
  000c5	52		 push	 edx
  000c6	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCRaceMotionData@@PAPAV1@@std@@YAPAPAVCRaceMotionData@@PAPAV1@00@Z ; std::_Copy_memmove<CRaceMotionData * *,CRaceMotionData * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000cb	8b 45 fc	 mov	 eax, DWORD PTR tv505[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000ce	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d1	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d4	83 c0 04	 add	 eax, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  000d7	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
$LN60@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 797  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000da	50		 push	 eax
  000db	51		 push	 ecx
  000dc	52		 push	 edx
  000dd	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCRaceMotionData@@PAPAV1@@std@@YAPAPAVCRaceMotionData@@PAPAV1@00@Z ; std::_Copy_memmove<CRaceMotionData * *,CRaceMotionData * *>
  000e2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 798  :         }
; 799  :         _CATCH_ALL
; 800  :         _Destroy(_Constructed_first, _Constructed_last);
; 801  :         _Al.deallocate(_Newvec, _Newcapacity);
; 802  :         _RERAISE;
; 803  :         _CATCH_END
; 804  : 
; 805  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  000e5	8b cb		 mov	 ecx, ebx
  000e7	56		 push	 esi
  000e8	ff 75 f8	 push	 DWORD PTR __Newsize$1$[ebp]
  000eb	57		 push	 edi
  000ec	e8 00 00 00 00	 call	 ?_Change_array@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@AAEXQAPAVCRaceMotionData@@II@Z ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Change_array

; 806  :         return _Newvec + _Whereoff;

  000f1	8b 45 fc	 mov	 eax, DWORD PTR tv505[ebp]
  000f4	5f		 pop	 edi
  000f5	5e		 pop	 esi
  000f6	5b		 pop	 ebx

; 807  :     }

  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c2 08 00	 ret	 8
$LN74@Emplace_re:

; 778  :             _Xlength();

  000fd	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@CAXXZ ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Xlength
$LN75@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  00102	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN72@Emplace_re:
  00107	cc		 int	 3
??$_Emplace_reallocate@ABQAVCRaceMotionData@@@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@QAEPAPAVCRaceMotionData@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Emplace_reallocate<CRaceMotionData * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c0		 test	 eax, eax
  00034	74 41		 je	 SHORT $LN27@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00039	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00044	72 12		 jb	 SHORT $LN43@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00046	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00049	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0004c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0004e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00051	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00054	77 6d		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00056	8b c2		 mov	 eax, edx
$LN43@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00058	51		 push	 ecx
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005f	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00066	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00069	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1769 :             _Myend   = nullptr;

  00070	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00077	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007a	85 c0		 test	 eax, eax
  0007c	74 41		 je	 SHORT $LN52@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0007e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00081	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00086	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0008c	72 12		 jb	 SHORT $LN68@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008e	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00091	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00094	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00096	83 c0 fc	 add	 eax, -4			; fffffffcH
  00099	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009c	77 25		 ja	 SHORT $LN65@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0009e	8b c2		 mov	 eax, edx
$LN68@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a0	51		 push	 ecx
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000a7	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000b1	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1769 :             _Myend   = nullptr;

  000b8	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN52@CDynamicPo:
  000bf	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 142  : 		}

  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	c3		 ret	 0
$LN65@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN77@CDynamicPo:
  000c8	cc		 int	 3
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??1?$vector@USSoundData@NSound@@V?$allocator@USSoundData@NSound@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__Last$1$ = -4						; size = 4
??1?$vector@USSoundData@NSound@@V?$allocator@USSoundData@NSound@@@std@@@std@@QAE@XZ PROC ; std::vector<NSound::SSoundData,std::allocator<NSound::SSoundData> >::~vector<NSound::SSoundData,std::allocator<NSound::SSoundData> >, COMDAT
; _this$ = ecx

; 711  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	8b d9		 mov	 ebx, ecx
  00007	57		 push	 edi

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00008	8b 3b		 mov	 edi, DWORD PTR [ebx]
  0000a	85 ff		 test	 edi, edi
  0000c	0f 84 be 00 00
	00		 je	 $LN4@vector

; 1764 :             _Destroy(_Myfirst, _Mylast);

  00012	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00015	89 45 fc	 mov	 DWORD PTR __Last$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00018	3b f8		 cmp	 edi, eax
  0001a	74 58		 je	 SHORT $LN10@vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1764 :             _Destroy(_Myfirst, _Mylast);

  0001c	56		 push	 esi
  0001d	8d 77 18	 lea	 esi, DWORD PTR [edi+24]
$LL11@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00020	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00022	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00025	72 2f		 jb	 SHORT $LN33@vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00027	8b 46 ec	 mov	 eax, DWORD PTR [esi-20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0002a	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0002b	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00031	72 16		 jb	 SHORT $LN43@vector

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00033	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00036	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00039	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0003b	83 c0 fc	 add	 eax, -4			; fffffffcH
  0003e	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00041	0f 87 8f 00 00
	00		 ja	 $LN65@vector

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00047	8b c2		 mov	 eax, edx
$LN43@vector:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00049	51		 push	 ecx
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00050	8b 45 fc	 mov	 eax, DWORD PTR __Last$1$[ebp]
  00053	83 c4 08	 add	 esp, 8
$LN33@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00056	c7 46 fc 00 00
	00 00		 mov	 DWORD PTR [esi-4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  0005d	83 c7 1c	 add	 edi, 28			; 0000001cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00060	c7 06 0f 00 00
	00		 mov	 DWORD PTR [esi], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00066	c6 46 ec 00	 mov	 BYTE PTR [esi-20], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  0006a	83 c6 1c	 add	 esi, 28			; 0000001cH
  0006d	3b f8		 cmp	 edi, eax
  0006f	75 af		 jne	 SHORT $LL11@vector

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00071	8b 3b		 mov	 edi, DWORD PTR [ebx]
  00073	5e		 pop	 esi
$LN10@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00074	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00077	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  0007c	2b cf		 sub	 ecx, edi
  0007e	f7 e9		 imul	 ecx
  00080	03 d1		 add	 edx, ecx
  00082	c1 fa 04	 sar	 edx, 4
  00085	8b c2		 mov	 eax, edx
  00087	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0008a	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0008c	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  00093	2b c8		 sub	 ecx, eax
  00095	c1 e1 02	 shl	 ecx, 2

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00098	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0009e	72 12		 jb	 SHORT $LN68@vector

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000a0	8b 57 fc	 mov	 edx, DWORD PTR [edi-4]
  000a3	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000a6	2b fa		 sub	 edi, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a8	8d 47 fc	 lea	 eax, DWORD PTR [edi-4]
  000ab	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000ae	77 26		 ja	 SHORT $LN65@vector

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000b0	8b fa		 mov	 edi, edx
$LN68@vector:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000b2	51		 push	 ecx
  000b3	57		 push	 edi
  000b4	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  000b9	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  000bf	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  000c2	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0

; 1769 :             _Myend   = nullptr;

  000c9	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
$LN4@vector:
  000d0	5f		 pop	 edi

; 717  :     }

  000d1	5b		 pop	 ebx
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c3		 ret	 0
$LN65@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000d6	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN76@vector:
  000db	cc		 int	 3
??1?$vector@USSoundData@NSound@@V?$allocator@USSoundData@NSound@@@std@@@std@@QAE@XZ ENDP ; std::vector<NSound::SSoundData,std::allocator<NSound::SSoundData> >::~vector<NSound::SSoundData,std::allocator<NSound::SSoundData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterBase\Stl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterBase\Stl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterBase\Stl.h
;	COMDAT ??$stl_wipe@V?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@@YAXAAV?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@Z
_TEXT	SEGMENT
_container$ = 8						; size = 4
??$stl_wipe@V?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@@YAXAAV?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@Z PROC ; stl_wipe<std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> > >, COMDAT

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 42   :     _CONSTEXPR20_CONTAINER _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00005	8b 7d 08	 mov	 edi, DWORD PTR _container$[ebp]
  00008	8b 37		 mov	 esi, DWORD PTR [edi]
  0000a	3b 77 04	 cmp	 esi, DWORD PTR [edi+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterBase\Stl.h

; 95   : 	for (TContainer::iterator i = container.begin(); i != container.end(); ++i)

  0000d	74 24		 je	 SHORT $LN32@stl_wipe
  0000f	90		 npad	 1
$LL17@stl_wipe:

; 96   : 	{
; 97   : 		delete *i;

  00010	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00012	85 c9		 test	 ecx, ecx
  00014	74 06		 je	 SHORT $LN6@stl_wipe
  00016	8b 01		 mov	 eax, DWORD PTR [ecx]
  00018	6a 01		 push	 1
  0001a	ff 10		 call	 DWORD PTR [eax]
$LN6@stl_wipe:

; 98   : 		*i = NULL;

  0001c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 78   :         ++_Ptr;

  00022	83 c6 04	 add	 esi, 4

; 154  :         return _Ptr == _Right._Ptr;

  00025	3b 77 04	 cmp	 esi, DWORD PTR [edi+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterBase\Stl.h

; 95   : 	for (TContainer::iterator i = container.begin(); i != container.end(); ++i)

  00028	75 e6		 jne	 SHORT $LL17@stl_wipe

; 99   : 	}
; 100  : 
; 101  : 	container.clear();

  0002a	8b 07		 mov	 eax, DWORD PTR [edi]
  0002c	89 47 04	 mov	 DWORD PTR [edi+4], eax
  0002f	5f		 pop	 edi

; 102  : }

  00030	5e		 pop	 esi
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
$LN32@stl_wipe:

; 99   : 	}
; 100  : 
; 101  : 	container.clear();

  00033	89 77 04	 mov	 DWORD PTR [edi+4], esi
  00036	5f		 pop	 edi

; 102  : }

  00037	5e		 pop	 esi
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
??$stl_wipe@V?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@@YAXAAV?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@Z ENDP ; stl_wipe<std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CRaceMotionData::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A ; CRaceMotionData::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@VCRaceMotionData@@@@UAE@XZ ; CDynamicPool<CRaceMotionData>::~CDynamicPool<CRaceMotionData>
??__F?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CRaceMotionData::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ??__E?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CRaceMotionData::ms_kPool'', COMDAT

; 7    : CDynamicPool<CRaceMotionData> CRaceMotionData::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CRaceMotionData::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CRaceMotionData::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@VCRaceMotionData@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@VCRaceMotionData@@@@UAEPAXI@Z PROC	; CDynamicPool<CRaceMotionData>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@VCRaceMotionData@@@@UAE@XZ ; CDynamicPool<CRaceMotionData>::~CDynamicPool<CRaceMotionData>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@VCRaceMotionData@@@@UAEPAXI@Z ENDP	; CDynamicPool<CRaceMotionData>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@CAXXZ PROC ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@CAXXZ ENDP ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Change_array@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@AAEXQAPAVCRaceMotionData@@II@Z
_TEXT	SEGMENT
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@AAEXQAPAVCRaceMotionData@@II@Z PROC ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Change_array, COMDAT
; _this$ = ecx

; 1736 :         const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1737 :         // orphan all iterators, discard old array, acquire new array
; 1738 :         auto& _My_data    = _Mypair._Myval2;
; 1739 :         pointer& _Myfirst = _My_data._Myfirst;
; 1740 :         pointer& _Mylast  = _My_data._Mylast;
; 1741 :         pointer& _Myend   = _My_data._Myend;
; 1742 : 
; 1743 :         _My_data._Orphan_all();
; 1744 : 
; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  00006	8b 06		 mov	 eax, DWORD PTR [esi]
  00008	85 c0		 test	 eax, eax
  0000a	74 2c		 je	 SHORT $LN8@Change_arr

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000c	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000f	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00014	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001a	72 12		 jb	 SHORT $LN18@Change_arr

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001c	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0001f	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00022	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00024	83 c0 fc	 add	 eax, -4			; fffffffcH
  00027	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002a	77 28		 ja	 SHORT $LN15@Change_arr

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002c	8b c2		 mov	 eax, edx
$LN18@Change_arr:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0002e	51		 push	 ecx
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00035	83 c4 08	 add	 esp, 8
$LN8@Change_arr:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1750 :         _Myfirst = _Newvec;

  00038	8b 4d 08	 mov	 ecx, DWORD PTR __Newvec$[ebp]

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0003b	8b 45 0c	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0003e	89 0e		 mov	 DWORD PTR [esi], ecx
  00040	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  00043	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00046	8b 45 10	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  00049	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  0004c	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0004f	5e		 pop	 esi

; 1753 :     }

  00050	5d		 pop	 ebp
  00051	c2 0c 00	 ret	 12			; 0000000cH
$LN15@Change_arr:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00054	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN22@Change_arr:
  00059	cc		 int	 3
?_Change_array@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@AAEXQAPAVCRaceMotionData@@II@Z ENDP ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Reallocate_exactly@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
__Size$1$ = -4						; size = 4
__Newcapacity$ = 8					; size = 4
?_Reallocate_exactly@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@AAEXI@Z PROC ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Reallocate_exactly, COMDAT
; _this$ = ecx

; 1299 :     _CONSTEXPR20_CONTAINER void _Reallocate_exactly(const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  00005	8b 5d 08	 mov	 ebx, DWORD PTR __Newcapacity$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1299 :     _CONSTEXPR20_CONTAINER void _Reallocate_exactly(const size_type _Newcapacity) {

  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	57		 push	 edi

; 1300 :         // set capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1301 :         auto& _My_data    = _Mypair._Myval2;
; 1302 :         pointer& _Myfirst = _My_data._Myfirst;
; 1303 :         pointer& _Mylast  = _My_data._Mylast;
; 1304 : 
; 1305 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

  0000c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000f	2b 06		 sub	 eax, DWORD PTR [esi]
  00011	c1 f8 02	 sar	 eax, 2
  00014	89 45 fc	 mov	 DWORD PTR __Size$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 64   :         if (_Count > _Max_possible) {

  00017	81 fb ff ff ff
	3f		 cmp	 ebx, 1073741823		; 3fffffffH
  0001d	0f 87 8a 00 00
	00		 ja	 $LN59@Reallocate

; 66   :         }
; 67   :     }
; 68   : 
; 69   :     return _Count * _Ty_size;

  00023	c1 e3 02	 shl	 ebx, 2

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	81 fb 00 10 00
	00		 cmp	 ebx, 4096		; 00001000H
  0002c	72 0d		 jb	 SHORT $LN15@Reallocate

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0002e	53		 push	 ebx
  0002f	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00034	83 c4 04	 add	 esp, 4
  00037	8b f8		 mov	 edi, eax
  00039	eb 13		 jmp	 SHORT $LN14@Reallocate
$LN15@Reallocate:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  0003b	85 db		 test	 ebx, ebx
  0003d	74 0d		 je	 SHORT $LN16@Reallocate

; 85   :         return ::operator new(_Bytes);

  0003f	53		 push	 ebx
  00040	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00045	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  00048	8b f8		 mov	 edi, eax
  0004a	eb 02		 jmp	 SHORT $LN14@Reallocate
$LN16@Reallocate:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  0004c	33 ff		 xor	 edi, edi
$LN14@Reallocate:

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0004e	57		 push	 edi
  0004f	ff 76 04	 push	 DWORD PTR [esi+4]
  00052	ff 36		 push	 DWORD PTR [esi]
  00054	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCRaceMotionData@@PAPAV1@@std@@YAPAPAVCRaceMotionData@@PAPAV1@00@Z ; std::_Copy_memmove<CRaceMotionData * *,CRaceMotionData * *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  00059	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1725 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1745 :         if (_Myfirst) { // destroy and deallocate old array

  0005e	85 c0		 test	 eax, eax
  00060	74 2c		 je	 SHORT $LN43@Reallocate

; 1746 :             _Destroy(_Myfirst, _Mylast);
; 1747 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00062	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00065	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00067	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0006a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00070	72 12		 jb	 SHORT $LN53@Reallocate

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00072	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00075	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00078	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0007a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0007d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00080	77 26		 ja	 SHORT $LN50@Reallocate

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00082	8b c2		 mov	 eax, edx
$LN53@Reallocate:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00084	51		 push	 ecx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0008b	83 c4 08	 add	 esp, 8
$LN43@Reallocate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1751 :         _Mylast  = _Newvec + _Newsize;

  0008e	8b 45 fc	 mov	 eax, DWORD PTR __Size$1$[ebp]
  00091	89 3e		 mov	 DWORD PTR [esi], edi
  00093	8d 04 87	 lea	 eax, DWORD PTR [edi+eax*4]
  00096	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1752 :         _Myend   = _Newvec + _Newcapacity;

  00099	8d 04 3b	 lea	 eax, DWORD PTR [ebx+edi]
  0009c	5f		 pop	 edi
  0009d	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx

; 1317 :     }

  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c2 04 00	 ret	 4
$LN50@Reallocate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a8	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN59@Reallocate:

; 65   :             _Throw_bad_array_new_length(); // multiply overflow

  000ad	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN57@Reallocate:
  000b2	cc		 int	 3
?_Reallocate_exactly@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@AAEXI@Z ENDP ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Reallocate_exactly
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@VCRaceMotionData@@@@KAXPAVCRaceMotionData@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@VCRaceMotionData@@@@KAXPAVCRaceMotionData@@@Z PROC ; CDynamicPool<CRaceMotionData>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@VCRaceMotionData@@@@KAXPAVCRaceMotionData@@@Z ENDP ; CDynamicPool<CRaceMotionData>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@VCRaceMotionData@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@VCRaceMotionData@@@@UAE@XZ PROC	; CDynamicPool<CRaceMotionData>::~CDynamicPool<CRaceMotionData>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@VCRaceMotionData@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0000c	85 c0		 test	 eax, eax
  0000e	74 41		 je	 SHORT $LN6@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00013	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00018	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001e	72 12		 jb	 SHORT $LN22@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00020	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00023	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00026	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00028	83 c0 fc	 add	 eax, -4			; fffffffcH
  0002b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002e	77 6b		 ja	 SHORT $LN44@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00030	8b c2		 mov	 eax, edx
$LN22@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00032	51		 push	 ecx
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  00039	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00040	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00043	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1769 :             _Myend   = nullptr;

  0004a	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00051	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00054	85 c0		 test	 eax, eax
  00056	74 41		 je	 SHORT $LN31@CDynamicPo

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00058	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0005b	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0005d	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00060	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00066	72 12		 jb	 SHORT $LN47@CDynamicPo

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00068	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  0006b	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0006e	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00070	83 c0 fc	 add	 eax, -4			; fffffffcH
  00073	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00076	77 23		 ja	 SHORT $LN44@CDynamicPo

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00078	8b c2		 mov	 eax, edx
$LN47@CDynamicPo:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0007a	51		 push	 ecx
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  00081	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00088	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  0008b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1769 :             _Myend   = nullptr;

  00092	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN31@CDynamicPo:
  00099	5e		 pop	 esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 26   : 		}

  0009a	c3		 ret	 0
$LN44@CDynamicPo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0009b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN52@CDynamicPo:
  000a0	cc		 int	 3
??1?$CDynamicPool@VCRaceMotionData@@@@UAE@XZ ENDP	; CDynamicPool<CRaceMotionData>::~CDynamicPool<CRaceMotionData>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCRaceMotionData@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCRaceMotionData@@UAEPAXI@Z PROC			; CRaceMotionData::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CRaceMotionData@@UAE@XZ ; CRaceMotionData::~CRaceMotionData
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 c0 00 00 00	 push	 192			; 000000c0H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCRaceMotionData@@UAEPAXI@Z ENDP			; CRaceMotionData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xlength@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@CAXXZ PROC ; std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> >::_Xlength, COMDAT

; 1774 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@CAXXZ ENDP ; std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Ufill@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@AAEPAPAUSMotionEventData@NMotionEvent@@PAPAU34@IABQAU34@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Ufill@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@AAEPAPAUSMotionEventData@NMotionEvent@@PAPAU34@IABQAU34@@Z PROC ; std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> >::_Ufill, COMDAT
; _this$ = ecx

; 1641 :     _CONSTEXPR20_CONTAINER pointer _Ufill(pointer _Dest, const size_type _Count, const _Ty& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1757 :             if (_Is_all_bits_zero(_Val)) {

  00004	8b 75 10	 mov	 esi, DWORD PTR __Val$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1641 :     _CONSTEXPR20_CONTAINER pointer _Ufill(pointer _Dest, const size_type _Count, const _Ty& _Val) {

  00007	57		 push	 edi

; 1642 :         // fill raw _Dest with _Count copies of _Val, using allocator
; 1643 :         return _Uninitialized_fill_n(_Dest, _Count, _Val, _Getal());

  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1757 :             if (_Is_all_bits_zero(_Val)) {

  0000b	56		 push	 esi
  0000c	e8 00 00 00 00	 call	 ??$_Is_all_bits_zero@PAUSMotionEventData@NMotionEvent@@@std@@YA_NABQAUSMotionEventData@NMotionEvent@@@Z ; std::_Is_all_bits_zero<NMotionEvent::SMotionEventData *>
  00011	83 c4 04	 add	 esp, 4
  00014	84 c0		 test	 al, al
  00016	74 16		 je	 SHORT $LN7@Ufill

; 1758 :                 _Fill_zero_memset(_Unfancy(_First), static_cast<size_t>(_Count));

  00018	8b 75 08	 mov	 esi, DWORD PTR __Dest$[ebp]
  0001b	57		 push	 edi
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??$_Fill_zero_memset@PAPAUSMotionEventData@NMotionEvent@@@std@@YAXPAPAUSMotionEventData@NMotionEvent@@I@Z ; std::_Fill_zero_memset<NMotionEvent::SMotionEventData * *>
  00022	83 c4 08	 add	 esp, 8

; 1759 :                 return _First + _Count;

  00025	8d 04 be	 lea	 eax, DWORD PTR [esi+edi*4]
  00028	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1644 :     }

  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 0c 00	 ret	 12			; 0000000cH
$LN7@Ufill:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 1620 :         : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  0002e	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]

; 1765 :     for (; 0 < _Count; --_Count) {

  00031	85 ff		 test	 edi, edi
  00033	74 0c		 je	 SHORT $LN3@Ufill
$LL6@Ufill:

; 1631 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00035	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00037	89 08		 mov	 DWORD PTR [eax], ecx

; 1632 :         ++_Last;

  00039	83 c0 04	 add	 eax, 4

; 1765 :     for (; 0 < _Count; --_Count) {

  0003c	83 ef 01	 sub	 edi, 1
  0003f	75 f4		 jne	 SHORT $LL6@Ufill
$LN3@Ufill:
  00041	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1644 :     }

  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp
  00044	c2 0c 00	 ret	 12			; 0000000cH
?_Ufill@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@AAEPAPAUSMotionEventData@NMotionEvent@@PAPAU34@IABQAU34@@Z ENDP ; std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> >::_Ufill
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?SetType@CRaceMotionData@@IAEXI@Z
_TEXT	SEGMENT
_eType$ = 8						; size = 4
?SetType@CRaceMotionData@@IAEXI@Z PROC			; CRaceMotionData::SetType, COMDAT
; _this$ = ecx

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 155  : 	m_eType=eType;

  00003	8b 45 08	 mov	 eax, DWORD PTR _eType$[ebp]
  00006	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 156  : 
; 157  : 	switch (m_eType)

  00009	83 e8 03	 sub	 eax, 3
  0000c	74 15		 je	 SHORT $LN4@SetType
  0000e	83 e8 01	 sub	 eax, 1
  00011	74 10		 je	 SHORT $LN4@SetType
  00013	83 e8 04	 sub	 eax, 4
  00016	74 0b		 je	 SHORT $LN4@SetType

; 158  : 	{
; 159  : 		case TYPE_ATTACK:
; 160  : 		case TYPE_COMBO:
; 161  : 		case TYPE_SKILL:
; 162  : 			m_isLock=TRUE;
; 163  : 			break;
; 164  : 		default:
; 165  : 			m_isLock=FALSE;
; 166  : 			break;
; 167  : 	}
; 168  : }

  00018	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
$LN4@SetType:
  00023	c7 41 0c 01 00
	00 00		 mov	 DWORD PTR [ecx+12], 1
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?SetType@CRaceMotionData@@IAEXI@Z ENDP			; CRaceMotionData::SetType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z
_TEXT	SEGMENT
_SoundDataVector$ = -24					; size = 12
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z PROC	; CRaceMotionData::LoadSoundScriptData, COMDAT
; _this$ = ecx

; 576  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0002a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _SoundDataVector$[ebp], 0
  00031	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _SoundDataVector$[ebp+4], 0
  00038	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _SoundDataVector$[ebp+8], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 578  : 	if (!NSound::LoadSoundInformationPiece(c_szFileName, SoundDataVector))

  0003f	6a 00		 push	 0
  00041	8d 45 e8	 lea	 eax, DWORD PTR _SoundDataVector$[ebp]
  00044	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004b	50		 push	 eax
  0004c	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  0004f	e8 00 00 00 00	 call	 ?LoadSoundInformationPiece@NSound@@YA_NPBDAAV?$vector@USSoundData@NSound@@V?$allocator@USSoundData@NSound@@@std@@@std@@0@Z ; NSound::LoadSoundInformationPiece
  00054	83 c4 0c	 add	 esp, 12			; 0000000cH
  00057	84 c0		 test	 al, al
  00059	75 04		 jne	 SHORT $LN2@LoadSoundS
  0005b	32 db		 xor	 bl, bl
  0005d	eb 15		 jmp	 SHORT $LN5@LoadSoundS
$LN2@LoadSoundS:

; 579  : 	{
; 580  : 		return false;
; 581  : 	}
; 582  : 
; 583  : 	NSound::DataToInstance(SoundDataVector, &m_SoundInstanceVector);

  0005f	8d 86 b0 00 00
	00		 lea	 eax, DWORD PTR [esi+176]
  00065	50		 push	 eax
  00066	8d 45 e8	 lea	 eax, DWORD PTR _SoundDataVector$[ebp]
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ?DataToInstance@NSound@@YAXABV?$vector@USSoundData@NSound@@V?$allocator@USSoundData@NSound@@@std@@@std@@PAV?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@3@@Z ; NSound::DataToInstance
  0006f	83 c4 08	 add	 esp, 8

; 584  : 	return true;

  00072	b3 01		 mov	 bl, 1
$LN5@LoadSoundS:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00074	8b 75 e8	 mov	 esi, DWORD PTR _SoundDataVector$[ebp]
  00077	85 f6		 test	 esi, esi
  00079	0f 84 aa 00 00
	00		 je	 $LN87@LoadSoundS

; 1764 :             _Destroy(_Myfirst, _Mylast);

  0007f	8b 7d ec	 mov	 edi, DWORD PTR _SoundDataVector$[ebp+4]
  00082	3b f7		 cmp	 esi, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00084	74 5b		 je	 SHORT $LN93@LoadSoundS
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1680 :         _Destroy_range(_First, _Last, _Getal());

  00086	83 c6 18	 add	 esi, 24			; 00000018H
  00089	0f 1f 80 00 00
	00 00		 npad	 7
$LL94@LoadSoundS:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00090	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00092	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00095	72 2c		 jb	 SHORT $LN116@LoadSoundS
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00097	8b 46 ec	 mov	 eax, DWORD PTR [esi-20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0009a	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0009b	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000a1	72 16		 jb	 SHORT $LN126@LoadSoundS

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000a3	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000a6	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000a9	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000ab	83 c0 fc	 add	 eax, -4			; fffffffcH
  000ae	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000b1	0f 87 88 00 00
	00		 ja	 $LN148@LoadSoundS

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000b7	8b c2		 mov	 eax, edx
$LN126@LoadSoundS:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000b9	51		 push	 ecx
  000ba	50		 push	 eax
  000bb	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000c0	83 c4 08	 add	 esp, 8
$LN116@LoadSoundS:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  000c3	c7 46 fc 00 00
	00 00		 mov	 DWORD PTR [esi-4], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000ca	c7 06 0f 00 00
	00		 mov	 DWORD PTR [esi], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000d0	c6 46 ec 00	 mov	 BYTE PTR [esi-20], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  000d4	83 c6 1c	 add	 esi, 28			; 0000001cH
  000d7	8d 46 e8	 lea	 eax, DWORD PTR [esi-24]
  000da	3b c7		 cmp	 eax, edi
  000dc	75 b2		 jne	 SHORT $LL94@LoadSoundS
  000de	8b 75 e8	 mov	 esi, DWORD PTR _SoundDataVector$[ebp]
$LN93@LoadSoundS:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000e1	8b 4d f0	 mov	 ecx, DWORD PTR _SoundDataVector$[ebp+8]
  000e4	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  000e9	2b ce		 sub	 ecx, esi
  000eb	f7 e9		 imul	 ecx
  000ed	03 d1		 add	 edx, ecx
  000ef	c1 fa 04	 sar	 edx, 4
  000f2	8b c2		 mov	 eax, edx
  000f4	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000f7	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000f9	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  00100	2b c8		 sub	 ecx, eax
  00102	8b c6		 mov	 eax, esi
  00104	c1 e1 02	 shl	 ecx, 2

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00107	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0010d	72 10		 jb	 SHORT $LN151@LoadSoundS

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0010f	8b 76 fc	 mov	 esi, DWORD PTR [esi-4]
  00112	83 c1 23	 add	 ecx, 35			; 00000023H
  00115	2b c6		 sub	 eax, esi

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00117	83 c0 fc	 add	 eax, -4			; fffffffcH
  0011a	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0011d	77 20		 ja	 SHORT $LN148@LoadSoundS
$LN151@LoadSoundS:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0011f	51		 push	 ecx
  00120	56		 push	 esi
  00121	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00126	83 c4 08	 add	 esp, 8
$LN87@LoadSoundS:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 584  : 	return true;

  00129	8a c3		 mov	 al, bl

; 585  : }

  0012b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0012e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00135	59		 pop	 ecx
  00136	5f		 pop	 edi
  00137	5e		 pop	 esi
  00138	5b		 pop	 ebx
  00139	8b e5		 mov	 esp, ebp
  0013b	5d		 pop	 ebp
  0013c	c2 04 00	 ret	 4
$LN148@LoadSoundS:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0013f	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN160@LoadSoundS:
  00144	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR _SoundDataVector$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@USSoundData@NSound@@V?$allocator@USSoundData@NSound@@@std@@@std@@QAE@XZ ; std::vector<NSound::SSoundData,std::allocator<NSound::SSoundData> >::~vector<NSound::SSoundData,std::allocator<NSound::SSoundData> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z ENDP	; CRaceMotionData::LoadSoundScriptData
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\TextFileLoader.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\TextFileLoader.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\TextFileLoader.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\TextFileLoader.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterBase\filename.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterBase\filename.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z
_TEXT	SEGMENT
_GotoChild$2 = -148					; size = 4
$T3 = -144						; size = 16
_pos$4 = -140						; size = 12
_c_fFrameTime$1$ = -128					; size = 4
_dwMotionEventDataCount$5 = -124			; size = 4
_c_szFileName$GSCopy$1$ = -120				; size = 4
__Result$2$ = -120					; size = 4
_pTokenVector$ = -116					; size = 4
_i$1$ = -112						; size = 4
_fx$ = -112						; size = 4
_fy$ = -108						; size = 4
_iType$6 = -108						; size = 4
$T7 = -104						; size = 4
$T8 = -104						; size = 4
$T9 = -104						; size = 4
$T10 = -104						; size = 4
$T11 = -104						; size = 4
$T12 = -104						; size = 4
$T13 = -104						; size = 4
$T14 = -104						; size = 4
$T15 = -104						; size = 4
$T16 = -104						; size = 4
$T17 = -104						; size = 4
_this$GSCopy$1$ = -100					; size = 4
__Result$1$ = -96					; size = 4
_j$1$ = -96						; size = 4
_fz$ = -96						; size = 4
$T18 = -96						; size = 4
$T19 = -89						; size = 1
$T20 = -89						; size = 1
$T21 = -89						; size = 1
$T22 = -89						; size = 1
$T23 = -89						; size = 1
$T24 = -89						; size = 1
$T25 = -89						; size = 1
$T26 = -89						; size = 1
$T27 = -89						; size = 1
$T28 = -89						; size = 1
$T29 = -89						; size = 1
$T30 = -89						; size = 1
$T31 = -89						; size = 1
_strSoundFileNameTemp$ = -88				; size = 24
_strNodeName$ = -64					; size = 24
$T32 = -40						; size = 24
$T33 = -40						; size = 24
$T34 = -40						; size = 24
$T35 = -40						; size = 24
$T36 = -40						; size = 24
$T37 = -40						; size = 24
$T38 = -40						; size = 24
$T39 = -40						; size = 24
$T40 = -40						; size = 24
$T41 = -40						; size = 24
$T42 = -40						; size = 24
$T43 = -40						; size = 24
$T44 = -40						; size = 24
$T45 = -40						; size = 24
$T46 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z PROC	; CRaceMotionData::LoadMotionData, COMDAT
; _this$ = ecx

; 323  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	50		 push	 eax
  00024	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00027	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002d	8b f1		 mov	 esi, ecx
  0002f	89 75 9c	 mov	 DWORD PTR _this$GSCopy$1$[ebp], esi

; 324  : 	const float c_fFrameTime = 1.0f / g_fGameFPS;

  00032	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0003a	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR ?g_fGameFPS@@3MA
  00042	8b 45 08	 mov	 eax, DWORD PTR _c_szFileName$[ebp]

; 325  : 
; 326  : 	CTextFileLoader* pkTextFileLoader=CTextFileLoader::Cache(c_szFileName);

  00045	50		 push	 eax
  00046	89 45 88	 mov	 DWORD PTR _c_szFileName$GSCopy$1$[ebp], eax
  00049	f3 0f 11 45 80	 movss	 DWORD PTR _c_fFrameTime$1$[ebp], xmm0
  0004e	e8 00 00 00 00	 call	 ?Cache@CTextFileLoader@@SAPAV1@PBD@Z ; CTextFileLoader::Cache
  00053	8b f8		 mov	 edi, eax
  00055	83 c4 04	 add	 esp, 4

; 327  : 	if (!pkTextFileLoader)

  00058	85 ff		 test	 edi, edi
  0005a	0f 84 ee 01 00
	00		 je	 $LN1741@LoadMotion

; 328  : 		return false;
; 329  : 
; 330  : 	CTextFileLoader& rkTextFileLoader=*pkTextFileLoader;
; 331  : 
; 332  : 	if (rkTextFileLoader.IsEmpty())

  00060	8b cf		 mov	 ecx, edi
  00062	e8 00 00 00 00	 call	 ?IsEmpty@CTextFileLoader@@QAE_NXZ ; CTextFileLoader::IsEmpty
  00067	84 c0		 test	 al, al
  00069	0f 85 df 01 00
	00		 jne	 $LN1741@LoadMotion

; 333  : 		return false;
; 334  : 
; 335  : 	rkTextFileLoader.SetTop();

  0006f	8b cf		 mov	 ecx, edi
  00071	e8 00 00 00 00	 call	 ?SetTop@CTextFileLoader@@QAEXXZ ; CTextFileLoader::SetTop
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00076	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0P@IGAOIDID@motionfilename@+8
  0007b	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0P@IGAOIDID@motionfilename@
  00083	89 45 e0	 mov	 DWORD PTR $T46[ebp+8], eax
  00086	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0P@IGAOIDID@motionfilename@+12

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0008c	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T46[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  00093	c7 45 e8 0e 00
	00 00		 mov	 DWORD PTR $T46[ebp+16], 14 ; 0000000eH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0009a	66 0f d6 45 d8	 movq	 QWORD PTR $T46[ebp], xmm0
  0009f	66 89 45 e4	 mov	 WORD PTR $T46[ebp+12], ax

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  000a3	c6 45 e6 00	 mov	 BYTE PTR $T46[ebp+14], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 337  : 	if (!rkTextFileLoader.GetTokenString("motionfilename", &m_strMotionFileName))

  000a7	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  000aa	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000b1	50		 push	 eax
  000b2	8d 45 d8	 lea	 eax, DWORD PTR $T46[ebp]
  000b5	8b cf		 mov	 ecx, edi
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000bd	8b 55 ec	 mov	 edx, DWORD PTR $T46[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 337  : 	if (!rkTextFileLoader.GetTokenString("motionfilename", &m_strMotionFileName))

  000c0	85 c0		 test	 eax, eax
  000c2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c9	0f 94 c0	 sete	 al
  000cc	88 45 a7	 mov	 BYTE PTR $T31[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000cf	83 fa 10	 cmp	 edx, 16			; 00000010H
  000d2	72 2f		 jb	 SHORT $LN195@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000d4	8b 4d d8	 mov	 ecx, DWORD PTR $T46[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000d7	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000d8	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000da	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  000e0	72 14		 jb	 SHORT $LN205@LoadMotion

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000e2	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  000e5	83 c2 23	 add	 edx, 35			; 00000023H
  000e8	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000ea	83 c0 fc	 add	 eax, -4			; fffffffcH
  000ed	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000f0	0f 87 cb 0f 00
	00		 ja	 $LN559@LoadMotion
$LN205@LoadMotion:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000f6	52		 push	 edx
  000f7	51		 push	 ecx
  000f8	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000fd	8a 45 a7	 mov	 al, BYTE PTR $T31[ebp]
  00100	83 c4 08	 add	 esp, 8
$LN195@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 337  : 	if (!rkTextFileLoader.GetTokenString("motionfilename", &m_strMotionFileName))

  00103	84 c0		 test	 al, al
  00105	0f 85 43 01 00
	00		 jne	 $LN1741@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0010b	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0P@CAAIIAIN@motionduration@+8
  00110	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0P@CAAIIAIN@motionduration@
  00118	89 45 e0	 mov	 DWORD PTR $T45[ebp+8], eax
  0011b	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0P@CAAIIAIN@motionduration@+12

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00121	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T45[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  00128	c7 45 e8 0e 00
	00 00		 mov	 DWORD PTR $T45[ebp+16], 14 ; 0000000eH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0012f	66 0f d6 45 d8	 movq	 QWORD PTR $T45[ebp], xmm0
  00134	66 89 45 e4	 mov	 WORD PTR $T45[ebp+12], ax

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00138	c6 45 e6 00	 mov	 BYTE PTR $T45[ebp+14], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 340  : 	if (!rkTextFileLoader.GetTokenFloat("motionduration", &m_fMotionDuration))

  0013c	8d 46 44	 lea	 eax, DWORD PTR [esi+68]
  0013f	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00146	50		 push	 eax
  00147	8d 45 d8	 lea	 eax, DWORD PTR $T45[ebp]
  0014a	8b cf		 mov	 ecx, edi
  0014c	50		 push	 eax
  0014d	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00152	8b 55 ec	 mov	 edx, DWORD PTR $T45[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 340  : 	if (!rkTextFileLoader.GetTokenFloat("motionduration", &m_fMotionDuration))

  00155	85 c0		 test	 eax, eax
  00157	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0015e	0f 94 c0	 sete	 al
  00161	88 45 a7	 mov	 BYTE PTR $T30[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00164	83 fa 10	 cmp	 edx, 16			; 00000010H
  00167	72 2f		 jb	 SHORT $LN294@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00169	8b 4d d8	 mov	 ecx, DWORD PTR $T45[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0016c	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0016d	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0016f	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00175	72 14		 jb	 SHORT $LN304@LoadMotion

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00177	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0017a	83 c2 23	 add	 edx, 35			; 00000023H
  0017d	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0017f	83 c0 fc	 add	 eax, -4			; fffffffcH
  00182	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00185	0f 87 3b 0f 00
	00		 ja	 $LN1782@LoadMotion
$LN304@LoadMotion:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0018b	52		 push	 edx
  0018c	51		 push	 ecx
  0018d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00192	8a 45 a7	 mov	 al, BYTE PTR $T30[ebp]
  00195	83 c4 08	 add	 esp, 8
$LN294@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 340  : 	if (!rkTextFileLoader.GetTokenFloat("motionduration", &m_fMotionDuration))

  00198	84 c0		 test	 al, al
  0019a	0f 85 ae 00 00
	00		 jne	 $LN1741@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  001a0	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0N@JBNPINGA@accumulation@
  001a8	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0N@JBNPINGA@accumulation@+8

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  001ad	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T44[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  001b4	c7 45 e8 0c 00
	00 00		 mov	 DWORD PTR $T44[ebp+16], 12 ; 0000000cH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  001bb	66 0f d6 45 d8	 movq	 QWORD PTR $T44[ebp], xmm0
  001c0	89 45 e0	 mov	 DWORD PTR $T44[ebp+8], eax

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  001c3	c6 45 e4 00	 mov	 BYTE PTR $T44[ebp+12], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 345  : 	if (rkTextFileLoader.GetTokenVector("accumulation", &pTokenVector))

  001c7	8d 45 8c	 lea	 eax, DWORD PTR _pTokenVector$[ebp]
  001ca	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  001d1	50		 push	 eax
  001d2	8d 45 d8	 lea	 eax, DWORD PTR $T44[ebp]
  001d5	8b cf		 mov	 ecx, edi
  001d7	50		 push	 eax
  001d8	e8 00 00 00 00	 call	 ?GetTokenVector@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; CTextFileLoader::GetTokenVector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001dd	8b 55 ec	 mov	 edx, DWORD PTR $T44[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 345  : 	if (rkTextFileLoader.GetTokenVector("accumulation", &pTokenVector))

  001e0	8b f0		 mov	 esi, eax
  001e2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001e9	83 fa 10	 cmp	 edx, 16			; 00000010H
  001ec	72 2c		 jb	 SHORT $LN393@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001ee	8b 4d d8	 mov	 ecx, DWORD PTR $T44[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001f1	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001f2	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  001f4	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  001fa	72 14		 jb	 SHORT $LN403@LoadMotion

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  001fc	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  001ff	83 c2 23	 add	 edx, 35			; 00000023H
  00202	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00204	83 c0 fc	 add	 eax, -4			; fffffffcH
  00207	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0020a	0f 87 bb 0e 00
	00		 ja	 $LN1783@LoadMotion
$LN403@LoadMotion:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00210	52		 push	 edx
  00211	51		 push	 ecx
  00212	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00217	83 c4 08	 add	 esp, 8
$LN393@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 345  : 	if (rkTextFileLoader.GetTokenVector("accumulation", &pTokenVector))

  0021a	85 f6		 test	 esi, esi
  0021c	0f 84 de 00 00
	00		 je	 $LN14@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00222	8b 75 8c	 mov	 esi, DWORD PTR _pTokenVector$[ebp]
  00225	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0022a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0022d	2b 0e		 sub	 ecx, DWORD PTR [esi]
  0022f	f7 e9		 imul	 ecx
  00231	c1 fa 02	 sar	 edx, 2
  00234	8b c2		 mov	 eax, edx
  00236	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00239	03 c2		 add	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 347  : 		if (pTokenVector->size() != 3)

  0023b	83 f8 03	 cmp	 eax, 3
  0023e	74 2d		 je	 SHORT $LN15@LoadMotion

; 348  : 		{
; 349  : 			TraceError("CRaceMotioNData::LoadMotionData : syntax error on accumulation, vector size %d", pTokenVector->size());

  00240	50		 push	 eax
  00241	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@FGBECHEA@CRaceMotioNData?3?3LoadMotionData@
  00246	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0024b	83 c4 08	 add	 esp, 8
$LN1741@LoadMotion:

; 493  : }

  0024e	32 c0		 xor	 al, al
$LN1@LoadMotion:
  00250	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00253	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0025a	59		 pop	 ecx
  0025b	5f		 pop	 edi
  0025c	5e		 pop	 esi
  0025d	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00260	33 cd		 xor	 ecx, ebp
  00262	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00267	8b e5		 mov	 esp, ebp
  00269	5d		 pop	 ebp
  0026a	c2 04 00	 ret	 4
$LN15@LoadMotion:

; 353  : 		TPixelPosition pos(atof(pTokenVector->at(0).c_str()),

  0026d	6a 02		 push	 2
  0026f	8b ce		 mov	 ecx, esi
  00271	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3922 :         return _Mypair._Myval2._Myptr();

  00276	8b f0		 mov	 esi, eax

; 2306 :         if (_Large_string_engaged()) {

  00278	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  0027c	72 02		 jb	 SHORT $LN415@LoadMotion

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  0027e	8b 36		 mov	 esi, DWORD PTR [esi]
$LN415@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 353  : 		TPixelPosition pos(atof(pTokenVector->at(0).c_str()),

  00280	8b 4d 8c	 mov	 ecx, DWORD PTR _pTokenVector$[ebp]
  00283	6a 01		 push	 1
  00285	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3922 :         return _Mypair._Myval2._Myptr();

  0028a	89 45 a0	 mov	 DWORD PTR __Result$1$[ebp], eax

; 2306 :         if (_Large_string_engaged()) {

  0028d	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00291	72 05		 jb	 SHORT $LN422@LoadMotion

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00293	8b 00		 mov	 eax, DWORD PTR [eax]
  00295	89 45 a0	 mov	 DWORD PTR __Result$1$[ebp], eax
$LN422@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 353  : 		TPixelPosition pos(atof(pTokenVector->at(0).c_str()),

  00298	8b 4d 8c	 mov	 ecx, DWORD PTR _pTokenVector$[ebp]
  0029b	6a 00		 push	 0
  0029d	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  002a2	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  002a6	72 02		 jb	 SHORT $LN429@LoadMotion

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  002a8	8b 00		 mov	 eax, DWORD PTR [eax]
$LN429@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 353  : 		TPixelPosition pos(atof(pTokenVector->at(0).c_str()),

  002aa	50		 push	 eax
  002ab	e8 00 00 00 00	 call	 _atof
  002b0	ff 75 a0	 push	 DWORD PTR __Result$1$[ebp]
  002b3	d9 5d 90	 fstp	 DWORD PTR _fx$[ebp]
  002b6	e8 00 00 00 00	 call	 _atof
  002bb	d9 5d 94	 fstp	 DWORD PTR _fy$[ebp]
  002be	56		 push	 esi
  002bf	e8 00 00 00 00	 call	 _atof
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 180  :     x = fx;

  002c4	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _fx$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 357  : 		SetAccumulationPosition(pos);

  002c9	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _pos$4[ebp]
  002cf	8b 4d 9c	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  002d2	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 180  :     x = fx;

  002d5	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR _pos$4[ebp], xmm0

; 181  :     y = fy;

  002dd	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _fy$[ebp]
  002e2	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _pos$4[ebp+4], xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 353  : 		TPixelPosition pos(atof(pTokenVector->at(0).c_str()),

  002ea	d9 5d a0	 fstp	 DWORD PTR _fz$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 182  :     z = fz;

  002ed	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _fz$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 357  : 		SetAccumulationPosition(pos);

  002f2	50		 push	 eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\extern\include\d3dx8math.inl

; 182  :     z = fz;

  002f3	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _pos$4[ebp+8], xmm0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 357  : 		SetAccumulationPosition(pos);

  002fb	e8 00 00 00 00	 call	 ?SetAccumulationPosition@CRaceMotionData@@QAEXABUD3DXVECTOR3@@@Z ; CRaceMotionData::SetAccumulationPosition
$LN14@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00300	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _strNodeName$[ebp], 0

; 4596 :         _My_data._Mysize = 0;

  00307	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _strNodeName$[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0030e	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR _strNodeName$[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00315	c6 45 c0 00	 mov	 BYTE PTR _strNodeName$[ebp], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 361  : 	for (DWORD i = 0; i < rkTextFileLoader.GetChildNodeCount(); ++i)

  00319	33 f6		 xor	 esi, esi
  0031b	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  00322	8b cf		 mov	 ecx, edi
  00324	89 75 90	 mov	 DWORD PTR _i$1$[ebp], esi
  00327	e8 00 00 00 00	 call	 ?GetChildNodeCount@CTextFileLoader@@QAEKXZ ; CTextFileLoader::GetChildNodeCount
  0032c	85 c0		 test	 eax, eax
  0032e	0f 84 9f 0b 00
	00		 je	 $LN3@LoadMotion
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\TextFileLoader.h

; 49   : 			CGotoChild(CTextFileLoader * pOwner, DWORD dwIndex) : m_pOwner(pOwner)

  00334	89 bd 6c ff ff
	ff		 mov	 DWORD PTR _GotoChild$2[ebp], edi
  0033a	66 0f 1f 44 00
	00		 npad	 6
$LL4@LoadMotion:

; 50   : 			{
; 51   : 				m_pOwner->SetChildNode(dwIndex);

  00340	56		 push	 esi
  00341	8b cf		 mov	 ecx, edi
  00343	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHK@Z ; CTextFileLoader::SetChildNode
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 365  : 		rkTextFileLoader.GetCurrentNodeName(&strNodeName);

  00348	8d 45 c0	 lea	 eax, DWORD PTR _strNodeName$[ebp]
  0034b	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  0034f	50		 push	 eax
  00350	8b cf		 mov	 ecx, edi
  00352	e8 00 00 00 00	 call	 ?GetCurrentNodeName@CTextFileLoader@@QAEHPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTextFileLoader::GetCurrentNodeName
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  00357	83 7d d4 10	 cmp	 DWORD PTR _strNodeName$[ebp+20], 16 ; 00000010H
  0035b	8d 4d c0	 lea	 ecx, DWORD PTR _strNodeName$[ebp]

; 590  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  0035e	8b 75 d0	 mov	 esi, DWORD PTR _strNodeName$[ebp+16]
  00361	b8 0e 00 00 00	 mov	 eax, 14			; 0000000eH

; 2306 :         if (_Large_string_engaged()) {

  00366	0f 43 4d c0	 cmovae	 ecx, DWORD PTR _strNodeName$[ebp]

; 392  :         return _CSTD memcmp(_First1, _First2, _Count);

  0036a	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0P@BEGKENNC@comboinputdata@

; 590  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  0036f	83 fe 0e	 cmp	 esi, 14			; 0000000eH
  00372	0f 47 f0	 cmova	 esi, eax

; 392  :         return _CSTD memcmp(_First1, _First2, _Count);

  00375	83 ee 04	 sub	 esi, 4
  00378	72 17		 jb	 SHORT $LN1747@LoadMotion
  0037a	66 0f 1f 44 00
	00		 npad	 6
$LL1748@LoadMotion:
  00380	8b 01		 mov	 eax, DWORD PTR [ecx]
  00382	3b 02		 cmp	 eax, DWORD PTR [edx]
  00384	75 10		 jne	 SHORT $LN1746@LoadMotion
  00386	83 c1 04	 add	 ecx, 4
  00389	83 c2 04	 add	 edx, 4
  0038c	83 ee 04	 sub	 esi, 4
  0038f	73 ef		 jae	 SHORT $LL1748@LoadMotion
$LN1747@LoadMotion:
  00391	83 fe fc	 cmp	 esi, -4			; fffffffcH
  00394	74 34		 je	 SHORT $LN1745@LoadMotion
$LN1746@LoadMotion:
  00396	8a 01		 mov	 al, BYTE PTR [ecx]
  00398	3a 02		 cmp	 al, BYTE PTR [edx]
  0039a	75 27		 jne	 SHORT $LN1749@LoadMotion
  0039c	83 fe fd	 cmp	 esi, -3			; fffffffdH
  0039f	74 29		 je	 SHORT $LN1745@LoadMotion
  003a1	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  003a4	3a 42 01	 cmp	 al, BYTE PTR [edx+1]
  003a7	75 1a		 jne	 SHORT $LN1749@LoadMotion
  003a9	83 fe fe	 cmp	 esi, -2			; fffffffeH
  003ac	74 1c		 je	 SHORT $LN1745@LoadMotion
  003ae	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  003b1	3a 42 02	 cmp	 al, BYTE PTR [edx+2]
  003b4	75 0d		 jne	 SHORT $LN1749@LoadMotion
  003b6	83 fe ff	 cmp	 esi, -1
  003b9	74 0f		 je	 SHORT $LN1745@LoadMotion
  003bb	8a 41 03	 mov	 al, BYTE PTR [ecx+3]
  003be	3a 42 03	 cmp	 al, BYTE PTR [edx+3]
  003c1	74 07		 je	 SHORT $LN1745@LoadMotion
$LN1749@LoadMotion:
  003c3	1b c0		 sbb	 eax, eax
  003c5	83 c8 01	 or	 eax, 1
  003c8	eb 02		 jmp	 SHORT $LN1750@LoadMotion
$LN1745@LoadMotion:
  003ca	33 c0		 xor	 eax, eax
$LN1750@LoadMotion:

; 592  :     if (_Ans != 0) {

  003cc	85 c0		 test	 eax, eax
  003ce	8b 45 d0	 mov	 eax, DWORD PTR _strNodeName$[ebp+16]
  003d1	0f 85 d8 01 00
	00		 jne	 $LN16@LoadMotion

; 593  :         return _Ans;
; 594  :     }
; 595  : 
; 596  :     if (_Left_size < _Right_size) {

  003d7	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  003da	0f 82 cf 01 00
	00		 jb	 $LN16@LoadMotion

; 597  :         return -1;
; 598  :     }
; 599  : 
; 600  :     if (_Left_size > _Right_size) {

  003e0	0f 87 c9 01 00
	00		 ja	 $LN16@LoadMotion
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 369  : 			m_isComboMotion = TRUE;

  003e6	8b 75 9c	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  003e9	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T43[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  003f0	c7 45 e8 0c 00
	00 00		 mov	 DWORD PTR $T43[ebp+16], 12 ; 0000000cH

; 3249 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  003f7	c6 45 e4 00	 mov	 BYTE PTR $T43[ebp+12], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 369  : 			m_isComboMotion = TRUE;

  003fb	c7 46 58 01 00
	00 00		 mov	 DWORD PTR [esi+88], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00402	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0N@IKJEINLI@preinputtime@
  0040a	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0N@IKJEINLI@preinputtime@+8
  0040f	66 0f d6 45 d8	 movq	 QWORD PTR $T43[ebp], xmm0
  00414	89 45 e0	 mov	 DWORD PTR $T43[ebp+8], eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 371  : 			if (!rkTextFileLoader.GetTokenFloat("preinputtime", &m_ComboInputData.fInputStartTime))

  00417	8d 46 5c	 lea	 eax, DWORD PTR [esi+92]
  0041a	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  0041e	50		 push	 eax
  0041f	8d 45 d8	 lea	 eax, DWORD PTR $T43[ebp]
  00422	8b cf		 mov	 ecx, edi
  00424	50		 push	 eax
  00425	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0042a	8b 55 ec	 mov	 edx, DWORD PTR $T43[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 371  : 			if (!rkTextFileLoader.GetTokenFloat("preinputtime", &m_ComboInputData.fInputStartTime))

  0042d	85 c0		 test	 eax, eax
  0042f	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00433	0f 94 c0	 sete	 al
  00436	88 45 a7	 mov	 BYTE PTR $T29[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00439	83 fa 10	 cmp	 edx, 16			; 00000010H
  0043c	72 2f		 jb	 SHORT $LN552@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0043e	8b 4d d8	 mov	 ecx, DWORD PTR $T43[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00441	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00442	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00444	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0044a	72 14		 jb	 SHORT $LN562@LoadMotion

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0044c	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0044f	83 c2 23	 add	 edx, 35			; 00000023H
  00452	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00454	83 c0 fc	 add	 eax, -4			; fffffffcH
  00457	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0045a	0f 87 61 0c 00
	00		 ja	 $LN559@LoadMotion
$LN562@LoadMotion:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00460	52		 push	 edx
  00461	51		 push	 ecx
  00462	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00467	8a 45 a7	 mov	 al, BYTE PTR $T29[ebp]
  0046a	83 c4 08	 add	 esp, 8
$LN552@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 371  : 			if (!rkTextFileLoader.GetTokenFloat("preinputtime", &m_ComboInputData.fInputStartTime))

  0046d	84 c0		 test	 al, al
  0046f	0f 85 26 01 00
	00		 jne	 $LN1716@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00475	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BA@OKILMLFK@directinputtime@+8
  0047a	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BA@OKILMLFK@directinputtime@
  00482	89 45 e0	 mov	 DWORD PTR $T42[ebp+8], eax
  00485	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BA@OKILMLFK@directinputtime@+12
  0048b	66 89 45 e4	 mov	 WORD PTR $T42[ebp+12], ax
  0048f	a0 0e 00 00 00	 mov	 al, BYTE PTR ??_C@_0BA@OKILMLFK@directinputtime@+14

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00494	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T42[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  0049b	c7 45 e8 0f 00
	00 00		 mov	 DWORD PTR $T42[ebp+16], 15 ; 0000000fH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  004a2	66 0f d6 45 d8	 movq	 QWORD PTR $T42[ebp], xmm0
  004a7	88 45 e6	 mov	 BYTE PTR $T42[ebp+14], al

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  004aa	c6 45 e7 00	 mov	 BYTE PTR $T42[ebp+15], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 373  : 			if (!rkTextFileLoader.GetTokenFloat("directinputtime", &m_ComboInputData.fNextComboTime))

  004ae	8d 46 60	 lea	 eax, DWORD PTR [esi+96]
  004b1	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  004b5	50		 push	 eax
  004b6	8d 45 d8	 lea	 eax, DWORD PTR $T42[ebp]
  004b9	8b cf		 mov	 ecx, edi
  004bb	50		 push	 eax
  004bc	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  004c1	8b 55 ec	 mov	 edx, DWORD PTR $T42[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 373  : 			if (!rkTextFileLoader.GetTokenFloat("directinputtime", &m_ComboInputData.fNextComboTime))

  004c4	85 c0		 test	 eax, eax
  004c6	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  004ca	0f 94 c0	 sete	 al
  004cd	88 45 a7	 mov	 BYTE PTR $T28[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  004d0	83 fa 10	 cmp	 edx, 16			; 00000010H
  004d3	72 2f		 jb	 SHORT $LN681@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004d5	8b 4d d8	 mov	 ecx, DWORD PTR $T42[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  004d8	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  004d9	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  004db	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  004e1	72 14		 jb	 SHORT $LN691@LoadMotion

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  004e3	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  004e6	83 c2 23	 add	 edx, 35			; 00000023H
  004e9	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  004eb	83 c0 fc	 add	 eax, -4			; fffffffcH
  004ee	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  004f1	0f 87 ca 0b 00
	00		 ja	 $LN559@LoadMotion
$LN691@LoadMotion:

; 264  :         ::operator delete(_Ptr, _Bytes);

  004f7	52		 push	 edx
  004f8	51		 push	 ecx
  004f9	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  004fe	8a 45 a7	 mov	 al, BYTE PTR $T28[ebp]
  00501	83 c4 08	 add	 esp, 8
$LN681@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 373  : 			if (!rkTextFileLoader.GetTokenFloat("directinputtime", &m_ComboInputData.fNextComboTime))

  00504	84 c0		 test	 al, al
  00506	0f 85 8f 00 00
	00		 jne	 $LN1716@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0050c	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0P@PPFBMGLB@inputlimittime@+8
  00511	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0P@PPFBMGLB@inputlimittime@
  00519	89 45 e0	 mov	 DWORD PTR $T41[ebp+8], eax
  0051c	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0P@PPFBMGLB@inputlimittime@+12

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00522	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T41[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  00529	c7 45 e8 0e 00
	00 00		 mov	 DWORD PTR $T41[ebp+16], 14 ; 0000000eH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00530	66 0f d6 45 d8	 movq	 QWORD PTR $T41[ebp], xmm0
  00535	66 89 45 e4	 mov	 WORD PTR $T41[ebp+12], ax

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00539	c6 45 e6 00	 mov	 BYTE PTR $T41[ebp+14], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 375  : 			if (!rkTextFileLoader.GetTokenFloat("inputlimittime", &m_ComboInputData.fInputEndTime))

  0053d	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  00541	8d 46 64	 lea	 eax, DWORD PTR [esi+100]
$LN1780@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\TextFileLoader.h

; 54   : 			{

  00544	50		 push	 eax
  00545	8d 45 d8	 lea	 eax, DWORD PTR $T41[ebp]
  00548	8b cf		 mov	 ecx, edi
  0054a	50		 push	 eax
  0054b	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
  00550	8b 55 ec	 mov	 edx, DWORD PTR $T41[ebp+20]
  00553	85 c0		 test	 eax, eax
  00555	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00559	0f 94 c0	 sete	 al
  0055c	88 45 a7	 mov	 BYTE PTR $T27[ebp], al
  0055f	83 fa 10	 cmp	 edx, 16			; 00000010H
  00562	72 2f		 jb	 SHORT $LN810@LoadMotion
  00564	8b 4d d8	 mov	 ecx, DWORD PTR $T41[ebp]
  00567	42		 inc	 edx
  00568	8b c1		 mov	 eax, ecx
  0056a	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00570	72 14		 jb	 SHORT $LN820@LoadMotion
  00572	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00575	83 c2 23	 add	 edx, 35			; 00000023H
  00578	2b c1		 sub	 eax, ecx
  0057a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0057d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00580	0f 87 3b 0b 00
	00		 ja	 $LN559@LoadMotion
$LN820@LoadMotion:
  00586	52		 push	 edx
  00587	51		 push	 ecx
  00588	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0058d	8a 45 a7	 mov	 al, BYTE PTR $T27[ebp]
  00590	83 c4 08	 add	 esp, 8
$LN810@LoadMotion:
  00593	84 c0		 test	 al, al
  00595	0f 84 13 09 00
	00		 je	 $LN1766@LoadMotion
$LN1716@LoadMotion:

; 55   : 				m_pOwner->SetParentNode();

  0059b	8b cf		 mov	 ecx, edi
  0059d	c6 45 fc 1a	 mov	 BYTE PTR __$EHRec$[ebp+8], 26 ; 0000001aH
  005a1	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
  005a6	c6 45 a7 00	 mov	 BYTE PTR $T19[ebp], 0
  005aa	e9 da 0a 00 00	 jmp	 $LN1662@LoadMotion
$LN16@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  005af	83 7d d4 10	 cmp	 DWORD PTR _strNodeName$[ebp+20], 16 ; 00000010H
  005b3	8d 4d c0	 lea	 ecx, DWORD PTR _strNodeName$[ebp]

; 590  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  005b6	8b f0		 mov	 esi, eax

; 392  :         return _CSTD memcmp(_First1, _First2, _Count);

  005b8	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0O@NGMBMFEH@attackingdata@

; 2306 :         if (_Large_string_engaged()) {

  005bd	0f 43 4d c0	 cmovae	 ecx, DWORD PTR _strNodeName$[ebp]

; 590  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  005c1	83 f8 0d	 cmp	 eax, 13			; 0000000dH
  005c4	b8 0d 00 00 00	 mov	 eax, 13			; 0000000dH
  005c9	0f 47 f0	 cmova	 esi, eax

; 392  :         return _CSTD memcmp(_First1, _First2, _Count);

  005cc	83 ee 04	 sub	 esi, 4
  005cf	72 11		 jb	 SHORT $LN1753@LoadMotion
$LL1754@LoadMotion:
  005d1	8b 01		 mov	 eax, DWORD PTR [ecx]
  005d3	3b 02		 cmp	 eax, DWORD PTR [edx]
  005d5	75 10		 jne	 SHORT $LN1752@LoadMotion
  005d7	83 c1 04	 add	 ecx, 4
  005da	83 c2 04	 add	 edx, 4
  005dd	83 ee 04	 sub	 esi, 4
  005e0	73 ef		 jae	 SHORT $LL1754@LoadMotion
$LN1753@LoadMotion:
  005e2	83 fe fc	 cmp	 esi, -4			; fffffffcH
  005e5	74 34		 je	 SHORT $LN1751@LoadMotion
$LN1752@LoadMotion:
  005e7	8a 01		 mov	 al, BYTE PTR [ecx]
  005e9	3a 02		 cmp	 al, BYTE PTR [edx]
  005eb	75 27		 jne	 SHORT $LN1755@LoadMotion
  005ed	83 fe fd	 cmp	 esi, -3			; fffffffdH
  005f0	74 29		 je	 SHORT $LN1751@LoadMotion
  005f2	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  005f5	3a 42 01	 cmp	 al, BYTE PTR [edx+1]
  005f8	75 1a		 jne	 SHORT $LN1755@LoadMotion
  005fa	83 fe fe	 cmp	 esi, -2			; fffffffeH
  005fd	74 1c		 je	 SHORT $LN1751@LoadMotion
  005ff	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  00602	3a 42 02	 cmp	 al, BYTE PTR [edx+2]
  00605	75 0d		 jne	 SHORT $LN1755@LoadMotion
  00607	83 fe ff	 cmp	 esi, -1
  0060a	74 0f		 je	 SHORT $LN1751@LoadMotion
  0060c	8a 41 03	 mov	 al, BYTE PTR [ecx+3]
  0060f	3a 42 03	 cmp	 al, BYTE PTR [edx+3]
  00612	74 07		 je	 SHORT $LN1751@LoadMotion
$LN1755@LoadMotion:
  00614	1b c0		 sbb	 eax, eax
  00616	83 c8 01	 or	 eax, 1
  00619	eb 02		 jmp	 SHORT $LN1756@LoadMotion
$LN1751@LoadMotion:
  0061b	33 c0		 xor	 eax, eax
$LN1756@LoadMotion:

; 592  :     if (_Ans != 0) {

  0061d	85 c0		 test	 eax, eax
  0061f	8b 45 d0	 mov	 eax, DWORD PTR _strNodeName$[ebp+16]
  00622	75 2b		 jne	 SHORT $LN21@LoadMotion

; 593  :         return _Ans;
; 594  :     }
; 595  : 
; 596  :     if (_Left_size < _Right_size) {

  00624	83 f8 0d	 cmp	 eax, 13			; 0000000dH
  00627	72 26		 jb	 SHORT $LN21@LoadMotion

; 597  :         return -1;
; 598  :     }
; 599  : 
; 600  :     if (_Left_size > _Right_size) {

  00629	77 24		 ja	 SHORT $LN21@LoadMotion
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 380  : 			m_isAttackingMotion = TRUE;

  0062b	8b 45 9c	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  0062e	c7 40 74 01 00
	00 00		 mov	 DWORD PTR [eax+116], 1

; 381  : 
; 382  : 			if (!NRaceData::LoadMotionAttackData(rkTextFileLoader, &m_MotionAttackData))

  00635	83 c0 78	 add	 eax, 120		; 00000078H
  00638	50		 push	 eax
  00639	57		 push	 edi
  0063a	e8 00 00 00 00	 call	 ?LoadMotionAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSMotionAttackData@1@@Z ; NRaceData::LoadMotionAttackData
  0063f	83 c4 08	 add	 esp, 8
  00642	85 c0		 test	 eax, eax
  00644	0f 84 51 ff ff
	ff		 je	 $LN1716@LoadMotion

; 383  : 				return false;
; 384  : 		}

  0064a	e9 5f 08 00 00	 jmp	 $LN1766@LoadMotion
$LN21@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  0064f	83 7d d4 10	 cmp	 DWORD PTR _strNodeName$[ebp+20], 16 ; 00000010H
  00653	8d 4d c0	 lea	 ecx, DWORD PTR _strNodeName$[ebp]

; 590  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  00656	8b f0		 mov	 esi, eax

; 392  :         return _CSTD memcmp(_First1, _First2, _Count);

  00658	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_08BMIAMBLK@loopdata@

; 2306 :         if (_Large_string_engaged()) {

  0065d	0f 43 4d c0	 cmovae	 ecx, DWORD PTR _strNodeName$[ebp]

; 590  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

  00661	83 f8 08	 cmp	 eax, 8
  00664	b8 08 00 00 00	 mov	 eax, 8
  00669	0f 47 f0	 cmova	 esi, eax

; 392  :         return _CSTD memcmp(_First1, _First2, _Count);

  0066c	83 ee 04	 sub	 esi, 4
  0066f	72 11		 jb	 SHORT $LN1759@LoadMotion
$LL1760@LoadMotion:
  00671	8b 01		 mov	 eax, DWORD PTR [ecx]
  00673	3b 02		 cmp	 eax, DWORD PTR [edx]
  00675	75 10		 jne	 SHORT $LN1758@LoadMotion
  00677	83 c1 04	 add	 ecx, 4
  0067a	83 c2 04	 add	 edx, 4
  0067d	83 ee 04	 sub	 esi, 4
  00680	73 ef		 jae	 SHORT $LL1760@LoadMotion
$LN1759@LoadMotion:
  00682	83 fe fc	 cmp	 esi, -4			; fffffffcH
  00685	74 34		 je	 SHORT $LN1757@LoadMotion
$LN1758@LoadMotion:
  00687	8a 01		 mov	 al, BYTE PTR [ecx]
  00689	3a 02		 cmp	 al, BYTE PTR [edx]
  0068b	75 27		 jne	 SHORT $LN1761@LoadMotion
  0068d	83 fe fd	 cmp	 esi, -3			; fffffffdH
  00690	74 29		 je	 SHORT $LN1757@LoadMotion
  00692	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  00695	3a 42 01	 cmp	 al, BYTE PTR [edx+1]
  00698	75 1a		 jne	 SHORT $LN1761@LoadMotion
  0069a	83 fe fe	 cmp	 esi, -2			; fffffffeH
  0069d	74 1c		 je	 SHORT $LN1757@LoadMotion
  0069f	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  006a2	3a 42 02	 cmp	 al, BYTE PTR [edx+2]
  006a5	75 0d		 jne	 SHORT $LN1761@LoadMotion
  006a7	83 fe ff	 cmp	 esi, -1
  006aa	74 0f		 je	 SHORT $LN1757@LoadMotion
  006ac	8a 41 03	 mov	 al, BYTE PTR [ecx+3]
  006af	3a 42 03	 cmp	 al, BYTE PTR [edx+3]
  006b2	74 07		 je	 SHORT $LN1757@LoadMotion
$LN1761@LoadMotion:
  006b4	1b c0		 sbb	 eax, eax
  006b6	83 c8 01	 or	 eax, 1
  006b9	eb 02		 jmp	 SHORT $LN1762@LoadMotion
$LN1757@LoadMotion:
  006bb	33 c0		 xor	 eax, eax
$LN1762@LoadMotion:

; 592  :     if (_Ans != 0) {

  006bd	85 c0		 test	 eax, eax
  006bf	0f 85 fd 01 00
	00		 jne	 $LN24@LoadMotion

; 593  :         return _Ans;
; 594  :     }
; 595  : 
; 596  :     if (_Left_size < _Right_size) {

  006c5	83 7d d0 08	 cmp	 DWORD PTR _strNodeName$[ebp+16], 8
  006c9	0f 82 f3 01 00
	00		 jb	 $LN24@LoadMotion

; 597  :         return -1;
; 598  :     }
; 599  : 
; 600  :     if (_Left_size > _Right_size) {

  006cf	0f 87 ed 01 00
	00		 ja	 $LN24@LoadMotion
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 387  : 			m_isLoopMotion = TRUE;

  006d5	8b 4d 9c	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  006d8	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T40[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  006df	c7 45 e8 0f 00
	00 00		 mov	 DWORD PTR $T40[ebp+16], 15 ; 0000000fH

; 3249 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  006e6	c6 45 e7 00	 mov	 BYTE PTR $T40[ebp+15], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 387  : 			m_isLoopMotion = TRUE;

  006ea	c7 41 68 01 00
	00 00		 mov	 DWORD PTR [ecx+104], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  006f1	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BA@HKGDAAAM@motionloopcount@+8
  006f6	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BA@HKGDAAAM@motionloopcount@
  006fe	89 45 e0	 mov	 DWORD PTR $T40[ebp+8], eax
  00701	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BA@HKGDAAAM@motionloopcount@+12
  00707	66 89 45 e4	 mov	 WORD PTR $T40[ebp+12], ax
  0070b	a0 0e 00 00 00	 mov	 al, BYTE PTR ??_C@_0BA@HKGDAAAM@motionloopcount@+14
  00710	66 0f d6 45 d8	 movq	 QWORD PTR $T40[ebp], xmm0
  00715	88 45 e6	 mov	 BYTE PTR $T40[ebp+14], al
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 388  : 			if (!rkTextFileLoader.GetTokenInteger("motionloopcount", &m_iLoopCount))

  00718	8d 71 10	 lea	 esi, DWORD PTR [ecx+16]
  0071b	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  0071f	56		 push	 esi
  00720	8d 45 d8	 lea	 eax, DWORD PTR $T40[ebp]
  00723	8b cf		 mov	 ecx, edi
  00725	50		 push	 eax
  00726	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0072b	8b 55 ec	 mov	 edx, DWORD PTR $T40[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 388  : 			if (!rkTextFileLoader.GetTokenInteger("motionloopcount", &m_iLoopCount))

  0072e	85 c0		 test	 eax, eax
  00730	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00734	0f 94 c0	 sete	 al
  00737	88 45 a7	 mov	 BYTE PTR $T26[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0073a	83 fa 10	 cmp	 edx, 16			; 00000010H
  0073d	72 2f		 jb	 SHORT $LN1005@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0073f	8b 4d d8	 mov	 ecx, DWORD PTR $T40[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00742	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00743	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00745	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0074b	72 14		 jb	 SHORT $LN1015@LoadMotion

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0074d	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00750	83 c2 23	 add	 edx, 35			; 00000023H
  00753	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00755	83 c0 fc	 add	 eax, -4			; fffffffcH
  00758	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0075b	0f 87 60 09 00
	00		 ja	 $LN559@LoadMotion
$LN1015@LoadMotion:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00761	52		 push	 edx
  00762	51		 push	 ecx
  00763	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00768	8a 45 a7	 mov	 al, BYTE PTR $T26[ebp]
  0076b	83 c4 08	 add	 esp, 8
$LN1005@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 388  : 			if (!rkTextFileLoader.GetTokenInteger("motionloopcount", &m_iLoopCount))

  0076e	84 c0		 test	 al, al
  00770	74 06		 je	 SHORT $LN26@LoadMotion

; 389  : 			{
; 390  : 				m_iLoopCount = -1;

  00772	c7 06 ff ff ff
	ff		 mov	 DWORD PTR [esi], -1
$LN26@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00778	6a 10		 push	 16			; 00000010H

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0077a	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T39[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00781	8d 4d d8	 lea	 ecx, DWORD PTR $T39[ebp]
  00784	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@LFNJMKIF@loopcancelenable@

; 4596 :         _My_data._Mysize = 0;

  00789	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T39[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00790	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T39[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00797	c6 45 d8 00	 mov	 BYTE PTR $T39[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0079b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 392  : 			if (!rkTextFileLoader.GetTokenInteger("loopcancelenable", &m_bCancelEnableSkill))

  007a0	8b 75 9c	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  007a3	8d 45 d8	 lea	 eax, DWORD PTR $T39[ebp]
  007a6	81 c6 a0 00 00
	00		 add	 esi, 160		; 000000a0H
  007ac	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  007b0	56		 push	 esi
  007b1	50		 push	 eax
  007b2	8b cf		 mov	 ecx, edi
  007b4	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  007b9	8b 55 ec	 mov	 edx, DWORD PTR $T39[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 392  : 			if (!rkTextFileLoader.GetTokenInteger("loopcancelenable", &m_bCancelEnableSkill))

  007bc	85 c0		 test	 eax, eax
  007be	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  007c2	0f 94 c0	 sete	 al
  007c5	88 45 a7	 mov	 BYTE PTR $T25[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  007c8	83 fa 10	 cmp	 edx, 16			; 00000010H
  007cb	72 2f		 jb	 SHORT $LN1048@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  007cd	8b 4d d8	 mov	 ecx, DWORD PTR $T39[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  007d0	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  007d1	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  007d3	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  007d9	72 14		 jb	 SHORT $LN1058@LoadMotion

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  007db	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  007de	83 c2 23	 add	 edx, 35			; 00000023H
  007e1	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  007e3	83 c0 fc	 add	 eax, -4			; fffffffcH
  007e6	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  007e9	0f 87 d2 08 00
	00		 ja	 $LN559@LoadMotion
$LN1058@LoadMotion:

; 264  :         ::operator delete(_Ptr, _Bytes);

  007ef	52		 push	 edx
  007f0	51		 push	 ecx
  007f1	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  007f6	8a 45 a7	 mov	 al, BYTE PTR $T25[ebp]
  007f9	83 c4 08	 add	 esp, 8
$LN1048@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 392  : 			if (!rkTextFileLoader.GetTokenInteger("loopcancelenable", &m_bCancelEnableSkill))

  007fc	84 c0		 test	 al, al
  007fe	74 06		 je	 SHORT $LN27@LoadMotion

; 393  : 			{
; 394  : 				m_bCancelEnableSkill = FALSE;

  00800	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN27@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00806	6a 0d		 push	 13			; 0000000dH

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00808	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T38[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0080f	8d 4d d8	 lea	 ecx, DWORD PTR $T38[ebp]
  00812	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FAMGINHI@loopstarttime@

; 4596 :         _My_data._Mysize = 0;

  00817	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T38[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0081e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T38[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00825	c6 45 d8 00	 mov	 BYTE PTR $T38[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00829	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 396  : 			if (!rkTextFileLoader.GetTokenFloat("loopstarttime", &m_fLoopStartTime))

  0082e	8b 75 9c	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00831	8b cf		 mov	 ecx, edi
  00833	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  00837	8d 46 6c	 lea	 eax, DWORD PTR [esi+108]
  0083a	50		 push	 eax
  0083b	8d 45 d8	 lea	 eax, DWORD PTR $T38[ebp]
  0083e	50		 push	 eax
  0083f	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00844	8b 55 ec	 mov	 edx, DWORD PTR $T38[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 396  : 			if (!rkTextFileLoader.GetTokenFloat("loopstarttime", &m_fLoopStartTime))

  00847	85 c0		 test	 eax, eax
  00849	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  0084d	0f 94 c0	 sete	 al
  00850	88 45 a7	 mov	 BYTE PTR $T24[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00853	83 fa 10	 cmp	 edx, 16			; 00000010H
  00856	72 2f		 jb	 SHORT $LN1091@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00858	8b 4d d8	 mov	 ecx, DWORD PTR $T38[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0085b	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0085c	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0085e	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00864	72 14		 jb	 SHORT $LN1101@LoadMotion

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00866	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00869	83 c2 23	 add	 edx, 35			; 00000023H
  0086c	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0086e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00871	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00874	0f 87 47 08 00
	00		 ja	 $LN559@LoadMotion
$LN1101@LoadMotion:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0087a	52		 push	 edx
  0087b	51		 push	 ecx
  0087c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00881	8a 45 a7	 mov	 al, BYTE PTR $T24[ebp]
  00884	83 c4 08	 add	 esp, 8
$LN1091@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 396  : 			if (!rkTextFileLoader.GetTokenFloat("loopstarttime", &m_fLoopStartTime))

  00887	84 c0		 test	 al, al
  00889	0f 85 0c fd ff
	ff		 jne	 $LN1716@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0088f	6a 0b		 push	 11			; 0000000bH

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00891	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T37[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00898	8d 4d d8	 lea	 ecx, DWORD PTR $T37[ebp]
  0089b	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HIAPALPD@loopendtime@

; 4596 :         _My_data._Mysize = 0;

  008a0	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T37[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  008a7	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T37[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  008ae	88 45 d8	 mov	 BYTE PTR $T37[ebp], al

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  008b1	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 398  : 			if (!rkTextFileLoader.GetTokenFloat("loopendtime", &m_fLoopEndTime))

  008b6	c6 45 fc 10	 mov	 BYTE PTR __$EHRec$[ebp+8], 16 ; 00000010H
  008ba	8d 46 70	 lea	 eax, DWORD PTR [esi+112]

; 399  : 				return false;
; 400  : 		}

  008bd	e9 82 fc ff ff	 jmp	 $LN1780@LoadMotion
$LN24@LoadMotion:

; 401  : 		else if (0 == strNodeName.compare("motioneventdata"))

  008c2	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@LAEICHPP@motioneventdata@
  008c7	8d 4d c0	 lea	 ecx, DWORD PTR _strNodeName$[ebp]
  008ca	e8 00 00 00 00	 call	 ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHQBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
  008cf	85 c0		 test	 eax, eax
  008d1	0f 85 d7 05 00
	00		 jne	 $LN1766@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  008d7	6a 14		 push	 20			; 00000014H

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  008d9	89 45 d8	 mov	 DWORD PTR $T36[ebp], eax

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  008dc	8d 4d d8	 lea	 ecx, DWORD PTR $T36[ebp]
  008df	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@KNDELFNF@motioneventdatacount@

; 4596 :         _My_data._Mysize = 0;

  008e4	89 45 e8	 mov	 DWORD PTR $T36[ebp+16], eax

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  008e7	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T36[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  008ee	88 45 d8	 mov	 BYTE PTR $T36[ebp], al

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  008f1	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 405  : 			if (!rkTextFileLoader.GetTokenDoubleWord("motioneventdatacount", &dwMotionEventDataCount))

  008f6	8d 45 84	 lea	 eax, DWORD PTR _dwMotionEventDataCount$5[ebp]
  008f9	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  008fd	50		 push	 eax
  008fe	8d 45 d8	 lea	 eax, DWORD PTR $T36[ebp]
  00901	8b cf		 mov	 ecx, edi
  00903	50		 push	 eax
  00904	e8 00 00 00 00	 call	 ?GetTokenDoubleWord@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAK@Z ; CTextFileLoader::GetTokenDoubleWord
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00909	8b 55 ec	 mov	 edx, DWORD PTR $T36[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 405  : 			if (!rkTextFileLoader.GetTokenDoubleWord("motioneventdatacount", &dwMotionEventDataCount))

  0090c	85 c0		 test	 eax, eax
  0090e	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00912	0f 94 c0	 sete	 al
  00915	88 45 a7	 mov	 BYTE PTR $T23[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00918	83 fa 10	 cmp	 edx, 16			; 00000010H
  0091b	72 2f		 jb	 SHORT $LN1183@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0091d	8b 4d d8	 mov	 ecx, DWORD PTR $T36[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00920	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00921	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00923	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00929	72 14		 jb	 SHORT $LN1193@LoadMotion

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0092b	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0092e	83 c2 23	 add	 edx, 35			; 00000023H
  00931	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00933	83 c0 fc	 add	 eax, -4			; fffffffcH
  00936	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00939	0f 87 82 07 00
	00		 ja	 $LN559@LoadMotion
$LN1193@LoadMotion:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0093f	52		 push	 edx
  00940	51		 push	 ecx
  00941	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00946	8a 45 a7	 mov	 al, BYTE PTR $T23[ebp]
  00949	83 c4 08	 add	 esp, 8
$LN1183@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 405  : 			if (!rkTextFileLoader.GetTokenDoubleWord("motioneventdatacount", &dwMotionEventDataCount))

  0094c	84 c0		 test	 al, al
  0094e	74 09		 je	 SHORT $LN31@LoadMotion
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\TextFileLoader.h

; 54   : 			{

  00950	c6 45 fc 13	 mov	 BYTE PTR __$EHRec$[ebp+8], 19 ; 00000013H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 406  : 				continue;

  00954	e9 59 05 00 00	 jmp	 $LN1771@LoadMotion
$LN31@LoadMotion:

; 408  : 			stl_wipe(m_MotionEventDataVector);

  00959	8b 75 9c	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  0095c	81 c6 a4 00 00
	00		 add	 esi, 164		; 000000a4H
  00962	56		 push	 esi
  00963	e8 00 00 00 00	 call	 ??$stl_wipe@V?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@@YAXAAV?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@Z ; stl_wipe<std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1263 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  00968	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 408  : 			stl_wipe(m_MotionEventDataVector);

  0096b	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1263 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  0096e	8b 06		 mov	 eax, DWORD PTR [esi]
  00970	2b d0		 sub	 edx, eax

; 1264 :         if (_Newsize < _Oldsize) { // trim

  00972	8b 4d 84	 mov	 ecx, DWORD PTR _dwMotionEventDataCount$5[ebp]
  00975	c1 fa 02	 sar	 edx, 2
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 410  : 			m_MotionEventDataVector.resize(dwMotionEventDataCount, NULL);

  00978	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR $T18[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1264 :         if (_Newsize < _Oldsize) { // trim

  0097f	3b ca		 cmp	 ecx, edx
  00981	73 05		 jae	 SHORT $LN1204@LoadMotion

; 1265 :             const pointer _Newlast = _Myfirst + _Newsize;

  00983	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 1266 :             _Orphan_range(_Newlast, _Mylast);
; 1267 :             _Destroy(_Newlast, _Mylast);
; 1268 :             _Mylast = _Newlast;
; 1269 :             return;

  00986	eb 29		 jmp	 SHORT $LN1772@LoadMotion
$LN1204@LoadMotion:

; 1270 :         }
; 1271 : 
; 1272 :         if (_Newsize > _Oldsize) { // append

  00988	76 2a		 jbe	 SHORT $LN1205@LoadMotion

; 1273 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  0098a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0098d	2b 06		 sub	 eax, DWORD PTR [esi]
  0098f	c1 f8 02	 sar	 eax, 2

; 1274 :             if (_Newsize > _Oldcapacity) { // reallocate

  00992	3b c8		 cmp	 ecx, eax
  00994	8d 45 a0	 lea	 eax, DWORD PTR $T18[ebp]
  00997	50		 push	 eax
  00998	76 0a		 jbe	 SHORT $LN1206@LoadMotion

; 1275 :                 _Resize_reallocate(_Newsize, _Val);

  0099a	51		 push	 ecx
  0099b	8b ce		 mov	 ecx, esi
  0099d	e8 00 00 00 00	 call	 ??$_Resize_reallocate@PAUSMotionEventData@NMotionEvent@@@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@AAEXIABQAUSMotionEventData@NMotionEvent@@@Z ; std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> >::_Resize_reallocate<NMotionEvent::SMotionEventData *>

; 1276 :                 return;

  009a2	eb 10		 jmp	 SHORT $LN1205@LoadMotion
$LN1206@LoadMotion:

; 1277 :             }
; 1278 : 
; 1279 :             const pointer _Oldlast = _Mylast;
; 1280 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  009a4	2b ca		 sub	 ecx, edx
  009a6	51		 push	 ecx
  009a7	ff 76 04	 push	 DWORD PTR [esi+4]
  009aa	8b ce		 mov	 ecx, esi
  009ac	e8 00 00 00 00	 call	 ?_Ufill@?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@AAEPAPAUSMotionEventData@NMotionEvent@@PAPAU34@IABQAU34@@Z ; std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> >::_Ufill
$LN1772@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 412  : 			for (DWORD j = 0; j < m_MotionEventDataVector.size(); ++j)

  009b1	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN1205@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  009b4	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  009b7	2b 06		 sub	 eax, DWORD PTR [esi]
  009b9	c1 f8 02	 sar	 eax, 2
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 412  : 			for (DWORD j = 0; j < m_MotionEventDataVector.size(); ++j)

  009bc	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _j$1$[ebp], 0
  009c3	85 c0		 test	 eax, eax
  009c5	0f 84 e3 04 00
	00		 je	 $LN1766@LoadMotion
  009cb	0f 1f 44 00 00	 npad	 5
$LL7@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  009d0	6a 05		 push	 5

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  009d2	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T35[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  009d9	8d 4d d8	 lea	 ecx, DWORD PTR $T35[ebp]
  009dc	68 00 00 00 00	 push	 OFFSET ??_C@_05GFHEIIDD@event@

; 4596 :         _My_data._Mysize = 0;

  009e1	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T35[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  009e8	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T35[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  009ef	c6 45 d8 00	 mov	 BYTE PTR $T35[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  009f3	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 414  : 				if (!rkTextFileLoader.SetChildNode("event", j))

  009f8	ff 75 a0	 push	 DWORD PTR _j$1$[ebp]
  009fb	8d 45 d8	 lea	 eax, DWORD PTR $T35[ebp]
  009fe	c6 45 fc 14	 mov	 BYTE PTR __$EHRec$[ebp+8], 20 ; 00000014H
  00a02	50		 push	 eax
  00a03	8b cf		 mov	 ecx, edi
  00a05	e8 00 00 00 00	 call	 ?SetChildNode@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; CTextFileLoader::SetChildNode
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00a0a	8b 55 ec	 mov	 edx, DWORD PTR $T35[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 414  : 				if (!rkTextFileLoader.SetChildNode("event", j))

  00a0d	85 c0		 test	 eax, eax
  00a0f	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00a13	0f 94 c0	 sete	 al
  00a16	88 45 a7	 mov	 BYTE PTR $T22[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00a19	83 fa 10	 cmp	 edx, 16			; 00000010H
  00a1c	72 2f		 jb	 SHORT $LN1238@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00a1e	8b 4d d8	 mov	 ecx, DWORD PTR $T35[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00a21	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00a22	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00a24	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00a2a	72 14		 jb	 SHORT $LN1248@LoadMotion

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00a2c	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00a2f	83 c2 23	 add	 edx, 35			; 00000023H
  00a32	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00a34	83 c0 fc	 add	 eax, -4			; fffffffcH
  00a37	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00a3a	0f 87 81 06 00
	00		 ja	 $LN559@LoadMotion
$LN1248@LoadMotion:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00a40	52		 push	 edx
  00a41	51		 push	 ecx
  00a42	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00a47	8a 45 a7	 mov	 al, BYTE PTR $T22[ebp]
  00a4a	83 c4 08	 add	 esp, 8
$LN1238@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 414  : 				if (!rkTextFileLoader.SetChildNode("event", j))

  00a4d	84 c0		 test	 al, al
  00a4f	0f 85 46 fb ff
	ff		 jne	 $LN1716@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00a55	6a 0f		 push	 15			; 0000000fH

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00a57	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T34[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00a5e	8d 4d d8	 lea	 ecx, DWORD PTR $T34[ebp]
  00a61	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@CGGAKCNF@motioneventtype@

; 4596 :         _My_data._Mysize = 0;

  00a66	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T34[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00a6d	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T34[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00a74	88 45 d8	 mov	 BYTE PTR $T34[ebp], al

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00a77	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 418  : 				if (!rkTextFileLoader.GetTokenInteger("motioneventtype", &iType))

  00a7c	8d 45 94	 lea	 eax, DWORD PTR _iType$6[ebp]
  00a7f	c6 45 fc 16	 mov	 BYTE PTR __$EHRec$[ebp+8], 22 ; 00000016H
  00a83	50		 push	 eax
  00a84	8d 45 d8	 lea	 eax, DWORD PTR $T34[ebp]
  00a87	8b cf		 mov	 ecx, edi
  00a89	50		 push	 eax
  00a8a	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00a8f	8b 55 ec	 mov	 edx, DWORD PTR $T34[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 418  : 				if (!rkTextFileLoader.GetTokenInteger("motioneventtype", &iType))

  00a92	85 c0		 test	 eax, eax
  00a94	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00a98	0f 94 c0	 sete	 al
  00a9b	88 45 a7	 mov	 BYTE PTR $T21[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00a9e	83 fa 10	 cmp	 edx, 16			; 00000010H
  00aa1	72 2f		 jb	 SHORT $LN1284@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00aa3	8b 4d d8	 mov	 ecx, DWORD PTR $T34[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00aa6	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00aa7	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00aa9	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00aaf	72 14		 jb	 SHORT $LN1294@LoadMotion

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00ab1	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00ab4	83 c2 23	 add	 edx, 35			; 00000023H
  00ab7	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00ab9	83 c0 fc	 add	 eax, -4			; fffffffcH
  00abc	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00abf	0f 87 fc 05 00
	00		 ja	 $LN559@LoadMotion
$LN1294@LoadMotion:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00ac5	52		 push	 edx
  00ac6	51		 push	 ecx
  00ac7	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00acc	8a 45 a7	 mov	 al, BYTE PTR $T21[ebp]
  00acf	83 c4 08	 add	 esp, 8
$LN1284@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 418  : 				if (!rkTextFileLoader.GetTokenInteger("motioneventtype", &iType))

  00ad2	84 c0		 test	 al, al
  00ad4	0f 85 c1 fa ff
	ff		 jne	 $LN1716@LoadMotion

; 419  : 					return false;
; 420  : 
; 421  : 				TMotionEventData * pData = NULL;
; 422  : 				switch(iType)

  00ada	8b 45 94	 mov	 eax, DWORD PTR _iType$6[ebp]
  00add	48		 dec	 eax
  00ade	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  00ae1	0f 87 b4 fa ff
	ff		 ja	 $LN1716@LoadMotion
  00ae7	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN1763@LoadMotion[eax*4]
$LN34@LoadMotion:

; 423  : 				{
; 424  : 					case MOTION_EVENT_TYPE_FLY:
; 425  : 						pData = new TMotionFlyEventData;

  00aee	6a 58		 push	 88			; 00000058H
  00af0	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00af5	8b c8		 mov	 ecx, eax
  00af7	83 c4 04	 add	 esp, 4
  00afa	89 4d 98	 mov	 DWORD PTR $T17[ebp], ecx
  00afd	85 c9		 test	 ecx, ecx
  00aff	0f 84 9b 02 00
	00		 je	 $LN69@LoadMotion
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 16   : 		SMotionEventData() : dwFrame(0), fStartingTime(0.0f), fDurationTime(0.0f) {}

  00b05	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00b0c	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00b13	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 169  : 		SMotionEventDataFly() {}

  00b1a	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventDataFly@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00b20	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0

; 4596 :         _My_data._Mysize = 0;

  00b27	c7 41 28 00 00
	00 00		 mov	 DWORD PTR [ecx+40], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00b2e	c7 41 2c 0f 00
	00 00		 mov	 DWORD PTR [ecx+44], 15	; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00b35	c6 41 18 00	 mov	 BYTE PTR [ecx+24], 0

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00b39	c7 41 40 00 00
	00 00		 mov	 DWORD PTR [ecx+64], 0

; 4596 :         _My_data._Mysize = 0;

  00b40	c7 41 50 00 00
	00 00		 mov	 DWORD PTR [ecx+80], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00b47	c7 41 54 0f 00
	00 00		 mov	 DWORD PTR [ecx+84], 15	; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00b4e	c6 41 40 00	 mov	 BYTE PTR [ecx+64], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 426  : 						break;

  00b52	e9 4b 02 00 00	 jmp	 $LN70@LoadMotion
$LN35@LoadMotion:

; 427  : 					case MOTION_EVENT_TYPE_EFFECT:
; 428  : 						pData = new TMotionEffectEventData;

  00b57	6a 60		 push	 96			; 00000060H
  00b59	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00b5e	8b c8		 mov	 ecx, eax
  00b60	83 c4 04	 add	 esp, 4
  00b63	89 4d 98	 mov	 DWORD PTR $T16[ebp], ecx
  00b66	85 c9		 test	 ecx, ecx
  00b68	0f 84 32 02 00
	00		 je	 $LN69@LoadMotion
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 16   : 		SMotionEventData() : dwFrame(0), fStartingTime(0.0f), fDurationTime(0.0f) {}

  00b6e	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00b75	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00b7c	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 79   : 		SMotionEventDataEffect() {}

  00b83	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventDataEffect@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00b89	c7 41 20 00 00
	00 00		 mov	 DWORD PTR [ecx+32], 0

; 4596 :         _My_data._Mysize = 0;

  00b90	c7 41 30 00 00
	00 00		 mov	 DWORD PTR [ecx+48], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00b97	c7 41 34 0f 00
	00 00		 mov	 DWORD PTR [ecx+52], 15	; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00b9e	c6 41 20 00	 mov	 BYTE PTR [ecx+32], 0

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00ba2	c7 41 48 00 00
	00 00		 mov	 DWORD PTR [ecx+72], 0

; 4596 :         _My_data._Mysize = 0;

  00ba9	c7 41 58 00 00
	00 00		 mov	 DWORD PTR [ecx+88], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00bb0	c7 41 5c 0f 00
	00 00		 mov	 DWORD PTR [ecx+92], 15	; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00bb7	c6 41 48 00	 mov	 BYTE PTR [ecx+72], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 429  : 						break;

  00bbb	e9 e2 01 00 00	 jmp	 $LN70@LoadMotion
$LN36@LoadMotion:

; 430  : 					case MOTION_EVENT_TYPE_SCREEN_WAVING:
; 431  : 						pData = new TScreenWavingEventData;

  00bc0	6a 1c		 push	 28			; 0000001cH
  00bc2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00bc7	8b c8		 mov	 ecx, eax
  00bc9	83 c4 04	 add	 esp, 4
  00bcc	89 4d 98	 mov	 DWORD PTR $T15[ebp], ecx
  00bcf	85 c9		 test	 ecx, ecx
  00bd1	0f 84 c9 01 00
	00		 je	 $LN69@LoadMotion
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 29   : 		SMotionEventDataScreenWaving() {}

  00bd7	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventDataScreenWaving@NMotionEvent@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 432  : 						break;

  00bdd	e9 a7 01 00 00	 jmp	 $LN1774@LoadMotion
$LN37@LoadMotion:

; 433  : 					case MOTION_EVENT_TYPE_SPECIAL_ATTACKING:
; 434  : 						pData = new TMotionAttackingEventData;

  00be2	6a 44		 push	 68			; 00000044H
  00be4	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00be9	8b c8		 mov	 ecx, eax
  00beb	83 c4 04	 add	 esp, 4
  00bee	89 4d 98	 mov	 DWORD PTR $T14[ebp], ecx
  00bf1	85 c9		 test	 ecx, ecx
  00bf3	74 49		 je	 SHORT $LN55@LoadMotion

; 435  : 						m_hasSplashEvent = TRUE;

  00bf5	8b 45 9c	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 16   : 		SMotionEventData() : dwFrame(0), fStartingTime(0.0f), fDurationTime(0.0f) {}

  00bf8	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00bff	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00c06	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 208  : 		SMotionEventDataAttack() {}

  00c0d	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventDataAttack@NMotionEvent@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h

; 119  : 		SCollisionData() {}

  00c13	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], OFFSET ??_7SCollisionData@NRaceData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00c1a	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0
  00c21	c7 41 20 00 00
	00 00		 mov	 DWORD PTR [ecx+32], 0
  00c28	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 435  : 						m_hasSplashEvent = TRUE;

  00c2f	c7 80 bc 00 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+188], 1

; 436  : 						break;

  00c39	e9 64 01 00 00	 jmp	 $LN70@LoadMotion
$LN55@LoadMotion:

; 435  : 						m_hasSplashEvent = TRUE;

  00c3e	8b 45 9c	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00c41	33 c9		 xor	 ecx, ecx
  00c43	c7 80 bc 00 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+188], 1

; 436  : 						break;

  00c4d	e9 50 01 00 00	 jmp	 $LN70@LoadMotion
$LN38@LoadMotion:

; 437  : 					case MOTION_EVENT_TYPE_SOUND:
; 438  : 						pData = new TMotionSoundEventData;

  00c52	6a 2c		 push	 44			; 0000002cH
  00c54	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00c59	8b c8		 mov	 ecx, eax
  00c5b	83 c4 04	 add	 esp, 4
  00c5e	89 4d 98	 mov	 DWORD PTR $T13[ebp], ecx
  00c61	85 c9		 test	 ecx, ecx
  00c63	0f 84 37 01 00
	00		 je	 $LN69@LoadMotion
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 16   : 		SMotionEventData() : dwFrame(0), fStartingTime(0.0f), fDurationTime(0.0f) {}

  00c69	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00c70	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00c77	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 245  : 		SMotionEventDataSound() {}

  00c7e	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventDataSound@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00c84	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 4596 :         _My_data._Mysize = 0;

  00c8b	c7 41 24 00 00
	00 00		 mov	 DWORD PTR [ecx+36], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00c92	c7 41 28 0f 00
	00 00		 mov	 DWORD PTR [ecx+40], 15	; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00c99	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 439  : 						break;

  00c9d	e9 00 01 00 00	 jmp	 $LN70@LoadMotion
$LN39@LoadMotion:

; 440  : 					case MOTION_EVENT_TYPE_CHARACTER_SHOW:
; 441  : 						pData = new TMotionCharacterShowEventData;

  00ca2	6a 14		 push	 20			; 00000014H
  00ca4	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00ca9	8b c8		 mov	 ecx, eax
  00cab	83 c4 04	 add	 esp, 4
  00cae	89 4d 98	 mov	 DWORD PTR $T12[ebp], ecx
  00cb1	85 c9		 test	 ecx, ecx
  00cb3	0f 84 e7 00 00
	00		 je	 $LN69@LoadMotion
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 265  : 		SMotionEventDataCharacterShow() {}

  00cb9	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventDataCharacterShow@NMotionEvent@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 442  : 						break;

  00cbf	e9 c5 00 00 00	 jmp	 $LN1774@LoadMotion
$LN40@LoadMotion:

; 443  : 					case MOTION_EVENT_TYPE_CHARACTER_HIDE:
; 444  : 						pData = new TMotionCharacterHideEventData;

  00cc4	6a 14		 push	 20			; 00000014H
  00cc6	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00ccb	8b c8		 mov	 ecx, eax
  00ccd	83 c4 04	 add	 esp, 4
  00cd0	89 4d 98	 mov	 DWORD PTR $T11[ebp], ecx
  00cd3	85 c9		 test	 ecx, ecx
  00cd5	0f 84 c5 00 00
	00		 je	 $LN69@LoadMotion
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 275  : 		SMotionEventDataCharacterHide() {}

  00cdb	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventDataCharacterHide@NMotionEvent@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 445  : 						break;

  00ce1	e9 a3 00 00 00	 jmp	 $LN1774@LoadMotion
$LN41@LoadMotion:

; 446  : 					case MOTION_EVENT_TYPE_WARP:
; 447  : 						pData = new TMotionWarpEventData;

  00ce6	6a 14		 push	 20			; 00000014H
  00ce8	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00ced	8b c8		 mov	 ecx, eax
  00cef	83 c4 04	 add	 esp, 4
  00cf2	89 4d 98	 mov	 DWORD PTR $T10[ebp], ecx
  00cf5	85 c9		 test	 ecx, ecx
  00cf7	0f 84 a3 00 00
	00		 je	 $LN69@LoadMotion
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 285  : 		SMotionEventDataWarp() {}

  00cfd	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventDataWarp@NMotionEvent@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 448  : 						break;

  00d03	e9 81 00 00 00	 jmp	 $LN1774@LoadMotion
$LN42@LoadMotion:

; 449  : 					case MOTION_EVENT_TYPE_EFFECT_TO_TARGET:
; 450  : 						pData = new TMotionEffectToTargetEventData;

  00d08	6a 44		 push	 68			; 00000044H
  00d0a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00d0f	8b c8		 mov	 ecx, eax
  00d11	83 c4 04	 add	 esp, 4
  00d14	89 4d 98	 mov	 DWORD PTR $T9[ebp], ecx
  00d17	85 c9		 test	 ecx, ecx
  00d19	0f 84 81 00 00
	00		 je	 $LN69@LoadMotion
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 16   : 		SMotionEventData() : dwFrame(0), fStartingTime(0.0f), fDurationTime(0.0f) {}

  00d1f	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00d26	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00d2d	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 125  : 		SMotionEventDataEffectToTarget() {}

  00d34	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventDataEffectToTarget@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00d3a	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0

; 4596 :         _My_data._Mysize = 0;

  00d41	c7 41 28 00 00
	00 00		 mov	 DWORD PTR [ecx+40], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00d48	c7 41 2c 0f 00
	00 00		 mov	 DWORD PTR [ecx+44], 15	; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00d4f	c6 41 18 00	 mov	 BYTE PTR [ecx+24], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 451  : 						break;

  00d53	eb 4d		 jmp	 SHORT $LN70@LoadMotion
$LN43@LoadMotion:

; 452  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 453  : 					case MOTION_EVENT_TYPE_UNK11:
; 454  : 						pData = new TMotionUnk11EventData;

  00d55	6a 18		 push	 24			; 00000018H
  00d57	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00d5c	8b c8		 mov	 ecx, eax
  00d5e	83 c4 04	 add	 esp, 4
  00d61	89 4d 98	 mov	 DWORD PTR $T8[ebp], ecx
  00d64	85 c9		 test	 ecx, ecx
  00d66	74 38		 je	 SHORT $LN69@LoadMotion
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 298  : 		SMotionEventDataUnk11() {}

  00d68	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventDataUnk11@NMotionEvent@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 455  : 						break;

  00d6e	eb 19		 jmp	 SHORT $LN1774@LoadMotion
$LN44@LoadMotion:

; 456  : 					case MOTION_EVENT_TYPE_UNK12:
; 457  : 						pData = new TMotionUnk12EventData;

  00d70	6a 18		 push	 24			; 00000018H
  00d72	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00d77	8b c8		 mov	 ecx, eax
  00d79	83 c4 04	 add	 esp, 4
  00d7c	89 4d 98	 mov	 DWORD PTR $T7[ebp], ecx
  00d7f	85 c9		 test	 ecx, ecx
  00d81	74 1d		 je	 SHORT $LN69@LoadMotion
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 320  : 		SMotionEventDataUnk12() {}

  00d83	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventDataUnk12@NMotionEvent@@6B@
$LN1774@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  00d89	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00d90	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00d97	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00d9e	eb 02		 jmp	 SHORT $LN70@LoadMotion
$LN69@LoadMotion:
  00da0	33 c9		 xor	 ecx, ecx
$LN70@LoadMotion:
  00da2	8b 45 a0	 mov	 eax, DWORD PTR _j$1$[ebp]
  00da5	8d 14 85 00 00
	00 00		 lea	 edx, DWORD PTR [eax*4]
  00dac	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 466  : 				m_MotionEventDataVector[j]->Load(rkTextFileLoader);

  00dae	57		 push	 edi
  00daf	89 0c 10	 mov	 DWORD PTR [eax+edx], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  00db2	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 466  : 				m_MotionEventDataVector[j]->Load(rkTextFileLoader);

  00db4	8b 0c 10	 mov	 ecx, DWORD PTR [eax+edx]
  00db7	8b 01		 mov	 eax, DWORD PTR [ecx]
  00db9	ff 50 08	 call	 DWORD PTR [eax+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  00dbc	8b 55 a0	 mov	 edx, DWORD PTR _j$1$[ebp]
  00dbf	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00dc1	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00dc8	6a 0c		 push	 12			; 0000000cH

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00dca	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T33[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00dd1	68 00 00 00 00	 push	 OFFSET ??_C@_0N@NHFBHOF@startingtime@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 467  : 				m_MotionEventDataVector[j]->iType = iType;

  00dd6	8b 0c 01	 mov	 ecx, DWORD PTR [ecx+eax]
  00dd9	8b 45 94	 mov	 eax, DWORD PTR _iType$6[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4596 :         _My_data._Mysize = 0;

  00ddc	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T33[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00de3	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T33[ebp+20], 15 ; 0000000fH
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 467  : 				m_MotionEventDataVector[j]->iType = iType;

  00dea	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00ded	8d 4d d8	 lea	 ecx, DWORD PTR $T33[ebp]

; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00df0	c6 45 d8 00	 mov	 BYTE PTR $T33[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00df4	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  00df9	8b 55 a0	 mov	 edx, DWORD PTR _j$1$[ebp]
  00dfc	8b 06		 mov	 eax, DWORD PTR [esi]
  00dfe	8d 0c 95 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 468  : 				if (!rkTextFileLoader.GetTokenFloat("startingtime", &m_MotionEventDataVector[j]->fStartingTime))

  00e05	c6 45 fc 19	 mov	 BYTE PTR __$EHRec$[ebp+8], 25 ; 00000019H
  00e09	8b 04 08	 mov	 eax, DWORD PTR [eax+ecx]
  00e0c	8b cf		 mov	 ecx, edi
  00e0e	83 c0 0c	 add	 eax, 12			; 0000000cH
  00e11	50		 push	 eax
  00e12	8d 45 d8	 lea	 eax, DWORD PTR $T33[ebp]
  00e15	50		 push	 eax
  00e16	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00e1b	8b 55 ec	 mov	 edx, DWORD PTR $T33[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 468  : 				if (!rkTextFileLoader.GetTokenFloat("startingtime", &m_MotionEventDataVector[j]->fStartingTime))

  00e1e	85 c0		 test	 eax, eax
  00e20	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00e24	0f 94 c0	 sete	 al
  00e27	88 45 a7	 mov	 BYTE PTR $T20[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00e2a	83 fa 10	 cmp	 edx, 16			; 00000010H
  00e2d	72 2f		 jb	 SHORT $LN1471@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00e2f	8b 4d d8	 mov	 ecx, DWORD PTR $T33[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00e32	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00e33	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00e35	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00e3b	72 14		 jb	 SHORT $LN1481@LoadMotion

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00e3d	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00e40	83 c2 23	 add	 edx, 35			; 00000023H
  00e43	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00e45	83 c0 fc	 add	 eax, -4			; fffffffcH
  00e48	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00e4b	0f 87 70 02 00
	00		 ja	 $LN559@LoadMotion
$LN1481@LoadMotion:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00e51	52		 push	 edx
  00e52	51		 push	 ecx
  00e53	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00e58	8a 45 a7	 mov	 al, BYTE PTR $T20[ebp]
  00e5b	83 c4 08	 add	 esp, 8
$LN1471@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 468  : 				if (!rkTextFileLoader.GetTokenFloat("startingtime", &m_MotionEventDataVector[j]->fStartingTime))

  00e5e	84 c0		 test	 al, al
  00e60	0f 85 35 f7 ff
	ff		 jne	 $LN1716@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1569 :         return _My_data._Myfirst[_Pos];

  00e66	8b 55 a0	 mov	 edx, DWORD PTR _j$1$[ebp]
  00e69	8b 06		 mov	 eax, DWORD PTR [esi]
  00e6b	8d 0c 95 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*4]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 471  : 				m_MotionEventDataVector[j]->dwFrame = (m_MotionEventDataVector[j]->fStartingTime / c_fFrameTime);

  00e72	8b 34 08	 mov	 esi, DWORD PTR [eax+ecx]
  00e75	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
  00e7a	f3 0f 5e 45 80	 divss	 xmm0, DWORD PTR _c_fFrameTime$1$[ebp]
  00e7f	e8 00 00 00 00	 call	 __ftoui3

; 472  : 
; 473  : 				rkTextFileLoader.SetParentNode();

  00e84	8b cf		 mov	 ecx, edi
  00e86	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00e89	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00e8e	8b 75 9c	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 412  : 			for (DWORD j = 0; j < m_MotionEventDataVector.size(); ++j)

  00e91	8b 4d a0	 mov	 ecx, DWORD PTR _j$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00e94	81 c6 a4 00 00
	00		 add	 esi, 164		; 000000a4H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 412  : 			for (DWORD j = 0; j < m_MotionEventDataVector.size(); ++j)

  00e9a	41		 inc	 ecx
  00e9b	89 4d a0	 mov	 DWORD PTR _j$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00e9e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00ea1	2b 06		 sub	 eax, DWORD PTR [esi]
  00ea3	c1 f8 02	 sar	 eax, 2
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 412  : 			for (DWORD j = 0; j < m_MotionEventDataVector.size(); ++j)

  00ea6	3b c8		 cmp	 ecx, eax
  00ea8	0f 82 22 fb ff
	ff		 jb	 $LL7@LoadMotion
$LN1766@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\TextFileLoader.h

; 54   : 			{

  00eae	c6 45 fc 1b	 mov	 BYTE PTR __$EHRec$[ebp+8], 27 ; 0000001bH
$LN1771@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 361  : 	for (DWORD i = 0; i < rkTextFileLoader.GetChildNodeCount(); ++i)

  00eb2	8b cf		 mov	 ecx, edi
  00eb4	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode
  00eb9	8b 75 90	 mov	 esi, DWORD PTR _i$1$[ebp]
  00ebc	8b cf		 mov	 ecx, edi
  00ebe	46		 inc	 esi
  00ebf	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00ec3	89 75 90	 mov	 DWORD PTR _i$1$[ebp], esi
  00ec6	e8 00 00 00 00	 call	 ?GetChildNodeCount@CTextFileLoader@@QAEKXZ ; CTextFileLoader::GetChildNodeCount
  00ecb	3b f0		 cmp	 esi, eax
  00ecd	0f 82 6d f4 ff
	ff		 jb	 $LL4@LoadMotion
$LN3@LoadMotion:

; 478  : 	std::string strSoundFileNameTemp=c_szFileName;

  00ed3	ff 75 88	 push	 DWORD PTR _c_szFileName$GSCopy$1$[ebp]
  00ed6	8d 4d a8	 lea	 ecx, DWORD PTR _strSoundFileNameTemp$[ebp]
  00ed9	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00ede	8b 7d bc	 mov	 edi, DWORD PTR _strSoundFileNameTemp$[ebp+20]

; 2305 :         const value_type* _Result = _Bx._Buf;

  00ee1	8d 55 a8	 lea	 edx, DWORD PTR _strSoundFileNameTemp$[ebp]

; 683  :     if (_Hay_size != 0) { // room for match, look for it

  00ee4	8b 75 b8	 mov	 esi, DWORD PTR _strSoundFileNameTemp$[ebp+16]

; 2319 :         return _BUF_SIZE <= _Myres;

  00ee7	83 ff 10	 cmp	 edi, 16			; 00000010H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 478  : 	std::string strSoundFileNameTemp=c_szFileName;

  00eea	c6 45 fc 1c	 mov	 BYTE PTR __$EHRec$[ebp+8], 28 ; 0000001cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2306 :         if (_Large_string_engaged()) {

  00eee	0f 43 55 a8	 cmovae	 edx, DWORD PTR _strSoundFileNameTemp$[ebp]

; 683  :     if (_Hay_size != 0) { // room for match, look for it

  00ef2	85 f6		 test	 esi, esi
  00ef4	74 53		 je	 SHORT $LN1497@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 68   :     return _Right < _Left ? _Right : _Left;

  00ef6	83 c9 ff	 or	 ecx, -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 684  :         for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

  00ef9	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 68   :     return _Right < _Left ? _Right : _Left;

  00efc	3b c1		 cmp	 eax, ecx
  00efe	0f 42 c8	 cmovb	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 684  :         for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

  00f01	03 ca		 add	 ecx, edx

; 454  :         return _Left == _Right;

  00f03	80 39 2e	 cmp	 BYTE PTR [ecx], 46	; 0000002eH

; 685  :             if (_Traits::eq(*_Match_try, _Ch)) {

  00f06	74 0a		 je	 SHORT $LN1727@LoadMotion
$LL1511@LoadMotion:

; 687  :             }
; 688  : 
; 689  :             if (_Match_try == _Haystack) {

  00f08	3b ca		 cmp	 ecx, edx
  00f0a	74 3d		 je	 SHORT $LN1497@LoadMotion

; 684  :         for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

  00f0c	49		 dec	 ecx

; 454  :         return _Left == _Right;

  00f0d	80 39 2e	 cmp	 BYTE PTR [ecx], 46	; 0000002eH

; 685  :             if (_Traits::eq(*_Match_try, _Ch)) {

  00f10	75 f6		 jne	 SHORT $LL1511@LoadMotion
$LN1727@LoadMotion:

; 686  :                 return static_cast<size_t>(_Match_try - _Haystack); // found a match

  00f12	2b ca		 sub	 ecx, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterBase\filename.h

; 335  : 	if (string::npos != npos)

  00f14	83 f9 ff	 cmp	 ecx, -1
  00f17	74 30		 je	 SHORT $LN1497@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 68   :     return _Right < _Left ? _Right : _Left;

  00f19	3b f1		 cmp	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00f1b	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T32[ebp], 0

; 2305 :         const value_type* _Result = _Bx._Buf;

  00f22	8d 45 a8	 lea	 eax, DWORD PTR _strSoundFileNameTemp$[ebp]

; 4596 :         _My_data._Mysize = 0;

  00f25	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T32[ebp+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 68   :     return _Right < _Left ? _Right : _Left;

  00f2c	0f 42 ce	 cmovb	 ecx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00f2f	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T32[ebp+20], 15 ; 0000000fH

; 2319 :         return _BUF_SIZE <= _Myres;

  00f36	83 ff 10	 cmp	 edi, 16			; 00000010H

; 3224 :         return assign(_Right._Mypair._Myval2._Myptr() + _Roff, _Count);

  00f39	51		 push	 ecx

; 2306 :         if (_Large_string_engaged()) {

  00f3a	0f 43 45 a8	 cmovae	 eax, DWORD PTR _strSoundFileNameTemp$[ebp]

; 3224 :         return assign(_Right._Mypair._Myval2._Myptr() + _Roff, _Count);

  00f3e	8d 4d d8	 lea	 ecx, DWORD PTR $T32[ebp]
  00f41	50		 push	 eax
  00f42	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterBase\filename.h

; 336  : 		return std::string(str, 0, npos);

  00f47	eb 73		 jmp	 SHORT $LN1775@LoadMotion
$LN1497@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00f49	83 ff 10	 cmp	 edi, 16			; 00000010H

; 2305 :         const value_type* _Result = _Bx._Buf;

  00f4c	8d 45 a8	 lea	 eax, DWORD PTR _strSoundFileNameTemp$[ebp]

; 2306 :         if (_Large_string_engaged()) {

  00f4f	0f 43 45 a8	 cmovae	 eax, DWORD PTR _strSoundFileNameTemp$[ebp]
  00f53	89 45 88	 mov	 DWORD PTR __Result$2$[ebp], eax

; 2928 :         const bool _Stay_small = _Right_size < _BUF_SIZE;

  00f56	83 fe 10	 cmp	 esi, 16			; 00000010H

; 2929 : #endif // __cpp_lib_constexpr_string
; 2930 : 
; 2931 :         // NOTE: even if _Right is in large mode, we only go into large mode ourselves if the actual size of _Right
; 2932 :         // requires it
; 2933 :         if (_Stay_small) { // stay small, don't allocate

  00f59	73 0f		 jae	 SHORT $LN1560@LoadMotion

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00f5b	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 2935 :             _My_data._Mysize = _Right_size;

  00f5e	89 75 e8	 mov	 DWORD PTR $T32[ebp+16], esi

; 2936 :             _My_data._Myres  = _BUF_SIZE - 1;

  00f61	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T32[ebp+20], 15 ; 0000000fH

; 2937 :             return;

  00f68	eb 56		 jmp	 SHORT $LN1776@LoadMotion
$LN1560@LoadMotion:

; 2941 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  00f6a	8b fe		 mov	 edi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 68   :     return _Right < _Left ? _Right : _Left;

  00f6c	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2941 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  00f71	83 cf 0f	 or	 edi, 15			; 0000000fH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 68   :     return _Right < _Left ? _Right : _Left;

  00f74	3b f8		 cmp	 edi, eax
  00f76	0f 47 f8	 cmova	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2942 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  00f79	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00f7c	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  00f81	72 0d		 jb	 SHORT $LN1574@LoadMotion

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00f83	50		 push	 eax
  00f84	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00f89	83 c4 04	 add	 esp, 4
  00f8c	8b c8		 mov	 ecx, eax
  00f8e	eb 13		 jmp	 SHORT $LN1573@LoadMotion
$LN1574@LoadMotion:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  00f90	85 c0		 test	 eax, eax
  00f92	74 0d		 je	 SHORT $LN1575@LoadMotion

; 85   :         return ::operator new(_Bytes);

  00f94	50		 push	 eax
  00f95	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00f9a	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  00f9d	8b c8		 mov	 ecx, eax
  00f9f	eb 02		 jmp	 SHORT $LN1573@LoadMotion
$LN1575@LoadMotion:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  00fa1	33 c9		 xor	 ecx, ecx
$LN1573@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2950 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  00fa3	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00fa6	89 4d d8	 mov	 DWORD PTR $T32[ebp], ecx

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00fa9	50		 push	 eax
  00faa	ff 75 88	 push	 DWORD PTR __Result$2$[ebp]
  00fad	51		 push	 ecx
  00fae	e8 00 00 00 00	 call	 _memcpy
  00fb3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2951 :         _My_data._Mysize = _Right_size;

  00fb6	89 75 e8	 mov	 DWORD PTR $T32[ebp+16], esi

; 2952 :         _My_data._Myres  = _New_capacity;

  00fb9	89 7d ec	 mov	 DWORD PTR $T32[ebp+20], edi
$LN1775@LoadMotion:

; 2776 :         _Tidy_deallocate();

  00fbc	0f 10 45 d8	 movups	 xmm0, XMMWORD PTR $T32[ebp]
$LN1776@LoadMotion:
  00fc0	8d 4d a8	 lea	 ecx, DWORD PTR _strSoundFileNameTemp$[ebp]
  00fc3	0f 11 85 70 ff
	ff ff		 movups	 XMMWORD PTR $T3[ebp], xmm0
  00fca	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00fcf	0f 10 85 70 ff
	ff ff		 movups	 xmm0, XMMWORD PTR $T3[ebp]

; 3175 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00fd6	6a 04		 push	 4
  00fd8	68 00 00 00 00	 push	 OFFSET ??_C@_04NMMFEKGF@?4mss@

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00fdd	0f 11 45 a8	 movups	 XMMWORD PTR _strSoundFileNameTemp$[ebp], xmm0

; 3175 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00fe1	8d 4d a8	 lea	 ecx, DWORD PTR _strSoundFileNameTemp$[ebp]

; 2869 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00fe4	f3 0f 7e 45 e8	 movq	 xmm0, QWORD PTR $T32[ebp+16]
  00fe9	66 0f d6 45 b8	 movq	 QWORD PTR _strSoundFileNameTemp$[ebp+16], xmm0

; 3175 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00fee	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 482  : 	if (strSoundFileNameTemp.length() > 13)

  00ff3	83 7d b8 0d	 cmp	 DWORD PTR _strSoundFileNameTemp$[ebp+16], 13 ; 0000000dH
  00ff7	76 4a		 jbe	 SHORT $LN47@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00ff9	83 7d bc 10	 cmp	 DWORD PTR _strSoundFileNameTemp$[ebp+20], 16 ; 00000010H

; 2296 :         value_type* _Result = _Bx._Buf;

  00ffd	8d 7d a8	 lea	 edi, DWORD PTR _strSoundFileNameTemp$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 486  : 		m_strSoundScriptDataFileName = "sound/";

  01000	8b 75 9c	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2297 :         if (_Large_string_engaged()) {

  01003	0f 43 7d a8	 cmovae	 edi, DWORD PTR _strSoundFileNameTemp$[ebp]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 486  : 		m_strSoundScriptDataFileName = "sound/";

  01007	83 c6 2c	 add	 esi, 44			; 0000002cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0100a	6a 06		 push	 6
  0100c	68 00 00 00 00	 push	 OFFSET ??_C@_06PBLIODKG@sound?1@
  01011	8b ce		 mov	 ecx, esi

; 3843 :         return _Mypair._Myval2._Myptr()[_Off];

  01013	83 c7 0d	 add	 edi, 13			; 0000000dH

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  01016	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0101b	8b cf		 mov	 ecx, edi
  0101d	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL1764@LoadMotion:
  01020	8a 01		 mov	 al, BYTE PTR [ecx]
  01022	41		 inc	 ecx
  01023	84 c0		 test	 al, al
  01025	75 f9		 jne	 SHORT $LL1764@LoadMotion
  01027	2b ca		 sub	 ecx, edx

; 3175 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  01029	51		 push	 ecx
  0102a	57		 push	 edi
  0102b	8b ce		 mov	 ecx, esi
  0102d	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2319 :         return _BUF_SIZE <= _Myres;

  01032	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2306 :         if (_Large_string_engaged()) {

  01036	72 02		 jb	 SHORT $LN1653@LoadMotion

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  01038	8b 36		 mov	 esi, DWORD PTR [esi]
$LN1653@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 489  : 		LoadSoundScriptData(m_strSoundScriptDataFileName.c_str());

  0103a	8b 4d 9c	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  0103d	56		 push	 esi
  0103e	e8 00 00 00 00	 call	 ?LoadSoundScriptData@CRaceMotionData@@QAE_NPBD@Z ; CRaceMotionData::LoadSoundScriptData
$LN47@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  01043	8b 55 bc	 mov	 edx, DWORD PTR _strSoundFileNameTemp$[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 492  : 	return true;

  01046	c6 45 a7 01	 mov	 BYTE PTR $T19[ebp], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  0104a	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0104d	72 28		 jb	 SHORT $LN1669@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0104f	8b 4d a8	 mov	 ecx, DWORD PTR _strSoundFileNameTemp$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  01052	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01053	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01055	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0105b	72 10		 jb	 SHORT $LN1679@LoadMotion

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0105d	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  01060	83 c2 23	 add	 edx, 35			; 00000023H
  01063	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  01065	83 c0 fc	 add	 eax, -4			; fffffffcH
  01068	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0106b	77 63		 ja	 SHORT $LN1703@LoadMotion
$LN1679@LoadMotion:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0106d	52		 push	 edx
  0106e	51		 push	 ecx
  0106f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  01074	83 c4 08	 add	 esp, 8
$LN1669@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  01077	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _strSoundFileNameTemp$[ebp+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0107e	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR _strSoundFileNameTemp$[ebp+20], 15 ; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  01085	c6 45 a8 00	 mov	 BYTE PTR _strSoundFileNameTemp$[ebp], 0
$LN1662@LoadMotion:

; 2319 :         return _BUF_SIZE <= _Myres;

  01089	8b 55 d4	 mov	 edx, DWORD PTR _strNodeName$[ebp+20]
  0108c	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0108f	72 28		 jb	 SHORT $LN1696@LoadMotion
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01091	8b 4d c0	 mov	 ecx, DWORD PTR _strNodeName$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  01094	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  01095	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  01097	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0109d	72 10		 jb	 SHORT $LN1706@LoadMotion

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0109f	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  010a2	83 c2 23	 add	 edx, 35			; 00000023H
  010a5	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  010a7	83 c0 fc	 add	 eax, -4			; fffffffcH
  010aa	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  010ad	77 21		 ja	 SHORT $LN1703@LoadMotion
$LN1706@LoadMotion:

; 264  :         ::operator delete(_Ptr, _Bytes);

  010af	52		 push	 edx
  010b0	51		 push	 ecx
  010b1	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  010b6	83 c4 08	 add	 esp, 8
$LN1696@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 492  : 	return true;

  010b9	8a 45 a7	 mov	 al, BYTE PTR $T19[ebp]
  010bc	e9 8f f1 ff ff	 jmp	 $LN1@LoadMotion
$LN559@LoadMotion:

; 493  : }

  010c1	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1782@LoadMotion:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  010c6	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1783@LoadMotion:
  010cb	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1703@LoadMotion:
  010d0	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN1770@LoadMotion:
  010d5	0f 1f 00	 npad	 3
$LN1763@LoadMotion:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 493  : }

  010d8	00 00 00 00	 DD	 $LN35@LoadMotion
  010dc	00 00 00 00	 DD	 $LN36@LoadMotion
  010e0	00 00 00 00	 DD	 $LN1716@LoadMotion
  010e4	00 00 00 00	 DD	 $LN37@LoadMotion
  010e8	00 00 00 00	 DD	 $LN38@LoadMotion
  010ec	00 00 00 00	 DD	 $LN34@LoadMotion
  010f0	00 00 00 00	 DD	 $LN39@LoadMotion
  010f4	00 00 00 00	 DD	 $LN40@LoadMotion
  010f8	00 00 00 00	 DD	 $LN41@LoadMotion
  010fc	00 00 00 00	 DD	 $LN42@LoadMotion
  01100	00 00 00 00	 DD	 $LN43@LoadMotion
  01104	00 00 00 00	 DD	 $LN44@LoadMotion
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T46[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T45[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$2:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR $T44[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$3:
  00018	8d 4d c0	 lea	 ecx, DWORD PTR _strNodeName$[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$4:
  00020	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _GotoChild$2[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1CGotoChild@CTextFileLoader@@QAE@XZ ; CTextFileLoader::CGotoChild::~CGotoChild
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$5:
  0002b	8d 4d d8	 lea	 ecx, DWORD PTR $T43[ebp]
  0002e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$6:
  00033	8d 4d d8	 lea	 ecx, DWORD PTR $T42[ebp]
  00036	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$7:
  0003b	8d 4d d8	 lea	 ecx, DWORD PTR $T41[ebp]
  0003e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$8:
  00043	8d 4d d8	 lea	 ecx, DWORD PTR $T40[ebp]
  00046	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$9:
  0004b	8d 4d d8	 lea	 ecx, DWORD PTR $T39[ebp]
  0004e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$10:
  00053	8d 4d d8	 lea	 ecx, DWORD PTR $T38[ebp]
  00056	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$11:
  0005b	8d 4d d8	 lea	 ecx, DWORD PTR $T37[ebp]
  0005e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$12:
  00063	8d 4d d8	 lea	 ecx, DWORD PTR $T36[ebp]
  00066	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$13:
  0006b	8d 4d d8	 lea	 ecx, DWORD PTR $T35[ebp]
  0006e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$14:
  00073	8d 4d d8	 lea	 ecx, DWORD PTR $T34[ebp]
  00076	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$26:
  0007b	8d 4d d8	 lea	 ecx, DWORD PTR $T33[ebp]
  0007e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z$27:
  00083	8d 4d a8	 lea	 ecx, DWORD PTR _strSoundFileNameTemp$[ebp]
  00086	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0008b	cc		 int	 3
  0008c	cc		 int	 3
  0008d	cc		 int	 3
  0008e	cc		 int	 3
  0008f	cc		 int	 3
__ehhandler$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z:
  00090	90		 npad	 1
  00091	90		 npad	 1
  00092	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00096	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00099	8b 8a 6c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-148]
  0009f	33 c8		 xor	 ecx, eax
  000a1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a6	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  000a9	33 c8		 xor	 ecx, eax
  000ab	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b0	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z
  000b5	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadMotionData@CRaceMotionData@@QAE_NPBD@Z ENDP	; CRaceMotionData::LoadMotionData
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetSoundInstanceVectorPointer@CRaceMotionData@@QBEPBV?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@XZ
_TEXT	SEGMENT
?GetSoundInstanceVectorPointer@CRaceMotionData@@QBEPBV?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@XZ PROC ; CRaceMotionData::GetSoundInstanceVectorPointer, COMDAT
; _this$ = ecx

; 313  : 	return &m_SoundInstanceVector;

  00000	8d 81 b0 00 00
	00		 lea	 eax, DWORD PTR [ecx+176]

; 314  : }

  00006	c3		 ret	 0
?GetSoundInstanceVectorPointer@CRaceMotionData@@QBEPBV?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@XZ ENDP ; CRaceMotionData::GetSoundInstanceVectorPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetEventStartTime@CRaceMotionData@@QBEMK@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
?GetEventStartTime@CRaceMotionData@@QBEMK@Z PROC	; CRaceMotionData::GetEventStartTime, COMDAT
; _this$ = ecx

; 304  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00003	8b 81 a8 00 00
	00		 mov	 eax, DWORD PTR [ecx+168]
  00009	8b 91 a4 00 00
	00		 mov	 edx, DWORD PTR [ecx+164]
  0000f	2b c2		 sub	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 305  : 	if (dwIndex >= m_MotionEventDataVector.size())

  00011	8b 4d 08	 mov	 ecx, DWORD PTR _dwIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00014	c1 f8 02	 sar	 eax, 2
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 305  : 	if (dwIndex >= m_MotionEventDataVector.size())

  00017	3b c8		 cmp	 ecx, eax
  00019	72 06		 jb	 SHORT $LN2@GetEventSt

; 306  : 		return 0.0f;

  0001b	d9 ee		 fldz

; 309  : }

  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
$LN2@GetEventSt:

; 307  : 
; 308  : 	return m_MotionEventDataVector[dwIndex]->fStartingTime;

  00021	8b 04 8a	 mov	 eax, DWORD PTR [edx+ecx*4]
  00024	d9 40 0c	 fld	 DWORD PTR [eax+12]

; 309  : }

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?GetEventStartTime@CRaceMotionData@@QBEMK@Z ENDP	; CRaceMotionData::GetEventStartTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetEventType@CRaceMotionData@@QBEHK@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
?GetEventType@CRaceMotionData@@QBEHK@Z PROC		; CRaceMotionData::GetEventType, COMDAT
; _this$ = ecx

; 296  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00003	8b 81 a8 00 00
	00		 mov	 eax, DWORD PTR [ecx+168]
  00009	8b 91 a4 00 00
	00		 mov	 edx, DWORD PTR [ecx+164]
  0000f	2b c2		 sub	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 297  : 	if (dwIndex >= m_MotionEventDataVector.size())

  00011	8b 4d 08	 mov	 ecx, DWORD PTR _dwIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00014	c1 f8 02	 sar	 eax, 2
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 297  : 	if (dwIndex >= m_MotionEventDataVector.size())

  00017	3b c8		 cmp	 ecx, eax
  00019	72 06		 jb	 SHORT $LN2@GetEventTy

; 298  : 		return MOTION_EVENT_TYPE_NONE;

  0001b	33 c0		 xor	 eax, eax

; 301  : }

  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
$LN2@GetEventTy:

; 299  : 
; 300  : 	return m_MotionEventDataVector[dwIndex]->iType;

  00021	8b 04 8a	 mov	 eax, DWORD PTR [edx+ecx*4]
  00024	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 301  : }

  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?GetEventType@CRaceMotionData@@QBEHK@Z ENDP		; CRaceMotionData::GetEventType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetMotionAttackingEventDataPointer@CRaceMotionData@@QBEHEPAPBUSMotionEventDataAttack@NMotionEvent@@@Z
_TEXT	SEGMENT
_byIndex$ = 8						; size = 1
_c_ppData$ = 12						; size = 4
?GetMotionAttackingEventDataPointer@CRaceMotionData@@QBEHEPAPBUSMotionEventDataAttack@NMotionEvent@@@Z PROC ; CRaceMotionData::GetMotionAttackingEventDataPointer, COMDAT
; _this$ = ecx

; 280  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00003	8b 81 a8 00 00
	00		 mov	 eax, DWORD PTR [ecx+168]
  00009	8b 91 a4 00 00
	00		 mov	 edx, DWORD PTR [ecx+164]
  0000f	2b c2		 sub	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 280  : {

  00011	56		 push	 esi

; 281  : 	if (byIndex >= m_MotionEventDataVector.size())

  00012	0f b6 75 08	 movzx	 esi, BYTE PTR _byIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00016	c1 f8 02	 sar	 eax, 2
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 281  : 	if (byIndex >= m_MotionEventDataVector.size())

  00019	3b f0		 cmp	 esi, eax
  0001b	73 18		 jae	 SHORT $LN9@GetMotionA

; 282  : 		return FALSE;
; 283  : 
; 284  : 	const CRaceMotionData::TMotionEventData * pData = m_MotionEventDataVector[byIndex];
; 285  : 	const CRaceMotionData::TMotionAttackingEventData * pAttackingEvent = (const CRaceMotionData::TMotionAttackingEventData *)pData;

  0001d	8b 0c b2	 mov	 ecx, DWORD PTR [edx+esi*4]

; 286  : 
; 287  : 	if (MOTION_EVENT_TYPE_SPECIAL_ATTACKING == pAttackingEvent->iType)

  00020	83 79 04 04	 cmp	 DWORD PTR [ecx+4], 4
  00024	74 0f		 je	 SHORT $LN9@GetMotionA

; 289  : 
; 290  : 	*c_ppData = pAttackingEvent;

  00026	8b 45 0c	 mov	 eax, DWORD PTR _c_ppData$[ebp]
  00029	5e		 pop	 esi
  0002a	89 08		 mov	 DWORD PTR [eax], ecx

; 291  : 
; 292  : 	return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1

; 293  : }

  00031	5d		 pop	 ebp
  00032	c2 08 00	 ret	 8
$LN9@GetMotionA:

; 288  : 		return FALSE;

  00035	33 c0		 xor	 eax, eax
  00037	5e		 pop	 esi

; 293  : }

  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?GetMotionAttackingEventDataPointer@CRaceMotionData@@QBEHEPAPBUSMotionEventDataAttack@NMotionEvent@@@Z ENDP ; CRaceMotionData::GetMotionAttackingEventDataPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetMotionEventDataPointer@CRaceMotionData@@QBEHEPAPBUSMotionEventData@NMotionEvent@@@Z
_TEXT	SEGMENT
_byIndex$ = 8						; size = 1
_c_ppData$ = 12						; size = 4
?GetMotionEventDataPointer@CRaceMotionData@@QBEHEPAPBUSMotionEventData@NMotionEvent@@@Z PROC ; CRaceMotionData::GetMotionEventDataPointer, COMDAT
; _this$ = ecx

; 270  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00003	8b 81 a8 00 00
	00		 mov	 eax, DWORD PTR [ecx+168]
  00009	8b 91 a4 00 00
	00		 mov	 edx, DWORD PTR [ecx+164]
  0000f	2b c2		 sub	 eax, edx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 270  : {

  00011	56		 push	 esi

; 271  : 	if (byIndex >= m_MotionEventDataVector.size())

  00012	0f b6 75 08	 movzx	 esi, BYTE PTR _byIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00016	c1 f8 02	 sar	 eax, 2
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 271  : 	if (byIndex >= m_MotionEventDataVector.size())

  00019	3b f0		 cmp	 esi, eax
  0001b	72 07		 jb	 SHORT $LN2@GetMotionE

; 272  : 		return FALSE;

  0001d	33 c0		 xor	 eax, eax
  0001f	5e		 pop	 esi

; 277  : }

  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
$LN2@GetMotionE:

; 273  : 
; 274  : 	*c_ppData = m_MotionEventDataVector[byIndex];

  00024	8b 45 0c	 mov	 eax, DWORD PTR _c_ppData$[ebp]
  00027	8b 0c b2	 mov	 ecx, DWORD PTR [edx+esi*4]
  0002a	5e		 pop	 esi
  0002b	89 08		 mov	 DWORD PTR [eax], ecx

; 275  : 
; 276  : 	return TRUE;

  0002d	b8 01 00 00 00	 mov	 eax, 1

; 277  : }

  00032	5d		 pop	 ebp
  00033	c2 08 00	 ret	 8
?GetMotionEventDataPointer@CRaceMotionData@@QBEHEPAPBUSMotionEventData@NMotionEvent@@@Z ENDP ; CRaceMotionData::GetMotionEventDataPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetMotionEventDataCount@CRaceMotionData@@QBEKXZ
_TEXT	SEGMENT
?GetMotionEventDataCount@CRaceMotionData@@QBEKXZ PROC	; CRaceMotionData::GetMotionEventDataCount, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1549 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00000	8b 81 a8 00 00
	00		 mov	 eax, DWORD PTR [ecx+168]
  00006	2b 81 a4 00 00
	00		 sub	 eax, DWORD PTR [ecx+164]
  0000c	c1 f8 02	 sar	 eax, 2
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 267  : }

  0000f	c3		 ret	 0
?GetMotionEventDataCount@CRaceMotionData@@QBEKXZ ENDP	; CRaceMotionData::GetMotionEventDataCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetLoopEndTime@CRaceMotionData@@QBEMXZ
_TEXT	SEGMENT
?GetLoopEndTime@CRaceMotionData@@QBEMXZ PROC		; CRaceMotionData::GetLoopEndTime, COMDAT
; _this$ = ecx

; 260  : 	return m_fLoopEndTime;

  00000	d9 41 70	 fld	 DWORD PTR [ecx+112]

; 261  : }

  00003	c3		 ret	 0
?GetLoopEndTime@CRaceMotionData@@QBEMXZ ENDP		; CRaceMotionData::GetLoopEndTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetLoopStartTime@CRaceMotionData@@QBEMXZ
_TEXT	SEGMENT
?GetLoopStartTime@CRaceMotionData@@QBEMXZ PROC		; CRaceMotionData::GetLoopStartTime, COMDAT
; _this$ = ecx

; 255  : 	return m_fLoopStartTime;

  00000	d9 41 6c	 fld	 DWORD PTR [ecx+108]

; 256  : }

  00003	c3		 ret	 0
?GetLoopStartTime@CRaceMotionData@@QBEMXZ ENDP		; CRaceMotionData::GetLoopStartTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?IsLoopMotion@CRaceMotionData@@QBEHXZ
_TEXT	SEGMENT
?IsLoopMotion@CRaceMotionData@@QBEHXZ PROC		; CRaceMotionData::IsLoopMotion, COMDAT
; _this$ = ecx

; 250  : 	return m_isLoopMotion;

  00000	8b 41 68	 mov	 eax, DWORD PTR [ecx+104]

; 251  : }

  00003	c3		 ret	 0
?IsLoopMotion@CRaceMotionData@@QBEHXZ ENDP		; CRaceMotionData::IsLoopMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?IsCancelEnableSkill@CRaceMotionData@@QBEHXZ
_TEXT	SEGMENT
?IsCancelEnableSkill@CRaceMotionData@@QBEHXZ PROC	; CRaceMotionData::IsCancelEnableSkill, COMDAT
; _this$ = ecx

; 244  : 	return m_bCancelEnableSkill;

  00000	8b 81 a0 00 00
	00		 mov	 eax, DWORD PTR [ecx+160]

; 245  : }

  00006	c3		 ret	 0
?IsCancelEnableSkill@CRaceMotionData@@QBEHXZ ENDP	; CRaceMotionData::IsCancelEnableSkill
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?HasSplashMotionEvent@CRaceMotionData@@QBEHXZ
_TEXT	SEGMENT
?HasSplashMotionEvent@CRaceMotionData@@QBEHXZ PROC	; CRaceMotionData::HasSplashMotionEvent, COMDAT
; _this$ = ecx

; 238  : 	return m_hasSplashEvent;

  00000	8b 81 bc 00 00
	00		 mov	 eax, DWORD PTR [ecx+188]

; 239  : }

  00006	c3		 ret	 0
?HasSplashMotionEvent@CRaceMotionData@@QBEHXZ ENDP	; CRaceMotionData::HasSplashMotionEvent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetMotionAttackDataReference@CRaceMotionData@@QBEABUSMotionAttackData@NRaceData@@XZ
_TEXT	SEGMENT
?GetMotionAttackDataReference@CRaceMotionData@@QBEABUSMotionAttackData@NRaceData@@XZ PROC ; CRaceMotionData::GetMotionAttackDataReference, COMDAT
; _this$ = ecx

; 232  : 	assert(m_isAttackingMotion);
; 233  : 	return m_MotionAttackData;

  00000	8d 41 78	 lea	 eax, DWORD PTR [ecx+120]

; 234  : }

  00003	c3		 ret	 0
?GetMotionAttackDataReference@CRaceMotionData@@QBEABUSMotionAttackData@NRaceData@@XZ ENDP ; CRaceMotionData::GetMotionAttackDataReference
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetMotionAttackDataPointer@CRaceMotionData@@QBEPBUSMotionAttackData@NRaceData@@XZ
_TEXT	SEGMENT
?GetMotionAttackDataPointer@CRaceMotionData@@QBEPBUSMotionAttackData@NRaceData@@XZ PROC ; CRaceMotionData::GetMotionAttackDataPointer, COMDAT
; _this$ = ecx

; 227  : 	return & m_MotionAttackData;

  00000	8d 41 78	 lea	 eax, DWORD PTR [ecx+120]

; 228  : }

  00003	c3		 ret	 0
?GetMotionAttackDataPointer@CRaceMotionData@@QBEPBUSMotionAttackData@NRaceData@@XZ ENDP ; CRaceMotionData::GetMotionAttackDataPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?isAttackingMotion@CRaceMotionData@@QBEHXZ
_TEXT	SEGMENT
?isAttackingMotion@CRaceMotionData@@QBEHXZ PROC		; CRaceMotionData::isAttackingMotion, COMDAT
; _this$ = ecx

; 222  : 	return m_isAttackingMotion;

  00000	8b 41 74	 mov	 eax, DWORD PTR [ecx+116]

; 223  : }

  00003	c3		 ret	 0
?isAttackingMotion@CRaceMotionData@@QBEHXZ ENDP		; CRaceMotionData::isAttackingMotion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetComboInputEndTime@CRaceMotionData@@QBEMXZ
_TEXT	SEGMENT
?GetComboInputEndTime@CRaceMotionData@@QBEMXZ PROC	; CRaceMotionData::GetComboInputEndTime, COMDAT
; _this$ = ecx

; 215  : 	assert(m_isComboMotion);
; 216  : 	return m_ComboInputData.fInputEndTime;

  00000	d9 41 64	 fld	 DWORD PTR [ecx+100]

; 217  : }

  00003	c3		 ret	 0
?GetComboInputEndTime@CRaceMotionData@@QBEMXZ ENDP	; CRaceMotionData::GetComboInputEndTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetNextComboTime@CRaceMotionData@@QBEMXZ
_TEXT	SEGMENT
?GetNextComboTime@CRaceMotionData@@QBEMXZ PROC		; CRaceMotionData::GetNextComboTime, COMDAT
; _this$ = ecx

; 209  : 	assert(m_isComboMotion);
; 210  : 	return m_ComboInputData.fNextComboTime;

  00000	d9 41 60	 fld	 DWORD PTR [ecx+96]

; 211  : }

  00003	c3		 ret	 0
?GetNextComboTime@CRaceMotionData@@QBEMXZ ENDP		; CRaceMotionData::GetNextComboTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetComboInputStartTime@CRaceMotionData@@QBEMXZ
_TEXT	SEGMENT
?GetComboInputStartTime@CRaceMotionData@@QBEMXZ PROC	; CRaceMotionData::GetComboInputStartTime, COMDAT
; _this$ = ecx

; 203  : 	assert(m_isComboMotion);
; 204  : 	return m_ComboInputData.fInputStartTime;

  00000	d9 41 5c	 fld	 DWORD PTR [ecx+92]

; 205  : }

  00003	c3		 ret	 0
?GetComboInputStartTime@CRaceMotionData@@QBEMXZ ENDP	; CRaceMotionData::GetComboInputStartTime
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?IsComboInputTimeData@CRaceMotionData@@QBEHXZ
_TEXT	SEGMENT
?IsComboInputTimeData@CRaceMotionData@@QBEHXZ PROC	; CRaceMotionData::IsComboInputTimeData, COMDAT
; _this$ = ecx

; 198  : 	return m_isComboMotion;

  00000	8b 41 58	 mov	 eax, DWORD PTR [ecx+88]

; 199  : }

  00003	c3		 ret	 0
?IsComboInputTimeData@CRaceMotionData@@QBEHXZ ENDP	; CRaceMotionData::IsComboInputTimeData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?SetAccumulationPosition@CRaceMotionData@@QAEXABUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_c_rPos$ = 8						; size = 4
?SetAccumulationPosition@CRaceMotionData@@QAEXABUD3DXVECTOR3@@@Z PROC ; CRaceMotionData::SetAccumulationPosition, COMDAT
; _this$ = ecx

; 317  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 318  : 	m_accumulationPosition = c_rPos;

  00003	8b 45 08	 mov	 eax, DWORD PTR _c_rPos$[ebp]
  00006	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  0000a	66 0f d6 41 4c	 movq	 QWORD PTR [ecx+76], xmm0
  0000f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00012	89 41 54	 mov	 DWORD PTR [ecx+84], eax

; 319  : 	m_isAccumulationMotion = TRUE;

  00015	c7 41 48 01 00
	00 00		 mov	 DWORD PTR [ecx+72], 1

; 320  : }

  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?SetAccumulationPosition@CRaceMotionData@@QAEXABUD3DXVECTOR3@@@Z ENDP ; CRaceMotionData::SetAccumulationPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetMotionDuration@CRaceMotionData@@QAEMXZ
_TEXT	SEGMENT
?GetMotionDuration@CRaceMotionData@@QAEMXZ PROC		; CRaceMotionData::GetMotionDuration, COMDAT
; _this$ = ecx

; 187  : 	return m_fMotionDuration;

  00000	d9 41 44	 fld	 DWORD PTR [ecx+68]

; 188  : }

  00003	c3		 ret	 0
?GetMotionDuration@CRaceMotionData@@QAEMXZ ENDP		; CRaceMotionData::GetMotionDuration
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?SetMotionDuration@CRaceMotionData@@QAEXM@Z
_TEXT	SEGMENT
_fDuration$ = 8						; size = 4
?SetMotionDuration@CRaceMotionData@@QAEXM@Z PROC	; CRaceMotionData::SetMotionDuration, COMDAT
; _this$ = ecx

; 191  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 192  : 	m_fMotionDuration = fDuration;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fDuration$[ebp]
  00008	f3 0f 11 41 44	 movss	 DWORD PTR [ecx+68], xmm0

; 193  : }

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?SetMotionDuration@CRaceMotionData@@QAEXM@Z ENDP	; CRaceMotionData::SetMotionDuration
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetSoundScriptFileName@CRaceMotionData@@QBEPBDXZ
_TEXT	SEGMENT
?GetSoundScriptFileName@CRaceMotionData@@QBEPBDXZ PROC	; CRaceMotionData::GetSoundScriptFileName, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00000	83 79 40 10	 cmp	 DWORD PTR [ecx+64], 16	; 00000010H

; 3922 :         return _Mypair._Myval2._Myptr();

  00004	8d 41 2c	 lea	 eax, DWORD PTR [ecx+44]

; 2306 :         if (_Large_string_engaged()) {

  00007	72 02		 jb	 SHORT $LN6@GetSoundSc
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 594  : 	return m_strSoundScriptDataFileName.c_str();

  00009	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@GetSoundSc:

; 595  : }

  0000b	c3		 ret	 0
?GetSoundScriptFileName@CRaceMotionData@@QBEPBDXZ ENDP	; CRaceMotionData::GetSoundScriptFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetMotionFileName@CRaceMotionData@@QBEPBDXZ
_TEXT	SEGMENT
?GetMotionFileName@CRaceMotionData@@QBEPBDXZ PROC	; CRaceMotionData::GetMotionFileName, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00000	83 79 28 10	 cmp	 DWORD PTR [ecx+40], 16	; 00000010H

; 3922 :         return _Mypair._Myval2._Myptr();

  00004	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]

; 2306 :         if (_Large_string_engaged()) {

  00007	72 02		 jb	 SHORT $LN6@GetMotionF
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 589  : 	return m_strMotionFileName.c_str();

  00009	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@GetMotionF:

; 590  : }

  0000b	c3		 ret	 0
?GetMotionFileName@CRaceMotionData@@QBEPBDXZ ENDP	; CRaceMotionData::GetMotionFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetLoopCount@CRaceMotionData@@QBEHXZ
_TEXT	SEGMENT
?GetLoopCount@CRaceMotionData@@QBEHXZ PROC		; CRaceMotionData::GetLoopCount, COMDAT
; _this$ = ecx

; 182  : 	return m_iLoopCount;

  00000	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 183  : }

  00003	c3		 ret	 0
?GetLoopCount@CRaceMotionData@@QBEHXZ ENDP		; CRaceMotionData::GetLoopCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?IsLock@CRaceMotionData@@QBE_NXZ
_TEXT	SEGMENT
?IsLock@CRaceMotionData@@QBE_NXZ PROC			; CRaceMotionData::IsLock, COMDAT
; _this$ = ecx

; 177  : 	return m_isLock ? true : false;

  00000	83 79 0c 00	 cmp	 DWORD PTR [ecx+12], 0
  00004	0f 95 c0	 setne	 al

; 178  : }

  00007	c3		 ret	 0
?IsLock@CRaceMotionData@@QBE_NXZ ENDP			; CRaceMotionData::IsLock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?GetType@CRaceMotionData@@QBEIXZ
_TEXT	SEGMENT
?GetType@CRaceMotionData@@QBEIXZ PROC			; CRaceMotionData::GetType, COMDAT
; _this$ = ecx

; 172  : 	return m_eType;

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 173  : }

  00003	c3		 ret	 0
?GetType@CRaceMotionData@@QBEIXZ ENDP			; CRaceMotionData::GetType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?SetName@CRaceMotionData@@QAEXI@Z
_TEXT	SEGMENT
_eName$ = 8						; size = 4
?SetName@CRaceMotionData@@QAEXI@Z PROC			; CRaceMotionData::SetName, COMDAT
; _this$ = ecx

; 32   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 33   : 	m_eName=eName;

  00003	8b 55 08	 mov	 edx, DWORD PTR _eName$[ebp]
  00006	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 34   : 
; 35   : 	switch (m_eName)

  00009	81 fa 32 01 00
	00		 cmp	 edx, 306		; 00000132H
  0000f	0f 87 9f 00 00
	00		 ja	 $LN86@SetName
  00015	0f 84 b2 00 00
	00		 je	 $LN16@SetName
  0001b	83 fa 26	 cmp	 edx, 38			; 00000026H
  0001e	0f 87 b6 00 00
	00		 ja	 $LN82@SetName
  00024	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN87@SetName[edx]
  0002b	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN88@SetName[eax*4]
$LN4@SetName:

; 36   : 	{
; 37   : 		case NAME_NONE:
; 38   : 			SetType(TYPE_NONE);

  00032	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 0

; 150  : 			break;
; 151  : 	}
; 152  : }

  00039	5d		 pop	 ebp

; 36   : 	{
; 37   : 		case NAME_NONE:
; 38   : 			SetType(TYPE_NONE);

  0003a	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN5@SetName:

; 39   : 			break;
; 40   : 		case NAME_WAIT:
; 41   : 		case NAME_INTRO_WAIT:
; 42   : 		case NAME_STOP:
; 43   : 			SetType(TYPE_WAIT);

  0003f	c7 45 08 01 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 1

; 150  : 			break;
; 151  : 	}
; 152  : }

  00046	5d		 pop	 ebp

; 39   : 			break;
; 40   : 		case NAME_WAIT:
; 41   : 		case NAME_INTRO_WAIT:
; 42   : 		case NAME_STOP:
; 43   : 			SetType(TYPE_WAIT);

  00047	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN8@SetName:

; 44   : 			break;
; 45   : 		case NAME_WALK:
; 46   : 		case NAME_RUN:
; 47   : 			SetType(TYPE_MOVE);

  0004c	c7 45 08 02 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 2

; 150  : 			break;
; 151  : 	}
; 152  : }

  00053	5d		 pop	 ebp

; 44   : 			break;
; 45   : 		case NAME_WALK:
; 46   : 		case NAME_RUN:
; 47   : 			SetType(TYPE_MOVE);

  00054	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN10@SetName:

; 48   : 			break;
; 49   : 		case NAME_DAMAGE:
; 50   : 		case NAME_DAMAGE_BACK:
; 51   : 			SetType(TYPE_DAMAGE);

  00059	c7 45 08 05 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 5

; 150  : 			break;
; 151  : 	}
; 152  : }

  00060	5d		 pop	 ebp

; 48   : 			break;
; 49   : 		case NAME_DAMAGE:
; 50   : 		case NAME_DAMAGE_BACK:
; 51   : 			SetType(TYPE_DAMAGE);

  00061	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN12@SetName:

; 52   : 			break;
; 53   : 		case NAME_DAMAGE_FLYING:
; 54   : 		case NAME_DAMAGE_FLYING_BACK:
; 55   : 			SetType(TYPE_KNOCKDOWN);

  00066	c7 45 08 06 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 6

; 150  : 			break;
; 151  : 	}
; 152  : }

  0006d	5d		 pop	 ebp

; 52   : 			break;
; 53   : 		case NAME_DAMAGE_FLYING:
; 54   : 		case NAME_DAMAGE_FLYING_BACK:
; 55   : 			SetType(TYPE_KNOCKDOWN);

  0006e	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN14@SetName:

; 56   : 			break;
; 57   : 		case NAME_STAND_UP:
; 58   : 		case NAME_STAND_UP_BACK:
; 59   : 			SetType(TYPE_STANDUP);

  00073	c7 45 08 09 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 9

; 150  : 			break;
; 151  : 	}
; 152  : }

  0007a	5d		 pop	 ebp

; 56   : 			break;
; 57   : 		case NAME_STAND_UP:
; 58   : 		case NAME_STAND_UP_BACK:
; 59   : 			SetType(TYPE_STANDUP);

  0007b	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN65@SetName:

; 119  : 			break;
; 120  : 		case NAME_DEAD:
; 121  : 		case NAME_DEAD_BACK:
; 122  : 			SetType(TYPE_DIE);

  00080	c7 45 08 07 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 7

; 150  : 			break;
; 151  : 	}
; 152  : }

  00087	5d		 pop	 ebp

; 119  : 			break;
; 120  : 		case NAME_DEAD:
; 121  : 		case NAME_DEAD_BACK:
; 122  : 			SetType(TYPE_DIE);

  00088	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN67@SetName:

; 123  : 			break;
; 124  : 		case NAME_NORMAL_ATTACK:
; 125  : 			SetType(TYPE_ATTACK);

  0008d	c7 45 08 03 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 3

; 150  : 			break;
; 151  : 	}
; 152  : }

  00094	5d		 pop	 ebp

; 123  : 			break;
; 124  : 		case NAME_NORMAL_ATTACK:
; 125  : 			SetType(TYPE_ATTACK);

  00095	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN68@SetName:

; 126  : 			break;
; 127  : 		case NAME_COMBO_ATTACK_1:
; 128  : 		case NAME_COMBO_ATTACK_2:
; 129  : 		case NAME_COMBO_ATTACK_3:
; 130  : 		case NAME_COMBO_ATTACK_4:
; 131  : 		case NAME_COMBO_ATTACK_5:
; 132  : 		case NAME_COMBO_ATTACK_6:
; 133  : 		case NAME_COMBO_ATTACK_7:
; 134  : 		case NAME_COMBO_ATTACK_8:
; 135  : 			SetType(TYPE_COMBO);

  0009a	c7 45 08 04 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 4

; 150  : 			break;
; 151  : 	}
; 152  : }

  000a1	5d		 pop	 ebp

; 126  : 			break;
; 127  : 		case NAME_COMBO_ATTACK_1:
; 128  : 		case NAME_COMBO_ATTACK_2:
; 129  : 		case NAME_COMBO_ATTACK_3:
; 130  : 		case NAME_COMBO_ATTACK_4:
; 131  : 		case NAME_COMBO_ATTACK_5:
; 132  : 		case NAME_COMBO_ATTACK_6:
; 133  : 		case NAME_COMBO_ATTACK_7:
; 134  : 		case NAME_COMBO_ATTACK_8:
; 135  : 			SetType(TYPE_COMBO);

  000a2	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN76@SetName:

; 136  : 			break;
; 137  : 		case NAME_FISHING_THROW:
; 138  : 		case NAME_FISHING_WAIT:
; 139  : 		case NAME_FISHING_REACT:
; 140  : 		case NAME_FISHING_CATCH:
; 141  : 		case NAME_FISHING_FAIL:
; 142  : 		case NAME_FISHING_STOP:
; 143  : 			SetType(TYPE_FISHING);

  000a7	c7 45 08 0b 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 11 ; 0000000bH

; 150  : 			break;
; 151  : 	}
; 152  : }

  000ae	5d		 pop	 ebp

; 136  : 			break;
; 137  : 		case NAME_FISHING_THROW:
; 138  : 		case NAME_FISHING_WAIT:
; 139  : 		case NAME_FISHING_REACT:
; 140  : 		case NAME_FISHING_CATCH:
; 141  : 		case NAME_FISHING_FAIL:
; 142  : 		case NAME_FISHING_STOP:
; 143  : 			SetType(TYPE_FISHING);

  000af	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN86@SetName:

; 34   : 
; 35   : 	switch (m_eName)

  000b4	8d 82 cd fe ff
	ff		 lea	 eax, DWORD PTR [edx-307]
  000ba	83 f8 30	 cmp	 eax, 48			; 00000030H
  000bd	77 1b		 ja	 SHORT $LN82@SetName
  000bf	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN89@SetName[eax]
  000c6	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN90@SetName[eax*4]
$LN16@SetName:

; 60   : 			break;
; 61   : 		case NAME_SPAWN:
; 62   : 		case NAME_CHANGE_WEAPON:
; 63   : 		case NAME_INTRO_SELECTED:
; 64   : 		case NAME_INTRO_NOT_SELECTED:
; 65   : 		case NAME_SPECIAL_1:
; 66   : 		case NAME_SPECIAL_2:
; 67   : 		case NAME_SPECIAL_3:
; 68   : 		case NAME_SPECIAL_4:
; 69   : 		case NAME_SPECIAL_5:
; 70   : 		case NAME_SPECIAL_6:
; 71   : 		case NAME_CLAP:
; 72   : 		case NAME_DANCE_1:
; 73   : 		case NAME_DANCE_2:
; 74   : 		case NAME_DANCE_3:
; 75   : 		case NAME_DANCE_4:
; 76   : 		case NAME_DANCE_5:
; 77   : 		case NAME_DANCE_6:
; 78   : 		case NAME_CONGRATULATION:
; 79   : 		case NAME_FORGIVE:
; 80   : 		case NAME_ANGRY:
; 81   : 		case NAME_ATTRACTIVE:
; 82   : 		case NAME_SAD:
; 83   : 		case NAME_SHY:
; 84   : 		case NAME_CHEERUP:
; 85   : 		case NAME_BANTER:
; 86   : 		case NAME_JOY:
; 87   : 		case NAME_CHEERS_1:
; 88   : 		case NAME_CHEERS_2:
; 89   : 		case NAME_KISS_WITH_WARRIOR:
; 90   : 		case NAME_KISS_WITH_ASSASSIN:
; 91   : 		case NAME_KISS_WITH_SURA:
; 92   : 		case NAME_KISS_WITH_SHAMAN:
; 93   : #ifdef ENABLE_WOLFMAN_CHARACTER
; 94   : 		case NAME_KISS_WITH_WOLFMAN:
; 95   : #endif
; 96   : 		case NAME_FRENCH_KISS_WITH_WARRIOR:
; 97   : 		case NAME_FRENCH_KISS_WITH_ASSASSIN:
; 98   : 		case NAME_FRENCH_KISS_WITH_SURA:
; 99   : 		case NAME_FRENCH_KISS_WITH_SHAMAN:
; 100  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 101  : 		case NAME_FRENCH_KISS_WITH_WOLFMAN:
; 102  : #endif
; 103  : 		case NAME_SLAP_HIT_WITH_WARRIOR:
; 104  : 		case NAME_SLAP_HIT_WITH_ASSASSIN:
; 105  : 		case NAME_SLAP_HIT_WITH_SURA:
; 106  : 		case NAME_SLAP_HIT_WITH_SHAMAN:
; 107  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 108  : 		case NAME_SLAP_HIT_WITH_WOLFMAN:
; 109  : #endif
; 110  : 		case NAME_SLAP_HURT_WITH_WARRIOR:
; 111  : 		case NAME_SLAP_HURT_WITH_ASSASSIN:
; 112  : 		case NAME_SLAP_HURT_WITH_SURA:
; 113  : 		case NAME_SLAP_HURT_WITH_SHAMAN:
; 114  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 115  : 		case NAME_SLAP_HURT_WITH_WOLFMAN:
; 116  : #endif
; 117  : 		case NAME_DIG:
; 118  : 			SetType(TYPE_EVENT);

  000cd	c7 45 08 0a 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 10 ; 0000000aH

; 150  : 			break;
; 151  : 	}
; 152  : }

  000d4	5d		 pop	 ebp

; 60   : 			break;
; 61   : 		case NAME_SPAWN:
; 62   : 		case NAME_CHANGE_WEAPON:
; 63   : 		case NAME_INTRO_SELECTED:
; 64   : 		case NAME_INTRO_NOT_SELECTED:
; 65   : 		case NAME_SPECIAL_1:
; 66   : 		case NAME_SPECIAL_2:
; 67   : 		case NAME_SPECIAL_3:
; 68   : 		case NAME_SPECIAL_4:
; 69   : 		case NAME_SPECIAL_5:
; 70   : 		case NAME_SPECIAL_6:
; 71   : 		case NAME_CLAP:
; 72   : 		case NAME_DANCE_1:
; 73   : 		case NAME_DANCE_2:
; 74   : 		case NAME_DANCE_3:
; 75   : 		case NAME_DANCE_4:
; 76   : 		case NAME_DANCE_5:
; 77   : 		case NAME_DANCE_6:
; 78   : 		case NAME_CONGRATULATION:
; 79   : 		case NAME_FORGIVE:
; 80   : 		case NAME_ANGRY:
; 81   : 		case NAME_ATTRACTIVE:
; 82   : 		case NAME_SAD:
; 83   : 		case NAME_SHY:
; 84   : 		case NAME_CHEERUP:
; 85   : 		case NAME_BANTER:
; 86   : 		case NAME_JOY:
; 87   : 		case NAME_CHEERS_1:
; 88   : 		case NAME_CHEERS_2:
; 89   : 		case NAME_KISS_WITH_WARRIOR:
; 90   : 		case NAME_KISS_WITH_ASSASSIN:
; 91   : 		case NAME_KISS_WITH_SURA:
; 92   : 		case NAME_KISS_WITH_SHAMAN:
; 93   : #ifdef ENABLE_WOLFMAN_CHARACTER
; 94   : 		case NAME_KISS_WITH_WOLFMAN:
; 95   : #endif
; 96   : 		case NAME_FRENCH_KISS_WITH_WARRIOR:
; 97   : 		case NAME_FRENCH_KISS_WITH_ASSASSIN:
; 98   : 		case NAME_FRENCH_KISS_WITH_SURA:
; 99   : 		case NAME_FRENCH_KISS_WITH_SHAMAN:
; 100  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 101  : 		case NAME_FRENCH_KISS_WITH_WOLFMAN:
; 102  : #endif
; 103  : 		case NAME_SLAP_HIT_WITH_WARRIOR:
; 104  : 		case NAME_SLAP_HIT_WITH_ASSASSIN:
; 105  : 		case NAME_SLAP_HIT_WITH_SURA:
; 106  : 		case NAME_SLAP_HIT_WITH_SHAMAN:
; 107  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 108  : 		case NAME_SLAP_HIT_WITH_WOLFMAN:
; 109  : #endif
; 110  : 		case NAME_SLAP_HURT_WITH_WARRIOR:
; 111  : 		case NAME_SLAP_HURT_WITH_ASSASSIN:
; 112  : 		case NAME_SLAP_HURT_WITH_SURA:
; 113  : 		case NAME_SLAP_HURT_WITH_SHAMAN:
; 114  : #ifdef ENABLE_WOLFMAN_CHARACTER
; 115  : 		case NAME_SLAP_HURT_WITH_WOLFMAN:
; 116  : #endif
; 117  : 		case NAME_DIG:
; 118  : 			SetType(TYPE_EVENT);

  000d5	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN82@SetName:

; 144  : 			break;
; 145  : 		default:
; 146  : 			if (eName>=NAME_SKILL && eName<=NAME_SKILL+SKILL_NUM)

  000da	8d 42 ce	 lea	 eax, DWORD PTR [edx-50]
  000dd	3d ff 00 00 00	 cmp	 eax, 255		; 000000ffH
  000e2	77 0d		 ja	 SHORT $LN83@SetName

; 147  : 				SetType(TYPE_SKILL);

  000e4	c7 45 08 08 00
	00 00		 mov	 DWORD PTR _eName$[ebp], 8

; 150  : 			break;
; 151  : 	}
; 152  : }

  000eb	5d		 pop	 ebp

; 147  : 				SetType(TYPE_SKILL);

  000ec	e9 00 00 00 00	 jmp	 ?SetType@CRaceMotionData@@IAEXI@Z ; CRaceMotionData::SetType
$LN83@SetName:

; 148  : 			else
; 149  : 				TraceError("CRaceMotionData::SetName - UNKNOWN NAME %d", eName);

  000f1	52		 push	 edx
  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@NGIMIHAA@CRaceMotionData?3?3SetName?5?9?5UNKN@
  000f7	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  000fc	83 c4 08	 add	 esp, 8

; 150  : 			break;
; 151  : 	}
; 152  : }

  000ff	5d		 pop	 ebp
  00100	c2 04 00	 ret	 4
  00103	90		 npad	 1
$LN88@SetName:
  00104	00 00 00 00	 DD	 $LN4@SetName
  00108	00 00 00 00	 DD	 $LN5@SetName
  0010c	00 00 00 00	 DD	 $LN8@SetName
  00110	00 00 00 00	 DD	 $LN16@SetName
  00114	00 00 00 00	 DD	 $LN10@SetName
  00118	00 00 00 00	 DD	 $LN12@SetName
  0011c	00 00 00 00	 DD	 $LN14@SetName
  00120	00 00 00 00	 DD	 $LN65@SetName
  00124	00 00 00 00	 DD	 $LN67@SetName
  00128	00 00 00 00	 DD	 $LN68@SetName
  0012c	00 00 00 00	 DD	 $LN76@SetName
$LN87@SetName:
  00130	00		 DB	 0
  00131	01		 DB	 1
  00132	02		 DB	 2
  00133	02		 DB	 2
  00134	03		 DB	 3
  00135	04		 DB	 4
  00136	05		 DB	 5
  00137	06		 DB	 6
  00138	04		 DB	 4
  00139	05		 DB	 5
  0013a	06		 DB	 6
  0013b	07		 DB	 7
  0013c	07		 DB	 7
  0013d	08		 DB	 8
  0013e	09		 DB	 9
  0013f	09		 DB	 9
  00140	09		 DB	 9
  00141	09		 DB	 9
  00142	09		 DB	 9
  00143	09		 DB	 9
  00144	09		 DB	 9
  00145	09		 DB	 9
  00146	01		 DB	 1
  00147	03		 DB	 3
  00148	03		 DB	 3
  00149	03		 DB	 3
  0014a	0a		 DB	 10			; 0000000aH
  0014b	0a		 DB	 10			; 0000000aH
  0014c	0a		 DB	 10			; 0000000aH
  0014d	0a		 DB	 10			; 0000000aH
  0014e	0a		 DB	 10			; 0000000aH
  0014f	0a		 DB	 10			; 0000000aH
  00150	01		 DB	 1
  00151	03		 DB	 3
  00152	03		 DB	 3
  00153	03		 DB	 3
  00154	03		 DB	 3
  00155	03		 DB	 3
  00156	03		 DB	 3
  00157	90		 npad	 1
$LN90@SetName:
  00158	00 00 00 00	 DD	 $LN16@SetName
  0015c	00 00 00 00	 DD	 $LN82@SetName
$LN89@SetName:
  00160	00		 DB	 0
  00161	00		 DB	 0
  00162	00		 DB	 0
  00163	00		 DB	 0
  00164	00		 DB	 0
  00165	00		 DB	 0
  00166	00		 DB	 0
  00167	00		 DB	 0
  00168	00		 DB	 0
  00169	00		 DB	 0
  0016a	00		 DB	 0
  0016b	00		 DB	 0
  0016c	00		 DB	 0
  0016d	00		 DB	 0
  0016e	00		 DB	 0
  0016f	00		 DB	 0
  00170	00		 DB	 0
  00171	00		 DB	 0
  00172	00		 DB	 0
  00173	00		 DB	 0
  00174	00		 DB	 0
  00175	00		 DB	 0
  00176	00		 DB	 0
  00177	00		 DB	 0
  00178	00		 DB	 0
  00179	00		 DB	 0
  0017a	00		 DB	 0
  0017b	00		 DB	 0
  0017c	00		 DB	 0
  0017d	01		 DB	 1
  0017e	01		 DB	 1
  0017f	01		 DB	 1
  00180	01		 DB	 1
  00181	01		 DB	 1
  00182	01		 DB	 1
  00183	01		 DB	 1
  00184	01		 DB	 1
  00185	01		 DB	 1
  00186	01		 DB	 1
  00187	01		 DB	 1
  00188	00		 DB	 0
  00189	00		 DB	 0
  0018a	00		 DB	 0
  0018b	00		 DB	 0
  0018c	00		 DB	 0
  0018d	00		 DB	 0
  0018e	00		 DB	 0
  0018f	00		 DB	 0
  00190	00		 DB	 0
?SetName@CRaceMotionData@@QAEXI@Z ENDP			; CRaceMotionData::SetName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?Destroy@CRaceMotionData@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CRaceMotionData@@QAEXXZ PROC			; CRaceMotionData::Destroy, COMDAT
; _this$ = ecx

; 625  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 626  : 	stl_wipe(m_MotionEventDataVector);

  00003	8d 86 a4 00 00
	00		 lea	 eax, DWORD PTR [esi+164]
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$stl_wipe@V?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@@YAXAAV?$vector@PAUSMotionEventData@NMotionEvent@@V?$allocator@PAUSMotionEventData@NMotionEvent@@@std@@@std@@@Z ; stl_wipe<std::vector<NMotionEvent::SMotionEventData *,std::allocator<NMotionEvent::SMotionEventData *> > >
  0000f	83 c4 04	 add	 esp, 4

; 627  : 	Initialize();

  00012	8b ce		 mov	 ecx, esi
  00014	5e		 pop	 esi
  00015	e9 00 00 00 00	 jmp	 ?Initialize@CRaceMotionData@@QAEXXZ ; CRaceMotionData::Initialize
?Destroy@CRaceMotionData@@QAEXXZ ENDP			; CRaceMotionData::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?Initialize@CRaceMotionData@@QAEXXZ
_TEXT	SEGMENT
?Initialize@CRaceMotionData@@QAEXXZ PROC		; CRaceMotionData::Initialize, COMDAT
; _this$ = ecx

; 599  : 	m_iLoopCount = 0;
; 600  : 	m_fMotionDuration = 0.0f;
; 601  : 	m_accumulationPosition.x = 0.0f;
; 602  : 	m_accumulationPosition.y = 0.0f;
; 603  : 	m_accumulationPosition.z = 0.0f;
; 604  : 	m_fLoopStartTime = 0.0f;
; 605  : 	m_fLoopEndTime = 0.0f;
; 606  : 
; 607  : 	m_isAccumulationMotion = FALSE;
; 608  : 	m_isComboMotion = FALSE;
; 609  : 	m_isLoopMotion = FALSE;
; 610  : 	m_isAttackingMotion = FALSE;
; 611  : 	m_bCancelEnableSkill = FALSE;
; 612  : 
; 613  : 	m_hasSplashEvent = FALSE;
; 614  : 
; 615  : 	m_isLock = FALSE;
; 616  : 
; 617  : 	m_eType=TYPE_NONE;
; 618  : 	m_eName=NAME_NONE;
; 619  : 
; 620  : 	m_MotionEventDataVector.clear();

  00000	8b 81 a4 00 00
	00		 mov	 eax, DWORD PTR [ecx+164]
  00006	56		 push	 esi

; 621  : 	m_SoundInstanceVector.clear();

  00007	8d b1 b0 00 00
	00		 lea	 esi, DWORD PTR [ecx+176]
  0000d	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  00014	c7 41 44 00 00
	00 00		 mov	 DWORD PTR [ecx+68], 0
  0001b	c7 41 4c 00 00
	00 00		 mov	 DWORD PTR [ecx+76], 0
  00022	c7 41 50 00 00
	00 00		 mov	 DWORD PTR [ecx+80], 0
  00029	c7 41 54 00 00
	00 00		 mov	 DWORD PTR [ecx+84], 0
  00030	c7 41 6c 00 00
	00 00		 mov	 DWORD PTR [ecx+108], 0
  00037	c7 41 70 00 00
	00 00		 mov	 DWORD PTR [ecx+112], 0
  0003e	c7 41 48 00 00
	00 00		 mov	 DWORD PTR [ecx+72], 0
  00045	c7 41 58 00 00
	00 00		 mov	 DWORD PTR [ecx+88], 0
  0004c	c7 41 68 00 00
	00 00		 mov	 DWORD PTR [ecx+104], 0
  00053	c7 41 74 00 00
	00 00		 mov	 DWORD PTR [ecx+116], 0
  0005a	c7 81 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+160], 0
  00064	c7 81 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+188], 0
  0006e	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00075	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0007c	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00083	89 81 a8 00 00
	00		 mov	 DWORD PTR [ecx+168], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1455 :         _Destroy(_Myfirst, _Mylast);

  00089	8b ce		 mov	 ecx, esi
  0008b	ff 76 04	 push	 DWORD PTR [esi+4]
  0008e	ff 36		 push	 DWORD PTR [esi]
  00090	e8 00 00 00 00	 call	 ?_Destroy@?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@AAEXPAUSSoundInstance@NSound@@0@Z ; std::vector<NSound::SSoundInstance,std::allocator<NSound::SSoundInstance> >::_Destroy

; 1456 :         _Mylast = _Myfirst;

  00095	8b 06		 mov	 eax, DWORD PTR [esi]
  00097	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0009a	5e		 pop	 esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 622  : }

  0009b	c3		 ret	 0
?Initialize@CRaceMotionData@@QAEXXZ ENDP		; CRaceMotionData::Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ??1CRaceMotionData@@UAE@XZ
_TEXT	SEGMENT
??1CRaceMotionData@@UAE@XZ PROC				; CRaceMotionData::~CRaceMotionData, COMDAT
; _this$ = ecx

; 636  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CRaceMotionData@@6B@

; 637  : 	Destroy();

  00009	e8 00 00 00 00	 call	 ?Destroy@CRaceMotionData@@QAEXXZ ; CRaceMotionData::Destroy

; 638  : }

  0000e	8d 8e b0 00 00
	00		 lea	 ecx, DWORD PTR [esi+176]
  00014	e8 00 00 00 00	 call	 ??1?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@QAE@XZ ; std::vector<NSound::SSoundInstance,std::allocator<NSound::SSoundInstance> >::~vector<NSound::SSoundInstance,std::allocator<NSound::SSoundInstance> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00019	8b 86 a4 00 00
	00		 mov	 eax, DWORD PTR [esi+164]
  0001f	85 c0		 test	 eax, eax
  00021	74 51		 je	 SHORT $LN6@CRaceMotio

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00023	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  00029	2b c8		 sub	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002b	83 e1 fc	 and	 ecx, -4			; fffffffcH

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0002e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00034	72 16		 jb	 SHORT $LN22@CRaceMotio

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00036	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00039	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0003c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0003e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00041	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00044	0f 87 bb 00 00
	00		 ja	 $LN77@CRaceMotio

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0004a	8b c2		 mov	 eax, edx
$LN22@CRaceMotio:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0004c	51		 push	 ecx
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  00053	c7 86 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+164], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  0005d	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00060	c7 86 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+168], 0

; 1769 :             _Myend   = nullptr;

  0006a	c7 86 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+172], 0
$LN6@CRaceMotio:
  00074	8d 8e 94 00 00
	00		 lea	 ecx, DWORD PTR [esi+148]
  0007a	e8 00 00 00 00	 call	 ??1?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAE@XZ ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::~vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  0007f	8b 4e 40	 mov	 ecx, DWORD PTR [esi+64]
  00082	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00085	72 28		 jb	 SHORT $LN43@CRaceMotio
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00087	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0008a	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0008b	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00091	72 12		 jb	 SHORT $LN53@CRaceMotio

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00093	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00096	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00099	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0009b	83 c0 fc	 add	 eax, -4			; fffffffcH
  0009e	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a1	77 62		 ja	 SHORT $LN77@CRaceMotio

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000a3	8b c2		 mov	 eax, edx
$LN53@CRaceMotio:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a5	51		 push	 ecx
  000a6	50		 push	 eax
  000a7	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000ac	83 c4 08	 add	 esp, 8
$LN43@CRaceMotio:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  000af	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000b6	c7 46 40 0f 00
	00 00		 mov	 DWORD PTR [esi+64], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000bd	c6 46 2c 00	 mov	 BYTE PTR [esi+44], 0

; 2319 :         return _BUF_SIZE <= _Myres;

  000c1	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  000c4	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000c7	72 28		 jb	 SHORT $LN70@CRaceMotio
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000c9	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000cc	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000cd	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000d3	72 12		 jb	 SHORT $LN80@CRaceMotio

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000d5	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000d8	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000db	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000dd	83 c0 fc	 add	 eax, -4			; fffffffcH
  000e0	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000e3	77 20		 ja	 SHORT $LN77@CRaceMotio

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000e5	8b c2		 mov	 eax, edx
$LN80@CRaceMotio:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000e7	51		 push	 ecx
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000ee	83 c4 08	 add	 esp, 8
$LN70@CRaceMotio:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  000f1	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000f8	c7 46 28 0f 00
	00 00		 mov	 DWORD PTR [esi+40], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000ff	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00103	5e		 pop	 esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 638  : }

  00104	c3		 ret	 0
$LN77@CRaceMotio:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00105	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN85@CRaceMotio:
  0010a	cc		 int	 3
??1CRaceMotionData@@UAE@XZ ENDP				; CRaceMotionData::~CRaceMotionData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ??0CRaceMotionData@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CRaceMotionData@@QAE@XZ PROC				; CRaceMotionData::CRaceMotionData, COMDAT
; _this$ = ecx

; 631  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CRaceMotionData@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00010	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 4596 :         _My_data._Mysize = 0;

  00017	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0001e	c7 46 28 0f 00
	00 00		 mov	 DWORD PTR [esi+40], 15	; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00025	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  00029	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0

; 4596 :         _My_data._Mysize = 0;

  00030	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00037	c7 46 40 0f 00
	00 00		 mov	 DWORD PTR [esi+64], 15	; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0003e	c6 46 2c 00	 mov	 BYTE PTR [esi+44], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00042	c7 86 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+148], 0
  0004c	c7 86 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+152], 0
  00056	c7 86 9c 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+156], 0
  00060	c7 86 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+164], 0
  0006a	c7 86 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+168], 0
  00074	c7 86 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+172], 0
  0007e	c7 86 b0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+176], 0
  00088	c7 86 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+180], 0
  00092	c7 86 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+184], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 632  : 	Initialize();

  0009c	e8 00 00 00 00	 call	 ?Initialize@CRaceMotionData@@QAEXXZ ; CRaceMotionData::Initialize

; 633  : }

  000a1	8b c6		 mov	 eax, esi
  000a3	5e		 pop	 esi
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c3		 ret	 0
??0CRaceMotionData@@QAE@XZ ENDP				; CRaceMotionData::CRaceMotionData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?DestroySystem@CRaceMotionData@@SAXXZ
_TEXT	SEGMENT
?DestroySystem@CRaceMotionData@@SAXXZ PROC		; CRaceMotionData::DestroySystem, COMDAT

; 15   : {

  00000	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  00001	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 15   : {

  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 269  :     const auto _ULast = _Get_unwrapped(_Last);

  00008	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+8

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b f7		 cmp	 esi, edi
  00010	74 2a		 je	 SHORT $LN32@DestroySys
$LL22@DestroySys:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00014	85 c9		 test	 ecx, ecx
  00016	74 06		 je	 SHORT $LN20@DestroySys
  00018	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001a	6a 01		 push	 1
  0001c	ff 10		 call	 DWORD PTR [eax]
$LN20@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\algorithm

; 270  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001e	83 c6 04	 add	 esi, 4
  00021	3b f7		 cmp	 esi, edi
  00023	75 ed		 jne	 SHORT $LL22@DestroySys
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00025	a1 04 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+4
  0002a	a3 08 00 00 00	 mov	 DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+8, eax
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 17   : }

  0002f	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+16
  00034	5f		 pop	 edi
  00035	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+20, eax
  0003a	5e		 pop	 esi
  0003b	c3		 ret	 0
$LN32@DestroySys:
  0003c	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+16
  00041	5f		 pop	 edi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00042	89 35 08 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+8, esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 17   : }

  00048	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+20, eax
  0004d	5e		 pop	 esi
  0004e	c3		 ret	 0
?DestroySystem@CRaceMotionData@@SAXXZ ENDP		; CRaceMotionData::DestroySystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?CreateSystem@CRaceMotionData@@SAXI@Z
_TEXT	SEGMENT
_uCapacity$ = 8						; size = 4
?CreateSystem@CRaceMotionData@@SAXI@Z PROC		; CRaceMotionData::CreateSystem, COMDAT

; 10   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00003	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+12
  00008	2b 05 04 00 00
	00		 sub	 eax, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 10   : {

  0000e	56		 push	 esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 57   : 			m_uInitCapacity=uCapacity;

  0000f	8b 75 08	 mov	 esi, DWORD PTR _uCapacity$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00012	c1 f8 02	 sar	 eax, 2
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 57   : 			m_uInitCapacity=uCapacity;

  00015	89 35 1c 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+28, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1371 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  0001b	3b f0		 cmp	 esi, eax
  0001d	76 13		 jbe	 SHORT $LN6@CreateSyst

; 1372 :             if (_Newcapacity > max_size()) {

  0001f	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  00025	77 33		 ja	 SHORT $LN19@CreateSyst

; 1374 :             }
; 1375 : 
; 1376 :             _Reallocate_exactly(_Newcapacity);

  00027	56		 push	 esi
  00028	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+4
  0002d	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@AAEXI@Z ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Reallocate_exactly
$LN6@CreateSyst:

; 1559 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00032	a1 18 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+24
  00037	2b 05 10 00 00
	00		 sub	 eax, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+16
  0003d	c1 f8 02	 sar	 eax, 2

; 1371 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  00040	3b f0		 cmp	 esi, eax
  00042	76 13		 jbe	 SHORT $LN13@CreateSyst

; 1372 :             if (_Newcapacity > max_size()) {

  00044	81 fe ff ff ff
	3f		 cmp	 esi, 1073741823		; 3fffffffH
  0004a	77 0e		 ja	 SHORT $LN19@CreateSyst

; 1374 :             }
; 1375 : 
; 1376 :             _Reallocate_exactly(_Newcapacity);

  0004c	56		 push	 esi
  0004d	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+16
  00052	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@AAEXI@Z ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Reallocate_exactly
$LN13@CreateSyst:
  00057	5e		 pop	 esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 12   : }

  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
$LN19@CreateSyst:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1373 :                 _Xlength();

  0005a	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@CAXXZ ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Xlength
$LN20@CreateSyst:
  0005f	cc		 int	 3
?CreateSystem@CRaceMotionData@@SAXI@Z ENDP		; CRaceMotionData::CreateSystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?Delete@CRaceMotionData@@SAXPAV1@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkData$ = 8						; size = 4
?Delete@CRaceMotionData@@SAXPAV1@@Z PROC		; CRaceMotionData::Delete, COMDAT

; 25   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 26   : 	pkData->Destroy();

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkData$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?Destroy@CRaceMotionData@@QAEXXZ ; CRaceMotionData::Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0000e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+20
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 28   : 	ms_kPool.Free(pkData);

  00013	89 75 08	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00016	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+24
  0001c	74 0c		 je	 SHORT $LN8@Delete

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0001e	89 30		 mov	 DWORD PTR [eax], esi

; 727  :         _Orphan_range(_Mylast, _Mylast);
; 728  :         _Ty& _Result = *_Mylast;
; 729  :         ++_Mylast;

  00020	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+20, 4
  00027	5e		 pop	 esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 29   : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN8@Delete:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0002a	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0002d	51		 push	 ecx
  0002e	50		 push	 eax
  0002f	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+16
  00034	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCRaceMotionData@@@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@QAEPAPAVCRaceMotionData@@QAPAV2@ABQAV2@@Z ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Emplace_reallocate<CRaceMotionData * const &>
  00039	5e		 pop	 esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 29   : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?Delete@CRaceMotionData@@SAXPAV1@@Z ENDP		; CRaceMotionData::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?New@CRaceMotionData@@SAPAV1@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
_pkNewData$2 = -4					; size = 4
?New@CRaceMotionData@@SAPAV1@XZ PROC			; CRaceMotionData::New, COMDAT

; 20   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1544 :         return _My_data._Myfirst == _My_data._Mylast;

  00004	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+20
  0000a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+16, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  00010	75 64		 jne	 SHORT $LN4@New

; 65   : 				T* pkNewData=new T;

  00012	56		 push	 esi
  00013	68 c0 00 00 00	 push	 192			; 000000c0H
  00018	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0001d	83 c4 04	 add	 esp, 4
  00020	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00023	85 c0		 test	 eax, eax
  00025	74 0b		 je	 SHORT $LN6@New
  00027	8b c8		 mov	 ecx, eax
  00029	e8 00 00 00 00	 call	 ??0CRaceMotionData@@QAE@XZ ; CRaceMotionData::CRaceMotionData
  0002e	8b f0		 mov	 esi, eax
  00030	eb 02		 jmp	 SHORT $LN7@New
$LN6@New:
  00032	33 f6		 xor	 esi, esi
$LN7@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  00034	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  00039	89 75 fc	 mov	 DWORD PTR _pkNewData$2[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 743  :         if (_Mylast != _My_data._Myend) {

  0003c	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+12
  00042	74 16		 je	 SHORT $LN14@New

; 726  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00044	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 21   : 	return ms_kPool.Alloc();

  00046	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 729  :         ++_Mylast;

  00048	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+8, 4
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  0004f	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+32
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 21   : 	return ms_kPool.Alloc();

  00055	5e		 pop	 esi

; 22   : }

  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
$LN14@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 747  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0005a	8d 4d fc	 lea	 ecx, DWORD PTR _pkNewData$2[ebp]
  0005d	51		 push	 ecx
  0005e	50		 push	 eax
  0005f	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+4
  00064	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCRaceMotionData@@@?$vector@PAVCRaceMotionData@@V?$allocator@PAVCRaceMotionData@@@std@@@std@@QAEPAPAVCRaceMotionData@@QAPAV2@ABQAV2@@Z ; std::vector<CRaceMotionData *,std::allocator<CRaceMotionData *> >::_Emplace_reallocate<CRaceMotionData * const &>
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  00069	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+32
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 21   : 	return ms_kPool.Alloc();

  0006f	8b c6		 mov	 eax, esi
  00071	5e		 pop	 esi

; 22   : }

  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
$LN4@New:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\Pool.h

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  00076	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1624 :         return _My_data._Mylast[-1];

  00079	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1403 :         --_Mylast;

  0007c	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CRaceMotionData@@1V?$CDynamicPool@VCRaceMotionData@@@@A+20, ecx
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp

; 22   : }

  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
?New@CRaceMotionData@@SAPAV1@XZ ENDP			; CRaceMotionData::New
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GSMotionEventDataUnk12@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventDataUnk12@NMotionEvent@@UAEPAXI@Z PROC	; NMotionEvent::SMotionEventDataUnk12::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 18		 push	 24			; 00000018H
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GSMotionEventDataUnk12@NMotionEvent@@UAEPAXI@Z ENDP	; NMotionEvent::SMotionEventDataUnk12::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Save@SMotionEventDataUnk12@NMotionEvent@@UAEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabs$ = 12						; size = 4
?Save@SMotionEventDataUnk12@NMotionEvent@@UAEXPAU_iobuf@@H@Z PROC ; NMotionEvent::SMotionEventDataUnk12::Save, COMDAT
; _this$ = ecx

; 323  : 		void Save(FILE * File, int iTabs) {}

  00000	c2 08 00	 ret	 8
?Save@SMotionEventDataUnk12@NMotionEvent@@UAEXPAU_iobuf@@H@Z ENDP ; NMotionEvent::SMotionEventDataUnk12::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventDataUnk12@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventDataUnk12@NMotionEvent@@UAE@XZ PROC	; NMotionEvent::SMotionEventDataUnk12::~SMotionEventDataUnk12, COMDAT
; _this$ = ecx

; 321  : 		virtual ~SMotionEventDataUnk12() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00006	c3		 ret	 0
??1SMotionEventDataUnk12@NMotionEvent@@UAE@XZ ENDP	; NMotionEvent::SMotionEventDataUnk12::~SMotionEventDataUnk12
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GSMotionEventDataUnk11@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventDataUnk11@NMotionEvent@@UAEPAXI@Z PROC	; NMotionEvent::SMotionEventDataUnk11::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 18		 push	 24			; 00000018H
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GSMotionEventDataUnk11@NMotionEvent@@UAEPAXI@Z ENDP	; NMotionEvent::SMotionEventDataUnk11::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
_TEXT	SEGMENT
$T2 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z PROC ; NMotionEvent::SMotionEventDataUnk11::Load, COMDAT
; _this$ = ecx

; 307  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00029	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0N@OGGCDFHA@basevelocity@
  00031	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0N@OGGCDFHA@basevelocity@+8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 307  : 		{

  00036	8b 55 08	 mov	 edx, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00039	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  00040	c7 45 e8 0c 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 12 ; 0000000cH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00047	66 0f d6 45 d8	 movq	 QWORD PTR $T2[ebp], xmm0
  0004c	89 45 e0	 mov	 DWORD PTR $T2[ebp+8], eax

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0004f	c6 45 e4 00	 mov	 BYTE PTR $T2[ebp+12], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 308  : 			if (!rTextFileLoader.GetTokenInteger("basevelocity", &iAniSpeed))

  00053	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005d	50		 push	 eax
  0005e	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  00061	8b ca		 mov	 ecx, edx
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00069	8b 55 ec	 mov	 edx, DWORD PTR $T2[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 308  : 			if (!rTextFileLoader.GetTokenInteger("basevelocity", &iAniSpeed))

  0006c	85 c0		 test	 eax, eax
  0006e	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00071	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00074	72 28		 jb	 SHORT $LN90@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00076	8b 4d d8	 mov	 ecx, DWORD PTR $T2[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00079	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0007c	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00082	72 10		 jb	 SHORT $LN100@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00084	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00087	83 c2 23	 add	 edx, 35			; 00000023H
  0008a	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0008c	83 c0 fc	 add	 eax, -4			; fffffffcH
  0008f	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00092	77 2b		 ja	 SHORT $LN108@Load
$LN100@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00094	52		 push	 edx
  00095	51		 push	 ecx
  00096	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0009b	83 c4 08	 add	 esp, 8
$LN90@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 308  : 			if (!rTextFileLoader.GetTokenInteger("basevelocity", &iAniSpeed))

  0009e	84 db		 test	 bl, bl
  000a0	0f 94 c0	 sete	 al

; 312  : 		}

  000a3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ad	59		 pop	 ecx
  000ae	5b		 pop	 ebx
  000af	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b2	33 cd		 xor	 ecx, ebp
  000b4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c2 04 00	 ret	 4
$LN108@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000bf	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN106@Load:
  000c4	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Load@SMotionEventDataUnk11@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ENDP ; NMotionEvent::SMotionEventDataUnk11::Load
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Save@SMotionEventDataUnk11@NMotionEvent@@UAEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabs$ = 12						; size = 4
?Save@SMotionEventDataUnk11@NMotionEvent@@UAEXPAU_iobuf@@H@Z PROC ; NMotionEvent::SMotionEventDataUnk11::Save, COMDAT
; _this$ = ecx

; 302  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 303  : 			PrintfTabs(File, iTabs, "\n");

  00004	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  00009	ff 75 0c	 push	 DWORD PTR _iTabs$[ebp]
  0000c	8b f9		 mov	 edi, ecx
  0000e	ff 75 08	 push	 DWORD PTR _File$[ebp]
  00011	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 304  : 			PrintfTabs(File, iTabs, "BaseVelocity        \"%d\"\n", iAniSpeed);

  00016	ff 77 14	 push	 DWORD PTR [edi+20]
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@COIHOOIP@BaseVelocity?5?5?5?5?5?5?5?5?$CC?$CFd?$CC?6@
  0001e	ff 75 0c	 push	 DWORD PTR _iTabs$[ebp]
  00021	ff 75 08	 push	 DWORD PTR _File$[ebp]
  00024	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00029	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002c	5f		 pop	 edi

; 305  : 		}

  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
?Save@SMotionEventDataUnk11@NMotionEvent@@UAEXPAU_iobuf@@H@Z ENDP ; NMotionEvent::SMotionEventDataUnk11::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventDataUnk11@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventDataUnk11@NMotionEvent@@UAE@XZ PROC	; NMotionEvent::SMotionEventDataUnk11::~SMotionEventDataUnk11, COMDAT
; _this$ = ecx

; 299  : 		virtual ~SMotionEventDataUnk11() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00006	c3		 ret	 0
??1SMotionEventDataUnk11@NMotionEvent@@UAE@XZ ENDP	; NMotionEvent::SMotionEventDataUnk11::~SMotionEventDataUnk11
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GSMotionEventDataWarp@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventDataWarp@NMotionEvent@@UAEPAXI@Z PROC	; NMotionEvent::SMotionEventDataWarp::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 14		 push	 20			; 00000014H
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GSMotionEventDataWarp@NMotionEvent@@UAEPAXI@Z ENDP	; NMotionEvent::SMotionEventDataWarp::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Save@SMotionEventDataWarp@NMotionEvent@@UAEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabs$ = 12						; size = 4
?Save@SMotionEventDataWarp@NMotionEvent@@UAEXPAU_iobuf@@H@Z PROC ; NMotionEvent::SMotionEventDataWarp::Save, COMDAT
; _this$ = ecx

; 288  : 		void Save(FILE * File, int iTabs) {}

  00000	c2 08 00	 ret	 8
?Save@SMotionEventDataWarp@NMotionEvent@@UAEXPAU_iobuf@@H@Z ENDP ; NMotionEvent::SMotionEventDataWarp::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventDataWarp@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventDataWarp@NMotionEvent@@UAE@XZ PROC	; NMotionEvent::SMotionEventDataWarp::~SMotionEventDataWarp, COMDAT
; _this$ = ecx

; 286  : 		virtual ~SMotionEventDataWarp() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00006	c3		 ret	 0
??1SMotionEventDataWarp@NMotionEvent@@UAE@XZ ENDP	; NMotionEvent::SMotionEventDataWarp::~SMotionEventDataWarp
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GSMotionEventDataCharacterHide@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventDataCharacterHide@NMotionEvent@@UAEPAXI@Z PROC ; NMotionEvent::SMotionEventDataCharacterHide::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 14		 push	 20			; 00000014H
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GSMotionEventDataCharacterHide@NMotionEvent@@UAEPAXI@Z ENDP ; NMotionEvent::SMotionEventDataCharacterHide::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Save@SMotionEventDataCharacterHide@NMotionEvent@@UAEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabs$ = 12						; size = 4
?Save@SMotionEventDataCharacterHide@NMotionEvent@@UAEXPAU_iobuf@@H@Z PROC ; NMotionEvent::SMotionEventDataCharacterHide::Save, COMDAT
; _this$ = ecx

; 278  : 		void Save(FILE * File, int iTabs) {}

  00000	c2 08 00	 ret	 8
?Save@SMotionEventDataCharacterHide@NMotionEvent@@UAEXPAU_iobuf@@H@Z ENDP ; NMotionEvent::SMotionEventDataCharacterHide::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventDataCharacterHide@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventDataCharacterHide@NMotionEvent@@UAE@XZ PROC ; NMotionEvent::SMotionEventDataCharacterHide::~SMotionEventDataCharacterHide, COMDAT
; _this$ = ecx

; 276  : 		virtual ~SMotionEventDataCharacterHide() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00006	c3		 ret	 0
??1SMotionEventDataCharacterHide@NMotionEvent@@UAE@XZ ENDP ; NMotionEvent::SMotionEventDataCharacterHide::~SMotionEventDataCharacterHide
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GSMotionEventDataCharacterShow@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventDataCharacterShow@NMotionEvent@@UAEPAXI@Z PROC ; NMotionEvent::SMotionEventDataCharacterShow::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 14		 push	 20			; 00000014H
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GSMotionEventDataCharacterShow@NMotionEvent@@UAEPAXI@Z ENDP ; NMotionEvent::SMotionEventDataCharacterShow::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Save@SMotionEventDataCharacterShow@NMotionEvent@@UAEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabs$ = 12						; size = 4
?Save@SMotionEventDataCharacterShow@NMotionEvent@@UAEXPAU_iobuf@@H@Z PROC ; NMotionEvent::SMotionEventDataCharacterShow::Save, COMDAT
; _this$ = ecx

; 268  : 		void Save(FILE * File, int iTabs) {}

  00000	c2 08 00	 ret	 8
?Save@SMotionEventDataCharacterShow@NMotionEvent@@UAEXPAU_iobuf@@H@Z ENDP ; NMotionEvent::SMotionEventDataCharacterShow::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventDataCharacterShow@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventDataCharacterShow@NMotionEvent@@UAE@XZ PROC ; NMotionEvent::SMotionEventDataCharacterShow::~SMotionEventDataCharacterShow, COMDAT
; _this$ = ecx

; 266  : 		virtual ~SMotionEventDataCharacterShow() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00006	c3		 ret	 0
??1SMotionEventDataCharacterShow@NMotionEvent@@UAE@XZ ENDP ; NMotionEvent::SMotionEventDataCharacterShow::~SMotionEventDataCharacterShow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??_GSMotionEventDataSound@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventDataSound@NMotionEvent@@UAEPAXI@Z PROC	; NMotionEvent::SMotionEventDataSound::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 246  : 		virtual ~SMotionEventDataSound() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventDataSound@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  0000c	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  0000f	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 28		 jb	 SHORT $LN19@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00014	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00017	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00018	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001e	72 12		 jb	 SHORT $LN29@scalar

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00020	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00023	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00026	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00028	83 c0 fc	 add	 eax, -4			; fffffffcH
  0002b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002e	77 3c		 ja	 SHORT $LN26@scalar

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00030	8b c2		 mov	 eax, edx
$LN29@scalar:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00032	51		 push	 ecx
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00039	83 c4 08	 add	 esp, 8
$LN19@scalar:
  0003c	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00040	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00047	c7 46 28 0f 00
	00 00		 mov	 DWORD PTR [esi+40], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004e	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 246  : 		virtual ~SMotionEventDataSound() {}

  00052	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00058	74 0b		 je	 SHORT $LN2@scalar
  0005a	6a 2c		 push	 44			; 0000002cH
  0005c	56		 push	 esi
  0005d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00062	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00065	8b c6		 mov	 eax, esi
  00067	5e		 pop	 esi
  00068	5d		 pop	 ebp
  00069	c2 04 00	 ret	 4
$LN26@scalar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0006c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN36@scalar:
  00071	cc		 int	 3
??_GSMotionEventDataSound@NMotionEvent@@UAEPAXI@Z ENDP	; NMotionEvent::SMotionEventDataSound::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
_TEXT	SEGMENT
$T2 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z PROC ; NMotionEvent::SMotionEventDataSound::Load, COMDAT
; _this$ = ecx

; 254  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00029	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0O@POGBJFAA@soundfilename@+8
  0002e	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0O@POGBJFAA@soundfilename@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 254  : 		{

  00036	8b 55 08	 mov	 edx, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00039	89 45 e0	 mov	 DWORD PTR $T2[ebp+8], eax
  0003c	a0 0c 00 00 00	 mov	 al, BYTE PTR ??_C@_0O@POGBJFAA@soundfilename@+12

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00041	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  00048	c7 45 e8 0d 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 13 ; 0000000dH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0004f	66 0f d6 45 d8	 movq	 QWORD PTR $T2[ebp], xmm0
  00054	88 45 e4	 mov	 BYTE PTR $T2[ebp+12], al

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00057	c6 45 e5 00	 mov	 BYTE PTR $T2[ebp+13], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 255  : 			if (!rTextFileLoader.GetTokenString("soundfilename", &strSoundFileName))

  0005b	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  0005e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00065	50		 push	 eax
  00066	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  00069	8b ca		 mov	 ecx, edx
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00071	8b 55 ec	 mov	 edx, DWORD PTR $T2[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 255  : 			if (!rTextFileLoader.GetTokenString("soundfilename", &strSoundFileName))

  00074	85 c0		 test	 eax, eax
  00076	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00079	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0007c	72 28		 jb	 SHORT $LN90@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007e	8b 4d d8	 mov	 ecx, DWORD PTR $T2[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00081	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00082	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00084	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0008a	72 10		 jb	 SHORT $LN100@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0008c	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0008f	83 c2 23	 add	 edx, 35			; 00000023H
  00092	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00094	83 c0 fc	 add	 eax, -4			; fffffffcH
  00097	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009a	77 2b		 ja	 SHORT $LN108@Load
$LN100@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0009c	52		 push	 edx
  0009d	51		 push	 ecx
  0009e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000a3	83 c4 08	 add	 esp, 8
$LN90@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 255  : 			if (!rTextFileLoader.GetTokenString("soundfilename", &strSoundFileName))

  000a6	84 db		 test	 bl, bl
  000a8	0f 94 c0	 sete	 al

; 259  : 		}

  000ab	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ae	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b5	59		 pop	 ecx
  000b6	5b		 pop	 ebx
  000b7	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ba	33 cd		 xor	 ecx, ebp
  000bc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c2 04 00	 ret	 4
$LN108@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000c7	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN106@Load:
  000cc	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Load@SMotionEventDataSound@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ENDP ; NMotionEvent::SMotionEventDataSound::Load
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Save@SMotionEventDataSound@NMotionEvent@@UAEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabs$ = 12						; size = 4
?Save@SMotionEventDataSound@NMotionEvent@@UAEXPAU_iobuf@@H@Z PROC ; NMotionEvent::SMotionEventDataSound::Save, COMDAT
; _this$ = ecx

; 249  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 250  : 			PrintfTabs(File, iTabs, "\n");

  00004	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  00009	ff 75 0c	 push	 DWORD PTR _iTabs$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	ff 75 08	 push	 DWORD PTR _File$[ebp]
  00011	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3922 :         return _Mypair._Myval2._Myptr();

  00016	83 c6 14	 add	 esi, 20			; 00000014H
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 250  : 			PrintfTabs(File, iTabs, "\n");

  00019	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  0001c	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2306 :         if (_Large_string_engaged()) {

  00020	72 02		 jb	 SHORT $LN6@Save

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00022	8b 36		 mov	 esi, DWORD PTR [esi]
$LN6@Save:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 251  : 			PrintfTabs(File, iTabs, "SoundFileName        \"%s\"\n", strSoundFileName.c_str());

  00024	56		 push	 esi
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@OCKKLAAD@SoundFileName?5?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@
  0002a	ff 75 0c	 push	 DWORD PTR _iTabs$[ebp]
  0002d	ff 75 08	 push	 DWORD PTR _File$[ebp]
  00030	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00035	83 c4 10	 add	 esp, 16			; 00000010H
  00038	5e		 pop	 esi

; 252  : 		}

  00039	5d		 pop	 ebp
  0003a	c2 08 00	 ret	 8
?Save@SMotionEventDataSound@NMotionEvent@@UAEXPAU_iobuf@@H@Z ENDP ; NMotionEvent::SMotionEventDataSound::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventDataSound@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventDataSound@NMotionEvent@@UAE@XZ PROC	; NMotionEvent::SMotionEventDataSound::~SMotionEventDataSound, COMDAT
; _this$ = ecx

; 246  : 		virtual ~SMotionEventDataSound() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventDataSound@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00009	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  0000c	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0000f	72 28		 jb	 SHORT $LN15@SMotionEve
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00015	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001b	72 12		 jb	 SHORT $LN25@SMotionEve

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001d	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00020	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00023	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00025	83 c0 fc	 add	 eax, -4			; fffffffcH
  00028	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002b	77 26		 ja	 SHORT $LN22@SMotionEve

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002d	8b c2		 mov	 eax, edx
$LN25@SMotionEve:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0002f	51		 push	 ecx
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00036	83 c4 08	 add	 esp, 8
$LN15@SMotionEve:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00039	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00040	c7 46 28 0f 00
	00 00		 mov	 DWORD PTR [esi+40], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00047	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 246  : 		virtual ~SMotionEventDataSound() {}

  0004b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00051	5e		 pop	 esi
  00052	c3		 ret	 0
$LN22@SMotionEve:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00053	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN31@SMotionEve:
  00058	cc		 int	 3
??1SMotionEventDataSound@NMotionEvent@@UAE@XZ ENDP	; NMotionEvent::SMotionEventDataSound::~SMotionEventDataSound
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??_GSMotionEventDataAttack@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventDataAttack@NMotionEvent@@UAEPAXI@Z PROC	; NMotionEvent::SMotionEventDataAttack::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 209  : 		virtual ~SMotionEventDataAttack() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventDataAttack@NMotionEvent@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h

; 120  : 		virtual ~SCollisionData() {}

  0000c	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  0000f	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], OFFSET ??_7SCollisionData@NRaceData@@6B@
  00016	e8 00 00 00 00	 call	 ??1?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@QAE@XZ ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::~vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >
  0001b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 209  : 		virtual ~SMotionEventDataAttack() {}

  0001f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00025	74 0b		 je	 SHORT $LN10@scalar
  00027	6a 44		 push	 68			; 00000044H
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	83 c4 08	 add	 esp, 8
$LN10@scalar:
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??_GSMotionEventDataAttack@NMotionEvent@@UAEPAXI@Z ENDP	; NMotionEvent::SMotionEventDataAttack::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
_TEXT	SEGMENT
tv741 = -41						; size = 1
$T2 = -40						; size = 24
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z PROC ; NMotionEvent::SMotionEventDataAttack::Load, COMDAT
; _this$ = ecx

; 221  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0002d	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0L@KJGFIEPL@duringtime@
  00035	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0L@KJGFIEPL@duringtime@+8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 221  : 		{

  0003b	8b 7d 08	 mov	 edi, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0003e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  00045	c7 45 e8 0a 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 10 ; 0000000aH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0004c	66 0f d6 45 d8	 movq	 QWORD PTR $T3[ebp], xmm0
  00051	66 89 45 e0	 mov	 WORD PTR $T3[ebp+8], ax

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00055	c6 45 e2 00	 mov	 BYTE PTR $T3[ebp+10], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 222  : 			if (!rTextFileLoader.GetTokenFloat("duringtime", &fDurationTime))

  00059	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0005c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00063	50		 push	 eax
  00064	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00067	8b cf		 mov	 ecx, edi
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0006f	8b 55 ec	 mov	 edx, DWORD PTR $T3[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 222  : 			if (!rTextFileLoader.GetTokenFloat("duringtime", &fDurationTime))

  00072	85 c0		 test	 eax, eax
  00074	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007b	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0007e	83 fa 10	 cmp	 edx, 16			; 00000010H
  00081	72 2c		 jb	 SHORT $LN94@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	8b 4d d8	 mov	 ecx, DWORD PTR $T3[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00086	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00087	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00089	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0008f	72 14		 jb	 SHORT $LN104@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00091	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00094	83 c2 23	 add	 edx, 35			; 00000023H
  00097	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00099	83 c0 fc	 add	 eax, -4			; fffffffcH
  0009c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009f	0f 87 f3 00 00
	00		 ja	 $LN156@Load
$LN104@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a5	52		 push	 edx
  000a6	51		 push	 ecx
  000a7	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000ac	83 c4 08	 add	 esp, 8
$LN94@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 222  : 			if (!rTextFileLoader.GetTokenFloat("duringtime", &fDurationTime))

  000af	84 db		 test	 bl, bl
  000b1	0f 85 c1 00 00
	00		 jne	 $LN152@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000b7	6a 10		 push	 16			; 00000010H

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  000b9	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000c0	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  000c3	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@NODGLCEN@enablehitprocess@

; 4596 :         _My_data._Mysize = 0;

  000c8	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  000cf	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000d6	88 5d d8	 mov	 BYTE PTR $T2[ebp], bl

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000d9	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 225  : 			if (!rTextFileLoader.GetTokenBoolean("enablehitprocess", &isEnableHitProcess))

  000de	8d 5e 40	 lea	 ebx, DWORD PTR [esi+64]
  000e1	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000e8	53		 push	 ebx
  000e9	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  000ec	8b cf		 mov	 ecx, edi
  000ee	50		 push	 eax
  000ef	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  000f4	8b 55 ec	 mov	 edx, DWORD PTR $T2[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 225  : 			if (!rTextFileLoader.GetTokenBoolean("enablehitprocess", &isEnableHitProcess))

  000f7	85 c0		 test	 eax, eax
  000f9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00100	0f 94 c0	 sete	 al
  00103	88 45 d7	 mov	 BYTE PTR tv741[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00106	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00109	72 2b		 jb	 SHORT $LN137@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0010b	8b 4d d8	 mov	 ecx, DWORD PTR $T2[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0010e	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0010f	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00111	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00117	72 10		 jb	 SHORT $LN147@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00119	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0011c	83 c2 23	 add	 edx, 35			; 00000023H
  0011f	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00121	83 c0 fc	 add	 eax, -4			; fffffffcH
  00124	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00127	77 74		 ja	 SHORT $LN157@Load
$LN147@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00129	52		 push	 edx
  0012a	51		 push	 ecx
  0012b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00130	8a 45 d7	 mov	 al, BYTE PTR tv741[ebp]
  00133	83 c4 08	 add	 esp, 8
$LN137@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00136	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0013d	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00144	c6 45 d8 00	 mov	 BYTE PTR $T2[ebp], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 225  : 			if (!rTextFileLoader.GetTokenBoolean("enablehitprocess", &isEnableHitProcess))

  00148	84 c0		 test	 al, al
  0014a	74 06		 je	 SHORT $LN3@Load

; 226  : 			{
; 227  : 				isEnableHitProcess = TRUE;

  0014c	c7 03 01 00 00
	00		 mov	 DWORD PTR [ebx], 1
$LN3@Load:

; 228  : 			}
; 229  : 
; 230  : 			if (!NRaceData::LoadAttackData(rTextFileLoader, &AttackData))

  00152	8d 46 28	 lea	 eax, DWORD PTR [esi+40]
  00155	50		 push	 eax
  00156	57		 push	 edi
  00157	e8 00 00 00 00	 call	 ?LoadAttackData@NRaceData@@YAHAAVCTextFileLoader@@PAUSAttackData@1@@Z ; NRaceData::LoadAttackData
  0015c	83 c4 08	 add	 esp, 8
  0015f	85 c0		 test	 eax, eax
  00161	74 15		 je	 SHORT $LN152@Load

; 231  : 				return false;
; 232  : 
; 233  : 			if (!NRaceData::LoadCollisionData(rTextFileLoader, &CollisionData))

  00163	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00166	50		 push	 eax
  00167	57		 push	 edi
  00168	e8 00 00 00 00	 call	 ?LoadCollisionData@NRaceData@@YAHAAVCTextFileLoader@@PAUSCollisionData@1@@Z ; NRaceData::LoadCollisionData
  0016d	83 c4 08	 add	 esp, 8
  00170	85 c0		 test	 eax, eax
  00172	74 04		 je	 SHORT $LN152@Load

; 235  : 
; 236  : 			return true;

  00174	b0 01		 mov	 al, 1
  00176	eb 02		 jmp	 SHORT $LN1@Load
$LN152@Load:

; 234  : 				return false;

  00178	32 c0		 xor	 al, al
$LN1@Load:

; 237  : 		}

  0017a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0017d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00184	59		 pop	 ecx
  00185	5f		 pop	 edi
  00186	5e		 pop	 esi
  00187	5b		 pop	 ebx
  00188	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0018b	33 cd		 xor	 ecx, ebp
  0018d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00192	8b e5		 mov	 esp, ebp
  00194	5d		 pop	 ebp
  00195	c2 04 00	 ret	 4
$LN156@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00198	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN157@Load:
  0019d	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN154@Load:
  001a2	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Load@SMotionEventDataAttack@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ENDP ; NMotionEvent::SMotionEventDataAttack::Load
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Save@SMotionEventDataAttack@NMotionEvent@@UAEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabs$ = 12						; size = 4
?Save@SMotionEventDataAttack@NMotionEvent@@UAEXPAU_iobuf@@H@Z PROC ; NMotionEvent::SMotionEventDataAttack::Save, COMDAT
; _this$ = ecx

; 212  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b d9		 mov	 ebx, ecx
  00006	56		 push	 esi

; 213  : 			PrintfTabs(File, iTabs, "DuringTime           %f\n", fDurationTime);

  00007	8b 75 08	 mov	 esi, DWORD PTR _File$[ebp]
  0000a	57		 push	 edi
  0000b	f3 0f 10 43 10	 movss	 xmm0, DWORD PTR [ebx+16]
  00010	83 ec 08	 sub	 esp, 8
  00013	8b 7d 0c	 mov	 edi, DWORD PTR _iTabs$[ebp]
  00016	0f 5a c0	 cvtps2pd xmm0, xmm0
  00019	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@JOLNCGNF@DuringTime?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@
  00023	57		 push	 edi
  00024	56		 push	 esi
  00025	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 214  : 			PrintfTabs(File, iTabs, "EnableHitProcess     %d\n", isEnableHitProcess);

  0002a	ff 73 40	 push	 DWORD PTR [ebx+64]
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DAILMIKJ@EnableHitProcess?5?5?5?5?5?$CFd?6@
  00032	57		 push	 edi
  00033	56		 push	 esi
  00034	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 215  : 			PrintfTabs(File, iTabs, "\n");

  00039	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  0003e	57		 push	 edi
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 216  : 
; 217  : 			NRaceData::SaveAttackData(File, iTabs, AttackData);

  00045	8d 43 28	 lea	 eax, DWORD PTR [ebx+40]
  00048	50		 push	 eax
  00049	57		 push	 edi
  0004a	56		 push	 esi
  0004b	e8 00 00 00 00	 call	 ?SaveAttackData@NRaceData@@YAXPAU_iobuf@@HABUSAttackData@1@@Z ; NRaceData::SaveAttackData

; 218  : 			NRaceData::SaveCollisionData(File, iTabs, CollisionData);

  00050	8d 43 14	 lea	 eax, DWORD PTR [ebx+20]
  00053	50		 push	 eax
  00054	57		 push	 edi
  00055	56		 push	 esi
  00056	e8 00 00 00 00	 call	 ?SaveCollisionData@NRaceData@@YAXPAU_iobuf@@HABUSCollisionData@1@@Z ; NRaceData::SaveCollisionData
  0005b	83 c4 48	 add	 esp, 72			; 00000048H
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx

; 219  : 		}

  00061	5d		 pop	 ebp
  00062	c2 08 00	 ret	 8
?Save@SMotionEventDataAttack@NMotionEvent@@UAEXPAU_iobuf@@H@Z ENDP ; NMotionEvent::SMotionEventDataAttack::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventDataAttack@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventDataAttack@NMotionEvent@@UAE@XZ PROC	; NMotionEvent::SMotionEventDataAttack::~SMotionEventDataAttack, COMDAT
; _this$ = ecx

; 209  : 		virtual ~SMotionEventDataAttack() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventDataAttack@NMotionEvent@@6B@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h

; 120  : 		virtual ~SCollisionData() {}

  00009	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  0000c	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], OFFSET ??_7SCollisionData@NRaceData@@6B@
  00013	e8 00 00 00 00	 call	 ??1?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@QAE@XZ ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::~vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 209  : 		virtual ~SMotionEventDataAttack() {}

  00018	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  0001e	5e		 pop	 esi
  0001f	c3		 ret	 0
??1SMotionEventDataAttack@NMotionEvent@@UAE@XZ ENDP	; NMotionEvent::SMotionEventDataAttack::~SMotionEventDataAttack
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??_GSMotionEventDataFly@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventDataFly@NMotionEvent@@UAEPAXI@Z PROC	; NMotionEvent::SMotionEventDataFly::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 170  : 		virtual ~SMotionEventDataFly() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventDataFly@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  0000c	8b 4e 54	 mov	 ecx, DWORD PTR [esi+84]
  0000f	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 28		 jb	 SHORT $LN19@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00014	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00017	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00018	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001e	72 12		 jb	 SHORT $LN29@scalar

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00020	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00023	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00026	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00028	83 c0 fc	 add	 eax, -4			; fffffffcH
  0002b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002e	77 7e		 ja	 SHORT $LN54@scalar

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00030	8b c2		 mov	 eax, edx
$LN29@scalar:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00032	51		 push	 ecx
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00039	83 c4 08	 add	 esp, 8
$LN19@scalar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  0003c	c7 46 50 00 00
	00 00		 mov	 DWORD PTR [esi+80], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00043	c7 46 54 0f 00
	00 00		 mov	 DWORD PTR [esi+84], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004a	c6 46 40 00	 mov	 BYTE PTR [esi+64], 0

; 2319 :         return _BUF_SIZE <= _Myres;

  0004e	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  00051	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00054	72 28		 jb	 SHORT $LN47@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00056	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00059	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0005a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00060	72 12		 jb	 SHORT $LN57@scalar

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00062	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00065	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00068	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0006a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0006d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00070	77 3c		 ja	 SHORT $LN54@scalar

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00072	8b c2		 mov	 eax, edx
$LN57@scalar:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00074	51		 push	 ecx
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0007b	83 c4 08	 add	 esp, 8
$LN47@scalar:
  0007e	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00082	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00089	c7 46 2c 0f 00
	00 00		 mov	 DWORD PTR [esi+44], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00090	c6 46 18 00	 mov	 BYTE PTR [esi+24], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 170  : 		virtual ~SMotionEventDataFly() {}

  00094	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  0009a	74 0b		 je	 SHORT $LN2@scalar
  0009c	6a 58		 push	 88			; 00000058H
  0009e	56		 push	 esi
  0009f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000a4	83 c4 08	 add	 esp, 8
$LN2@scalar:
  000a7	8b c6		 mov	 eax, esi
  000a9	5e		 pop	 esi
  000aa	5d		 pop	 ebp
  000ab	c2 04 00	 ret	 4
$LN54@scalar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000ae	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN63@scalar:
  000b3	cc		 int	 3
??_GSMotionEventDataFly@NMotionEvent@@UAEPAXI@Z ENDP	; NMotionEvent::SMotionEventDataFly::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
_TEXT	SEGMENT
_rTextFileLoader$GSCopy$1$ = -72			; size = 4
tv1656 = -65						; size = 1
$T2 = -64						; size = 24
$T3 = -40						; size = 24
$T4 = -40						; size = 24
$T5 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z PROC ; NMotionEvent::SMotionEventDataFly::Load, COMDAT
; _this$ = ecx

; 181  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0002d	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BA@HJAHPMOG@attachingenable@+8
  00032	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BA@HJAHPMOG@attachingenable@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 181  : 		{

  0003a	8b 5d 08	 mov	 ebx, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0003d	89 45 e0	 mov	 DWORD PTR $T5[ebp+8], eax
  00040	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BA@HJAHPMOG@attachingenable@+12
  00046	66 89 45 e4	 mov	 WORD PTR $T5[ebp+12], ax
  0004a	a0 0e 00 00 00	 mov	 al, BYTE PTR ??_C@_0BA@HJAHPMOG@attachingenable@+14
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 181  : 		{

  0004f	89 5d b8	 mov	 DWORD PTR _rTextFileLoader$GSCopy$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00052	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  00059	c7 45 e8 0f 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 15 ; 0000000fH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00060	66 0f d6 45 d8	 movq	 QWORD PTR $T5[ebp], xmm0
  00065	88 45 e6	 mov	 BYTE PTR $T5[ebp+14], al

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00068	c6 45 e7 00	 mov	 BYTE PTR $T5[ebp+15], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 182  : 			if (!rTextFileLoader.GetTokenBoolean("attachingenable", &isAttaching))

  0006c	8d 47 14	 lea	 eax, DWORD PTR [edi+20]
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	50		 push	 eax
  00077	8d 45 d8	 lea	 eax, DWORD PTR $T5[ebp]
  0007a	8b cb		 mov	 ecx, ebx
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00082	8b 55 ec	 mov	 edx, DWORD PTR $T5[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 182  : 			if (!rTextFileLoader.GetTokenBoolean("attachingenable", &isAttaching))

  00085	85 c0		 test	 eax, eax
  00087	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008e	0f 94 c0	 sete	 al
  00091	88 45 bf	 mov	 BYTE PTR tv1656[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00094	83 fa 10	 cmp	 edx, 16			; 00000010H
  00097	72 2f		 jb	 SHORT $LN96@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00099	8b 4d d8	 mov	 ecx, DWORD PTR $T5[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0009c	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0009d	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0009f	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  000a5	72 14		 jb	 SHORT $LN106@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000a7	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  000aa	83 c2 23	 add	 edx, 35			; 00000023H
  000ad	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000af	83 c0 fc	 add	 eax, -4			; fffffffcH
  000b2	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000b5	0f 87 17 02 00
	00		 ja	 $LN372@Load
$LN106@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000bb	52		 push	 edx
  000bc	51		 push	 ecx
  000bd	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000c2	8a 45 bf	 mov	 al, BYTE PTR tv1656[ebp]
  000c5	83 c4 08	 add	 esp, 8
$LN96@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 182  : 			if (!rTextFileLoader.GetTokenBoolean("attachingenable", &isAttaching))

  000c8	84 c0		 test	 al, al
  000ca	0f 85 e2 01 00
	00		 jne	 $LN368@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000d0	6a 11		 push	 17			; 00000011H

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  000d2	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000d9	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  000dc	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@FCIOLNPK@attachingbonename@

; 4596 :         _My_data._Mysize = 0;

  000e1	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  000e8	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  000ef	88 45 c0	 mov	 BYTE PTR $T2[ebp], al

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000f2	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 184  : 			if (!rTextFileLoader.GetTokenString("attachingbonename", &strAttachingBoneName))

  000f7	8d 47 18	 lea	 eax, DWORD PTR [edi+24]
  000fa	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00101	50		 push	 eax
  00102	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  00105	8b cb		 mov	 ecx, ebx
  00107	50		 push	 eax
  00108	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0010d	8b 55 d4	 mov	 edx, DWORD PTR $T2[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 184  : 			if (!rTextFileLoader.GetTokenString("attachingbonename", &strAttachingBoneName))

  00110	85 c0		 test	 eax, eax
  00112	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00119	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0011c	83 fa 10	 cmp	 edx, 16			; 00000010H
  0011f	72 2c		 jb	 SHORT $LN139@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00121	8b 4d c0	 mov	 ecx, DWORD PTR $T2[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00124	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00125	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00127	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0012d	72 14		 jb	 SHORT $LN149@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0012f	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00132	83 c2 23	 add	 edx, 35			; 00000023H
  00135	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00137	83 c0 fc	 add	 eax, -4			; fffffffcH
  0013a	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0013d	0f 87 94 01 00
	00		 ja	 $LN373@Load
$LN149@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00143	52		 push	 edx
  00144	51		 push	 ecx
  00145	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0014a	83 c4 08	 add	 esp, 8
$LN139@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 184  : 			if (!rTextFileLoader.GetTokenString("attachingbonename", &strAttachingBoneName))

  0014d	84 db		 test	 bl, bl
  0014f	0f 85 5d 01 00
	00		 jne	 $LN368@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00155	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0M@BKDIDPMI@flyfilename@+8
  0015b	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0M@BKDIDPMI@flyfilename@
  00163	66 89 45 e0	 mov	 WORD PTR $T4[ebp+8], ax
  00167	a0 0a 00 00 00	 mov	 al, BYTE PTR ??_C@_0M@BKDIDPMI@flyfilename@+10

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0016c	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  00173	c7 45 e8 0b 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 11 ; 0000000bH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0017a	66 0f d6 45 d8	 movq	 QWORD PTR $T4[ebp], xmm0
  0017f	88 45 e2	 mov	 BYTE PTR $T4[ebp+10], al

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00182	88 5d e3	 mov	 BYTE PTR $T4[ebp+11], bl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 186  : 			if (!rTextFileLoader.GetTokenString("flyfilename", &strFlyFileName))

  00185	8b 4d b8	 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  00188	8d 77 40	 lea	 esi, DWORD PTR [edi+64]
  0018b	56		 push	 esi
  0018c	8d 45 d8	 lea	 eax, DWORD PTR $T4[ebp]
  0018f	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00196	50		 push	 eax
  00197	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0019c	8b 55 ec	 mov	 edx, DWORD PTR $T4[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 186  : 			if (!rTextFileLoader.GetTokenString("flyfilename", &strFlyFileName))

  0019f	85 c0		 test	 eax, eax
  001a1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001a8	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001ab	83 fa 10	 cmp	 edx, 16			; 00000010H
  001ae	72 2c		 jb	 SHORT $LN238@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001b0	8b 4d d8	 mov	 ecx, DWORD PTR $T4[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001b3	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001b4	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  001b6	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  001bc	72 14		 jb	 SHORT $LN248@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  001be	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  001c1	83 c2 23	 add	 edx, 35			; 00000023H
  001c4	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001c6	83 c0 fc	 add	 eax, -4			; fffffffcH
  001c9	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  001cc	0f 87 0a 01 00
	00		 ja	 $LN374@Load
$LN248@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  001d2	52		 push	 edx
  001d3	51		 push	 ecx
  001d4	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  001d9	83 c4 08	 add	 esp, 8
$LN238@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 186  : 			if (!rTextFileLoader.GetTokenString("flyfilename", &strFlyFileName))

  001dc	84 db		 test	 bl, bl
  001de	0f 85 ce 00 00
	00		 jne	 $LN368@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  001e4	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0M@OKENILIB@flyposition@+8
  001ea	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0M@OKENILIB@flyposition@
  001f2	66 89 45 e0	 mov	 WORD PTR $T3[ebp+8], ax
  001f6	a0 0a 00 00 00	 mov	 al, BYTE PTR ??_C@_0M@OKENILIB@flyposition@+10

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  001fb	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  00202	c7 45 e8 0b 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 11 ; 0000000bH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00209	66 0f d6 45 d8	 movq	 QWORD PTR $T3[ebp], xmm0
  0020e	88 45 e2	 mov	 BYTE PTR $T3[ebp+10], al

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00211	88 5d e3	 mov	 BYTE PTR $T3[ebp+11], bl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 188  : 			if (!rTextFileLoader.GetTokenPosition("flyposition", &v3FlyPosition))

  00214	8b 4d b8	 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  00217	8d 47 30	 lea	 eax, DWORD PTR [edi+48]
  0021a	50		 push	 eax
  0021b	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  0021e	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  00225	50		 push	 eax
  00226	e8 00 00 00 00	 call	 ?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenPosition
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  0022b	8b 55 ec	 mov	 edx, DWORD PTR $T3[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 188  : 			if (!rTextFileLoader.GetTokenPosition("flyposition", &v3FlyPosition))

  0022e	85 c0		 test	 eax, eax
  00230	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00237	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  0023a	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0023d	72 2c		 jb	 SHORT $LN337@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0023f	8b 4d d8	 mov	 ecx, DWORD PTR $T3[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00242	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00243	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00245	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0024b	72 14		 jb	 SHORT $LN347@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0024d	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00250	83 c2 23	 add	 edx, 35			; 00000023H
  00253	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00255	83 c0 fc	 add	 eax, -4			; fffffffcH
  00258	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0025b	0f 87 80 00 00
	00		 ja	 $LN375@Load
$LN347@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00261	52		 push	 edx
  00262	51		 push	 ecx
  00263	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00268	83 c4 08	 add	 esp, 8
$LN337@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  0026b	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00272	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00279	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 188  : 			if (!rTextFileLoader.GetTokenPosition("flyposition", &v3FlyPosition))

  0027d	84 db		 test	 bl, bl
  0027f	75 31		 jne	 SHORT $LN368@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00281	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2305 :         const value_type* _Result = _Bx._Buf;

  00285	8b c6		 mov	 eax, esi

; 2306 :         if (_Large_string_engaged()) {

  00287	72 02		 jb	 SHORT $LN367@Load

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00289	8b 06		 mov	 eax, DWORD PTR [esi]
$LN367@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 190  : 			dwFlyIndex = GetCaseCRC32(strFlyFileName.c_str(), strFlyFileName.length());

  0028b	ff 77 50	 push	 DWORD PTR [edi+80]
  0028e	50		 push	 eax
  0028f	e8 00 00 00 00	 call	 ?GetCaseCRC32@@YAKPBDI@Z ; GetCaseCRC32
  00294	83 c4 08	 add	 esp, 8
  00297	89 47 3c	 mov	 DWORD PTR [edi+60], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  0029a	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2306 :         if (_Large_string_engaged()) {

  0029e	72 02		 jb	 SHORT $LN362@Load

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  002a0	8b 36		 mov	 esi, DWORD PTR [esi]
$LN362@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 194  : 			CFlyingManager::Instance().RegisterFlyingData(strFlyFileName.c_str());

  002a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCFlyingManager@@@@0PAVCFlyingManager@@A ; CSingleton<CFlyingManager>::ms_singleton
  002a8	56		 push	 esi
  002a9	e8 00 00 00 00	 call	 ?RegisterFlyingData@CFlyingManager@@QAE_NPBD@Z ; CFlyingManager::RegisterFlyingData

; 195  : #endif
; 196  : 
; 197  : 			return true;

  002ae	b0 01		 mov	 al, 1
  002b0	eb 02		 jmp	 SHORT $LN1@Load
$LN368@Load:

; 189  : 				return false;

  002b2	32 c0		 xor	 al, al
$LN1@Load:

; 198  : 		}

  002b4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  002b7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  002be	59		 pop	 ecx
  002bf	5f		 pop	 edi
  002c0	5e		 pop	 esi
  002c1	5b		 pop	 ebx
  002c2	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002c5	33 cd		 xor	 ecx, ebp
  002c7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002cc	8b e5		 mov	 esp, ebp
  002ce	5d		 pop	 ebp
  002cf	c2 04 00	 ret	 4
$LN372@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  002d2	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN373@Load:
  002d7	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN374@Load:
  002dc	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN375@Load:
  002e1	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN370@Load:
  002e6	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T5[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$1:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$2:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR $T4[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$3:
  00018	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	cc		 int	 3
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
  00024	cc		 int	 3
__ehhandler$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z:
  00025	90		 npad	 1
  00026	90		 npad	 1
  00027	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002e	8b 4a b4	 mov	 ecx, DWORD PTR [edx-76]
  00031	33 c8		 xor	 ecx, eax
  00033	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00038	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0003b	33 c8		 xor	 ecx, eax
  0003d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00042	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  00047	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Load@SMotionEventDataFly@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ENDP ; NMotionEvent::SMotionEventDataFly::Load
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Save@SMotionEventDataFly@NMotionEvent@@UAEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabs$ = 12						; size = 4
?Save@SMotionEventDataFly@NMotionEvent@@UAEXPAU_iobuf@@H@Z PROC ; NMotionEvent::SMotionEventDataFly::Save, COMDAT
; _this$ = ecx

; 173  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 174  : 			PrintfTabs(File, iTabs, "\n");

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _File$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 7d 0c	 mov	 edi, DWORD PTR _iTabs$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  00013	57		 push	 edi
  00014	53		 push	 ebx
  00015	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 175  : 			PrintfTabs(File, iTabs, "AttachingEnable      %d\n", isAttaching);

  0001a	ff 76 14	 push	 DWORD PTR [esi+20]
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@LAKEIKLD@AttachingEnable?5?5?5?5?5?5?$CFd?6@
  00022	57		 push	 edi
  00023	53		 push	 ebx
  00024	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3922 :         return _Mypair._Myval2._Myptr();

  00029	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 175  : 			PrintfTabs(File, iTabs, "AttachingEnable      %d\n", isAttaching);

  0002c	83 c4 1c	 add	 esp, 28			; 0000001cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  0002f	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2306 :         if (_Large_string_engaged()) {

  00033	72 02		 jb	 SHORT $LN6@Save

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00035	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@Save:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 176  : 			PrintfTabs(File, iTabs, "AttachingBoneName    \"%s\"\n", strAttachingBoneName.c_str());

  00037	50		 push	 eax
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@PLABIPOF@AttachingBoneName?5?5?5?5?$CC?$CFs?$CC?6@
  0003d	57		 push	 edi
  0003e	53		 push	 ebx
  0003f	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3922 :         return _Mypair._Myval2._Myptr();

  00044	8d 46 40	 lea	 eax, DWORD PTR [esi+64]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 176  : 			PrintfTabs(File, iTabs, "AttachingBoneName    \"%s\"\n", strAttachingBoneName.c_str());

  00047	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  0004a	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2306 :         if (_Large_string_engaged()) {

  0004e	72 02		 jb	 SHORT $LN13@Save

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00050	8b 00		 mov	 eax, DWORD PTR [eax]
$LN13@Save:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 177  : 			PrintfTabs(File, iTabs, "FlyFileName       \"%s\"\n", strFlyFileName.c_str());

  00052	50		 push	 eax
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@MFBAEGBD@FlyFileName?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@
  00058	57		 push	 edi
  00059	53		 push	 ebx
  0005a	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  0005f	f3 0f 10 46 38	 movss	 xmm0, DWORD PTR [esi+56]

; 178  : 			PrintfTabs(File, iTabs, "FlyPosition       %f %f %f\n", v3FlyPosition.x, v3FlyPosition.y, v3FlyPosition.z);

  00064	0f 5a c0	 cvtps2pd xmm0, xmm0
  00067	f2 0f 11 44 24
	08		 movsd	 QWORD PTR [esp+8], xmm0
  0006d	f3 0f 10 46 34	 movss	 xmm0, DWORD PTR [esi+52]
  00072	0f 5a c0	 cvtps2pd xmm0, xmm0
  00075	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0007a	83 ec 08	 sub	 esp, 8
  0007d	f3 0f 10 46 30	 movss	 xmm0, DWORD PTR [esi+48]
  00082	0f 5a c0	 cvtps2pd xmm0, xmm0
  00085	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@LNHEOAC@FlyPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@
  0008f	57		 push	 edi
  00090	53		 push	 ebx
  00091	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00096	83 c4 24	 add	 esp, 36			; 00000024H
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	5b		 pop	 ebx

; 179  : 		}

  0009c	5d		 pop	 ebp
  0009d	c2 08 00	 ret	 8
?Save@SMotionEventDataFly@NMotionEvent@@UAEXPAU_iobuf@@H@Z ENDP ; NMotionEvent::SMotionEventDataFly::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventDataFly@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventDataFly@NMotionEvent@@UAE@XZ PROC	; NMotionEvent::SMotionEventDataFly::~SMotionEventDataFly, COMDAT
; _this$ = ecx

; 170  : 		virtual ~SMotionEventDataFly() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventDataFly@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00009	8b 4e 54	 mov	 ecx, DWORD PTR [esi+84]
  0000c	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0000f	72 28		 jb	 SHORT $LN15@SMotionEve
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00015	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001b	72 12		 jb	 SHORT $LN25@SMotionEve

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001d	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00020	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00023	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00025	83 c0 fc	 add	 eax, -4			; fffffffcH
  00028	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002b	77 68		 ja	 SHORT $LN50@SMotionEve

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002d	8b c2		 mov	 eax, edx
$LN25@SMotionEve:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0002f	51		 push	 ecx
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00036	83 c4 08	 add	 esp, 8
$LN15@SMotionEve:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00039	c7 46 50 00 00
	00 00		 mov	 DWORD PTR [esi+80], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00040	c7 46 54 0f 00
	00 00		 mov	 DWORD PTR [esi+84], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00047	c6 46 40 00	 mov	 BYTE PTR [esi+64], 0

; 2319 :         return _BUF_SIZE <= _Myres;

  0004b	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  0004e	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00051	72 28		 jb	 SHORT $LN43@SMotionEve
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00053	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00056	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00057	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0005d	72 12		 jb	 SHORT $LN53@SMotionEve

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0005f	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00062	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00065	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00067	83 c0 fc	 add	 eax, -4			; fffffffcH
  0006a	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0006d	77 26		 ja	 SHORT $LN50@SMotionEve

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0006f	8b c2		 mov	 eax, edx
$LN53@SMotionEve:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00071	51		 push	 ecx
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00078	83 c4 08	 add	 esp, 8
$LN43@SMotionEve:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  0007b	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00082	c7 46 2c 0f 00
	00 00		 mov	 DWORD PTR [esi+44], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00089	c6 46 18 00	 mov	 BYTE PTR [esi+24], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 170  : 		virtual ~SMotionEventDataFly() {}

  0008d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00093	5e		 pop	 esi
  00094	c3		 ret	 0
$LN50@SMotionEve:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00095	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN58@SMotionEve:
  0009a	cc		 int	 3
??1SMotionEventDataFly@NMotionEvent@@UAE@XZ ENDP	; NMotionEvent::SMotionEventDataFly::~SMotionEventDataFly
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??_GSMotionEventDataEffectToTarget@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventDataEffectToTarget@NMotionEvent@@UAEPAXI@Z PROC ; NMotionEvent::SMotionEventDataEffectToTarget::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 126  : 		virtual ~SMotionEventDataEffectToTarget() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventDataEffectToTarget@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  0000c	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  0000f	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 28		 jb	 SHORT $LN19@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00014	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00017	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00018	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001e	72 12		 jb	 SHORT $LN29@scalar

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00020	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00023	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00026	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00028	83 c0 fc	 add	 eax, -4			; fffffffcH
  0002b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002e	77 3c		 ja	 SHORT $LN26@scalar

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00030	8b c2		 mov	 eax, edx
$LN29@scalar:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00032	51		 push	 ecx
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00039	83 c4 08	 add	 esp, 8
$LN19@scalar:
  0003c	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00040	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00047	c7 46 2c 0f 00
	00 00		 mov	 DWORD PTR [esi+44], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004e	c6 46 18 00	 mov	 BYTE PTR [esi+24], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 126  : 		virtual ~SMotionEventDataEffectToTarget() {}

  00052	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00058	74 0b		 je	 SHORT $LN2@scalar
  0005a	6a 44		 push	 68			; 00000044H
  0005c	56		 push	 esi
  0005d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00062	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00065	8b c6		 mov	 eax, esi
  00067	5e		 pop	 esi
  00068	5d		 pop	 ebp
  00069	c2 04 00	 ret	 4
$LN26@scalar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0006c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN36@scalar:
  00071	cc		 int	 3
??_GSMotionEventDataEffectToTarget@NMotionEvent@@UAEPAXI@Z ENDP ; NMotionEvent::SMotionEventDataEffectToTarget::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
_TEXT	SEGMENT
_rTextFileLoader$GSCopy$1$ = -48			; size = 4
tv1650 = -41						; size = 1
tv1648 = -41						; size = 1
$T2 = -40						; size = 24
$T3 = -40						; size = 24
$T4 = -40						; size = 24
$T5 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z PROC ; NMotionEvent::SMotionEventDataEffectToTarget::Load, COMDAT
; _this$ = ecx

; 137  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0002d	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0P@MBGGNLC@effectfilename@+8
  00032	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0P@MBGGNLC@effectfilename@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 137  : 		{

  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0003d	89 45 e0	 mov	 DWORD PTR $T5[ebp+8], eax
  00040	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0P@MBGGNLC@effectfilename@+12
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 137  : 		{

  00046	89 4d d0	 mov	 DWORD PTR _rTextFileLoader$GSCopy$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00049	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  00050	c7 45 e8 0e 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 14 ; 0000000eH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00057	66 0f d6 45 d8	 movq	 QWORD PTR $T5[ebp], xmm0
  0005c	66 89 45 e4	 mov	 WORD PTR $T5[ebp+12], ax

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00060	c6 45 e6 00	 mov	 BYTE PTR $T5[ebp+14], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 138  : 			if (!rTextFileLoader.GetTokenString("effectfilename", &strEffectFileName))

  00064	8d 77 18	 lea	 esi, DWORD PTR [edi+24]
  00067	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006e	56		 push	 esi
  0006f	8d 45 d8	 lea	 eax, DWORD PTR $T5[ebp]
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00078	8b 55 ec	 mov	 edx, DWORD PTR $T5[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 138  : 			if (!rTextFileLoader.GetTokenString("effectfilename", &strEffectFileName))

  0007b	85 c0		 test	 eax, eax
  0007d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00084	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00087	83 fa 10	 cmp	 edx, 16			; 00000010H
  0008a	72 2c		 jb	 SHORT $LN96@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0008c	8b 4d d8	 mov	 ecx, DWORD PTR $T5[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0008f	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00090	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00092	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00098	72 14		 jb	 SHORT $LN106@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0009a	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0009d	83 c2 23	 add	 edx, 35			; 00000023H
  000a0	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000a2	83 c0 fc	 add	 eax, -4			; fffffffcH
  000a5	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000a8	0f 87 36 02 00
	00		 ja	 $LN372@Load
$LN106@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000ae	52		 push	 edx
  000af	51		 push	 ecx
  000b0	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000b5	83 c4 08	 add	 esp, 8
$LN96@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 138  : 			if (!rTextFileLoader.GetTokenString("effectfilename", &strEffectFileName))

  000b8	84 db		 test	 bl, bl
  000ba	0f 85 04 02 00
	00		 jne	 $LN368@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  000c0	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0P@PMGDNJPL@effectposition@+8
  000c5	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0P@PMGDNJPL@effectposition@
  000cd	89 45 e0	 mov	 DWORD PTR $T4[ebp+8], eax
  000d0	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0P@PMGDNJPL@effectposition@+12

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  000d6	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  000dd	c7 45 e8 0e 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 14 ; 0000000eH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  000e4	66 0f d6 45 d8	 movq	 QWORD PTR $T4[ebp], xmm0
  000e9	66 89 45 e4	 mov	 WORD PTR $T4[ebp+12], ax

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  000ed	88 5d e6	 mov	 BYTE PTR $T4[ebp+14], bl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 140  : 			if (!rTextFileLoader.GetTokenPosition("effectposition", &v3EffectPosition))

  000f0	8b 4d d0	 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  000f3	8d 47 30	 lea	 eax, DWORD PTR [edi+48]
  000f6	50		 push	 eax
  000f7	8d 45 d8	 lea	 eax, DWORD PTR $T4[ebp]
  000fa	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00101	50		 push	 eax
  00102	e8 00 00 00 00	 call	 ?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenPosition
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00107	8b 55 ec	 mov	 edx, DWORD PTR $T4[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 140  : 			if (!rTextFileLoader.GetTokenPosition("effectposition", &v3EffectPosition))

  0010a	85 c0		 test	 eax, eax
  0010c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00113	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00116	83 fa 10	 cmp	 edx, 16			; 00000010H
  00119	72 2c		 jb	 SHORT $LN195@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0011b	8b 4d d8	 mov	 ecx, DWORD PTR $T4[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0011e	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0011f	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00121	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00127	72 14		 jb	 SHORT $LN205@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00129	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0012c	83 c2 23	 add	 edx, 35			; 00000023H
  0012f	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00131	83 c0 fc	 add	 eax, -4			; fffffffcH
  00134	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00137	0f 87 ac 01 00
	00		 ja	 $LN373@Load
$LN205@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0013d	52		 push	 edx
  0013e	51		 push	 ecx
  0013f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00144	83 c4 08	 add	 esp, 8
$LN195@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 140  : 			if (!rTextFileLoader.GetTokenPosition("effectposition", &v3EffectPosition))

  00147	84 db		 test	 bl, bl
  00149	0f 85 75 01 00
	00		 jne	 $LN368@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0014f	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BA@DEKLACIK@followingenable@+8
  00154	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BA@DEKLACIK@followingenable@
  0015c	89 45 e0	 mov	 DWORD PTR $T3[ebp+8], eax
  0015f	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BA@DEKLACIK@followingenable@+12
  00165	66 89 45 e4	 mov	 WORD PTR $T3[ebp+12], ax
  00169	a0 0e 00 00 00	 mov	 al, BYTE PTR ??_C@_0BA@DEKLACIK@followingenable@+14

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0016e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  00175	c7 45 e8 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 15 ; 0000000fH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0017c	66 0f d6 45 d8	 movq	 QWORD PTR $T3[ebp], xmm0
  00181	88 45 e6	 mov	 BYTE PTR $T3[ebp+14], al

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00184	88 5d e7	 mov	 BYTE PTR $T3[ebp+15], bl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 142  : 			if (!rTextFileLoader.GetTokenBoolean("followingenable", &isFollowing))

  00187	8b 4d d0	 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  0018a	8d 5f 3c	 lea	 ebx, DWORD PTR [edi+60]
  0018d	53		 push	 ebx
  0018e	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00191	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00198	50		 push	 eax
  00199	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0019e	8b 55 ec	 mov	 edx, DWORD PTR $T3[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 142  : 			if (!rTextFileLoader.GetTokenBoolean("followingenable", &isFollowing))

  001a1	85 c0		 test	 eax, eax
  001a3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001aa	0f 94 c0	 sete	 al
  001ad	88 45 d7	 mov	 BYTE PTR tv1650[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001b0	83 fa 10	 cmp	 edx, 16			; 00000010H
  001b3	72 2f		 jb	 SHORT $LN294@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001b5	8b 4d d8	 mov	 ecx, DWORD PTR $T3[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001b8	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001b9	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  001bb	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  001c1	72 14		 jb	 SHORT $LN304@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  001c3	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  001c6	83 c2 23	 add	 edx, 35			; 00000023H
  001c9	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001cb	83 c0 fc	 add	 eax, -4			; fffffffcH
  001ce	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  001d1	0f 87 17 01 00
	00		 ja	 $LN374@Load
$LN304@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  001d7	52		 push	 edx
  001d8	51		 push	 ecx
  001d9	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  001de	8a 45 d7	 mov	 al, BYTE PTR tv1650[ebp]
  001e1	83 c4 08	 add	 esp, 8
$LN294@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 142  : 			if (!rTextFileLoader.GetTokenBoolean("followingenable", &isFollowing))

  001e4	84 c0		 test	 al, al
  001e6	74 06		 je	 SHORT $LN4@Load

; 143  : 			{
; 144  : 				isFollowing = FALSE;

  001e8	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
$LN4@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  001ee	6a 11		 push	 17			; 00000011H

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  001f0	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  001f7	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  001fa	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PGIDKNAJ@fishingeffectflag@

; 4596 :         _My_data._Mysize = 0;

  001ff	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00206	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0020d	c6 45 d8 00	 mov	 BYTE PTR $T2[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00211	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 146  : 			if (!rTextFileLoader.GetTokenBoolean("fishingeffectflag", &isFishingEffect))

  00216	8b 4d d0	 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  00219	8d 5f 40	 lea	 ebx, DWORD PTR [edi+64]
  0021c	53		 push	 ebx
  0021d	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  00220	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  00227	50		 push	 eax
  00228	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  0022d	8b 55 ec	 mov	 edx, DWORD PTR $T2[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 146  : 			if (!rTextFileLoader.GetTokenBoolean("fishingeffectflag", &isFishingEffect))

  00230	85 c0		 test	 eax, eax
  00232	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00239	0f 94 c0	 sete	 al
  0023c	88 45 d7	 mov	 BYTE PTR tv1648[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  0023f	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00242	72 2f		 jb	 SHORT $LN337@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00244	8b 4d d8	 mov	 ecx, DWORD PTR $T2[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00247	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00248	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0024a	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00250	72 14		 jb	 SHORT $LN347@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00252	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00255	83 c2 23	 add	 edx, 35			; 00000023H
  00258	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0025a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0025d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00260	0f 87 8d 00 00
	00		 ja	 $LN375@Load
$LN347@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00266	52		 push	 edx
  00267	51		 push	 ecx
  00268	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0026d	8a 45 d7	 mov	 al, BYTE PTR tv1648[ebp]
  00270	83 c4 08	 add	 esp, 8
$LN337@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00273	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0027a	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00281	c6 45 d8 00	 mov	 BYTE PTR $T2[ebp], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 146  : 			if (!rTextFileLoader.GetTokenBoolean("fishingeffectflag", &isFishingEffect))

  00285	84 c0		 test	 al, al
  00287	74 06		 je	 SHORT $LN5@Load

; 147  : 			{
; 148  : 				isFishingEffect = FALSE;

  00289	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
$LN5@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  0028f	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2305 :         const value_type* _Result = _Bx._Buf;

  00293	8b c6		 mov	 eax, esi

; 2306 :         if (_Large_string_engaged()) {

  00295	72 02		 jb	 SHORT $LN367@Load

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00297	8b 06		 mov	 eax, DWORD PTR [esi]
$LN367@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 150  : 			dwEffectIndex = GetCaseCRC32(strEffectFileName.c_str(), strEffectFileName.length());

  00299	ff 77 28	 push	 DWORD PTR [edi+40]
  0029c	50		 push	 eax
  0029d	e8 00 00 00 00	 call	 ?GetCaseCRC32@@YAKPBDI@Z ; GetCaseCRC32
  002a2	83 c4 08	 add	 esp, 8
  002a5	89 47 14	 mov	 DWORD PTR [edi+20], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  002a8	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2306 :         if (_Large_string_engaged()) {

  002ac	72 02		 jb	 SHORT $LN362@Load

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  002ae	8b 36		 mov	 esi, DWORD PTR [esi]
$LN362@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 152  : 			CEffectManager::Instance().RegisterEffect(strEffectFileName.c_str());

  002b0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  002b6	6a 00		 push	 0
  002b8	6a 00		 push	 0
  002ba	56		 push	 esi
  002bb	e8 00 00 00 00	 call	 ?RegisterEffect@CEffectManager@@QAEHPBD_N1@Z ; CEffectManager::RegisterEffect

; 153  : #endif
; 154  : 
; 155  : 			return true;

  002c0	b0 01		 mov	 al, 1
  002c2	eb 02		 jmp	 SHORT $LN1@Load
$LN368@Load:

; 141  : 				return false;

  002c4	32 c0		 xor	 al, al
$LN1@Load:

; 156  : 		}

  002c6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  002c9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  002d0	59		 pop	 ecx
  002d1	5f		 pop	 edi
  002d2	5e		 pop	 esi
  002d3	5b		 pop	 ebx
  002d4	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002d7	33 cd		 xor	 ecx, ebp
  002d9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002de	8b e5		 mov	 esp, ebp
  002e0	5d		 pop	 ebp
  002e1	c2 04 00	 ret	 4
$LN372@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  002e4	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN373@Load:
  002e9	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN374@Load:
  002ee	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN375@Load:
  002f3	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN370@Load:
  002f8	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T5[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T4[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$2:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$3:
  00018	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	cc		 int	 3
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
  00024	cc		 int	 3
__ehhandler$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z:
  00025	90		 npad	 1
  00026	90		 npad	 1
  00027	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002e	8b 4a cc	 mov	 ecx, DWORD PTR [edx-52]
  00031	33 c8		 xor	 ecx, eax
  00033	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00038	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0003b	33 c8		 xor	 ecx, eax
  0003d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00042	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  00047	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Load@SMotionEventDataEffectToTarget@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ENDP ; NMotionEvent::SMotionEventDataEffectToTarget::Load
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Save@SMotionEventDataEffectToTarget@NMotionEvent@@UAEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabs$ = 12						; size = 4
?Save@SMotionEventDataEffectToTarget@NMotionEvent@@UAEXPAU_iobuf@@H@Z PROC ; NMotionEvent::SMotionEventDataEffectToTarget::Save, COMDAT
; _this$ = ecx

; 129  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 130  : 			PrintfTabs(File, iTabs, "\n");

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _File$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 7d 0c	 mov	 edi, DWORD PTR _iTabs$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  00013	57		 push	 edi
  00014	53		 push	 ebx
  00015	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3922 :         return _Mypair._Myval2._Myptr();

  0001a	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 130  : 			PrintfTabs(File, iTabs, "\n");

  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00020	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2306 :         if (_Large_string_engaged()) {

  00024	72 02		 jb	 SHORT $LN6@Save

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00026	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@Save:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 131  : 			PrintfTabs(File, iTabs, "EffectFileName       \"%s\"\n", strEffectFileName.c_str());

  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@OHMOOLCL@EffectFileName?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@
  0002e	57		 push	 edi
  0002f	53		 push	 ebx
  00030	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00035	f3 0f 10 46 38	 movss	 xmm0, DWORD PTR [esi+56]

; 132  : 			PrintfTabs(File, iTabs, "EffectPosition       %f %f %f\n", v3EffectPosition.x, v3EffectPosition.y, v3EffectPosition.z);

  0003a	0f 5a c0	 cvtps2pd xmm0, xmm0
  0003d	f2 0f 11 44 24
	08		 movsd	 QWORD PTR [esp+8], xmm0
  00043	f3 0f 10 46 34	 movss	 xmm0, DWORD PTR [esi+52]
  00048	0f 5a c0	 cvtps2pd xmm0, xmm0
  0004b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00050	83 ec 08	 sub	 esp, 8
  00053	f3 0f 10 46 30	 movss	 xmm0, DWORD PTR [esi+48]
  00058	0f 5a c0	 cvtps2pd xmm0, xmm0
  0005b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@CFDDPJAK@EffectPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@
  00065	57		 push	 edi
  00066	53		 push	 ebx
  00067	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 133  : 			PrintfTabs(File, iTabs, "FollowingEnable      %d\n", isFollowing);

  0006c	ff 76 3c	 push	 DWORD PTR [esi+60]
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@NDNPFOND@FollowingEnable?5?5?5?5?5?5?$CFd?6@
  00074	57		 push	 edi
  00075	53		 push	 ebx
  00076	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 134  : 			PrintfTabs(File, iTabs, "FishingEffectFlag    %d\n", isFishingEffect);

  0007b	ff 76 40	 push	 DWORD PTR [esi+64]
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@ECHDEMEM@FishingEffectFlag?5?5?5?5?$CFd?6@
  00083	57		 push	 edi
  00084	53		 push	 ebx
  00085	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  0008a	83 c4 44	 add	 esp, 68			; 00000044H
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	5b		 pop	 ebx

; 135  : 		}

  00090	5d		 pop	 ebp
  00091	c2 08 00	 ret	 8
?Save@SMotionEventDataEffectToTarget@NMotionEvent@@UAEXPAU_iobuf@@H@Z ENDP ; NMotionEvent::SMotionEventDataEffectToTarget::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventDataEffectToTarget@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventDataEffectToTarget@NMotionEvent@@UAE@XZ PROC ; NMotionEvent::SMotionEventDataEffectToTarget::~SMotionEventDataEffectToTarget, COMDAT
; _this$ = ecx

; 126  : 		virtual ~SMotionEventDataEffectToTarget() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventDataEffectToTarget@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00009	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  0000c	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0000f	72 28		 jb	 SHORT $LN15@SMotionEve
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00015	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001b	72 12		 jb	 SHORT $LN25@SMotionEve

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001d	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00020	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00023	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00025	83 c0 fc	 add	 eax, -4			; fffffffcH
  00028	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002b	77 26		 ja	 SHORT $LN22@SMotionEve

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002d	8b c2		 mov	 eax, edx
$LN25@SMotionEve:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0002f	51		 push	 ecx
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00036	83 c4 08	 add	 esp, 8
$LN15@SMotionEve:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00039	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00040	c7 46 2c 0f 00
	00 00		 mov	 DWORD PTR [esi+44], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00047	c6 46 18 00	 mov	 BYTE PTR [esi+24], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 126  : 		virtual ~SMotionEventDataEffectToTarget() {}

  0004b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00051	5e		 pop	 esi
  00052	c3		 ret	 0
$LN22@SMotionEve:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00053	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN31@SMotionEve:
  00058	cc		 int	 3
??1SMotionEventDataEffectToTarget@NMotionEvent@@UAE@XZ ENDP ; NMotionEvent::SMotionEventDataEffectToTarget::~SMotionEventDataEffectToTarget
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??_GSMotionEventDataEffect@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventDataEffect@NMotionEvent@@UAEPAXI@Z PROC	; NMotionEvent::SMotionEventDataEffect::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 80   : 		virtual ~SMotionEventDataEffect() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventDataEffect@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  0000c	8b 4e 5c	 mov	 ecx, DWORD PTR [esi+92]
  0000f	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 28		 jb	 SHORT $LN19@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00014	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00017	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00018	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001e	72 12		 jb	 SHORT $LN29@scalar

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00020	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00023	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00026	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00028	83 c0 fc	 add	 eax, -4			; fffffffcH
  0002b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002e	77 7e		 ja	 SHORT $LN54@scalar

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00030	8b c2		 mov	 eax, edx
$LN29@scalar:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00032	51		 push	 ecx
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00039	83 c4 08	 add	 esp, 8
$LN19@scalar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  0003c	c7 46 58 00 00
	00 00		 mov	 DWORD PTR [esi+88], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00043	c7 46 5c 0f 00
	00 00		 mov	 DWORD PTR [esi+92], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004a	c6 46 48 00	 mov	 BYTE PTR [esi+72], 0

; 2319 :         return _BUF_SIZE <= _Myres;

  0004e	8b 4e 34	 mov	 ecx, DWORD PTR [esi+52]
  00051	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00054	72 28		 jb	 SHORT $LN47@scalar
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00056	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00059	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0005a	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00060	72 12		 jb	 SHORT $LN57@scalar

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00062	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00065	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00068	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0006a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0006d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00070	77 3c		 ja	 SHORT $LN54@scalar

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00072	8b c2		 mov	 eax, edx
$LN57@scalar:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00074	51		 push	 ecx
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0007b	83 c4 08	 add	 esp, 8
$LN47@scalar:
  0007e	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00082	c7 46 30 00 00
	00 00		 mov	 DWORD PTR [esi+48], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00089	c7 46 34 0f 00
	00 00		 mov	 DWORD PTR [esi+52], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00090	c6 46 20 00	 mov	 BYTE PTR [esi+32], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 80   : 		virtual ~SMotionEventDataEffect() {}

  00094	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  0009a	74 0b		 je	 SHORT $LN2@scalar
  0009c	6a 60		 push	 96			; 00000060H
  0009e	56		 push	 esi
  0009f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000a4	83 c4 08	 add	 esp, 8
$LN2@scalar:
  000a7	8b c6		 mov	 eax, esi
  000a9	5e		 pop	 esi
  000aa	5d		 pop	 ebp
  000ab	c2 04 00	 ret	 4
$LN54@scalar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000ae	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN63@scalar:
  000b3	cc		 int	 3
??_GSMotionEventDataEffect@NMotionEvent@@UAEPAXI@Z ENDP	; NMotionEvent::SMotionEventDataEffect::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
_TEXT	SEGMENT
_rTextFileLoader$GSCopy$1$ = -72			; size = 4
tv2499 = -65						; size = 1
tv2495 = -65						; size = 1
tv2492 = -65						; size = 1
$T2 = -64						; size = 24
$T3 = -40						; size = 24
$T4 = -40						; size = 24
$T5 = -40						; size = 24
$T6 = -40						; size = 24
$T7 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z PROC ; NMotionEvent::SMotionEventDataEffect::Load, COMDAT
; _this$ = ecx

; 93   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0002d	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BA@MCOMBMGO@independentflag@+8
  00032	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BA@MCOMBMGO@independentflag@
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 93   : 		{

  0003a	8b 5d 08	 mov	 ebx, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0003d	89 45 e0	 mov	 DWORD PTR $T7[ebp+8], eax
  00040	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BA@MCOMBMGO@independentflag@+12
  00046	66 89 45 e4	 mov	 WORD PTR $T7[ebp+12], ax
  0004a	a0 0e 00 00 00	 mov	 al, BYTE PTR ??_C@_0BA@MCOMBMGO@independentflag@+14
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 93   : 		{

  0004f	89 5d b8	 mov	 DWORD PTR _rTextFileLoader$GSCopy$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00052	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T7[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  00059	c7 45 e8 0f 00
	00 00		 mov	 DWORD PTR $T7[ebp+16], 15 ; 0000000fH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00060	66 0f d6 45 d8	 movq	 QWORD PTR $T7[ebp], xmm0
  00065	88 45 e6	 mov	 BYTE PTR $T7[ebp+14], al

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00068	c6 45 e7 00	 mov	 BYTE PTR $T7[ebp+15], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 94   : 			if (!rTextFileLoader.GetTokenBoolean("independentflag", &isIndependent))

  0006c	8d 77 1c	 lea	 esi, DWORD PTR [edi+28]
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00076	56		 push	 esi
  00077	8d 45 d8	 lea	 eax, DWORD PTR $T7[ebp]
  0007a	8b cb		 mov	 ecx, ebx
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00082	8b 55 ec	 mov	 edx, DWORD PTR $T7[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 94   : 			if (!rTextFileLoader.GetTokenBoolean("independentflag", &isIndependent))

  00085	85 c0		 test	 eax, eax
  00087	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008e	0f 94 c0	 sete	 al
  00091	88 45 bf	 mov	 BYTE PTR tv2499[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00094	83 fa 10	 cmp	 edx, 16			; 00000010H
  00097	72 2f		 jb	 SHORT $LN100@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00099	8b 4d d8	 mov	 ecx, DWORD PTR $T7[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0009c	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0009d	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0009f	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  000a5	72 14		 jb	 SHORT $LN110@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000a7	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  000aa	83 c2 23	 add	 edx, 35			; 00000023H
  000ad	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000af	83 c0 fc	 add	 eax, -4			; fffffffcH
  000b2	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000b5	0f 87 60 03 00
	00		 ja	 $LN574@Load
$LN110@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000bb	52		 push	 edx
  000bc	51		 push	 ecx
  000bd	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000c2	8a 45 bf	 mov	 al, BYTE PTR tv2499[ebp]
  000c5	83 c4 08	 add	 esp, 8
$LN100@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 94   : 			if (!rTextFileLoader.GetTokenBoolean("independentflag", &isIndependent))

  000c8	84 c0		 test	 al, al
  000ca	74 06		 je	 SHORT $LN2@Load

; 95   : 				isIndependent = FALSE;

  000cc	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN2@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  000d2	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BA@HJAHPMOG@attachingenable@+8
  000d7	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BA@HJAHPMOG@attachingenable@
  000df	89 45 e0	 mov	 DWORD PTR $T6[ebp+8], eax
  000e2	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BA@HJAHPMOG@attachingenable@+12
  000e8	66 89 45 e4	 mov	 WORD PTR $T6[ebp+12], ax
  000ec	a0 0e 00 00 00	 mov	 al, BYTE PTR ??_C@_0BA@HJAHPMOG@attachingenable@+14

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  000f1	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  000f8	c7 45 e8 0f 00
	00 00		 mov	 DWORD PTR $T6[ebp+16], 15 ; 0000000fH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  000ff	66 0f d6 45 d8	 movq	 QWORD PTR $T6[ebp], xmm0
  00104	88 45 e6	 mov	 BYTE PTR $T6[ebp+14], al

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00107	c6 45 e7 00	 mov	 BYTE PTR $T6[ebp+15], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 96   : 			if (!rTextFileLoader.GetTokenBoolean("attachingenable", &isAttaching))

  0010b	8d 47 14	 lea	 eax, DWORD PTR [edi+20]
  0010e	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00115	50		 push	 eax
  00116	8d 45 d8	 lea	 eax, DWORD PTR $T6[ebp]
  00119	8b cb		 mov	 ecx, ebx
  0011b	50		 push	 eax
  0011c	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00121	8b 55 ec	 mov	 edx, DWORD PTR $T6[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 96   : 			if (!rTextFileLoader.GetTokenBoolean("attachingenable", &isAttaching))

  00124	85 c0		 test	 eax, eax
  00126	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0012d	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00130	83 fa 10	 cmp	 edx, 16			; 00000010H
  00133	72 2c		 jb	 SHORT $LN199@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00135	8b 4d d8	 mov	 ecx, DWORD PTR $T6[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00138	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00139	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0013b	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00141	72 14		 jb	 SHORT $LN209@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00143	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00146	83 c2 23	 add	 edx, 35			; 00000023H
  00149	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0014b	83 c0 fc	 add	 eax, -4			; fffffffcH
  0014e	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00151	0f 87 c9 02 00
	00		 ja	 $LN575@Load
$LN209@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00157	52		 push	 edx
  00158	51		 push	 ecx
  00159	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0015e	83 c4 08	 add	 esp, 8
$LN199@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 96   : 			if (!rTextFileLoader.GetTokenBoolean("attachingenable", &isAttaching))

  00161	84 db		 test	 bl, bl
  00163	0f 85 92 02 00
	00		 jne	 $LN570@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00169	6a 11		 push	 17			; 00000011H

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0016b	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00172	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  00175	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@FCIOLNPK@attachingbonename@

; 4596 :         _My_data._Mysize = 0;

  0017a	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00181	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4611 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4612 :             _Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00188	88 5d c0	 mov	 BYTE PTR $T2[ebp], bl

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0018b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 98   : 			if (!rTextFileLoader.GetTokenString("attachingbonename", &strAttachingBoneName))

  00190	8b 4d b8	 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  00193	8d 47 20	 lea	 eax, DWORD PTR [edi+32]
  00196	50		 push	 eax
  00197	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  0019a	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  001a1	50		 push	 eax
  001a2	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001a7	8b 55 d4	 mov	 edx, DWORD PTR $T2[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 98   : 			if (!rTextFileLoader.GetTokenString("attachingbonename", &strAttachingBoneName))

  001aa	85 c0		 test	 eax, eax
  001ac	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001b3	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001b6	83 fa 10	 cmp	 edx, 16			; 00000010H
  001b9	72 2c		 jb	 SHORT $LN242@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001bb	8b 4d c0	 mov	 ecx, DWORD PTR $T2[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001be	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001bf	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  001c1	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  001c7	72 14		 jb	 SHORT $LN252@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  001c9	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  001cc	83 c2 23	 add	 edx, 35			; 00000023H
  001cf	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001d1	83 c0 fc	 add	 eax, -4			; fffffffcH
  001d4	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  001d7	0f 87 48 02 00
	00		 ja	 $LN576@Load
$LN252@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  001dd	52		 push	 edx
  001de	51		 push	 ecx
  001df	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  001e4	83 c4 08	 add	 esp, 8
$LN242@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 98   : 			if (!rTextFileLoader.GetTokenString("attachingbonename", &strAttachingBoneName))

  001e7	84 db		 test	 bl, bl
  001e9	0f 85 0c 02 00
	00		 jne	 $LN570@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  001ef	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0P@MBGGNLC@effectfilename@+8
  001f4	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0P@MBGGNLC@effectfilename@
  001fc	89 45 e0	 mov	 DWORD PTR $T5[ebp+8], eax
  001ff	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0P@MBGGNLC@effectfilename@+12

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00205	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  0020c	c7 45 e8 0e 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 14 ; 0000000eH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00213	66 0f d6 45 d8	 movq	 QWORD PTR $T5[ebp], xmm0
  00218	66 89 45 e4	 mov	 WORD PTR $T5[ebp+12], ax

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0021c	88 5d e6	 mov	 BYTE PTR $T5[ebp+14], bl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 100  : 			if (!rTextFileLoader.GetTokenString("effectfilename", &strEffectFileName))

  0021f	8b 5d b8	 mov	 ebx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  00222	8d 77 48	 lea	 esi, DWORD PTR [edi+72]
  00225	56		 push	 esi
  00226	8d 45 d8	 lea	 eax, DWORD PTR $T5[ebp]
  00229	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  00230	50		 push	 eax
  00231	8b cb		 mov	 ecx, ebx
  00233	e8 00 00 00 00	 call	 ?GetTokenString@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z ; CTextFileLoader::GetTokenString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00238	8b 55 ec	 mov	 edx, DWORD PTR $T5[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 100  : 			if (!rTextFileLoader.GetTokenString("effectfilename", &strEffectFileName))

  0023b	85 c0		 test	 eax, eax
  0023d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00244	0f 94 c0	 sete	 al
  00247	88 45 bf	 mov	 BYTE PTR tv2495[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0024a	83 fa 10	 cmp	 edx, 16			; 00000010H
  0024d	72 2f		 jb	 SHORT $LN341@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0024f	8b 4d d8	 mov	 ecx, DWORD PTR $T5[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00252	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00253	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00255	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0025b	72 14		 jb	 SHORT $LN351@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0025d	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00260	83 c2 23	 add	 edx, 35			; 00000023H
  00263	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00265	83 c0 fc	 add	 eax, -4			; fffffffcH
  00268	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0026b	0f 87 b9 01 00
	00		 ja	 $LN577@Load
$LN351@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00271	52		 push	 edx
  00272	51		 push	 ecx
  00273	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00278	8a 45 bf	 mov	 al, BYTE PTR tv2495[ebp]
  0027b	83 c4 08	 add	 esp, 8
$LN341@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 100  : 			if (!rTextFileLoader.GetTokenString("effectfilename", &strEffectFileName))

  0027e	84 c0		 test	 al, al
  00280	0f 85 75 01 00
	00		 jne	 $LN570@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00286	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0P@PMGDNJPL@effectposition@+8
  0028b	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0P@PMGDNJPL@effectposition@
  00293	89 45 e0	 mov	 DWORD PTR $T4[ebp+8], eax
  00296	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0P@PMGDNJPL@effectposition@+12

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0029c	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  002a3	c7 45 e8 0e 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 14 ; 0000000eH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  002aa	66 0f d6 45 d8	 movq	 QWORD PTR $T4[ebp], xmm0
  002af	66 89 45 e4	 mov	 WORD PTR $T4[ebp+12], ax

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  002b3	c6 45 e6 00	 mov	 BYTE PTR $T4[ebp+14], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 102  : 			if (!rTextFileLoader.GetTokenPosition("effectposition", &v3EffectPosition))

  002b7	8d 47 38	 lea	 eax, DWORD PTR [edi+56]
  002ba	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  002c1	50		 push	 eax
  002c2	8d 45 d8	 lea	 eax, DWORD PTR $T4[ebp]
  002c5	8b cb		 mov	 ecx, ebx
  002c7	50		 push	 eax
  002c8	e8 00 00 00 00	 call	 ?GetTokenPosition@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAUD3DXVECTOR3@@@Z ; CTextFileLoader::GetTokenPosition
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  002cd	8b 55 ec	 mov	 edx, DWORD PTR $T4[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 102  : 			if (!rTextFileLoader.GetTokenPosition("effectposition", &v3EffectPosition))

  002d0	85 c0		 test	 eax, eax
  002d2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  002d9	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  002dc	83 fa 10	 cmp	 edx, 16			; 00000010H
  002df	72 2c		 jb	 SHORT $LN440@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002e1	8b 4d d8	 mov	 ecx, DWORD PTR $T4[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  002e4	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002e5	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  002e7	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  002ed	72 14		 jb	 SHORT $LN450@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  002ef	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  002f2	83 c2 23	 add	 edx, 35			; 00000023H
  002f5	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  002f7	83 c0 fc	 add	 eax, -4			; fffffffcH
  002fa	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  002fd	0f 87 2c 01 00
	00		 ja	 $LN578@Load
$LN450@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00303	52		 push	 edx
  00304	51		 push	 ecx
  00305	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0030a	83 c4 08	 add	 esp, 8
$LN440@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 102  : 			if (!rTextFileLoader.GetTokenPosition("effectposition", &v3EffectPosition))

  0030d	84 db		 test	 bl, bl
  0030f	0f 85 e6 00 00
	00		 jne	 $LN570@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00315	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BA@DEKLACIK@followingenable@+8
  0031a	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BA@DEKLACIK@followingenable@
  00322	89 45 e0	 mov	 DWORD PTR $T3[ebp+8], eax
  00325	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BA@DEKLACIK@followingenable@+12
  0032b	66 89 45 e4	 mov	 WORD PTR $T3[ebp+12], ax
  0032f	a0 0e 00 00 00	 mov	 al, BYTE PTR ??_C@_0BA@DEKLACIK@followingenable@+14

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  00334	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  0033b	c7 45 e8 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 15 ; 0000000fH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00342	66 0f d6 45 d8	 movq	 QWORD PTR $T3[ebp], xmm0
  00347	88 45 e6	 mov	 BYTE PTR $T3[ebp+14], al

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0034a	88 5d e7	 mov	 BYTE PTR $T3[ebp+15], bl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 104  : 			if (!rTextFileLoader.GetTokenBoolean("followingenable", &isFollowing))

  0034d	8b 4d b8	 mov	 ecx, DWORD PTR _rTextFileLoader$GSCopy$1$[ebp]
  00350	8d 5f 18	 lea	 ebx, DWORD PTR [edi+24]
  00353	53		 push	 ebx
  00354	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00357	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
  0035e	50		 push	 eax
  0035f	e8 00 00 00 00	 call	 ?GetTokenBoolean@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenBoolean
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00364	8b 55 ec	 mov	 edx, DWORD PTR $T3[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 104  : 			if (!rTextFileLoader.GetTokenBoolean("followingenable", &isFollowing))

  00367	85 c0		 test	 eax, eax
  00369	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00370	0f 94 c0	 sete	 al
  00373	88 45 bf	 mov	 BYTE PTR tv2492[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00376	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00379	72 2f		 jb	 SHORT $LN539@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0037b	8b 4d d8	 mov	 ecx, DWORD PTR $T3[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0037e	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0037f	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00381	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00387	72 14		 jb	 SHORT $LN549@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00389	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0038c	83 c2 23	 add	 edx, 35			; 00000023H
  0038f	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00391	83 c0 fc	 add	 eax, -4			; fffffffcH
  00394	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00397	0f 87 97 00 00
	00		 ja	 $LN579@Load
$LN549@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0039d	52		 push	 edx
  0039e	51		 push	 ecx
  0039f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  003a4	8a 45 bf	 mov	 al, BYTE PTR tv2492[ebp]
  003a7	83 c4 08	 add	 esp, 8
$LN539@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  003aa	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  003b1	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  003b8	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 104  : 			if (!rTextFileLoader.GetTokenBoolean("followingenable", &isFollowing))

  003bc	84 c0		 test	 al, al
  003be	74 06		 je	 SHORT $LN7@Load

; 105  : 			{
; 106  : 				isFollowing = FALSE;

  003c0	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
$LN7@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  003c6	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2305 :         const value_type* _Result = _Bx._Buf;

  003ca	8b c6		 mov	 eax, esi

; 2306 :         if (_Large_string_engaged()) {

  003cc	72 02		 jb	 SHORT $LN569@Load

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  003ce	8b 06		 mov	 eax, DWORD PTR [esi]
$LN569@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 108  : 			dwEffectIndex = GetCaseCRC32(strEffectFileName.c_str(), strEffectFileName.length());

  003d0	ff 77 58	 push	 DWORD PTR [edi+88]
  003d3	50		 push	 eax
  003d4	e8 00 00 00 00	 call	 ?GetCaseCRC32@@YAKPBDI@Z ; GetCaseCRC32
  003d9	83 c4 08	 add	 esp, 8
  003dc	89 47 44	 mov	 DWORD PTR [edi+68], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  003df	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2306 :         if (_Large_string_engaged()) {

  003e3	72 02		 jb	 SHORT $LN564@Load

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  003e5	8b 36		 mov	 esi, DWORD PTR [esi]
$LN564@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 109  : 			CEffectManager::Instance().RegisterEffect(strEffectFileName.c_str());

  003e7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  003ed	6a 00		 push	 0
  003ef	6a 00		 push	 0
  003f1	56		 push	 esi
  003f2	e8 00 00 00 00	 call	 ?RegisterEffect@CEffectManager@@QAEHPBD_N1@Z ; CEffectManager::RegisterEffect

; 110  : 
; 111  : 			return true;

  003f7	b0 01		 mov	 al, 1
  003f9	eb 02		 jmp	 SHORT $LN1@Load
$LN570@Load:

; 103  : 				return false;

  003fb	32 c0		 xor	 al, al
$LN1@Load:

; 112  : 		}

  003fd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00400	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00407	59		 pop	 ecx
  00408	5f		 pop	 edi
  00409	5e		 pop	 esi
  0040a	5b		 pop	 ebx
  0040b	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0040e	33 cd		 xor	 ecx, ebp
  00410	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00415	8b e5		 mov	 esp, ebp
  00417	5d		 pop	 ebp
  00418	c2 04 00	 ret	 4
$LN574@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0041b	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN575@Load:
  00420	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN576@Load:
  00425	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN577@Load:
  0042a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN578@Load:
  0042f	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN579@Load:
  00434	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN572@Load:
  00439	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T7[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T6[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$2:
  00010	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$3:
  00018	8d 4d d8	 lea	 ecx, DWORD PTR $T5[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$4:
  00020	8d 4d d8	 lea	 ecx, DWORD PTR $T4[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$5:
  00028	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  0002b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00030	cc		 int	 3
  00031	cc		 int	 3
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
__ehhandler$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z:
  00035	90		 npad	 1
  00036	90		 npad	 1
  00037	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003e	8b 4a b4	 mov	 ecx, DWORD PTR [edx-76]
  00041	33 c8		 xor	 ecx, eax
  00043	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00048	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0004b	33 c8		 xor	 ecx, eax
  0004d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00052	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  00057	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Load@SMotionEventDataEffect@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ENDP ; NMotionEvent::SMotionEventDataEffect::Load
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Save@SMotionEventDataEffect@NMotionEvent@@UAEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabs$ = 12						; size = 4
?Save@SMotionEventDataEffect@NMotionEvent@@UAEXPAU_iobuf@@H@Z PROC ; NMotionEvent::SMotionEventDataEffect::Save, COMDAT
; _this$ = ecx

; 83   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 84   : 			PrintfTabs(File, iTabs, "\n");

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _File$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 7d 0c	 mov	 edi, DWORD PTR _iTabs$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  00013	57		 push	 edi
  00014	53		 push	 ebx
  00015	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 85   : 			PrintfTabs(File, iTabs, "IndependentFlag      %d\n", isIndependent);

  0001a	ff 76 1c	 push	 DWORD PTR [esi+28]
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@EFAIBPHL@IndependentFlag?5?5?5?5?5?5?$CFd?6@
  00022	57		 push	 edi
  00023	53		 push	 ebx
  00024	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 86   : 			PrintfTabs(File, iTabs, "AttachingEnable      %d\n", isAttaching);

  00029	ff 76 14	 push	 DWORD PTR [esi+20]
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@LAKEIKLD@AttachingEnable?5?5?5?5?5?5?$CFd?6@
  00031	57		 push	 edi
  00032	53		 push	 ebx
  00033	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3922 :         return _Mypair._Myval2._Myptr();

  00038	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 86   : 			PrintfTabs(File, iTabs, "AttachingEnable      %d\n", isAttaching);

  0003b	83 c4 2c	 add	 esp, 44			; 0000002cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  0003e	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2306 :         if (_Large_string_engaged()) {

  00042	72 02		 jb	 SHORT $LN6@Save

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00044	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@Save:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 87   : 			PrintfTabs(File, iTabs, "AttachingBoneName    \"%s\"\n", strAttachingBoneName.c_str());

  00046	50		 push	 eax
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@PLABIPOF@AttachingBoneName?5?5?5?5?$CC?$CFs?$CC?6@
  0004c	57		 push	 edi
  0004d	53		 push	 ebx
  0004e	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 88   : 			PrintfTabs(File, iTabs, "FollowingEnable      %d\n", isFollowing);

  00053	ff 76 18	 push	 DWORD PTR [esi+24]
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@NDNPFOND@FollowingEnable?5?5?5?5?5?5?$CFd?6@
  0005b	57		 push	 edi
  0005c	53		 push	 ebx
  0005d	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3922 :         return _Mypair._Myval2._Myptr();

  00062	8d 46 48	 lea	 eax, DWORD PTR [esi+72]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 88   : 			PrintfTabs(File, iTabs, "FollowingEnable      %d\n", isFollowing);

  00065	83 c4 20	 add	 esp, 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00068	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2306 :         if (_Large_string_engaged()) {

  0006c	72 02		 jb	 SHORT $LN13@Save

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  0006e	8b 00		 mov	 eax, DWORD PTR [eax]
$LN13@Save:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 89   : 			PrintfTabs(File, iTabs, "EffectFileName       \"%s\"\n", strEffectFileName.c_str());

  00070	50		 push	 eax
  00071	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@OHMOOLCL@EffectFileName?5?5?5?5?5?5?5?$CC?$CFs?$CC?6@
  00076	57		 push	 edi
  00077	53		 push	 ebx
  00078	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  0007d	f3 0f 10 46 40	 movss	 xmm0, DWORD PTR [esi+64]

; 90   : 			PrintfTabs(File, iTabs, "EffectPosition       %f %f %f\n", v3EffectPosition.x, v3EffectPosition.y, v3EffectPosition.z);

  00082	0f 5a c0	 cvtps2pd xmm0, xmm0
  00085	f2 0f 11 44 24
	08		 movsd	 QWORD PTR [esp+8], xmm0
  0008b	f3 0f 10 46 3c	 movss	 xmm0, DWORD PTR [esi+60]
  00090	0f 5a c0	 cvtps2pd xmm0, xmm0
  00093	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00098	83 ec 08	 sub	 esp, 8
  0009b	f3 0f 10 46 38	 movss	 xmm0, DWORD PTR [esi+56]
  000a0	0f 5a c0	 cvtps2pd xmm0, xmm0
  000a3	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@CFDDPJAK@EffectPosition?5?5?5?5?5?5?5?$CFf?5?$CFf?5?$CFf?6@
  000ad	57		 push	 edi
  000ae	53		 push	 ebx
  000af	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  000b4	83 c4 24	 add	 esp, 36			; 00000024H
  000b7	5f		 pop	 edi
  000b8	5e		 pop	 esi
  000b9	5b		 pop	 ebx

; 91   : 		}

  000ba	5d		 pop	 ebp
  000bb	c2 08 00	 ret	 8
?Save@SMotionEventDataEffect@NMotionEvent@@UAEXPAU_iobuf@@H@Z ENDP ; NMotionEvent::SMotionEventDataEffect::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventDataEffect@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventDataEffect@NMotionEvent@@UAE@XZ PROC	; NMotionEvent::SMotionEventDataEffect::~SMotionEventDataEffect, COMDAT
; _this$ = ecx

; 80   : 		virtual ~SMotionEventDataEffect() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventDataEffect@NMotionEvent@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00009	8b 4e 5c	 mov	 ecx, DWORD PTR [esi+92]
  0000c	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0000f	72 28		 jb	 SHORT $LN15@SMotionEve
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00011	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00015	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001b	72 12		 jb	 SHORT $LN25@SMotionEve

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001d	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00020	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00023	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00025	83 c0 fc	 add	 eax, -4			; fffffffcH
  00028	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002b	77 68		 ja	 SHORT $LN50@SMotionEve

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002d	8b c2		 mov	 eax, edx
$LN25@SMotionEve:

; 264  :         ::operator delete(_Ptr, _Bytes);

  0002f	51		 push	 ecx
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00036	83 c4 08	 add	 esp, 8
$LN15@SMotionEve:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00039	c7 46 58 00 00
	00 00		 mov	 DWORD PTR [esi+88], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00040	c7 46 5c 0f 00
	00 00		 mov	 DWORD PTR [esi+92], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00047	c6 46 48 00	 mov	 BYTE PTR [esi+72], 0

; 2319 :         return _BUF_SIZE <= _Myres;

  0004b	8b 4e 34	 mov	 ecx, DWORD PTR [esi+52]
  0004e	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00051	72 28		 jb	 SHORT $LN43@SMotionEve
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00053	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00056	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00057	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0005d	72 12		 jb	 SHORT $LN53@SMotionEve

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0005f	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00062	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00065	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00067	83 c0 fc	 add	 eax, -4			; fffffffcH
  0006a	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0006d	77 26		 ja	 SHORT $LN50@SMotionEve

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0006f	8b c2		 mov	 eax, edx
$LN53@SMotionEve:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00071	51		 push	 ecx
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00078	83 c4 08	 add	 esp, 8
$LN43@SMotionEve:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  0007b	c7 46 30 00 00
	00 00		 mov	 DWORD PTR [esi+48], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00082	c7 46 34 0f 00
	00 00		 mov	 DWORD PTR [esi+52], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00089	c6 46 20 00	 mov	 BYTE PTR [esi+32], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 80   : 		virtual ~SMotionEventDataEffect() {}

  0008d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00093	5e		 pop	 esi
  00094	c3		 ret	 0
$LN50@SMotionEve:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00095	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN58@SMotionEve:
  0009a	cc		 int	 3
??1SMotionEventDataEffect@NMotionEvent@@UAE@XZ ENDP	; NMotionEvent::SMotionEventDataEffect::~SMotionEventDataEffect
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GSMotionEventDataScreenWaving@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventDataScreenWaving@NMotionEvent@@UAEPAXI@Z PROC ; NMotionEvent::SMotionEventDataScreenWaving::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 1c		 push	 28			; 0000001cH
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GSMotionEventDataScreenWaving@NMotionEvent@@UAEPAXI@Z ENDP ; NMotionEvent::SMotionEventDataScreenWaving::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
_TEXT	SEGMENT
$T2 = -40						; size = 24
$T3 = -40						; size = 24
$T4 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rTextFileLoader$ = 8					; size = 4
?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z PROC ; NMotionEvent::SMotionEventDataScreenWaving::Load, COMDAT
; _this$ = ecx

; 40   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0002d	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0L@KJGFIEPL@duringtime@
  00035	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0L@KJGFIEPL@duringtime@+8
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 40   : 		{

  0003b	8b 7d 08	 mov	 edi, DWORD PTR _rTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0003e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  00045	c7 45 e8 0a 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 10 ; 0000000aH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0004c	66 0f d6 45 d8	 movq	 QWORD PTR $T4[ebp], xmm0
  00051	66 89 45 e0	 mov	 WORD PTR $T4[ebp+8], ax

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00055	c6 45 e2 00	 mov	 BYTE PTR $T4[ebp+10], 0
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 41   : 			if (!rTextFileLoader.GetTokenFloat("duringtime", &fDurationTime))

  00059	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0005c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00063	50		 push	 eax
  00064	8d 45 d8	 lea	 eax, DWORD PTR $T4[ebp]
  00067	8b cf		 mov	 ecx, edi
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ?GetTokenFloat@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM@Z ; CTextFileLoader::GetTokenFloat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0006f	8b 55 ec	 mov	 edx, DWORD PTR $T4[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 41   : 			if (!rTextFileLoader.GetTokenFloat("duringtime", &fDurationTime))

  00072	85 c0		 test	 eax, eax
  00074	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007b	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0007e	83 fa 10	 cmp	 edx, 16			; 00000010H
  00081	72 2c		 jb	 SHORT $LN94@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	8b 4d d8	 mov	 ecx, DWORD PTR $T4[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00086	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00087	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00089	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0008f	72 14		 jb	 SHORT $LN104@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00091	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00094	83 c2 23	 add	 edx, 35			; 00000023H
  00097	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00099	83 c0 fc	 add	 eax, -4			; fffffffcH
  0009c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0009f	0f 87 3a 01 00
	00		 ja	 $LN311@Load
$LN104@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000a5	52		 push	 edx
  000a6	51		 push	 ecx
  000a7	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000ac	83 c4 08	 add	 esp, 8
$LN94@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 41   : 			if (!rTextFileLoader.GetTokenFloat("duringtime", &fDurationTime))

  000af	84 db		 test	 bl, bl
  000b1	0f 85 08 01 00
	00		 jne	 $LN307@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  000b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_05PLIADJJL@power@
  000bc	89 45 d8	 mov	 DWORD PTR $T3[ebp], eax
  000bf	a0 04 00 00 00	 mov	 al, BYTE PTR ??_C@_05PLIADJJL@power@+4

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  000c4	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  000cb	c7 45 e8 05 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 5

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  000d2	88 45 dc	 mov	 BYTE PTR $T3[ebp+4], al

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  000d5	88 5d dd	 mov	 BYTE PTR $T3[ebp+5], bl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 43   : 			if (!rTextFileLoader.GetTokenInteger("power", &iPower))

  000d8	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  000db	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000e2	50		 push	 eax
  000e3	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  000e6	8b cf		 mov	 ecx, edi
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000ee	8b 55 ec	 mov	 edx, DWORD PTR $T3[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 43   : 			if (!rTextFileLoader.GetTokenInteger("power", &iPower))

  000f1	85 c0		 test	 eax, eax
  000f3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000fa	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000fd	83 fa 10	 cmp	 edx, 16			; 00000010H
  00100	72 2c		 jb	 SHORT $LN193@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00102	8b 4d d8	 mov	 ecx, DWORD PTR $T3[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00105	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00106	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00108	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  0010e	72 14		 jb	 SHORT $LN203@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00110	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  00113	83 c2 23	 add	 edx, 35			; 00000023H
  00116	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00118	83 c0 fc	 add	 eax, -4			; fffffffcH
  0011b	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0011e	0f 87 c0 00 00
	00		 ja	 $LN312@Load
$LN203@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00124	52		 push	 edx
  00125	51		 push	 ecx
  00126	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0012b	83 c4 08	 add	 esp, 8
$LN193@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 43   : 			if (!rTextFileLoader.GetTokenInteger("power", &iPower))

  0012e	84 db		 test	 bl, bl
  00130	0f 85 89 00 00
	00		 jne	 $LN307@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00136	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0P@JIGGKKJB@affectingrange@+8
  0013b	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0P@JIGGKKJB@affectingrange@
  00143	89 45 e0	 mov	 DWORD PTR $T2[ebp+8], eax
  00146	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0P@JIGGKKJB@affectingrange@+12

; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0014c	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 3248 :             _Mypair._Myval2._Mysize = _Count;

  00153	c7 45 e8 0e 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 14 ; 0000000eH

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0015a	66 0f d6 45 d8	 movq	 QWORD PTR $T2[ebp], xmm0
  0015f	66 89 45 e4	 mov	 WORD PTR $T2[ebp+12], ax

; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00163	88 5d e6	 mov	 BYTE PTR $T2[ebp+14], bl
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 45   : 			if (!rTextFileLoader.GetTokenInteger("affectingrange", &iAffectingRange))

  00166	83 c6 18	 add	 esi, 24			; 00000018H
  00169	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00170	56		 push	 esi
  00171	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  00174	8b cf		 mov	 ecx, edi
  00176	50		 push	 eax
  00177	e8 00 00 00 00	 call	 ?GetTokenInteger@CTextFileLoader@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAH@Z ; CTextFileLoader::GetTokenInteger
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  0017c	8b 55 ec	 mov	 edx, DWORD PTR $T2[ebp+20]
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 45   : 			if (!rTextFileLoader.GetTokenInteger("affectingrange", &iAffectingRange))

  0017f	85 c0		 test	 eax, eax
  00181	0f 94 c3	 sete	 bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00184	83 fa 10	 cmp	 edx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00187	72 28		 jb	 SHORT $LN292@Load
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00189	8b 4d d8	 mov	 ecx, DWORD PTR $T2[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0018c	42		 inc	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0018d	8b c1		 mov	 eax, ecx

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0018f	81 fa 00 10 00
	00		 cmp	 edx, 4096		; 00001000H
  00195	72 10		 jb	 SHORT $LN302@Load

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00197	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  0019a	83 c2 23	 add	 edx, 35			; 00000023H
  0019d	2b c1		 sub	 eax, ecx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0019f	83 c0 fc	 add	 eax, -4			; fffffffcH
  001a2	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  001a5	77 42		 ja	 SHORT $LN313@Load
$LN302@Load:

; 264  :         ::operator delete(_Ptr, _Bytes);

  001a7	52		 push	 edx
  001a8	51		 push	 ecx
  001a9	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  001ae	83 c4 08	 add	 esp, 8
$LN292@Load:
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h

; 45   : 			if (!rTextFileLoader.GetTokenInteger("affectingrange", &iAffectingRange))

  001b1	84 db		 test	 bl, bl
  001b3	74 06		 je	 SHORT $LN4@Load

; 46   : 				iAffectingRange = 0;

  001b5	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN4@Load:

; 47   : 
; 48   : 			return true;

  001bb	b0 01		 mov	 al, 1
  001bd	eb 02		 jmp	 SHORT $LN1@Load
$LN307@Load:

; 44   : 				return false;

  001bf	32 c0		 xor	 al, al
$LN1@Load:

; 49   : 		}

  001c1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001c4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001cb	59		 pop	 ecx
  001cc	5f		 pop	 edi
  001cd	5e		 pop	 esi
  001ce	5b		 pop	 ebx
  001cf	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001d2	33 cd		 xor	 ecx, ebp
  001d4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001d9	8b e5		 mov	 esp, ebp
  001db	5d		 pop	 ebp
  001dc	c2 04 00	 ret	 4
$LN311@Load:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  001df	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN312@Load:
  001e4	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN313@Load:
  001e9	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN309@Load:
  001ee	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$1:
  00008	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z$2:
  00010	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
__ehhandler$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z:
  0001d	90		 npad	 1
  0001e	90		 npad	 1
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00033	33 c8		 xor	 ecx, eax
  00035	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
  0003f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Load@SMotionEventDataScreenWaving@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ENDP ; NMotionEvent::SMotionEventDataScreenWaving::Load
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Save@SMotionEventDataScreenWaving@NMotionEvent@@UAEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_File$ = 8						; size = 4
_iTabs$ = 12						; size = 4
?Save@SMotionEventDataScreenWaving@NMotionEvent@@UAEXPAU_iobuf@@H@Z PROC ; NMotionEvent::SMotionEventDataScreenWaving::Save, COMDAT
; _this$ = ecx

; 33   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 34   : 			PrintfTabs(File, iTabs, "\n");

  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _iTabs$[ebp]
  00007	56		 push	 esi
  00008	8b 75 08	 mov	 esi, DWORD PTR _File$[ebp]
  0000b	57		 push	 edi
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	8b f9		 mov	 edi, ecx
  00015	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  0001a	f3 0f 10 47 10	 movss	 xmm0, DWORD PTR [edi+16]

; 35   : 			PrintfTabs(File, iTabs, "DuringTime           %f\n", fDurationTime);

  0001f	83 c4 04	 add	 esp, 4
  00022	0f 5a c0	 cvtps2pd xmm0, xmm0
  00025	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@JOLNCGNF@DuringTime?5?5?5?5?5?5?5?5?5?5?5?$CFf?6@
  0002f	53		 push	 ebx
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 36   : 			PrintfTabs(File, iTabs, "Power                %d\n", iPower);

  00036	ff 77 14	 push	 DWORD PTR [edi+20]
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@FEKHNOBC@Power?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CFd?6@
  0003e	53		 push	 ebx
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs

; 37   : 			PrintfTabs(File, iTabs, "AffectingRange       %d\n", iAffectingRange);

  00045	ff 77 18	 push	 DWORD PTR [edi+24]
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@KLBKOEEF@AffectingRange?5?5?5?5?5?5?5?$CFd?6@
  0004d	53		 push	 ebx
  0004e	56		 push	 esi
  0004f	e8 00 00 00 00	 call	 ?PrintfTabs@@YAXPAU_iobuf@@HPBDZZ ; PrintfTabs
  00054	83 c4 34	 add	 esp, 52			; 00000034H
  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx

; 38   : 		}

  0005a	5d		 pop	 ebp
  0005b	c2 08 00	 ret	 8
?Save@SMotionEventDataScreenWaving@NMotionEvent@@UAEXPAU_iobuf@@H@Z ENDP ; NMotionEvent::SMotionEventDataScreenWaving::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventDataScreenWaving@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventDataScreenWaving@NMotionEvent@@UAE@XZ PROC ; NMotionEvent::SMotionEventDataScreenWaving::~SMotionEventDataScreenWaving, COMDAT
; _this$ = ecx

; 30   : 		virtual ~SMotionEventDataScreenWaving() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00006	c3		 ret	 0
??1SMotionEventDataScreenWaving@NMotionEvent@@UAE@XZ ENDP ; NMotionEvent::SMotionEventDataScreenWaving::~SMotionEventDataScreenWaving
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GSMotionEventData@NMotionEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSMotionEventData@NMotionEvent@@UAEPAXI@Z PROC	; NMotionEvent::SMotionEventData::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 14		 push	 20			; 00000014H
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GSMotionEventData@NMotionEvent@@UAEPAXI@Z ENDP	; NMotionEvent::SMotionEventData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ?Load@SMotionEventData@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z
_TEXT	SEGMENT
_rTextFileLoader$ = 8					; size = 4
?Load@SMotionEventData@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z PROC ; NMotionEvent::SMotionEventData::Load, COMDAT
; _this$ = ecx

; 20   : 		virtual bool Load(CTextFileLoader & rTextFileLoader) { return true; }

  00000	b0 01		 mov	 al, 1
  00002	c2 04 00	 ret	 4
?Load@SMotionEventData@NMotionEvent@@UAE_NAAVCTextFileLoader@@@Z ENDP ; NMotionEvent::SMotionEventData::Load
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionDataEvent.h
;	COMDAT ??1SMotionEventData@NMotionEvent@@UAE@XZ
_TEXT	SEGMENT
??1SMotionEventData@NMotionEvent@@UAE@XZ PROC		; NMotionEvent::SMotionEventData::~SMotionEventData, COMDAT
; _this$ = ecx

; 17   : 		virtual ~SMotionEventData() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SMotionEventData@NMotionEvent@@6B@
  00006	c3		 ret	 0
??1SMotionEventData@NMotionEvent@@UAE@XZ ENDP		; NMotionEvent::SMotionEventData::~SMotionEventData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Destroy@?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@AAEXPAUSSoundInstance@NSound@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@AAEXPAUSSoundInstance@NSound@@0@Z PROC ; std::vector<NSound::SSoundInstance,std::allocator<NSound::SSoundInstance> >::_Destroy, COMDAT
; _this$ = ecx

; 1678 :     _CONSTEXPR20_CONTAINER void _Destroy(pointer _First, pointer _Last) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1678 :     _CONSTEXPR20_CONTAINER void _Destroy(pointer _First, pointer _Last) {

  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 4d		 je	 SHORT $LN52@Destroy
  0000f	83 c6 18	 add	 esi, 24			; 00000018H
$LL6@Destroy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00014	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00017	72 28		 jb	 SHORT $LN28@Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00019	8b 46 ec	 mov	 eax, DWORD PTR [esi-20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0001c	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001d	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00023	72 12		 jb	 SHORT $LN38@Destroy

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00025	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00028	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0002b	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0002d	83 c0 fc	 add	 eax, -4			; fffffffcH
  00030	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00033	77 2d		 ja	 SHORT $LN35@Destroy

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00035	8b c2		 mov	 eax, edx
$LN38@Destroy:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00037	51		 push	 ecx
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0003e	83 c4 08	 add	 esp, 8
$LN28@Destroy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00041	c7 46 fc 00 00
	00 00		 mov	 DWORD PTR [esi-4], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00048	c7 06 0f 00 00
	00		 mov	 DWORD PTR [esi], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0004e	c6 46 ec 00	 mov	 BYTE PTR [esi-20], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  00052	83 c6 1c	 add	 esi, 28			; 0000001cH
  00055	8d 46 e8	 lea	 eax, DWORD PTR [esi-24]
  00058	3b c7		 cmp	 eax, edi
  0005a	75 b6		 jne	 SHORT $LL6@Destroy
$LN52@Destroy:
  0005c	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1681 :     }

  0005d	5e		 pop	 esi
  0005e	5d		 pop	 ebp
  0005f	c2 08 00	 ret	 8
$LN35@Destroy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00062	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN53@Destroy:
  00067	cc		 int	 3
?_Destroy@?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@AAEXPAUSSoundInstance@NSound@@0@Z ENDP ; std::vector<NSound::SSoundInstance,std::allocator<NSound::SSoundInstance> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??1?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@QAE@XZ PROC ; std::vector<NSound::SSoundInstance,std::allocator<NSound::SSoundInstance> >::~vector<NSound::SSoundInstance,std::allocator<NSound::SSoundInstance> >, COMDAT
; _this$ = ecx

; 711  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 69		 je	 SHORT $LN4@vector

; 1764 :             _Destroy(_Myfirst, _Mylast);

  00009	57		 push	 edi
  0000a	ff 76 04	 push	 DWORD PTR [esi+4]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ?_Destroy@?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@AAEXPAUSSoundInstance@NSound@@0@Z ; std::vector<NSound::SSoundInstance,std::allocator<NSound::SSoundInstance> >::_Destroy

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00013	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00016	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  0001b	8b 3e		 mov	 edi, DWORD PTR [esi]
  0001d	2b cf		 sub	 ecx, edi
  0001f	f7 e9		 imul	 ecx
  00021	03 d1		 add	 edx, ecx
  00023	c1 fa 04	 sar	 edx, 4
  00026	8b c2		 mov	 eax, edx
  00028	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0002b	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002d	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  00034	2b c8		 sub	 ecx, eax
  00036	c1 e1 02	 shl	 ecx, 2

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00039	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0003f	72 12		 jb	 SHORT $LN20@vector

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00041	8b 57 fc	 mov	 edx, DWORD PTR [edi-4]
  00044	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00047	2b fa		 sub	 edi, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00049	8d 47 fc	 lea	 eax, DWORD PTR [edi-4]
  0004c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0004f	77 23		 ja	 SHORT $LN17@vector

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00051	8b fa		 mov	 edi, edx
$LN20@vector:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00053	51		 push	 ecx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0005a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  0005d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 1768 :             _Mylast  = nullptr;

  00063	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1769 :             _Myend   = nullptr;

  0006a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00071	5f		 pop	 edi
$LN4@vector:
  00072	5e		 pop	 esi

; 717  :     }

  00073	c3		 ret	 0
$LN17@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00074	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN25@vector:
  00079	cc		 int	 3
??1?$vector@USSoundInstance@NSound@@V?$allocator@USSoundInstance@NSound@@@std@@@std@@QAE@XZ ENDP ; std::vector<NSound::SSoundInstance,std::allocator<NSound::SSoundInstance> >::~vector<NSound::SSoundInstance,std::allocator<NSound::SSoundInstance> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 134  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 135  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 136  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 137  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 85   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 138  :         _Throw_bad_array_new_length(); // add overflow
; 139  :     }
; 140  : 
; 141  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 85   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 143  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 144  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 145  : 
; 146  : #ifdef _DEBUG
; 147  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 148  : #endif // _DEBUG
; 149  :     return _Ptr;
; 150  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 142  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h
;	COMDAT ??_GSCollisionData@NRaceData@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSCollisionData@NRaceData@@UAEPAXI@Z PROC		; NRaceData::SCollisionData::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 120  : 		virtual ~SCollisionData() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SCollisionData@NRaceData@@6B@
  0000f	e8 00 00 00 00	 call	 ??1?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@QAE@XZ ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::~vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >
  00014	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00018	74 0b		 je	 SHORT $LN7@scalar
  0001a	6a 14		 push	 20			; 00000014H
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00022	83 c4 08	 add	 esp, 8
$LN7@scalar:
  00025	8b c6		 mov	 eax, esi
  00027	5e		 pop	 esi
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??_GSCollisionData@NRaceData@@UAEPAXI@Z ENDP		; NRaceData::SCollisionData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\GameType.h
;	COMDAT ??1SCollisionData@NRaceData@@UAE@XZ
_TEXT	SEGMENT
??1SCollisionData@NRaceData@@UAE@XZ PROC		; NRaceData::SCollisionData::~SCollisionData, COMDAT
; _this$ = ecx

; 120  : 		virtual ~SCollisionData() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7SCollisionData@NRaceData@@6B@
  00006	83 c1 08	 add	 ecx, 8
  00009	e9 00 00 00 00	 jmp	 ??1?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@QAE@XZ ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::~vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >
??1SCollisionData@NRaceData@@UAE@XZ ENDP		; NRaceData::SCollisionData::~SCollisionData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??1?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@QAE@XZ PROC ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::~vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >, COMDAT
; _this$ = ecx

; 711  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  00004	8b 37		 mov	 esi, DWORD PTR [edi]
  00006	85 f6		 test	 esi, esi
  00008	74 54		 je	 SHORT $LN4@vector

; 1764 :             _Destroy(_Myfirst, _Mylast);
; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0000a	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0000d	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00012	2b ce		 sub	 ecx, esi
  00014	f7 e9		 imul	 ecx
  00016	c1 fa 03	 sar	 edx, 3
  00019	8b c2		 mov	 eax, edx
  0001b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001e	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00020	8d 0c 80	 lea	 ecx, DWORD PTR [eax+eax*4]
  00023	c1 e1 02	 shl	 ecx, 2

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0002c	72 12		 jb	 SHORT $LN20@vector

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0002e	8b 56 fc	 mov	 edx, DWORD PTR [esi-4]
  00031	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00034	2b f2		 sub	 esi, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00036	8d 46 fc	 lea	 eax, DWORD PTR [esi-4]
  00039	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0003c	77 23		 ja	 SHORT $LN17@vector

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0003e	8b f2		 mov	 esi, edx
$LN20@vector:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00040	51		 push	 ecx
  00041	56		 push	 esi
  00042	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  00047	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  0004d	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  00050	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 1769 :             _Myend   = nullptr;

  00057	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
$LN4@vector:
  0005e	5f		 pop	 edi

; 717  :     }

  0005f	5e		 pop	 esi
  00060	c3		 ret	 0
$LN17@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00061	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN25@vector:
  00066	cc		 int	 3
??1?$vector@VCSphereCollisionInstance@@V?$allocator@VCSphereCollisionInstance@@@std@@@std@@QAE@XZ ENDP ; std::vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >::~vector<CSphereCollisionInstance,std::allocator<CSphereCollisionInstance> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ??1?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$1$ = -8						; size = 4
__Last$1$ = -4						; size = 4
??1?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAE@XZ PROC ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::~vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >, COMDAT
; _this$ = ecx

; 711  :     _CONSTEXPR20_CONTAINER ~vector() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 f8	 mov	 DWORD PTR _this$1$[ebp], esi

; 1763 :         if (_Myfirst) { // destroy and deallocate old array

  0000d	8b 1e		 mov	 ebx, DWORD PTR [esi]
  0000f	85 db		 test	 ebx, ebx
  00011	0f 84 02 01 00
	00		 je	 $LN4@vector

; 1764 :             _Destroy(_Myfirst, _Mylast);

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	89 45 fc	 mov	 DWORD PTR __Last$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  0001d	3b d8		 cmp	 ebx, eax
  0001f	0f 84 a3 00 00
	00		 je	 $LN10@vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1764 :             _Destroy(_Myfirst, _Mylast);

  00025	57		 push	 edi
  00026	8d 7b 24	 lea	 edi, DWORD PTR [ebx+36]
  00029	0f 1f 80 00 00
	00 00		 npad	 7
$LL11@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 758  :         _Erase_tree(_Al, _Myhead->_Parent);

  00030	8b 07		 mov	 eax, DWORD PTR [edi]
  00032	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 749  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00035	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00039	75 27		 jne	 SHORT $LN30@vector
  0003b	0f 1f 44 00 00	 npad	 5
$LL29@vector:

; 750  :             _Erase_tree(_Al, _Rootnode->_Right);

  00040	ff 76 08	 push	 DWORD PTR [esi+8]
  00043	8b cf		 mov	 ecx, edi
  00045	57		 push	 edi
  00046	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBMUCDynamicSphereInstance@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<float const ,CDynamicSphereInstance> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<float const ,CDynamicSphereInstance>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 616  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0004b	8b c6		 mov	 eax, esi

; 617  :     _Val         = static_cast<_Other&&>(_New_val);

  0004d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  0004f	6a 30		 push	 48			; 00000030H
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00057	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xtree

; 749  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0005a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0005e	74 e0		 je	 SHORT $LL29@vector
  00060	8b 07		 mov	 eax, DWORD PTR [edi]
$LN30@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00062	6a 30		 push	 48			; 00000030H
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  0006a	8b 4f fc	 mov	 ecx, DWORD PTR [edi-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  0006d	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 2319 :         return _BUF_SIZE <= _Myres;

  00070	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00073	72 2c		 jb	 SHORT $LN94@vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00075	8b 47 e8	 mov	 eax, DWORD PTR [edi-24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00078	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00079	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0007f	72 16		 jb	 SHORT $LN104@vector

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00081	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00084	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00087	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00089	83 c0 fc	 add	 eax, -4			; fffffffcH
  0008c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0008f	0f 87 8a 00 00
	00		 ja	 $LN125@vector

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00095	8b c2		 mov	 eax, edx
$LN104@vector:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00097	51		 push	 ecx
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0009e	83 c4 08	 add	 esp, 8
$LN94@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  000a1	c7 47 f8 00 00
	00 00		 mov	 DWORD PTR [edi-8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  000a8	83 c3 2c	 add	 ebx, 44			; 0000002cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000ab	c7 47 fc 0f 00
	00 00		 mov	 DWORD PTR [edi-4], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000b2	c6 47 e8 00	 mov	 BYTE PTR [edi-24], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 949  :         for (; _First != _Last; ++_First) {

  000b6	83 c7 2c	 add	 edi, 44			; 0000002cH
  000b9	3b 5d fc	 cmp	 ebx, DWORD PTR __Last$1$[ebp]
  000bc	0f 85 6e ff ff
	ff		 jne	 $LL11@vector

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000c2	8b 75 f8	 mov	 esi, DWORD PTR _this$1$[ebp]
  000c5	5f		 pop	 edi
  000c6	8b 1e		 mov	 ebx, DWORD PTR [esi]
$LN10@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1765 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000c8	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000cb	b8 e9 a2 8b 2e	 mov	 eax, 780903145		; 2e8ba2e9H
  000d0	2b cb		 sub	 ecx, ebx
  000d2	f7 e9		 imul	 ecx
  000d4	c1 fa 03	 sar	 edx, 3
  000d7	8b c2		 mov	 eax, edx
  000d9	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000dc	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000de	6b c8 2c	 imul	 ecx, eax, 44

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000e1	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000e7	72 12		 jb	 SHORT $LN128@vector

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000e9	8b 53 fc	 mov	 edx, DWORD PTR [ebx-4]
  000ec	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000ef	2b da		 sub	 ebx, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000f1	8d 43 fc	 lea	 eax, DWORD PTR [ebx-4]
  000f4	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000f7	77 26		 ja	 SHORT $LN125@vector

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  000f9	8b da		 mov	 ebx, edx
$LN128@vector:

; 264  :         ::operator delete(_Ptr, _Bytes);

  000fb	51		 push	 ecx
  000fc	53		 push	 ebx
  000fd	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1767 :             _Myfirst = nullptr;

  00102	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  00108	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector

; 1768 :             _Mylast  = nullptr;

  0010b	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1769 :             _Myend   = nullptr;

  00112	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  00119	5e		 pop	 esi

; 717  :     }

  0011a	5b		 pop	 ebx
  0011b	8b e5		 mov	 esp, ebp
  0011d	5d		 pop	 ebp
  0011e	c3		 ret	 0
$LN125@vector:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0011f	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN140@vector:
  00124	cc		 int	 3
??1?$vector@USHitData@NRaceData@@V?$allocator@USHitData@NRaceData@@@std@@@std@@QAE@XZ ENDP ; std::vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >::~vector<NRaceData::SHitData,std::allocator<NRaceData::SHitData> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\eterLib\TextFileLoader.h
;	COMDAT ??1CGotoChild@CTextFileLoader@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CGotoChild@CTextFileLoader@@QAE@XZ PROC		; CTextFileLoader::CGotoChild::~CGotoChild, COMDAT
; _this$ = ecx

; 54   : 			{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGotoChild@CTextFileLoader@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 55   : 				m_pOwner->SetParentNode();

  00022	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00024	e8 00 00 00 00	 call	 ?SetParentNode@CTextFileLoader@@QAEHXZ ; CTextFileLoader::SetParentNode

; 56   : 			}

  00029	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0002c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00033	59		 pop	 ecx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
  00038	cc		 int	 3
  00039	cc		 int	 3
  0003a	cc		 int	 3
  0003b	cc		 int	 3
  0003c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CGotoChild@CTextFileLoader@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CGotoChild@CTextFileLoader@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CGotoChild@CTextFileLoader@@QAE@XZ ENDP		; CTextFileLoader::CGotoChild::~CGotoChild
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange, COMDAT

; 1778 :         _Xout_of_range("invalid vector subscript");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DHFDPMIM@invalid?5vector?5subscript@
  00005	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN3@Xrange:
  0000a	cc		 int	 3
?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vector
;	COMDAT ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at, COMDAT
; _this$ = ecx

; 1582 :     _NODISCARD _CONSTEXPR20_CONTAINER _Ty& at(const size_type _Pos) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1583 :         auto& _My_data = _Mypair._Myval2;
; 1584 :         if (static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst) <= _Pos) {

  00004	8b 31		 mov	 esi, DWORD PTR [ecx]
  00006	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0000b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000e	2b ce		 sub	 ecx, esi
  00010	f7 e9		 imul	 ecx
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  00015	c1 fa 02	 sar	 edx, 2
  00018	8b c2		 mov	 eax, edx
  0001a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001d	03 c2		 add	 eax, edx
  0001f	3b c1		 cmp	 eax, ecx
  00021	76 0b		 jbe	 SHORT $LN6@at

; 1586 :         }
; 1587 : 
; 1588 :         return _My_data._Myfirst[_Pos];

  00023	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  00026	8d 04 c6	 lea	 eax, DWORD PTR [esi+eax*8]
  00029	5e		 pop	 esi

; 1589 :     }

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
$LN6@at:

; 1585 :             _Xrange();

  0002e	e8 00 00 00 00	 call	 ?_Xrange@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xrange
$LN4@at:
  00033	cc		 int	 3
?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT
; _this$ = ecx

; 4616 :     _CONSTEXPR20_CONTAINER void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2319 :         return _BUF_SIZE <= _Myres;

  00003	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00006	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4617 :         _Mypair._Myval2._Orphan_all();
; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 27		 jb	 SHORT $LN10@Tidy_deall
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000d	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0000e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00014	72 12		 jb	 SHORT $LN20@Tidy_deall

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00016	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00019	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0001e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00021	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00024	77 1f		 ja	 SHORT $LN17@Tidy_deall

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00026	8b c2		 mov	 eax, edx
$LN20@Tidy_deall:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00028	51		 push	 ecx
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	83 c4 08	 add	 esp, 8
$LN10@Tidy_deall:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00032	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00039	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00040	c6 06 00	 mov	 BYTE PTR [esi], 0
  00043	5e		 pop	 esi

; 4638 :     }

  00044	c3		 ret	 0
$LN17@Tidy_deall:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00045	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN24@Tidy_deall:
  0004a	cc		 int	 3
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHQBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHQBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx

; 4434 :     _NODISCARD _CONSTEXPR20_CONTAINER int compare(_In_z_ const _Elem* const _Ptr) const noexcept /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00005	8b 75 08	 mov	 esi, DWORD PTR __Ptr$[ebp]

; 4434 :     _NODISCARD _CONSTEXPR20_CONTAINER int compare(_In_z_ const _Elem* const _Ptr) const noexcept /* strengthened */ {

  00008	8b d1		 mov	 edx, ecx
  0000a	57		 push	 edi

; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000b	8b fe		 mov	 edi, esi
  0000d	8d 4f 01	 lea	 ecx, DWORD PTR [edi+1]
$LL19@compare:
  00010	8a 07		 mov	 al, BYTE PTR [edi]
  00012	47		 inc	 edi
  00013	84 c0		 test	 al, al
  00015	75 f9		 jne	 SHORT $LL19@compare
  00017	2b f9		 sub	 edi, ecx

; 2319 :         return _BUF_SIZE <= _Myres;

  00019	83 7a 14 10	 cmp	 DWORD PTR [edx+20], 16	; 00000010H

; 2305 :         const value_type* _Result = _Bx._Buf;

  0001d	8b ca		 mov	 ecx, edx

; 2306 :         if (_Large_string_engaged()) {

  0001f	72 02		 jb	 SHORT $LN6@compare

; 2307 :             _Result = _Unfancy(_Bx._Ptr);

  00021	8b 0a		 mov	 ecx, DWORD PTR [edx]
$LN6@compare:

; 4435 :         // compare [0, size()) with [_Ptr, <null>)
; 4436 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Ptr, _Traits::length(_Ptr));

  00023	8b 5a 10	 mov	 ebx, DWORD PTR [edx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 68   :     return _Right < _Left ? _Right : _Left;

  00026	3b fb		 cmp	 edi, ebx
  00028	8b d3		 mov	 edx, ebx
  0002a	0f 42 d7	 cmovb	 edx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 392  :         return _CSTD memcmp(_First1, _First2, _Count);

  0002d	83 ea 04	 sub	 edx, 4
  00030	72 11		 jb	 SHORT $LN22@compare
$LL23@compare:
  00032	8b 01		 mov	 eax, DWORD PTR [ecx]
  00034	3b 06		 cmp	 eax, DWORD PTR [esi]
  00036	75 10		 jne	 SHORT $LN21@compare
  00038	83 c1 04	 add	 ecx, 4
  0003b	83 c6 04	 add	 esi, 4
  0003e	83 ea 04	 sub	 edx, 4
  00041	73 ef		 jae	 SHORT $LL23@compare
$LN22@compare:
  00043	83 fa fc	 cmp	 edx, -4			; fffffffcH
  00046	74 34		 je	 SHORT $LN20@compare
$LN21@compare:
  00048	8a 01		 mov	 al, BYTE PTR [ecx]
  0004a	3a 06		 cmp	 al, BYTE PTR [esi]
  0004c	75 27		 jne	 SHORT $LN24@compare
  0004e	83 fa fd	 cmp	 edx, -3			; fffffffdH
  00051	74 29		 je	 SHORT $LN20@compare
  00053	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  00056	3a 46 01	 cmp	 al, BYTE PTR [esi+1]
  00059	75 1a		 jne	 SHORT $LN24@compare
  0005b	83 fa fe	 cmp	 edx, -2			; fffffffeH
  0005e	74 1c		 je	 SHORT $LN20@compare
  00060	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  00063	3a 46 02	 cmp	 al, BYTE PTR [esi+2]
  00066	75 0d		 jne	 SHORT $LN24@compare
  00068	83 fa ff	 cmp	 edx, -1
  0006b	74 0f		 je	 SHORT $LN20@compare
  0006d	8a 41 03	 mov	 al, BYTE PTR [ecx+3]
  00070	3a 46 03	 cmp	 al, BYTE PTR [esi+3]
  00073	74 07		 je	 SHORT $LN20@compare
$LN24@compare:
  00075	1b c0		 sbb	 eax, eax
  00077	83 c8 01	 or	 eax, 1
  0007a	eb 02		 jmp	 SHORT $LN25@compare
$LN20@compare:
  0007c	33 c0		 xor	 eax, eax
$LN25@compare:

; 592  :     if (_Ans != 0) {

  0007e	85 c0		 test	 eax, eax
  00080	75 12		 jne	 SHORT $LN13@compare

; 593  :         return _Ans;
; 594  :     }
; 595  : 
; 596  :     if (_Left_size < _Right_size) {

  00082	3b fb		 cmp	 edi, ebx
  00084	76 0a		 jbe	 SHORT $LN26@compare

; 4437 :     }

  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	83 c8 ff	 or	 eax, -1
  0008b	5b		 pop	 ebx
  0008c	5d		 pop	 ebp
  0008d	c2 04 00	 ret	 4
$LN26@compare:

; 600  :     if (_Left_size > _Right_size) {

  00090	1b c0		 sbb	 eax, eax
  00092	f7 d8		 neg	 eax
$LN13@compare:
  00094	5f		 pop	 edi

; 4437 :     }

  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	5d		 pop	 ebp
  00098	c2 04 00	 ret	 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHQBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Old$1$ = -4						; size = 4
__Ptr$ = 8						; size = 4
$T1 = 12						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 3244 :         _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 3245 :         // assign [_Ptr, _Ptr + _Count)
; 3246 :         if (_Count <= _Mypair._Myval2._Myres) {

  00005	8b 5d 0c	 mov	 ebx, DWORD PTR __Count$[ebp]
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	57		 push	 edi
  0000c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000f	89 4d fc	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00012	3b d9		 cmp	 ebx, ecx
  00014	77 28		 ja	 SHORT $LN2@assign

; 2296 :         value_type* _Result = _Bx._Buf;

  00016	8b fe		 mov	 edi, esi

; 2319 :         return _BUF_SIZE <= _Myres;

  00018	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2297 :         if (_Large_string_engaged()) {

  0001b	72 02		 jb	 SHORT $LN5@assign

; 2298 :             _Result = _Unfancy(_Bx._Ptr);

  0001d	8b 3e		 mov	 edi, DWORD PTR [esi]
$LN5@assign:

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0001f	53		 push	 ebx
  00020	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 3247 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 3248 :             _Mypair._Myval2._Mysize = _Count;

  00023	89 5e 10	 mov	 DWORD PTR [esi+16], ebx

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00026	57		 push	 edi
  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3249 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 3250 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 04 1f 00	 mov	 BYTE PTR [edi+ebx], 0

; 3259 :             },
; 3260 :             _Ptr);
; 3261 :     }

  00033	8b c6		 mov	 eax, esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@assign:

; 4508 :         if (_New_size > max_size()) {

  0003e	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH
  00044	0f 87 d4 00 00
	00		 ja	 $LN60@assign

; 4488 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0004a	8b fb		 mov	 edi, ebx
  0004c	83 cf 0f	 or	 edi, 15			; 0000000fH
  0004f	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH

; 4489 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00055	76 15		 jbe	 SHORT $LN19@assign

; 4490 :             return _Max;

  00057	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  0005c	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00067	83 c4 04	 add	 esp, 4
  0006a	eb 52		 jmp	 SHORT $LN58@assign
$LN19@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4493 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0006c	8b d1		 mov	 edx, ecx
  0006e	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00073	d1 ea		 shr	 edx, 1
  00075	2b c2		 sub	 eax, edx
  00077	3b c8		 cmp	 ecx, eax
  00079	76 15		 jbe	 SHORT $LN20@assign

; 4494 :             return _Max;

  0007b	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00080	bf ff ff ff 7f	 mov	 edi, 2147483647		; 7fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0008b	83 c4 04	 add	 esp, 4
  0008e	eb 2e		 jmp	 SHORT $LN58@assign
$LN20@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4497 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00090	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00093	3b f8		 cmp	 edi, eax
  00095	0f 42 f8	 cmovb	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4515 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00098	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0009b	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  000a0	72 0b		 jb	 SHORT $LN27@assign

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000a8	83 c4 04	 add	 esp, 4
  000ab	eb 11		 jmp	 SHORT $LN58@assign
$LN27@assign:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  000ad	85 c0		 test	 eax, eax
  000af	74 0b		 je	 SHORT $LN28@assign

; 85   :         return ::operator new(_Bytes);

  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000b7	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  000ba	eb 02		 jmp	 SHORT $LN58@assign
$LN28@assign:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  000bc	33 c0		 xor	 eax, eax
$LN58@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000be	53		 push	 ebx
  000bf	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4523 :         _Mypair._Myval2._Mysize = _New_size;

  000c2	89 45 0c	 mov	 DWORD PTR $T1[ebp], eax

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000c5	50		 push	 eax

; 4523 :         _Mypair._Myval2._Mysize = _New_size;

  000c6	89 5e 10	 mov	 DWORD PTR [esi+16], ebx

; 4524 :         _Mypair._Myval2._Myres  = _New_capacity;

  000c9	89 7e 14	 mov	 DWORD PTR [esi+20], edi

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000cc	e8 00 00 00 00	 call	 _memcpy

; 3258 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000d1	8b 7d 0c	 mov	 edi, DWORD PTR $T1[ebp]

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000d4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4526 :         if (_BUF_SIZE <= _Old_capacity) {

  000d7	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 3258 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000da	c6 04 1f 00	 mov	 BYTE PTR [edi+ebx], 0

; 4526 :         if (_BUF_SIZE <= _Old_capacity) {

  000de	83 f8 10	 cmp	 eax, 16			; 00000010H
  000e1	72 29		 jb	 SHORT $LN13@assign

; 4527 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000e3	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e6	8b 06		 mov	 eax, DWORD PTR [esi]

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000e8	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  000ee	72 12		 jb	 SHORT $LN50@assign

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  000f0	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  000f3	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f6	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  000f8	83 c0 fc	 add	 eax, -4			; fffffffcH
  000fb	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  000fe	77 19		 ja	 SHORT $LN47@assign

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00100	8b c2		 mov	 eax, edx
$LN50@assign:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00102	51		 push	 ecx
  00103	50		 push	 eax
  00104	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00109	83 c4 08	 add	 esp, 8
$LN13@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3254 :         return _Reallocate_for(

  0010c	89 3e		 mov	 DWORD PTR [esi], edi

; 3259 :             },
; 3260 :             _Ptr);
; 3261 :     }

  0010e	8b c6		 mov	 eax, esi
  00110	5f		 pop	 edi
  00111	5e		 pop	 esi
  00112	5b		 pop	 ebx
  00113	8b e5		 mov	 esp, ebp
  00115	5d		 pop	 ebp
  00116	c2 08 00	 ret	 8
$LN47@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00119	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN60@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4509 :             _Xlen_string(); // result too long

  0011e	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN56@assign:
  00123	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
tv533 = -12						; size = 4
__Old$1$ = -8						; size = 4
tv534 = -4						; size = 4
__Old_size$1$ = -4					; size = 4
__Ptr$ = 8						; size = 4
tv537 = 12						; size = 4
$T1 = 12						; size = 4
__Count$ = 12						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 3152 :         _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 3153 :         // append [_Ptr, _Ptr + _Count)
; 3154 :         const size_type _Old_size = _Mypair._Myval2._Mysize;
; 3155 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Count$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b f9		 mov	 edi, ecx
  0000e	8b 57 14	 mov	 edx, DWORD PTR [edi+20]
  00011	8b c2		 mov	 eax, edx
  00013	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00016	2b c1		 sub	 eax, ecx
  00018	89 4d fc	 mov	 DWORD PTR __Old_size$1$[ebp], ecx
  0001b	89 55 f8	 mov	 DWORD PTR __Old$1$[ebp], edx
  0001e	3b d8		 cmp	 ebx, eax
  00020	77 2e		 ja	 SHORT $LN2@append

; 3156 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  00022	8d 04 19	 lea	 eax, DWORD PTR [ecx+ebx]
  00025	89 47 10	 mov	 DWORD PTR [edi+16], eax

; 2296 :         value_type* _Result = _Bx._Buf;

  00028	8b c7		 mov	 eax, edi

; 2319 :         return _BUF_SIZE <= _Myres;

  0002a	83 fa 10	 cmp	 edx, 16			; 00000010H

; 2297 :         if (_Large_string_engaged()) {

  0002d	72 02		 jb	 SHORT $LN5@append

; 2298 :             _Result = _Unfancy(_Bx._Ptr);

  0002f	8b 07		 mov	 eax, DWORD PTR [edi]
$LN5@append:

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00031	53		 push	 ebx
  00032	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 3157 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 3158 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

  00035	8d 34 08	 lea	 esi, DWORD PTR [eax+ecx]

; 122  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00038	56		 push	 esi
  00039	e8 00 00 00 00	 call	 _memmove
  0003e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3159 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  00041	c6 04 1e 00	 mov	 BYTE PTR [esi+ebx], 0

; 3172 :     }

  00045	8b c7		 mov	 eax, edi
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 08 00	 ret	 8
$LN2@append:

; 4543 :         if (max_size() - _Old_size < _Size_increase) {

  00050	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00055	2b c1		 sub	 eax, ecx
  00057	3b c3		 cmp	 eax, ebx
  00059	0f 82 26 01 00
	00		 jb	 $LN68@append

; 4545 :         }
; 4546 : 
; 4547 :         const size_type _New_size     = _Old_size + _Size_increase;

  0005f	8d 34 19	 lea	 esi, DWORD PTR [ecx+ebx]

; 4488 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00062	83 ce 0f	 or	 esi, 15			; 0000000fH
  00065	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH

; 4489 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  0006b	76 18		 jbe	 SHORT $LN19@append

; 4490 :             return _Max;

  0006d	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  00072	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0007d	8b 4d fc	 mov	 ecx, DWORD PTR __Old_size$1$[ebp]
  00080	83 c4 04	 add	 esp, 4
  00083	eb 61		 jmp	 SHORT $LN66@append
$LN19@append:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4493 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00085	8b c2		 mov	 eax, edx
  00087	d1 e8		 shr	 eax, 1
  00089	89 45 0c	 mov	 DWORD PTR tv537[ebp], eax
  0008c	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00091	2b 45 0c	 sub	 eax, DWORD PTR tv537[ebp]
  00094	3b d0		 cmp	 edx, eax
  00096	76 18		 jbe	 SHORT $LN20@append

; 4494 :             return _Max;

  00098	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  0009d	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR __Old_size$1$[ebp]
  000ab	83 c4 04	 add	 esp, 4
  000ae	eb 36		 jmp	 SHORT $LN66@append
$LN20@append:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4497 :         return (_STD max)(_Masked, _Old + _Old / 2);

  000b0	8b 45 0c	 mov	 eax, DWORD PTR tv537[ebp]
  000b3	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  000b5	3b f0		 cmp	 esi, eax
  000b7	0f 42 f0	 cmovb	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4551 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000ba	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 237  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  000bd	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  000c2	72 0e		 jb	 SHORT $LN27@append

; 238  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  000c4	50		 push	 eax
  000c5	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  000ca	8b 4d fc	 mov	 ecx, DWORD PTR __Old_size$1$[ebp]
  000cd	83 c4 04	 add	 esp, 4
  000d0	eb 14		 jmp	 SHORT $LN66@append
$LN27@append:

; 239  :         }
; 240  :     }
; 241  : #endif // defined(_M_IX86) || defined(_M_X64)
; 242  : 
; 243  :     if (_Bytes != 0) {

  000d2	85 c0		 test	 eax, eax
  000d4	74 0e		 je	 SHORT $LN28@append

; 85   :         return ::operator new(_Bytes);

  000d6	50		 push	 eax
  000d7	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 244  :         return _Traits::_Allocate(_Bytes);

  000dc	8b 4d fc	 mov	 ecx, DWORD PTR __Old_size$1$[ebp]

; 85   :         return ::operator new(_Bytes);

  000df	83 c4 04	 add	 esp, 4

; 244  :         return _Traits::_Allocate(_Bytes);

  000e2	eb 02		 jmp	 SHORT $LN66@append
$LN28@append:

; 245  :     }
; 246  : 
; 247  :     return nullptr;

  000e4	33 c0		 xor	 eax, eax
$LN66@append:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4562 :         if (_BUF_SIZE <= _Old_capacity) {

  000e6	83 7d f8 10	 cmp	 DWORD PTR __Old$1$[ebp], 16 ; 00000010H
  000ea	8d 14 19	 lea	 edx, DWORD PTR [ecx+ebx]
  000ed	89 77 14	 mov	 DWORD PTR [edi+20], esi
  000f0	8d 34 08	 lea	 esi, DWORD PTR [eax+ecx]
  000f3	89 57 10	 mov	 DWORD PTR [edi+16], edx
  000f6	8d 14 1e	 lea	 edx, DWORD PTR [esi+ebx]
  000f9	89 45 0c	 mov	 DWORD PTR $T1[ebp], eax
  000fc	89 75 fc	 mov	 DWORD PTR tv534[ebp], esi
  000ff	89 55 f4	 mov	 DWORD PTR tv533[ebp], edx
  00102	51		 push	 ecx
  00103	72 56		 jb	 SHORT $LN13@append

; 4563 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00105	8b 37		 mov	 esi, DWORD PTR [edi]

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00107	56		 push	 esi
  00108	50		 push	 eax
  00109	e8 00 00 00 00	 call	 _memcpy
  0010e	53		 push	 ebx
  0010f	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00112	ff 75 fc	 push	 DWORD PTR tv534[ebp]
  00115	e8 00 00 00 00	 call	 _memcpy

; 3169 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  0011a	8b 45 f4	 mov	 eax, DWORD PTR tv533[ebp]

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0011d	83 c4 18	 add	 esp, 24			; 00000018H

; 4565 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00120	8b 4d f8	 mov	 ecx, DWORD PTR __Old$1$[ebp]
  00123	41		 inc	 ecx

; 3169 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00124	c6 00 00	 mov	 BYTE PTR [eax], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00127	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0012d	72 12		 jb	 SHORT $LN52@append

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0012f	8b 56 fc	 mov	 edx, DWORD PTR [esi-4]
  00132	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00135	2b f2		 sub	 esi, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00137	8d 46 fc	 lea	 eax, DWORD PTR [esi-4]
  0013a	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0013d	77 4b		 ja	 SHORT $LN49@append

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0013f	8b f2		 mov	 esi, edx
$LN52@append:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00141	51		 push	 ecx
  00142	56		 push	 esi
  00143	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3163 :         return _Reallocate_grow_by(

  00148	8b 45 0c	 mov	 eax, DWORD PTR $T1[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 264  :         ::operator delete(_Ptr, _Bytes);

  0014b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 3163 :         return _Reallocate_grow_by(

  0014e	89 07		 mov	 DWORD PTR [edi], eax

; 3172 :     }

  00150	8b c7		 mov	 eax, edi
  00152	5f		 pop	 edi
  00153	5e		 pop	 esi
  00154	5b		 pop	 ebx
  00155	8b e5		 mov	 esp, ebp
  00157	5d		 pop	 ebp
  00158	c2 08 00	 ret	 8
$LN13@append:

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0015b	57		 push	 edi
  0015c	50		 push	 eax
  0015d	e8 00 00 00 00	 call	 _memcpy
  00162	53		 push	 ebx
  00163	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00166	56		 push	 esi
  00167	e8 00 00 00 00	 call	 _memcpy

; 3169 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  0016c	8d 04 1e	 lea	 eax, DWORD PTR [esi+ebx]

; 65   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0016f	83 c4 18	 add	 esp, 24			; 00000018H

; 3169 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00172	c6 00 00	 mov	 BYTE PTR [eax], 0

; 3163 :         return _Reallocate_grow_by(

  00175	8b 45 0c	 mov	 eax, DWORD PTR $T1[ebp]
  00178	89 07		 mov	 DWORD PTR [edi], eax

; 3172 :     }

  0017a	8b c7		 mov	 eax, edi
  0017c	5f		 pop	 edi
  0017d	5e		 pop	 esi
  0017e	5b		 pop	 ebx
  0017f	8b e5		 mov	 esp, ebp
  00181	5d		 pop	 ebp
  00182	c2 08 00	 ret	 8
$LN68@append:

; 4544 :             _Xlen_string(); // result too long

  00185	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN49@append:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0018a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN64@append:
  0018f	cc		 int	 3
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 3002 :     _CONSTEXPR20_CONTAINER ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2319 :         return _BUF_SIZE <= _Myres;

  00003	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00006	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4618 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 27		 jb	 SHORT $LN12@basic_stri
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 835  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4622 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000d	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 260  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0000e	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  00014	72 12		 jb	 SHORT $LN22@basic_stri

; 158  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00016	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00019	83 c1 23	 add	 ecx, 35			; 00000023H

; 159  : 
; 160  :     // If the following asserts, it likely means that we are performing
; 161  :     // an aligned delete on memory coming from an unaligned allocation.
; 162  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 163  : 
; 164  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 165  :     // in range [_Min_back_shift, _Non_user_size]
; 166  : #ifdef _DEBUG
; 167  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 168  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 169  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 170  : #endif // _DEBUG
; 171  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0001c	2b c2		 sub	 eax, edx

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0001e	83 c0 fc	 add	 eax, -4			; fffffffcH
  00021	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00024	77 1f		 ja	 SHORT $LN19@basic_stri

; 173  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00026	8b c2		 mov	 eax, edx
$LN22@basic_stri:

; 264  :         ::operator delete(_Ptr, _Bytes);

  00028	51		 push	 ecx
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	83 c4 08	 add	 esp, 8
$LN12@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring

; 4633 :             _Mypair._Myval2._Mysize = 0;

  00032	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4634 :             _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00039	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4635 :             // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4636 :             _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00040	c6 06 00	 mov	 BYTE PTR [esi], 0
  00043	5e		 pop	 esi

; 3010 :     }

  00044	c3		 ret	 0
$LN19@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xmemory

; 172  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00045	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN27@basic_stri:
  0004a	cc		 int	 3
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2517 :     _CONSTEXPR20_CONTAINER basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00003	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00006	8b c2		 mov	 eax, edx

; 2517 :     _CONSTEXPR20_CONTAINER basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	57		 push	 edi

; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 2346 :         _CONSTEXPR20_CONTAINER _Bxty() noexcept : _Ptr() {} // user-provided, for fancy pointers

  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 4596 :         _My_data._Mysize = 0;

  00015	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4597 : 
; 4598 : #ifdef __cpp_lib_constexpr_string
; 4599 :         if (_STD is_constant_evaluated()) {
; 4600 :             _My_data._Myres        = _BUF_SIZE; // SSO disabled in constexpr context
; 4601 :             auto& _Al              = _Getal();
; 4602 :             const pointer _New_ptr = _Al.allocate(_BUF_SIZE + 1); // throws
; 4603 :             _My_data._Bx._Ptr      = _New_ptr;
; 4604 : 
; 4605 :             _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4606 :             _Traits::assign(_Raw_new, _BUF_SIZE + 1, _Elem());
; 4607 :         } else
; 4608 : #endif // __cpp_lib_constexpr_string
; 4609 :         {
; 4610 :             _My_data._Myres = _BUF_SIZE - 1;

  0001c	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
$LL17@basic_stri:

; 412  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00023	8a 08		 mov	 cl, BYTE PTR [eax]
  00025	40		 inc	 eax
  00026	84 c9		 test	 cl, cl
  00028	75 f9		 jne	 SHORT $LL17@basic_stri
  0002a	2b c7		 sub	 eax, edi

; 3264 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0002c	8b ce		 mov	 ecx, esi
  0002e	50		 push	 eax
  0002f	52		 push	 edx
  00030	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2518 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2519 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2520 :         _Tidy_init();
; 2521 :         assign(_Ptr);
; 2522 :         _Proxy._Release();
; 2523 :     }

  00035	5f		 pop	 edi
  00036	8b c6		 mov	 eax, esi
  00038	5e		 pop	 esi
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2374 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.29.30133\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\murat\Desktop\Siveps2-1-99-Project\source\client\Client\GameLib\RaceMotionData.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
